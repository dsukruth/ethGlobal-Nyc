# ==============================================================================
# Sentinel - Agentic Wallet Security MVP
#
# This file contains environment variables for both the backend and contracts.
# Copy this file to .env and fill in the values.
# ==============================================================================

# ------------------------------------------------------------------------------
# Zircuit Network Configuration
# ------------------------------------------------------------------------------
# RPC URL for the Zircuit testnet
ZIRCUIT_RPC=https://garfield-testnet.zircuit.com/
# WebSocket URL for the Zircuit testnet (used by the backend)
ZIRCUIT_WS=wss://garfield-testnet.zircuit.com/

# ------------------------------------------------------------------------------
# Wallet Configuration
# ------------------------------------------------------------------------------
# Private key for the deployer/sender wallet
PRIVATE_KEY=0xabc...
# Address of the smart account being protected
SMART_ACCOUNT_ADDR=0x...

# ------------------------------------------------------------------------------
# Deployed Contract Addresses (after running 'npm run deploy' in /contracts)
# ------------------------------------------------------------------------------
GUARDIAN_CONTROLLER_ADDR=0x...
APPROVAL_REVOKE_HELPER_ADDR=0x...


# ------------------------------------------------------------------------------
# Backend Application Configuration
# ------------------------------------------------------------------------------
# Origin for the frontend application
BACKEND_ORIGIN=http://localhost:3000
# Base URL for the Walrus API
WALRUS_BASE=http://localhost:8000/cases
# Log level for the backend (e.g., INFO, DEBUG)
LOG_LEVEL=INFO
# Database URL for the backend
DATABASE_URL=sqlite:///./sentinel.db


# ------------------------------------------------------------------------------
# Optional Hardhat Configuration
# ------------------------------------------------------------------------------
# Set to true to enable gas reporting
REPORT_GAS=true
# CoinMarketCap API key for gas reporting in USD
COINMARKETCAP_API_KEY=
# Etherscan API key for contract verification
ETHERSCAN_API_KEY=
