{
  "version": 3,
  "sources": ["../../@dynamic-labs/cosmos/package.js", "../../@dynamic-labs/cosmos/_virtual/_tslib.js", "../../@dynamic-labs/cosmos/src/wallet/CosmosWallet.js", "../../@dynamic-labs/cosmos/src/connectors/CosmosWalletConnector.js", "../../@dynamic-labs/cosmos/src/connectors/KeplrWalletConnector.js", "../../@dynamic-labs/cosmos/src/wallet/isCosmosWallet/isCosmosWallet.js", "../../@dynamic-labs/cosmos/src/connectors/LeapWalletConnector.js", "../../@dynamic-labs/cosmos/src/connectors/CompassWalletConnector.js", "../../@dynamic-labs/cosmos/src/CosmosWalletConnectorsWithConfig.js", "../../@dynamic-labs/cosmos/src/index.js"],
  "sourcesContent": ["'use client'\nvar version = \"4.26.0\";\n\nexport { version };\n", "'use client'\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nexport { __awaiter };\n", "'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport { Wallet, logger } from '@dynamic-labs/wallet-connector-core';\nimport { cloneObjectWithOverrides } from '@dynamic-labs/utils';\n\nclass CosmosWallet extends Wallet {\n    sendBalance(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ amount, toAddress, }) {\n            throw new Error('Not implemented');\n        });\n    }\n    getProvider() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = yield this._connector.getProvider();\n            if (!provider) {\n                throw new Error('unable to retrieve Cosmos provider');\n            }\n            try {\n                return cloneObjectWithOverrides(provider, {\n                    sendEthereumTx: (chainId, tx) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.sync();\n                        return provider.sendEthereumTx(chainId, tx);\n                    }),\n                    sendTx: (chainId, tx, mode) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.sync();\n                        return provider.sendTx(chainId, tx, mode);\n                    }),\n                    signAmino: (chainId, signer, signerDoc, signerOperations) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.sync();\n                        return provider.signAmino(chainId, signer, signerDoc, signerOperations);\n                    }),\n                    signArbitrary: (chainId, signer, data) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.sync();\n                        return provider.signArbitrary(chainId, signer, data);\n                    }),\n                    signDirect: (chainId, signer, signDoc, signOptions) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.sync();\n                        return provider.signDirect(chainId, signer, signDoc, signOptions);\n                    }),\n                    signDirectAux: (chainId, signer, signDoc, signOptions) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.sync();\n                        return provider.signDirectAux(chainId, signer, signDoc, signOptions);\n                    }),\n                    signEthereum: (chainId, signer, data, type) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.sync();\n                        return provider.signEthereum(chainId, signer, data, type);\n                    }),\n                    signICNSAdr36: (chainId, contractAddress, owner, username, addressChainIds) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.sync();\n                        return provider.signICNSAdr36(chainId, contractAddress, owner, username, addressChainIds);\n                    }),\n                });\n            }\n            catch (error) {\n                logger.warn(`Failed to add logic to auto-sync the wallet. Provider might be out of sync for wallet: ${this._connector.name} (${this.address})`, error);\n                return provider;\n            }\n        });\n    }\n    getOfflineSigner() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const offlineSigner = yield this._connector.getOfflineSigner();\n            if (!offlineSigner) {\n                throw new Error('unable to retrieve Cosmos offline signer');\n            }\n            try {\n                return cloneObjectWithOverrides(offlineSigner, {\n                    signAmino: (signerAddress, signerDoc) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.sync();\n                        return offlineSigner.signAmino(signerAddress, signerDoc);\n                    }),\n                    signDirect: (signerAddress, signDoc) => __awaiter(this, void 0, void 0, function* () {\n                        yield this.sync();\n                        return offlineSigner.signDirect(signerAddress, signDoc);\n                    }),\n                });\n            }\n            catch (error) {\n                logger.warn(`Failed to add logic to auto-sync the wallet. Signer might be out of sync for wallet: ${this._connector.name} (${this.address})`, error);\n                return offlineSigner;\n            }\n        });\n    }\n}\n\nexport { CosmosWallet };\n", "'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport { parseCosmosNetworks, parseChainId } from '@dynamic-labs/utils';\nimport { WalletConnectorBase, logger } from '@dynamic-labs/wallet-connector-core';\nimport { CosmosWallet } from '../wallet/CosmosWallet.js';\n\nconst DYNAMIC_COSMOS_NETWORK_ID = 'dynamic_cosmos_network_id';\nclass CosmosWalletConnector extends WalletConnectorBase {\n    constructor(opts) {\n        var _a;\n        super(opts);\n        this.switchNetworkOnlyFromWallet = true;\n        this.ChainWallet = CosmosWallet;\n        this.connectedChain = 'COSMOS';\n        this.supportedChains = ['COSMOS'];\n        this.cosmosNetworks = opts.cosmosNetworks;\n        this._handleAccountChange = this._handleAccountChange.bind(this);\n        this.experimentalChainsInfo = (_a = opts.connectionConfig) === null || _a === void 0 ? void 0 : _a.experimentalChainInfo;\n        if (this.experimentalChainsInfo) {\n            this.addExperimentalChains();\n        }\n    }\n    addExperimentalChains() {\n        var _a;\n        if (!this.experimentalChainsInfo) {\n            return;\n        }\n        for (const experimentalChain of this.experimentalChainsInfo) {\n            const randomChainId = Math.random() * 10000;\n            const chainToNetwork = {\n                bech32Prefix: (_a = experimentalChain.bech32Config) === null || _a === void 0 ? void 0 : _a.bech32PrefixAccAddr,\n                blockExplorerUrls: [],\n                chainId: randomChainId,\n                iconUrls: [experimentalChain.chainSymbolImageUrl],\n                name: experimentalChain.chainId,\n                nativeCurrency: {\n                    decimals: experimentalChain.currencies[0].coinDecimals,\n                    name: experimentalChain.currencies[0].coinDenom,\n                    symbol: experimentalChain.currencies[0].coinDenom,\n                },\n                networkId: randomChainId,\n                rpcUrls: [experimentalChain.rpc],\n                shortName: experimentalChain.chainName,\n                supportedChainIds: [experimentalChain.chainId],\n                supportedFeatures: [],\n                supportedMethods: [],\n                supportedSignMethods: [],\n                vanityName: experimentalChain.chainName,\n            };\n            if (!this.cosmosNetworks.find((network) => network.vanityName === chainToNetwork.vanityName)) {\n                this.cosmosNetworks.push(chainToNetwork);\n            }\n        }\n    }\n    get evmNetworks() {\n        return parseCosmosNetworks(this.cosmosNetworks);\n    }\n    get chainIdMapping() {\n        return this.evmNetworks.map((network) => ({\n            bech32Prefix: network.bech32Prefix,\n            cosmosNetwork: network,\n            cosmosNetworkId: network.name,\n            dynamicChainId: parseChainId(network.networkId),\n            experimental: this.isExperimentalChain(network),\n        }));\n    }\n    isExperimentalChain(cosmosNetwork) {\n        var _a, _b;\n        return ((_b = (_a = this.experimentalChainsInfo) === null || _a === void 0 ? void 0 : _a.some((chain) => chain.chainId === cosmosNetwork.name)) !== null && _b !== void 0 ? _b : false);\n    }\n    getSelectedChain() {\n        const selectedNetwork = this.chainIdMapping.find((mapping) => mapping.cosmosNetworkId === this.getChainId());\n        return selectedNetwork === null || selectedNetwork === void 0 ? void 0 : selectedNetwork.cosmosNetwork;\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSelectedChain()) === null || _a === void 0 ? void 0 : _a.chainId;\n        });\n    }\n    getLcdUrl() {\n        var _a;\n        return (_a = this.getSelectedChain()) === null || _a === void 0 ? void 0 : _a.lcdUrl;\n    }\n    getDenom() {\n        var _a;\n        return (_a = this.getSelectedChain()) === null || _a === void 0 ? void 0 : _a.nativeCurrency.denom;\n    }\n    getBalance(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const response = yield fetch(`${this.getLcdUrl()}/cosmos/bank/v1beta1/balances/${address}`).then((res) => res.json());\n                const balance = response.balances.reduce((acc, cur) => {\n                    if (cur.denom === this.getDenom()) {\n                        return Number(cur.amount) / 1e6;\n                    }\n                    return acc;\n                }, 0);\n                return balance.toString();\n            }\n            catch (e) {\n                logger.error(e);\n                return '0';\n            }\n        });\n    }\n    getConnectedAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const address = yield this.getAddress();\n            return address ? [address] : [];\n        });\n    }\n    endSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.setChainId(null);\n        });\n    }\n    getDefaultChainId() {\n        if (this.chainIdMapping.length === 0) {\n            return 'cosmoshub-4';\n        }\n        if (this.chainIdMapping.find((chain) => chain.cosmosNetworkId === 'cosmoshub-4')) {\n            return 'cosmoshub-4';\n        }\n        else {\n            return this.chainIdMapping[0].cosmosNetworkId;\n        }\n    }\n    getChainId() {\n        const defaultChainId = this.getDefaultChainId();\n        const storedChainId = localStorage.getItem(DYNAMIC_COSMOS_NETWORK_ID);\n        return storedChainId !== null && storedChainId !== void 0 ? storedChainId : defaultChainId;\n    }\n    setChainId(chainId) {\n        if (!chainId) {\n            localStorage.removeItem(DYNAMIC_COSMOS_NETWORK_ID);\n        }\n        else {\n            localStorage.setItem(DYNAMIC_COSMOS_NETWORK_ID, chainId);\n        }\n    }\n    getAccount() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const wallet = this.getWallet();\n            if (!wallet) {\n                return undefined;\n            }\n            else {\n                const accountsList = yield ((_a = (yield this.getOfflineSigner())) === null || _a === void 0 ? void 0 : _a.getAccounts());\n                if (!accountsList || accountsList.length === 0) {\n                    logger.warn('No accounts found for chain', this.getChainId());\n                    return undefined;\n                }\n                const [account] = accountsList;\n                return account;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getWallet()) === null || _a === void 0 ? void 0 : _a.enable(this.chainIdMapping\n                .filter((mapping) => !mapping.experimental)\n                .map((mapping) => mapping.cosmosNetworkId)));\n        });\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connect();\n            const account = yield this.getAccount();\n            return account === null || account === void 0 ? void 0 : account.address;\n        });\n    }\n    getProvider() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getWallet();\n        });\n    }\n    getOfflineSigner() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getWallet()) === null || _a === void 0 ? void 0 : _a.getOfflineSigner(this.getChainId());\n        });\n    }\n    isInstalledOnBrowser() {\n        return typeof this.getWallet() !== 'undefined';\n    }\n    _handleAccountChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const address = yield this.getAddress();\n            if (address) {\n                this.emit('accountChange', { accounts: [address] });\n            }\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const address = yield this.getAddress();\n            if (!address)\n                throw new Error('No address found');\n            const signatureResponse = yield ((_a = this.getWallet()) === null || _a === void 0 ? void 0 : _a.signArbitrary(this.getChainId(), address, messageToSign));\n            if (!signatureResponse) {\n                throw new Error('Could not sign message');\n            }\n            const chain = this.getSelectedChain();\n            if (!chain || !chain.bech32Prefix) {\n                throw new Error('Could not get bech32Prefix for chain');\n            }\n            const signatureWithPrefix = Object.assign(Object.assign({}, signatureResponse), { bech32Prefix: chain.bech32Prefix });\n            return JSON.stringify(signatureWithPrefix);\n        });\n    }\n    getBlockExplorerUrlsForCurrentNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return ['https://www.mintscan.io/cosmos/'];\n        });\n    }\n    getEnabledNetworks() {\n        return this.evmNetworks;\n    }\n    supportsNetworkSwitching() {\n        return true;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    validateActiveWallet(expectedAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // no need to validate, address changes based on which network is selected\n            return;\n        });\n    }\n    switchNetwork(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ networkChainId, }) {\n            if (!networkChainId)\n                return;\n            this.chainIdMapping.forEach((mapping) => {\n                if (mapping.dynamicChainId === networkChainId) {\n                    this.setChainId(mapping.cosmosNetworkId);\n                    this.emit('chainChange', { chain: networkChainId.toString() });\n                }\n            });\n        });\n    }\n}\n\nexport { CosmosWalletConnector, DYNAMIC_COSMOS_NETWORK_ID };\n", "'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport { SeiNotEnabledInKeplrWalletError } from '@dynamic-labs/utils';\nimport { CosmosWalletConnector } from './CosmosWalletConnector.js';\n\nconst isSeiNotEnabledError = (error) => {\n    if (!error ||\n        !Object.prototype.hasOwnProperty.call(error, 'message') ||\n        typeof error.message !== 'string')\n        return false;\n    return error.message.includes('There is no modular chain info for pacific-1');\n};\nclass KeplrWalletConnector extends CosmosWalletConnector {\n    constructor() {\n        super(...arguments);\n        this.name = 'Keplr';\n        this.overrideKey = 'keplr';\n    }\n    supportsNetworkSwitching() {\n        return true;\n    }\n    getWallet() {\n        if (typeof window === 'undefined') {\n            throw new Error('Keplr is not available');\n        }\n        return window.keplr;\n    }\n    connect() {\n        const _super = Object.create(null, {\n            connect: { get: () => super.connect }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield _super.connect.call(this);\n                if (this.experimentalChainsInfo) {\n                    for (const chain of this.experimentalChainsInfo) {\n                        yield ((_a = this.getWallet()) === null || _a === void 0 ? void 0 : _a.experimentalSuggestChain(chain));\n                    }\n                }\n            }\n            catch (error) {\n                if (isSeiNotEnabledError(error)) {\n                    /**\n                     * If only Sei is enabled, throw the error\n                     * to inform the user to enable Sei in Keplr\n                     */\n                    if (this.cosmosNetworks.length === 1) {\n                        throw new SeiNotEnabledInKeplrWalletError();\n                    }\n                    this.cosmosNetworks = this.cosmosNetworks.filter((network) => network.name !== 'pacific-1');\n                    yield _super.connect.call(this);\n                }\n                else {\n                    throw error;\n                }\n            }\n        });\n    }\n    setupEventListeners() {\n        window.addEventListener('keplr_keystorechange', this._handleAccountChange);\n    }\n    teardownEventListeners() {\n        window.removeEventListener('keplr_keystorechange', this._handleAccountChange);\n        this.setChainId(null);\n    }\n}\n\nexport { KeplrWalletConnector };\n", "'use client'\nconst isCosmosWallet = (wallet) => wallet.chain === 'COSMOS';\n\nexport { isCosmosWallet };\n", "'use client'\nimport { CosmosWalletConnector } from './CosmosWalletConnector.js';\n\nclass LeapWalletConnector extends CosmosWalletConnector {\n    constructor() {\n        super(...arguments);\n        this.name = 'leapcosmos';\n        this.overrideKey = 'leapcosmos';\n    }\n    getWallet() {\n        if (typeof window === 'undefined')\n            throw new Error('Leap is not available');\n        return window.leap;\n    }\n    setupEventListeners() {\n        window.addEventListener('leap_keystorechange', this._handleAccountChange);\n    }\n    teardownEventListeners() {\n        window.removeEventListener('leap_keystorechange', this._handleAccountChange);\n        this.setChainId(null);\n    }\n}\n\nexport { LeapWalletConnector };\n", "'use client'\nimport { CosmosWalletConnector } from './CosmosWalletConnector.js';\n\nclass CompassWalletConnector extends CosmosWalletConnector {\n    constructor() {\n        super(...arguments);\n        this.name = 'compasscosmos';\n        this.overrideKey = 'compasscosmos';\n    }\n    getWallet() {\n        if (typeof window === 'undefined') {\n            throw new Error('Compass is not available');\n        }\n        return window.compass;\n    }\n    getChainId() {\n        const hasSei = this.chainIdMapping.find((chain) => chain.cosmosNetworkId === 'pacific-1');\n        // Compass wallet only supports Sei\n        if (!hasSei) {\n            throw new Error('Sei is not available on this site');\n        }\n        else {\n            return 'pacific-1';\n        }\n    }\n    setupEventListeners() {\n        window.addEventListener('leap_keystorechange', this._handleAccountChange);\n    }\n    teardownEventListeners() {\n        window.removeEventListener('leap_keystorechange', this._handleAccountChange);\n        this.setChainId(null);\n    }\n}\n\nexport { CompassWalletConnector };\n", "'use client'\nimport { CosmosWalletConnectors } from './index.js';\n\nconst CosmosWalletConnectorsWithConfig = (connectionConfig) => {\n    // Idea here is to ensure that all wallet connectors are constructed with\n    // the client-provided connection configuration, so we \"wrap\" the constructors with it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const classWithConfig = (className) => class extends className {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        constructor(...args) {\n            const [opts] = args;\n            super(Object.assign(Object.assign({}, opts), { connectionConfig }));\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return () => CosmosWalletConnectors().map(classWithConfig);\n};\n\nexport { CosmosWalletConnectorsWithConfig };\n", "'use client'\nimport { assertPackageVersion } from '@dynamic-labs/assert-package-version';\nimport { version } from '../package.js';\nimport { KeplrWalletConnector } from './connectors/KeplrWalletConnector.js';\nimport '../_virtual/_tslib.js';\nimport '@dynamic-labs/utils';\nimport '@dynamic-labs/wallet-connector-core';\nexport { CosmosWallet } from './wallet/CosmosWallet.js';\nexport { isCosmosWallet } from './wallet/isCosmosWallet/isCosmosWallet.js';\nimport { LeapWalletConnector } from './connectors/LeapWalletConnector.js';\nimport { CompassWalletConnector } from './connectors/CompassWalletConnector.js';\nexport { CosmosWalletConnectorsWithConfig } from './CosmosWalletConnectorsWithConfig.js';\n\nassertPackageVersion('@dynamic-labs/cosmos', version);\nconst CosmosWalletConnectors = () => [\n    KeplrWalletConnector,\n    LeapWalletConnector,\n    CompassWalletConnector,\n];\n\nexport { CosmosWalletConnectors };\n"],
  "mappings": "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",
  "names": []
}
