"use client";
import {
  init_esm,
  payloadId,
  require_cjs
} from "./chunk-T6AHRGBG.js";
import {
  require_buffer
} from "./chunk-32REP6TP.js";
import {
  require_crypto
} from "./chunk-VDEFIFDG.js";
import {
  DynamicError,
  Wallet,
  WalletConnectorBase,
  assertPackageVersion,
  getItemAsync,
  removeItemAsync,
  require_buffer as require_buffer2,
  setItemAsync
} from "./chunk-3OCKXW2Z.js";
import "./chunk-7KMCIXGS.js";
import "./chunk-ASWLBWKD.js";
import {
  __commonJS,
  __esm,
  __export,
  __reExport,
  __require,
  __toCommonJS,
  __toESM
} from "./chunk-MMN2DTB3.js";

// node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow2(name) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name] !== "undefined") {
        res = window[name];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow2;
    function getFromWindowOrThrow2(name) {
      const res = getFromWindow2(name);
      if (!res) {
        throw new Error(`${name} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow2;
    function getDocumentOrThrow2() {
      return getFromWindowOrThrow2("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow2;
    function getDocument2() {
      return getFromWindow2("document");
    }
    exports.getDocument = getDocument2;
    function getNavigatorOrThrow2() {
      return getFromWindowOrThrow2("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow2;
    function getNavigator3() {
      return getFromWindow2("navigator");
    }
    exports.getNavigator = getNavigator3;
    function getLocationOrThrow2() {
      return getFromWindowOrThrow2("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow2;
    function getLocation3() {
      return getFromWindow2("location");
    }
    exports.getLocation = getLocation3;
    function getCryptoOrThrow2() {
      return getFromWindowOrThrow2("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow2;
    function getCrypto2() {
      return getFromWindow2("crypto");
    }
    exports.getCrypto = getCrypto2;
    function getLocalStorageOrThrow2() {
      return getFromWindowOrThrow2("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow2;
    function getLocalStorage3() {
      return getFromWindow2("localStorage");
    }
    exports.getLocalStorage = getLocalStorage3;
  }
});

// node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs2();
    function getWindowMetadata2() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i = 0; i < links.length; i++) {
          const link = links[i];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i = 0; i < metaTags.length; i++) {
          const tag = metaTags[i];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name2 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name2) {
          name2 = doc.title;
        }
        return name2;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata2;
  }
});

// node_modules/@walletconnect/browser-utils/node_modules/detect-browser/es/index.js
function detect(userAgent) {
  if (!!userAgent) {
    return parseUserAgent(userAgent);
  }
  if (typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative") {
    return new ReactNativeInfo();
  }
  if (typeof navigator !== "undefined") {
    return parseUserAgent(navigator.userAgent);
  }
  return getNodeVersion();
}
function matchUserAgent(ua) {
  return ua !== "" && userAgentRules.reduce(function(matched, _a) {
    var browser = _a[0], regex = _a[1];
    if (matched) {
      return matched;
    }
    var uaMatch = regex.exec(ua);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}
function parseUserAgent(ua) {
  var matchedRule = matchUserAgent(ua);
  if (!matchedRule) {
    return null;
  }
  var name = matchedRule[0], match = matchedRule[1];
  if (name === "searchbot") {
    return new BotInfo();
  }
  var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);
  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS) {
      versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));
    }
  } else {
    versionParts = [];
  }
  var version2 = versionParts.join(".");
  var os = detectOS(ua);
  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);
  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo(name, version2, os, searchBotMatch[1]);
  }
  return new BrowserInfo(name, version2, os);
}
function detectOS(ua) {
  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
    var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];
    var match = regex.exec(ua);
    if (match) {
      return os;
    }
  }
  return null;
}
function getNodeVersion() {
  var isNode2 = typeof process !== "undefined" && process.version;
  return isNode2 ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
  var output = [];
  for (var ii = 0; ii < count; ii++) {
    output.push("0");
  }
  return output;
}
var __spreadArrays, BrowserInfo, NodeInfo, SearchBotDeviceInfo, BotInfo, ReactNativeInfo, SEARCHBOX_UA_REGEX, SEARCHBOT_OS_REGEX, REQUIRED_VERSION_PARTS, userAgentRules, operatingSystemRules;
var init_es = __esm({
  "node_modules/@walletconnect/browser-utils/node_modules/detect-browser/es/index.js"() {
    __spreadArrays = function() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
      for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
          r[k] = a[j];
      return r;
    };
    BrowserInfo = /** @class */
    /* @__PURE__ */ (function() {
      function BrowserInfo2(name, version2, os) {
        this.name = name;
        this.version = version2;
        this.os = os;
        this.type = "browser";
      }
      return BrowserInfo2;
    })();
    NodeInfo = /** @class */
    /* @__PURE__ */ (function() {
      function NodeInfo2(version2) {
        this.version = version2;
        this.type = "node";
        this.name = "node";
        this.os = process.platform;
      }
      return NodeInfo2;
    })();
    SearchBotDeviceInfo = /** @class */
    /* @__PURE__ */ (function() {
      function SearchBotDeviceInfo2(name, version2, os, bot) {
        this.name = name;
        this.version = version2;
        this.os = os;
        this.bot = bot;
        this.type = "bot-device";
      }
      return SearchBotDeviceInfo2;
    })();
    BotInfo = /** @class */
    /* @__PURE__ */ (function() {
      function BotInfo2() {
        this.type = "bot";
        this.bot = true;
        this.name = "bot";
        this.version = null;
        this.os = null;
      }
      return BotInfo2;
    })();
    ReactNativeInfo = /** @class */
    /* @__PURE__ */ (function() {
      function ReactNativeInfo2() {
        this.type = "react-native";
        this.name = "react-native";
        this.version = null;
        this.os = null;
      }
      return ReactNativeInfo2;
    })();
    SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
    SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
    REQUIRED_VERSION_PARTS = 3;
    userAgentRules = [
      ["aol", /AOLShield\/([0-9\._]+)/],
      ["edge", /Edge\/([0-9\._]+)/],
      ["edge-ios", /EdgiOS\/([0-9\._]+)/],
      ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
      ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
      ["samsung", /SamsungBrowser\/([0-9\.]+)/],
      ["silk", /\bSilk\/([0-9._-]+)\b/],
      ["miui", /MiuiBrowser\/([0-9\.]+)$/],
      ["beaker", /BeakerBrowser\/([0-9\.]+)/],
      ["edge-chromium", /EdgA?\/([0-9\.]+)/],
      [
        "chromium-webview",
        /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
      ],
      ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
      ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
      ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
      ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
      ["fxios", /FxiOS\/([0-9\.]+)/],
      ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
      ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
      ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
      ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
      ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
      ["ie", /MSIE\s(7\.0)/],
      ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
      ["android", /Android\s([0-9\.]+)/],
      ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
      ["safari", /Version\/([0-9\._]+).*Safari/],
      ["facebook", /FBAV\/([0-9\.]+)/],
      ["instagram", /Instagram\s([0-9\.]+)/],
      ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
      ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
      ["searchbot", SEARCHBOX_UA_REGEX]
    ];
    operatingSystemRules = [
      ["iOS", /iP(hone|od|ad)/],
      ["Android OS", /Android/],
      ["BlackBerry OS", /BlackBerry|BB10/],
      ["Windows Mobile", /IEMobile/],
      ["Amazon OS", /Kindle/],
      ["Windows 3.11", /Win16/],
      ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
      ["Windows 98", /(Windows 98)|(Win98)/],
      ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
      ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
      ["Windows Server 2003", /(Windows NT 5.2)/],
      ["Windows Vista", /(Windows NT 6.0)/],
      ["Windows 7", /(Windows NT 6.1)/],
      ["Windows 8", /(Windows NT 6.2)/],
      ["Windows 8.1", /(Windows NT 6.3)/],
      ["Windows 10", /(Windows NT 10.0)/],
      ["Windows ME", /Windows ME/],
      ["Open BSD", /OpenBSD/],
      ["Sun OS", /SunOS/],
      ["Chrome OS", /CrOS/],
      ["Linux", /(Linux)|(X11)/],
      ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
      ["QNX", /QNX/],
      ["BeOS", /BeOS/],
      ["OS/2", /OS\/2/]
    ];
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/browser.js
function detectEnv(userAgent) {
  return detect(userAgent);
}
function detectOS2() {
  const env3 = detectEnv();
  return env3 && env3.os ? env3.os : void 0;
}
function isAndroid() {
  const os = detectOS2();
  return os ? os.toLowerCase().includes("android") : false;
}
function isIOS() {
  const os = detectOS2();
  return os ? os.toLowerCase().includes("ios") || os.toLowerCase().includes("mac") && navigator.maxTouchPoints > 1 : false;
}
function isMobile() {
  const os = detectOS2();
  return os ? isAndroid() || isIOS() : false;
}
function isNode() {
  const env3 = detectEnv();
  const result = env3 && env3.name ? env3.name.toLowerCase() === "node" : false;
  return result;
}
function isBrowser() {
  const result = !isNode() && !!getNavigator2();
  return result;
}
function getClientMeta() {
  return windowMetadata.getWindowMetadata();
}
var windowMetadata, windowGetters, getNavigator2, getLocation2, getLocalStorage2;
var init_browser = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/browser.js"() {
    windowMetadata = __toESM(require_cjs3());
    windowGetters = __toESM(require_cjs2());
    init_es();
    getNavigator2 = windowGetters.getNavigator;
    getLocation2 = windowGetters.getLocation;
    getLocalStorage2 = windowGetters.getLocalStorage;
  }
});

// node_modules/@walletconnect/browser-utils/node_modules/@walletconnect/safe-json/dist/esm/index.js
function safeJsonParse(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSON.parse(value);
  } catch (_a) {
    return value;
  }
}
function safeJsonStringify(value) {
  return typeof value === "string" ? value : JSON.stringify(value);
}
var init_esm2 = __esm({
  "node_modules/@walletconnect/browser-utils/node_modules/@walletconnect/safe-json/dist/esm/index.js"() {
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/json.js
var safeJsonParse2, safeJsonStringify2;
var init_json = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/json.js"() {
    init_esm2();
    safeJsonParse2 = safeJsonParse;
    safeJsonStringify2 = safeJsonStringify;
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/local.js
function setLocal(key, data) {
  const raw = safeJsonStringify2(data);
  const local = getLocalStorage2();
  if (local) {
    local.setItem(key, raw);
  }
}
function getLocal(key) {
  let data = null;
  let raw = null;
  const local = getLocalStorage2();
  if (local) {
    raw = local.getItem(key);
  }
  data = raw ? safeJsonParse2(raw) : raw;
  return data;
}
function removeLocal(key) {
  const local = getLocalStorage2();
  if (local) {
    local.removeItem(key);
  }
}
var init_local = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/local.js"() {
    init_json();
    init_browser();
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/mobile.js
var mobileLinkChoiceKey;
var init_mobile = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/mobile.js"() {
    init_local();
    mobileLinkChoiceKey = "WALLETCONNECT_DEEPLINK_CHOICE";
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/registry.js
var init_registry = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/registry.js"() {
  }
});

// node_modules/@walletconnect/browser-utils/dist/esm/index.js
var init_esm3 = __esm({
  "node_modules/@walletconnect/browser-utils/dist/esm/index.js"() {
    init_browser();
    init_json();
    init_local();
    init_mobile();
    init_registry();
  }
});

// node_modules/@walletconnect/utils/dist/esm/constants.js
var reservedEvents, signingMethods;
var init_constants = __esm({
  "node_modules/@walletconnect/utils/dist/esm/constants.js"() {
    reservedEvents = [
      "session_request",
      "session_update",
      "exchange_key",
      "connect",
      "disconnect",
      "display_uri",
      "modal_closed",
      "transport_open",
      "transport_close",
      "transport_error"
    ];
    signingMethods = [
      "eth_sendTransaction",
      "eth_signTransaction",
      "eth_sign",
      "eth_signTypedData",
      "eth_signTypedData_v1",
      "eth_signTypedData_v2",
      "eth_signTypedData_v3",
      "eth_signTypedData_v4",
      "personal_sign",
      "wallet_addEthereumChain",
      "wallet_switchEthereumChain",
      "wallet_getPermissions",
      "wallet_requestPermissions",
      "wallet_registerOnboarding",
      "wallet_watchAsset",
      "wallet_scanQRCode"
    ];
  }
});

// node_modules/@walletconnect/utils/node_modules/bn.js/lib/bn.js
var require_bn = __commonJS({
  "node_modules/@walletconnect/utils/node_modules/bn.js/lib/bn.js"(exports, module) {
    (function(module2, exports2) {
      "use strict";
      function assert2(val, msg) {
        if (!val) throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN2(number, base, endian) {
        if (BN2.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base === "le" || base === "be") {
            endian = base;
            base = 10;
          }
          this._init(number || 0, base || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN2;
      } else {
        exports2.BN = BN2;
      }
      BN2.BN = BN2;
      BN2.wordSize = 26;
      var Buffer2;
      try {
        Buffer2 = require_buffer().Buffer;
      } catch (e) {
      }
      BN2.isBN = function isBN(num) {
        if (num instanceof BN2) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN2.wordSize && Array.isArray(num.words);
      };
      BN2.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
      };
      BN2.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
      };
      BN2.prototype._init = function init(number, base, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base, endian);
        }
        if (base === "hex") {
          base = 16;
        }
        assert2(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
        }
        if (base === 16) {
          this._parseHex(number, start);
        } else {
          this._parseBase(number, base, start);
        }
        if (number[0] === "-") {
          this.negative = 1;
        }
        this.strip();
        if (endian !== "le") return;
        this._initArray(this.toArray(), base, endian);
      };
      BN2.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert2(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le") return;
        this._initArray(this.toArray(), base, endian);
      };
      BN2.prototype._initArray = function _initArray(number, base, endian) {
        assert2(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex(str, start, end) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r <<= 4;
          if (c >= 49 && c <= 54) {
            r |= c - 49 + 10;
          } else if (c >= 17 && c <= 22) {
            r |= c - 17 + 10;
          } else {
            r |= c & 15;
          }
        }
        return r;
      }
      BN2.prototype._parseHex = function _parseHex(number, start) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        for (i = number.length - 6, j = 0; i >= start; i -= 6) {
          w = parseHex(number, i, i + 6);
          this.words[j] |= w << off & 67108863;
          this.words[j + 1] |= w >>> 26 - off & 4194303;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
        if (i + 6 !== start) {
          w = parseHex(number, start, i + 6);
          this.words[j] |= w << off & 67108863;
          this.words[j + 1] |= w >>> 26 - off & 4194303;
        }
        this.strip();
      };
      function parseBase(str, start, end, mul) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN2.prototype._parseBase = function _parseBase(number, base, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base);
          for (i = 0; i < mod; i++) {
            pow *= base;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
      };
      BN2.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN2.prototype.clone = function clone() {
        var r = new BN2(null);
        this.copy(r);
        return r;
      };
      BN2.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN2.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN2.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN2.prototype.inspect = function inspect() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN2.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
          var groupSize = groupSizes[base];
          var groupBase = groupBases[base];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert2(false, "Base should be between 2 and 36");
      };
      BN2.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert2(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN2.prototype.toJSON = function toJSON() {
        return this.toString(16);
      };
      BN2.prototype.toBuffer = function toBuffer(endian, length) {
        assert2(typeof Buffer2 !== "undefined");
        return this.toArrayLike(Buffer2, endian, length);
      };
      BN2.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN2.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert2(byteLength <= reqLength, "byte array longer than desired length");
        assert2(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN2.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN2.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN2.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN2.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN2.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26) break;
        }
        return r;
      };
      BN2.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN2.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN2.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN2.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN2.prototype.neg = function neg() {
        return this.clone().ineg();
      };
      BN2.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN2.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN2.prototype.ior = function ior(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN2.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN2.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN2.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN2.prototype.iand = function iand(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN2.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN2.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN2.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN2.prototype.ixor = function ixor(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN2.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN2.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN2.prototype.inotn = function inotn(width) {
        assert2(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN2.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN2.prototype.setn = function setn(bit, val) {
        assert2(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN2.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN2.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN2.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN2.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN2.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN2.prototype._countBits(N) - 1;
        for (var i = 0; i < N; i++) {
          t[i] = this.revBin(i, l, N);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for (var i = 0; i < N; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for (var s = 1; s < N; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for (N = N / 2 | 0; N; N = N >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for (var i = 0; i < N / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N - i - 1];
          rws[N - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N - i - 1];
          iws[N - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for (var i = 0; i < N / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N; ++i) {
          rws[i] = 0;
        }
        assert2(carry === 0);
        assert2((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for (var i = 0; i < N; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for (var i = 0; i < N; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN2.prototype.mul = function mul(num) {
        var out = new BN2(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN2.prototype.mulf = function mulf(num) {
        var out = new BN2(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN2.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN2.prototype.imuln = function imuln(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN2.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN2.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN2.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN2.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN2(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0) break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0) continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN2.prototype.iushln = function iushln(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN2.prototype.ishln = function ishln(bits) {
        assert2(this.negative === 0);
        return this.iushln(bits);
      };
      BN2.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert2(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN2.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert2(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN2.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN2.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN2.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN2.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN2.prototype.testn = function testn(bit) {
        assert2(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN2.prototype.imaskn = function imaskn(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert2(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN2.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN2.prototype.iaddn = function iaddn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0) return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN2.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN2.prototype.isubn = function isubn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN2.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN2.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN2.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN2.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN2.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0) return this.strip();
        assert2(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN2.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN2(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN2.prototype.divmod = function divmod(num, mode, positive) {
        assert2(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN2(0),
            mod: new BN2(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN2(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN2(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN2(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN2.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN2.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN2.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN2.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero()) return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN2.prototype.modn = function modn(num) {
        assert2(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN2.prototype.idivn = function idivn(num) {
        assert2(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN2.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN2.prototype.egcd = function egcd(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN2(1);
        var B = new BN2(0);
        var C = new BN2(0);
        var D = new BN2(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN2.prototype._invmp = function _invmp(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN2(1);
        var x2 = new BN2(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN2.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN2.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN2.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN2.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN2.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN2.prototype.bincn = function bincn(bit) {
        assert2(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN2.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN2.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert2(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
      };
      BN2.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
      };
      BN2.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b) continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN2.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN2.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN2.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN2.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN2.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN2.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN2.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN2.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN2.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN2.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
      };
      BN2.red = function red(num) {
        return new Red(num);
      };
      BN2.prototype.toRed = function toRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        assert2(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN2.prototype.fromRed = function fromRed() {
        assert2(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN2.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN2.prototype.forceRed = function forceRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN2.prototype.redAdd = function redAdd(num) {
        assert2(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN2.prototype.redIAdd = function redIAdd(num) {
        assert2(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN2.prototype.redSub = function redSub(num) {
        assert2(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN2.prototype.redISub = function redISub(num) {
        assert2(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN2.prototype.redShl = function redShl(num) {
        assert2(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN2.prototype.redMul = function redMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN2.prototype.redIMul = function redIMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN2.prototype.redSqr = function redSqr() {
        assert2(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN2.prototype.redISqr = function redISqr() {
        assert2(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN2.prototype.redSqrt = function redSqrt() {
        assert2(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN2.prototype.redInvm = function redInvm() {
        assert2(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN2.prototype.redNeg = function redNeg() {
        assert2(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN2.prototype.redPow = function redPow(num) {
        assert2(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN2(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN2(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN2(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          r.strip();
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(
          this,
          "k256",
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
        );
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(
          this,
          "p224",
          "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
        );
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(
          this,
          "p192",
          "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
        );
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(
          this,
          "25519",
          "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
        );
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN2._prime = function prime(name) {
        if (primes[name]) return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN2._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert2(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert2(a.negative === 0, "red works only with positives");
        assert2(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert2((a.negative | b.negative) === 0, "red works only with positives");
        assert2(
          a.red && a.red === b.red,
          "red works only with red numbers"
        );
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert2(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN2(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert2(!q.isZero());
        var one = new BN2(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN2(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert2(i < m);
          var b = this.pow(c, new BN2(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero()) return new BN2(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN2(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN2.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN2(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero()) return new BN2(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/is-typedarray/index.js
var require_is_typedarray = __commonJS({
  "node_modules/is-typedarray/index.js"(exports, module) {
    module.exports = isTypedArray2;
    isTypedArray2.strict = isStrictTypedArray;
    isTypedArray2.loose = isLooseTypedArray;
    var toString = Object.prototype.toString;
    var names = {
      "[object Int8Array]": true,
      "[object Int16Array]": true,
      "[object Int32Array]": true,
      "[object Uint8Array]": true,
      "[object Uint8ClampedArray]": true,
      "[object Uint16Array]": true,
      "[object Uint32Array]": true,
      "[object Float32Array]": true,
      "[object Float64Array]": true
    };
    function isTypedArray2(arr) {
      return isStrictTypedArray(arr) || isLooseTypedArray(arr);
    }
    function isStrictTypedArray(arr) {
      return arr instanceof Int8Array || arr instanceof Int16Array || arr instanceof Int32Array || arr instanceof Uint8Array || arr instanceof Uint8ClampedArray || arr instanceof Uint16Array || arr instanceof Uint32Array || arr instanceof Float32Array || arr instanceof Float64Array;
    }
    function isLooseTypedArray(arr) {
      return names[toString.call(arr)];
    }
  }
});

// node_modules/typedarray-to-buffer/index.js
var require_typedarray_to_buffer = __commonJS({
  "node_modules/typedarray-to-buffer/index.js"(exports, module) {
    var isTypedArray2 = require_is_typedarray().strict;
    module.exports = function typedarrayToBuffer(arr) {
      if (isTypedArray2(arr)) {
        var buf = Buffer.from(arr.buffer);
        if (arr.byteLength !== arr.buffer.byteLength) {
          buf = buf.slice(arr.byteOffset, arr.byteOffset + arr.byteLength);
        }
        return buf;
      } else {
        return Buffer.from(arr);
      }
    };
  }
});

// node_modules/@walletconnect/encoding/dist/esm/index.js
function bufferToArray(buf) {
  return new Uint8Array(buf);
}
function bufferToHex(buf, prefixed = false) {
  const hex = buf.toString(ENC_HEX);
  return prefixed ? addHexPrefix(hex) : hex;
}
function bufferToUtf8(buf) {
  return buf.toString(ENC_UTF8);
}
function arrayToBuffer(arr) {
  return (0, import_typedarray_to_buffer.default)(arr);
}
function arrayToHex(arr, prefixed = false) {
  return bufferToHex(arrayToBuffer(arr), prefixed);
}
function arrayToUtf8(arr) {
  return bufferToUtf8(arrayToBuffer(arr));
}
function hexToBuffer(hex) {
  return Buffer.from(removeHexPrefix(hex), ENC_HEX);
}
function hexToArray(hex) {
  return bufferToArray(hexToBuffer(hex));
}
function utf8ToBuffer(utf8) {
  return Buffer.from(utf8, ENC_UTF8);
}
function utf8ToArray(utf8) {
  return bufferToArray(utf8ToBuffer(utf8));
}
function utf8ToHex(utf8, prefixed = false) {
  return bufferToHex(utf8ToBuffer(utf8), prefixed);
}
function isHexString(str, length) {
  if (typeof str !== "string" || !str.match(/^0x[0-9A-Fa-f]*$/)) {
    return false;
  }
  if (length && str.length !== 2 + 2 * length) {
    return false;
  }
  return true;
}
function concatArrays(...args) {
  let result = [];
  args.forEach((arg) => result = result.concat(Array.from(arg)));
  return new Uint8Array([...result]);
}
function calcByteLength(length, byteSize = 8) {
  const remainder = length % byteSize;
  return remainder ? (length - remainder) / byteSize * byteSize + byteSize : length;
}
function sanitizeBytes(str, byteSize = 8, padding = STRING_ZERO) {
  return padLeft(str, calcByteLength(str.length, byteSize), padding);
}
function padLeft(str, length, padding = STRING_ZERO) {
  return padString(str, length, true, padding);
}
function removeHexPrefix(hex) {
  return hex.replace(/^0x/, "");
}
function addHexPrefix(hex) {
  return hex.startsWith("0x") ? hex : `0x${hex}`;
}
function sanitizeHex(hex) {
  hex = removeHexPrefix(hex);
  hex = sanitizeBytes(hex, 2);
  if (hex) {
    hex = addHexPrefix(hex);
  }
  return hex;
}
function removeHexLeadingZeros(hex) {
  const prefixed = hex.startsWith("0x");
  hex = removeHexPrefix(hex);
  hex = hex.startsWith(STRING_ZERO) ? hex.substring(1) : hex;
  return prefixed ? addHexPrefix(hex) : hex;
}
function padString(str, length, left, padding = STRING_ZERO) {
  const diff = length - str.length;
  let result = str;
  if (diff > 0) {
    const pad = padding.repeat(diff);
    result = left ? pad + str : str + pad;
  }
  return result;
}
var import_is_typedarray, import_typedarray_to_buffer, ENC_HEX, ENC_UTF8, STRING_ZERO;
var init_esm4 = __esm({
  "node_modules/@walletconnect/encoding/dist/esm/index.js"() {
    import_is_typedarray = __toESM(require_is_typedarray());
    import_typedarray_to_buffer = __toESM(require_typedarray_to_buffer());
    ENC_HEX = "hex";
    ENC_UTF8 = "utf8";
    STRING_ZERO = "0";
  }
});

// node_modules/@walletconnect/utils/dist/esm/encoding.js
function convertArrayBufferToBuffer(arrBuf) {
  return arrayToBuffer(new Uint8Array(arrBuf));
}
function convertArrayBufferToHex(arrBuf, noPrefix) {
  return arrayToHex(new Uint8Array(arrBuf), !noPrefix);
}
function convertBufferToArrayBuffer(buf) {
  return bufferToArray(buf).buffer;
}
function convertUtf8ToBuffer(utf8) {
  return utf8ToBuffer(utf8);
}
function convertUtf8ToHex(utf8, noPrefix) {
  return utf8ToHex(utf8, !noPrefix);
}
function convertHexToArrayBuffer(hex) {
  return hexToArray(hex).buffer;
}
function convertNumberToHex(num, noPrefix) {
  const hex = removeHexPrefix(sanitizeHex(new import_bn.default(num).toString(16)));
  return noPrefix ? hex : addHexPrefix(hex);
}
var import_bn;
var init_encoding = __esm({
  "node_modules/@walletconnect/utils/dist/esm/encoding.js"() {
    import_bn = __toESM(require_bn());
    init_esm4();
  }
});

// node_modules/js-sha3/src/sha3.js
var require_sha3 = __commonJS({
  "node_modules/js-sha3/src/sha3.js"(exports, module) {
    (function() {
      "use strict";
      var INPUT_ERROR = "input is invalid type";
      var FINALIZE_ERROR = "finalize already called";
      var WINDOW = typeof window === "object";
      var root = WINDOW ? window : {};
      if (root.JS_SHA3_NO_WINDOW) {
        WINDOW = false;
      }
      var WEB_WORKER = !WINDOW && typeof self === "object";
      var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === "object" && process.versions && process.versions.node;
      if (NODE_JS) {
        root = global;
      } else if (WEB_WORKER) {
        root = self;
      }
      var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === "object" && module.exports;
      var AMD = typeof define === "function" && define.amd;
      var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== "undefined";
      var HEX_CHARS = "0123456789abcdef".split("");
      var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
      var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
      var KECCAK_PADDING = [1, 256, 65536, 16777216];
      var PADDING2 = [6, 1536, 393216, 100663296];
      var SHIFT = [0, 8, 16, 24];
      var RC = [
        1,
        0,
        32898,
        0,
        32906,
        2147483648,
        2147516416,
        2147483648,
        32907,
        0,
        2147483649,
        0,
        2147516545,
        2147483648,
        32777,
        2147483648,
        138,
        0,
        136,
        0,
        2147516425,
        0,
        2147483658,
        0,
        2147516555,
        0,
        139,
        2147483648,
        32905,
        2147483648,
        32771,
        2147483648,
        32770,
        2147483648,
        128,
        2147483648,
        32778,
        0,
        2147483658,
        2147483648,
        2147516545,
        2147483648,
        32896,
        2147483648,
        2147483649,
        0,
        2147516424,
        2147483648
      ];
      var BITS = [224, 256, 384, 512];
      var SHAKE_BITS = [128, 256];
      var OUTPUT_TYPES = ["hex", "buffer", "arrayBuffer", "array", "digest"];
      var CSHAKE_BYTEPAD = {
        "128": 168,
        "256": 136
      };
      if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
        Array.isArray = function(obj) {
          return Object.prototype.toString.call(obj) === "[object Array]";
        };
      }
      if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
        ArrayBuffer.isView = function(obj) {
          return typeof obj === "object" && obj.buffer && obj.buffer.constructor === ArrayBuffer;
        };
      }
      var createOutputMethod = function(bits2, padding, outputType) {
        return function(message) {
          return new Keccak(bits2, padding, bits2).update(message)[outputType]();
        };
      };
      var createShakeOutputMethod = function(bits2, padding, outputType) {
        return function(message, outputBits) {
          return new Keccak(bits2, padding, outputBits).update(message)[outputType]();
        };
      };
      var createCshakeOutputMethod = function(bits2, padding, outputType) {
        return function(message, outputBits, n, s) {
          return methods["cshake" + bits2].update(message, outputBits, n, s)[outputType]();
        };
      };
      var createKmacOutputMethod = function(bits2, padding, outputType) {
        return function(key, message, outputBits, s) {
          return methods["kmac" + bits2].update(key, message, outputBits, s)[outputType]();
        };
      };
      var createOutputMethods = function(method, createMethod2, bits2, padding) {
        for (var i2 = 0; i2 < OUTPUT_TYPES.length; ++i2) {
          var type = OUTPUT_TYPES[i2];
          method[type] = createMethod2(bits2, padding, type);
        }
        return method;
      };
      var createMethod = function(bits2, padding) {
        var method = createOutputMethod(bits2, padding, "hex");
        method.create = function() {
          return new Keccak(bits2, padding, bits2);
        };
        method.update = function(message) {
          return method.create().update(message);
        };
        return createOutputMethods(method, createOutputMethod, bits2, padding);
      };
      var createShakeMethod = function(bits2, padding) {
        var method = createShakeOutputMethod(bits2, padding, "hex");
        method.create = function(outputBits) {
          return new Keccak(bits2, padding, outputBits);
        };
        method.update = function(message, outputBits) {
          return method.create(outputBits).update(message);
        };
        return createOutputMethods(method, createShakeOutputMethod, bits2, padding);
      };
      var createCshakeMethod = function(bits2, padding) {
        var w = CSHAKE_BYTEPAD[bits2];
        var method = createCshakeOutputMethod(bits2, padding, "hex");
        method.create = function(outputBits, n, s) {
          if (!n && !s) {
            return methods["shake" + bits2].create(outputBits);
          } else {
            return new Keccak(bits2, padding, outputBits).bytepad([n, s], w);
          }
        };
        method.update = function(message, outputBits, n, s) {
          return method.create(outputBits, n, s).update(message);
        };
        return createOutputMethods(method, createCshakeOutputMethod, bits2, padding);
      };
      var createKmacMethod = function(bits2, padding) {
        var w = CSHAKE_BYTEPAD[bits2];
        var method = createKmacOutputMethod(bits2, padding, "hex");
        method.create = function(key, outputBits, s) {
          return new Kmac(bits2, padding, outputBits).bytepad(["KMAC", s], w).bytepad([key], w);
        };
        method.update = function(key, message, outputBits, s) {
          return method.create(key, outputBits, s).update(message);
        };
        return createOutputMethods(method, createKmacOutputMethod, bits2, padding);
      };
      var algorithms = [
        { name: "keccak", padding: KECCAK_PADDING, bits: BITS, createMethod },
        { name: "sha3", padding: PADDING2, bits: BITS, createMethod },
        { name: "shake", padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
        { name: "cshake", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
        { name: "kmac", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
      ];
      var methods = {}, methodNames = [];
      for (var i = 0; i < algorithms.length; ++i) {
        var algorithm = algorithms[i];
        var bits = algorithm.bits;
        for (var j = 0; j < bits.length; ++j) {
          var methodName = algorithm.name + "_" + bits[j];
          methodNames.push(methodName);
          methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
          if (algorithm.name !== "sha3") {
            var newMethodName = algorithm.name + bits[j];
            methodNames.push(newMethodName);
            methods[newMethodName] = methods[methodName];
          }
        }
      }
      function Keccak(bits2, padding, outputBits) {
        this.blocks = [];
        this.s = [];
        this.padding = padding;
        this.outputBits = outputBits;
        this.reset = true;
        this.finalized = false;
        this.block = 0;
        this.start = 0;
        this.blockCount = 1600 - (bits2 << 1) >> 5;
        this.byteCount = this.blockCount << 2;
        this.outputBlocks = outputBits >> 5;
        this.extraBytes = (outputBits & 31) >> 3;
        for (var i2 = 0; i2 < 50; ++i2) {
          this.s[i2] = 0;
        }
      }
      Keccak.prototype.update = function(message) {
        if (this.finalized) {
          throw new Error(FINALIZE_ERROR);
        }
        var notString, type = typeof message;
        if (type !== "string") {
          if (type === "object") {
            if (message === null) {
              throw new Error(INPUT_ERROR);
            } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
              message = new Uint8Array(message);
            } else if (!Array.isArray(message)) {
              if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
                throw new Error(INPUT_ERROR);
              }
            }
          } else {
            throw new Error(INPUT_ERROR);
          }
          notString = true;
        }
        var blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index = 0, s = this.s, i2, code;
        while (index < length) {
          if (this.reset) {
            this.reset = false;
            blocks[0] = this.block;
            for (i2 = 1; i2 < blockCount + 1; ++i2) {
              blocks[i2] = 0;
            }
          }
          if (notString) {
            for (i2 = this.start; index < length && i2 < byteCount; ++index) {
              blocks[i2 >> 2] |= message[index] << SHIFT[i2++ & 3];
            }
          } else {
            for (i2 = this.start; index < length && i2 < byteCount; ++index) {
              code = message.charCodeAt(index);
              if (code < 128) {
                blocks[i2 >> 2] |= code << SHIFT[i2++ & 3];
              } else if (code < 2048) {
                blocks[i2 >> 2] |= (192 | code >> 6) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
              } else if (code < 55296 || code >= 57344) {
                blocks[i2 >> 2] |= (224 | code >> 12) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
              } else {
                code = 65536 + ((code & 1023) << 10 | message.charCodeAt(++index) & 1023);
                blocks[i2 >> 2] |= (240 | code >> 18) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code >> 12 & 63) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
              }
            }
          }
          this.lastByteIndex = i2;
          if (i2 >= byteCount) {
            this.start = i2 - byteCount;
            this.block = blocks[blockCount];
            for (i2 = 0; i2 < blockCount; ++i2) {
              s[i2] ^= blocks[i2];
            }
            f(s);
            this.reset = true;
          } else {
            this.start = i2;
          }
        }
        return this;
      };
      Keccak.prototype.encode = function(x, right) {
        var o = x & 255, n = 1;
        var bytes = [o];
        x = x >> 8;
        o = x & 255;
        while (o > 0) {
          bytes.unshift(o);
          x = x >> 8;
          o = x & 255;
          ++n;
        }
        if (right) {
          bytes.push(n);
        } else {
          bytes.unshift(n);
        }
        this.update(bytes);
        return bytes.length;
      };
      Keccak.prototype.encodeString = function(str) {
        var notString, type = typeof str;
        if (type !== "string") {
          if (type === "object") {
            if (str === null) {
              throw new Error(INPUT_ERROR);
            } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
              str = new Uint8Array(str);
            } else if (!Array.isArray(str)) {
              if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
                throw new Error(INPUT_ERROR);
              }
            }
          } else {
            throw new Error(INPUT_ERROR);
          }
          notString = true;
        }
        var bytes = 0, length = str.length;
        if (notString) {
          bytes = length;
        } else {
          for (var i2 = 0; i2 < str.length; ++i2) {
            var code = str.charCodeAt(i2);
            if (code < 128) {
              bytes += 1;
            } else if (code < 2048) {
              bytes += 2;
            } else if (code < 55296 || code >= 57344) {
              bytes += 3;
            } else {
              code = 65536 + ((code & 1023) << 10 | str.charCodeAt(++i2) & 1023);
              bytes += 4;
            }
          }
        }
        bytes += this.encode(bytes * 8);
        this.update(str);
        return bytes;
      };
      Keccak.prototype.bytepad = function(strs, w) {
        var bytes = this.encode(w);
        for (var i2 = 0; i2 < strs.length; ++i2) {
          bytes += this.encodeString(strs[i2]);
        }
        var paddingBytes = w - bytes % w;
        var zeros = [];
        zeros.length = paddingBytes;
        this.update(zeros);
        return this;
      };
      Keccak.prototype.finalize = function() {
        if (this.finalized) {
          return;
        }
        this.finalized = true;
        var blocks = this.blocks, i2 = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
        blocks[i2 >> 2] |= this.padding[i2 & 3];
        if (this.lastByteIndex === this.byteCount) {
          blocks[0] = blocks[blockCount];
          for (i2 = 1; i2 < blockCount + 1; ++i2) {
            blocks[i2] = 0;
          }
        }
        blocks[blockCount - 1] |= 2147483648;
        for (i2 = 0; i2 < blockCount; ++i2) {
          s[i2] ^= blocks[i2];
        }
        f(s);
      };
      Keccak.prototype.toString = Keccak.prototype.hex = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
        var hex = "", block;
        while (j2 < outputBlocks) {
          for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
            block = s[i2];
            hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15] + HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15] + HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15] + HEX_CHARS[block >> 28 & 15] + HEX_CHARS[block >> 24 & 15];
          }
          if (j2 % blockCount === 0) {
            f(s);
            i2 = 0;
          }
        }
        if (extraBytes) {
          block = s[i2];
          hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15];
          if (extraBytes > 1) {
            hex += HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15];
          }
          if (extraBytes > 2) {
            hex += HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15];
          }
        }
        return hex;
      };
      Keccak.prototype.arrayBuffer = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
        var bytes = this.outputBits >> 3;
        var buffer;
        if (extraBytes) {
          buffer = new ArrayBuffer(outputBlocks + 1 << 2);
        } else {
          buffer = new ArrayBuffer(bytes);
        }
        var array = new Uint32Array(buffer);
        while (j2 < outputBlocks) {
          for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
            array[j2] = s[i2];
          }
          if (j2 % blockCount === 0) {
            f(s);
          }
        }
        if (extraBytes) {
          array[i2] = s[i2];
          buffer = buffer.slice(0, bytes);
        }
        return buffer;
      };
      Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
      Keccak.prototype.digest = Keccak.prototype.array = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
        var array = [], offset, block;
        while (j2 < outputBlocks) {
          for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
            offset = j2 << 2;
            block = s[i2];
            array[offset] = block & 255;
            array[offset + 1] = block >> 8 & 255;
            array[offset + 2] = block >> 16 & 255;
            array[offset + 3] = block >> 24 & 255;
          }
          if (j2 % blockCount === 0) {
            f(s);
          }
        }
        if (extraBytes) {
          offset = j2 << 2;
          block = s[i2];
          array[offset] = block & 255;
          if (extraBytes > 1) {
            array[offset + 1] = block >> 8 & 255;
          }
          if (extraBytes > 2) {
            array[offset + 2] = block >> 16 & 255;
          }
        }
        return array;
      };
      function Kmac(bits2, padding, outputBits) {
        Keccak.call(this, bits2, padding, outputBits);
      }
      Kmac.prototype = new Keccak();
      Kmac.prototype.finalize = function() {
        this.encode(this.outputBits, true);
        return Keccak.prototype.finalize.call(this);
      };
      var f = function(s) {
        var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
        for (n = 0; n < 48; n += 2) {
          c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
          c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
          c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
          c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
          c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
          c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
          c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
          c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
          c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
          c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];
          h = c8 ^ (c2 << 1 | c3 >>> 31);
          l = c9 ^ (c3 << 1 | c2 >>> 31);
          s[0] ^= h;
          s[1] ^= l;
          s[10] ^= h;
          s[11] ^= l;
          s[20] ^= h;
          s[21] ^= l;
          s[30] ^= h;
          s[31] ^= l;
          s[40] ^= h;
          s[41] ^= l;
          h = c0 ^ (c4 << 1 | c5 >>> 31);
          l = c1 ^ (c5 << 1 | c4 >>> 31);
          s[2] ^= h;
          s[3] ^= l;
          s[12] ^= h;
          s[13] ^= l;
          s[22] ^= h;
          s[23] ^= l;
          s[32] ^= h;
          s[33] ^= l;
          s[42] ^= h;
          s[43] ^= l;
          h = c2 ^ (c6 << 1 | c7 >>> 31);
          l = c3 ^ (c7 << 1 | c6 >>> 31);
          s[4] ^= h;
          s[5] ^= l;
          s[14] ^= h;
          s[15] ^= l;
          s[24] ^= h;
          s[25] ^= l;
          s[34] ^= h;
          s[35] ^= l;
          s[44] ^= h;
          s[45] ^= l;
          h = c4 ^ (c8 << 1 | c9 >>> 31);
          l = c5 ^ (c9 << 1 | c8 >>> 31);
          s[6] ^= h;
          s[7] ^= l;
          s[16] ^= h;
          s[17] ^= l;
          s[26] ^= h;
          s[27] ^= l;
          s[36] ^= h;
          s[37] ^= l;
          s[46] ^= h;
          s[47] ^= l;
          h = c6 ^ (c0 << 1 | c1 >>> 31);
          l = c7 ^ (c1 << 1 | c0 >>> 31);
          s[8] ^= h;
          s[9] ^= l;
          s[18] ^= h;
          s[19] ^= l;
          s[28] ^= h;
          s[29] ^= l;
          s[38] ^= h;
          s[39] ^= l;
          s[48] ^= h;
          s[49] ^= l;
          b0 = s[0];
          b1 = s[1];
          b32 = s[11] << 4 | s[10] >>> 28;
          b33 = s[10] << 4 | s[11] >>> 28;
          b14 = s[20] << 3 | s[21] >>> 29;
          b15 = s[21] << 3 | s[20] >>> 29;
          b46 = s[31] << 9 | s[30] >>> 23;
          b47 = s[30] << 9 | s[31] >>> 23;
          b28 = s[40] << 18 | s[41] >>> 14;
          b29 = s[41] << 18 | s[40] >>> 14;
          b20 = s[2] << 1 | s[3] >>> 31;
          b21 = s[3] << 1 | s[2] >>> 31;
          b2 = s[13] << 12 | s[12] >>> 20;
          b3 = s[12] << 12 | s[13] >>> 20;
          b34 = s[22] << 10 | s[23] >>> 22;
          b35 = s[23] << 10 | s[22] >>> 22;
          b16 = s[33] << 13 | s[32] >>> 19;
          b17 = s[32] << 13 | s[33] >>> 19;
          b48 = s[42] << 2 | s[43] >>> 30;
          b49 = s[43] << 2 | s[42] >>> 30;
          b40 = s[5] << 30 | s[4] >>> 2;
          b41 = s[4] << 30 | s[5] >>> 2;
          b22 = s[14] << 6 | s[15] >>> 26;
          b23 = s[15] << 6 | s[14] >>> 26;
          b4 = s[25] << 11 | s[24] >>> 21;
          b5 = s[24] << 11 | s[25] >>> 21;
          b36 = s[34] << 15 | s[35] >>> 17;
          b37 = s[35] << 15 | s[34] >>> 17;
          b18 = s[45] << 29 | s[44] >>> 3;
          b19 = s[44] << 29 | s[45] >>> 3;
          b10 = s[6] << 28 | s[7] >>> 4;
          b11 = s[7] << 28 | s[6] >>> 4;
          b42 = s[17] << 23 | s[16] >>> 9;
          b43 = s[16] << 23 | s[17] >>> 9;
          b24 = s[26] << 25 | s[27] >>> 7;
          b25 = s[27] << 25 | s[26] >>> 7;
          b6 = s[36] << 21 | s[37] >>> 11;
          b7 = s[37] << 21 | s[36] >>> 11;
          b38 = s[47] << 24 | s[46] >>> 8;
          b39 = s[46] << 24 | s[47] >>> 8;
          b30 = s[8] << 27 | s[9] >>> 5;
          b31 = s[9] << 27 | s[8] >>> 5;
          b12 = s[18] << 20 | s[19] >>> 12;
          b13 = s[19] << 20 | s[18] >>> 12;
          b44 = s[29] << 7 | s[28] >>> 25;
          b45 = s[28] << 7 | s[29] >>> 25;
          b26 = s[38] << 8 | s[39] >>> 24;
          b27 = s[39] << 8 | s[38] >>> 24;
          b8 = s[48] << 14 | s[49] >>> 18;
          b9 = s[49] << 14 | s[48] >>> 18;
          s[0] = b0 ^ ~b2 & b4;
          s[1] = b1 ^ ~b3 & b5;
          s[10] = b10 ^ ~b12 & b14;
          s[11] = b11 ^ ~b13 & b15;
          s[20] = b20 ^ ~b22 & b24;
          s[21] = b21 ^ ~b23 & b25;
          s[30] = b30 ^ ~b32 & b34;
          s[31] = b31 ^ ~b33 & b35;
          s[40] = b40 ^ ~b42 & b44;
          s[41] = b41 ^ ~b43 & b45;
          s[2] = b2 ^ ~b4 & b6;
          s[3] = b3 ^ ~b5 & b7;
          s[12] = b12 ^ ~b14 & b16;
          s[13] = b13 ^ ~b15 & b17;
          s[22] = b22 ^ ~b24 & b26;
          s[23] = b23 ^ ~b25 & b27;
          s[32] = b32 ^ ~b34 & b36;
          s[33] = b33 ^ ~b35 & b37;
          s[42] = b42 ^ ~b44 & b46;
          s[43] = b43 ^ ~b45 & b47;
          s[4] = b4 ^ ~b6 & b8;
          s[5] = b5 ^ ~b7 & b9;
          s[14] = b14 ^ ~b16 & b18;
          s[15] = b15 ^ ~b17 & b19;
          s[24] = b24 ^ ~b26 & b28;
          s[25] = b25 ^ ~b27 & b29;
          s[34] = b34 ^ ~b36 & b38;
          s[35] = b35 ^ ~b37 & b39;
          s[44] = b44 ^ ~b46 & b48;
          s[45] = b45 ^ ~b47 & b49;
          s[6] = b6 ^ ~b8 & b0;
          s[7] = b7 ^ ~b9 & b1;
          s[16] = b16 ^ ~b18 & b10;
          s[17] = b17 ^ ~b19 & b11;
          s[26] = b26 ^ ~b28 & b20;
          s[27] = b27 ^ ~b29 & b21;
          s[36] = b36 ^ ~b38 & b30;
          s[37] = b37 ^ ~b39 & b31;
          s[46] = b46 ^ ~b48 & b40;
          s[47] = b47 ^ ~b49 & b41;
          s[8] = b8 ^ ~b0 & b2;
          s[9] = b9 ^ ~b1 & b3;
          s[18] = b18 ^ ~b10 & b12;
          s[19] = b19 ^ ~b11 & b13;
          s[28] = b28 ^ ~b20 & b22;
          s[29] = b29 ^ ~b21 & b23;
          s[38] = b38 ^ ~b30 & b32;
          s[39] = b39 ^ ~b31 & b33;
          s[48] = b48 ^ ~b40 & b42;
          s[49] = b49 ^ ~b41 & b43;
          s[0] ^= RC[n];
          s[1] ^= RC[n + 1];
        }
      };
      if (COMMON_JS) {
        module.exports = methods;
      } else {
        for (i = 0; i < methodNames.length; ++i) {
          root[methodNames[i]] = methods[methodNames[i]];
        }
        if (AMD) {
          define(function() {
            return methods;
          });
        }
      }
    })();
  }
});

// node_modules/@walletconnect/utils/dist/esm/misc.js
function sanitizeHex2(hex) {
  return sanitizeHex(hex);
}
function removeHexLeadingZeros2(hex) {
  return removeHexLeadingZeros(addHexPrefix(hex));
}
function uuid() {
  const result = ((a, b) => {
    for (b = a = ""; a++ < 36; b += a * 51 & 52 ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16) : "-") {
    }
    return b;
  })();
  return result;
}
var payloadId2;
var init_misc = __esm({
  "node_modules/@walletconnect/utils/dist/esm/misc.js"() {
    init_esm4();
    init_esm();
    init_constants();
    payloadId2 = payloadId;
  }
});

// node_modules/@walletconnect/utils/dist/esm/validators.js
function isEmptyString(value) {
  return value === "" || typeof value === "string" && value.trim() === "";
}
function isEmptyArray(array) {
  return !(array && array.length);
}
function isHexString2(value, length) {
  return isHexString(value, length);
}
function isJsonRpcRequest(object) {
  return typeof object.method !== "undefined";
}
function isJsonRpcResponseSuccess(object) {
  return typeof object.result !== "undefined";
}
function isJsonRpcResponseError(object) {
  return typeof object.error !== "undefined";
}
function isInternalEvent(object) {
  return typeof object.event !== "undefined";
}
function isReservedEvent(event) {
  return reservedEvents.includes(event) || event.startsWith("wc_");
}
function isSilentPayload(request) {
  if (request.method.startsWith("wc_")) {
    return true;
  }
  if (signingMethods.includes(request.method)) {
    return false;
  }
  return true;
}
var init_validators = __esm({
  "node_modules/@walletconnect/utils/dist/esm/validators.js"() {
    init_esm4();
    init_constants();
  }
});

// node_modules/@walletconnect/utils/dist/esm/ethereum.js
function toChecksumAddress(address) {
  address = removeHexPrefix(address.toLowerCase());
  const hash = removeHexPrefix((0, import_js_sha3.keccak_256)(convertUtf8ToBuffer(address)));
  let checksum = "";
  for (let i = 0; i < address.length; i++) {
    if (parseInt(hash[i], 16) > 7) {
      checksum += address[i].toUpperCase();
    } else {
      checksum += address[i];
    }
  }
  return addHexPrefix(checksum);
}
function parsePersonalSign(params) {
  if (!isEmptyArray(params) && !isHexString2(params[0])) {
    params[0] = convertUtf8ToHex(params[0]);
  }
  return params;
}
function parseTransactionData(txData) {
  if (typeof txData.type !== "undefined" && txData.type !== "0")
    return txData;
  if (typeof txData.from === "undefined" || !isValidAddress(txData.from)) {
    throw new Error(`Transaction object must include a valid 'from' value.`);
  }
  function parseHexValues(value) {
    let result = value;
    if (typeof value === "number" || typeof value === "string" && !isEmptyString(value)) {
      if (!isHexString2(value)) {
        result = convertNumberToHex(value);
      } else if (typeof value === "string") {
        result = sanitizeHex2(value);
      }
    }
    if (typeof result === "string") {
      result = removeHexLeadingZeros2(result);
    }
    return result;
  }
  const txDataRPC = {
    from: sanitizeHex2(txData.from),
    to: typeof txData.to === "undefined" ? void 0 : sanitizeHex2(txData.to),
    gasPrice: typeof txData.gasPrice === "undefined" ? "" : parseHexValues(txData.gasPrice),
    gas: typeof txData.gas === "undefined" ? typeof txData.gasLimit === "undefined" ? "" : parseHexValues(txData.gasLimit) : parseHexValues(txData.gas),
    value: typeof txData.value === "undefined" ? "" : parseHexValues(txData.value),
    nonce: typeof txData.nonce === "undefined" ? "" : parseHexValues(txData.nonce),
    data: typeof txData.data === "undefined" ? "" : sanitizeHex2(txData.data) || "0x"
  };
  const prunable = ["gasPrice", "gas", "value", "nonce"];
  Object.keys(txDataRPC).forEach((key) => {
    if ((typeof txDataRPC[key] === "undefined" || typeof txDataRPC[key] === "string" && !txDataRPC[key].trim().length) && prunable.includes(key)) {
      delete txDataRPC[key];
    }
  });
  return txDataRPC;
}
var import_js_sha3, isValidAddress;
var init_ethereum = __esm({
  "node_modules/@walletconnect/utils/dist/esm/ethereum.js"() {
    import_js_sha3 = __toESM(require_sha3());
    init_esm4();
    init_encoding();
    init_misc();
    init_validators();
    isValidAddress = (address) => {
      if (!address) {
        return false;
      } else if (address.toLowerCase().substring(0, 2) !== "0x") {
        return false;
      } else if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {
        return false;
      } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {
        return true;
      } else {
        return address === toChecksumAddress(address);
      }
    };
  }
});

// node_modules/@walletconnect/utils/dist/esm/payload.js
function formatRpcError(error) {
  const message = error.message || "Failed or Rejected Request";
  let code = -32e3;
  if (error && !error.code) {
    switch (message) {
      case "Parse error":
        code = -32700;
        break;
      case "Invalid request":
        code = -32600;
        break;
      case "Method not found":
        code = -32601;
        break;
      case "Invalid params":
        code = -32602;
        break;
      case "Internal error":
        code = -32603;
        break;
      default:
        code = -32e3;
        break;
    }
  }
  const result = {
    code,
    message
  };
  if (error.data) {
    result.data = error.data;
  }
  return result;
}
var init_payload = __esm({
  "node_modules/@walletconnect/utils/dist/esm/payload.js"() {
  }
});

// node_modules/strict-uri-encode/index.js
var require_strict_uri_encode = __commonJS({
  "node_modules/strict-uri-encode/index.js"(exports, module) {
    "use strict";
    module.exports = (str) => encodeURIComponent(str).replace(/[!'()*]/g, (x) => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);
  }
});

// node_modules/decode-uri-component/index.js
var require_decode_uri_component = __commonJS({
  "node_modules/decode-uri-component/index.js"(exports, module) {
    "use strict";
    var token = "%[a-f0-9]{2}";
    var singleMatcher = new RegExp("(" + token + ")|([^%]+?)", "gi");
    var multiMatcher = new RegExp("(" + token + ")+", "gi");
    function decodeComponents(components, split) {
      try {
        return [decodeURIComponent(components.join(""))];
      } catch (err) {
      }
      if (components.length === 1) {
        return components;
      }
      split = split || 1;
      var left = components.slice(0, split);
      var right = components.slice(split);
      return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
    }
    function decode(input) {
      try {
        return decodeURIComponent(input);
      } catch (err) {
        var tokens = input.match(singleMatcher) || [];
        for (var i = 1; i < tokens.length; i++) {
          input = decodeComponents(tokens, i).join("");
          tokens = input.match(singleMatcher) || [];
        }
        return input;
      }
    }
    function customDecodeURIComponent(input) {
      var replaceMap = {
        "%FE%FF": "��",
        "%FF%FE": "��"
      };
      var match = multiMatcher.exec(input);
      while (match) {
        try {
          replaceMap[match[0]] = decodeURIComponent(match[0]);
        } catch (err) {
          var result = decode(match[0]);
          if (result !== match[0]) {
            replaceMap[match[0]] = result;
          }
        }
        match = multiMatcher.exec(input);
      }
      replaceMap["%C2"] = "�";
      var entries = Object.keys(replaceMap);
      for (var i = 0; i < entries.length; i++) {
        var key = entries[i];
        input = input.replace(new RegExp(key, "g"), replaceMap[key]);
      }
      return input;
    }
    module.exports = function(encodedURI) {
      if (typeof encodedURI !== "string") {
        throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
      }
      try {
        encodedURI = encodedURI.replace(/\+/g, " ");
        return decodeURIComponent(encodedURI);
      } catch (err) {
        return customDecodeURIComponent(encodedURI);
      }
    };
  }
});

// node_modules/split-on-first/index.js
var require_split_on_first = __commonJS({
  "node_modules/split-on-first/index.js"(exports, module) {
    "use strict";
    module.exports = (string, separator) => {
      if (!(typeof string === "string" && typeof separator === "string")) {
        throw new TypeError("Expected the arguments to be of type `string`");
      }
      if (separator === "") {
        return [string];
      }
      const separatorIndex = string.indexOf(separator);
      if (separatorIndex === -1) {
        return [string];
      }
      return [
        string.slice(0, separatorIndex),
        string.slice(separatorIndex + separator.length)
      ];
    };
  }
});

// node_modules/query-string/index.js
var require_query_string = __commonJS({
  "node_modules/query-string/index.js"(exports) {
    "use strict";
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component();
    var splitOnFirst = require_split_on_first();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode(key, options), "[", encode(index, options), "]=", encode(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode(key, options), "[]"].join("")];
            }
            return [...result, [encode(key, options), "[]=", encode(value, options)].join("")];
          };
        case "comma":
        case "separator":
          return (key) => (result, value) => {
            if (value === null || value === void 0 || value.length === 0) {
              return result;
            }
            if (result.length === 0) {
              return [[encode(key, options), "=", encode(value, options)].join("")];
            }
            return [[result, encode(value, options)].join(options.arrayFormatSeparator)];
          };
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode(key, options)];
            }
            return [...result, [encode(key, options), "=", encode(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.split("").indexOf(options.arrayFormatSeparator) > -1;
            const newValue = isArray ? value.split(options.arrayFormatSeparator).map((item) => decode(item, options)) : value === null ? value : decode(value, options);
            accumulator[key] = newValue;
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a, b) => Number(a) - Number(b)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse2(input, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof input !== "string") {
        return ret;
      }
      input = input.trim().replace(/^[?#&]/, "");
      if (!input) {
        return ret;
      }
      for (const param of input.split("&")) {
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator"].includes(options.arrayFormat) ? value : decode(value, options);
        formatter(decode(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k of Object.keys(value)) {
            value[k] = parseValue(value[k], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse2;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys.sort(options.sort);
      }
      return keys.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode(key, options);
        }
        if (Array.isArray(value)) {
          return value.reduce(formatter(key), []).join("&");
        }
        return encode(key, options) + "=" + encode(value, options);
      }).filter((x) => x.length > 0).join("&");
    };
    exports.parseUrl = (input, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url, hash] = splitOnFirst(input, "#");
      return Object.assign(
        {
          url: url.split("?")[0] || "",
          query: parse2(extract(input), options)
        },
        options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode(hash, options) } : {}
      );
    };
    exports.stringifyUrl = (input, options) => {
      options = Object.assign({
        encode: true,
        strict: true
      }, options);
      const url = removeHash(input.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(input.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, input.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(input.url);
      if (input.fragmentIdentifier) {
        hash = `#${encode(input.fragmentIdentifier, options)}`;
      }
      return `${url}${queryString}${hash}`;
    };
  }
});

// node_modules/@walletconnect/utils/dist/esm/url.js
function getQueryString(url) {
  const pathEnd = url.indexOf("?") !== -1 ? url.indexOf("?") : void 0;
  const queryString = typeof pathEnd !== "undefined" ? url.substr(pathEnd) : "";
  return queryString;
}
function appendToQueryString(queryString, newQueryParams) {
  let queryParams = parseQueryString(queryString);
  queryParams = Object.assign(Object.assign({}, queryParams), newQueryParams);
  queryString = formatQueryString(queryParams);
  return queryString;
}
function parseQueryString(queryString) {
  return queryStringUtils.parse(queryString);
}
function formatQueryString(queryParams) {
  return queryStringUtils.stringify(queryParams);
}
var queryStringUtils;
var init_url = __esm({
  "node_modules/@walletconnect/utils/dist/esm/url.js"() {
    queryStringUtils = __toESM(require_query_string());
  }
});

// node_modules/@walletconnect/utils/dist/esm/session.js
function isWalletConnectSession(object) {
  return typeof object.bridge !== "undefined";
}
function parseWalletConnectUri(str) {
  const pathStart = str.indexOf(":");
  const pathEnd = str.indexOf("?") !== -1 ? str.indexOf("?") : void 0;
  const protocol = str.substring(0, pathStart);
  const path = str.substring(pathStart + 1, pathEnd);
  function parseRequiredParams(path2) {
    const separator = "@";
    const values = path2.split(separator);
    const requiredParams2 = {
      handshakeTopic: values[0],
      version: parseInt(values[1], 10)
    };
    return requiredParams2;
  }
  const requiredParams = parseRequiredParams(path);
  const queryString = typeof pathEnd !== "undefined" ? str.substr(pathEnd) : "";
  function parseQueryParams(queryString2) {
    const result2 = parseQueryString(queryString2);
    const parameters = {
      key: result2.key || "",
      bridge: result2.bridge || ""
    };
    return parameters;
  }
  const queryParams = parseQueryParams(queryString);
  const result = Object.assign(Object.assign({ protocol }, requiredParams), queryParams);
  return result;
}
var init_session = __esm({
  "node_modules/@walletconnect/utils/dist/esm/session.js"() {
    init_url();
  }
});

// node_modules/@walletconnect/utils/dist/esm/index.js
var init_esm5 = __esm({
  "node_modules/@walletconnect/utils/dist/esm/index.js"() {
    init_esm3();
    init_constants();
    init_encoding();
    init_ethereum();
    init_misc();
    init_payload();
    init_session();
    init_url();
    init_validators();
  }
});

// node_modules/@walletconnect/socket-transport/dist/esm/network.js
var NetworkMonitor, network_default;
var init_network = __esm({
  "node_modules/@walletconnect/socket-transport/dist/esm/network.js"() {
    NetworkMonitor = class {
      constructor() {
        this._eventEmitters = [];
        if (typeof window !== "undefined" && typeof window.addEventListener !== "undefined") {
          window.addEventListener("online", () => this.trigger("online"));
          window.addEventListener("offline", () => this.trigger("offline"));
        }
      }
      on(event, callback) {
        this._eventEmitters.push({
          event,
          callback
        });
      }
      trigger(event) {
        let eventEmitters = [];
        if (event) {
          eventEmitters = this._eventEmitters.filter((eventEmitter) => eventEmitter.event === event);
        }
        eventEmitters.forEach((eventEmitter) => {
          eventEmitter.callback();
        });
      }
    };
    network_default = NetworkMonitor;
  }
});

// node_modules/@walletconnect/socket-transport/node_modules/ws/browser.js
var require_browser = __commonJS({
  "node_modules/@walletconnect/socket-transport/node_modules/ws/browser.js"(exports, module) {
    "use strict";
    module.exports = function() {
      throw new Error(
        "ws does not work in the browser. Browser clients must use the native WebSocket object"
      );
    };
  }
});

// node_modules/@walletconnect/socket-transport/dist/esm/index.js
function getWebSocketUrl(_url, protocol, version2) {
  var _a, _b;
  const url = _url.startsWith("https") ? _url.replace("https", "wss") : _url.startsWith("http") ? _url.replace("http", "ws") : _url;
  const splitUrl = url.split("?");
  const params = isBrowser() ? {
    protocol,
    version: version2,
    env: "browser",
    host: ((_a = getLocation2()) === null || _a === void 0 ? void 0 : _a.host) || ""
  } : {
    protocol,
    version: version2,
    env: ((_b = detectEnv()) === null || _b === void 0 ? void 0 : _b.name) || ""
  };
  const queryString = appendToQueryString(getQueryString(splitUrl[1] || ""), params);
  return splitUrl[0] + "?" + queryString;
}
var WS, SocketTransport, esm_default;
var init_esm6 = __esm({
  "node_modules/@walletconnect/socket-transport/dist/esm/index.js"() {
    init_esm5();
    init_network();
    WS = typeof global.WebSocket !== "undefined" ? global.WebSocket : require_browser();
    SocketTransport = class {
      constructor(opts) {
        this.opts = opts;
        this._queue = [];
        this._events = [];
        this._subscriptions = [];
        this._protocol = opts.protocol;
        this._version = opts.version;
        this._url = "";
        this._netMonitor = null;
        this._socket = null;
        this._nextSocket = null;
        this._subscriptions = opts.subscriptions || [];
        this._netMonitor = opts.netMonitor || new network_default();
        if (!opts.url || typeof opts.url !== "string") {
          throw new Error("Missing or invalid WebSocket url");
        }
        this._url = opts.url;
        this._netMonitor.on("online", () => this._socketCreate());
      }
      set readyState(value) {
      }
      get readyState() {
        return this._socket ? this._socket.readyState : -1;
      }
      set connecting(value) {
      }
      get connecting() {
        return this.readyState === 0;
      }
      set connected(value) {
      }
      get connected() {
        return this.readyState === 1;
      }
      set closing(value) {
      }
      get closing() {
        return this.readyState === 2;
      }
      set closed(value) {
      }
      get closed() {
        return this.readyState === 3;
      }
      open() {
        this._socketCreate();
      }
      close() {
        this._socketClose();
      }
      send(message, topic, silent) {
        if (!topic || typeof topic !== "string") {
          throw new Error("Missing or invalid topic field");
        }
        this._socketSend({
          topic,
          type: "pub",
          payload: message,
          silent: !!silent
        });
      }
      subscribe(topic) {
        this._socketSend({
          topic,
          type: "sub",
          payload: "",
          silent: true
        });
      }
      on(event, callback) {
        this._events.push({ event, callback });
      }
      _socketCreate() {
        if (this._nextSocket) {
          return;
        }
        const url = getWebSocketUrl(this._url, this._protocol, this._version);
        this._nextSocket = new WS(url);
        if (!this._nextSocket) {
          throw new Error("Failed to create socket");
        }
        this._nextSocket.onmessage = (event) => this._socketReceive(event);
        this._nextSocket.onopen = () => this._socketOpen();
        this._nextSocket.onerror = (event) => this._socketError(event);
        this._nextSocket.onclose = () => {
          setTimeout(() => {
            this._nextSocket = null;
            this._socketCreate();
          }, 1e3);
        };
      }
      _socketOpen() {
        this._socketClose();
        this._socket = this._nextSocket;
        this._nextSocket = null;
        this._queueSubscriptions();
        this._pushQueue();
      }
      _socketClose() {
        if (this._socket) {
          this._socket.onclose = () => {
          };
          this._socket.close();
        }
      }
      _socketSend(socketMessage) {
        const message = JSON.stringify(socketMessage);
        if (this._socket && this._socket.readyState === 1) {
          this._socket.send(message);
        } else {
          this._setToQueue(socketMessage);
          this._socketCreate();
        }
      }
      async _socketReceive(event) {
        let socketMessage;
        try {
          socketMessage = JSON.parse(event.data);
        } catch (error) {
          return;
        }
        this._socketSend({
          topic: socketMessage.topic,
          type: "ack",
          payload: "",
          silent: true
        });
        if (this._socket && this._socket.readyState === 1) {
          const events = this._events.filter((event2) => event2.event === "message");
          if (events && events.length) {
            events.forEach((event2) => event2.callback(socketMessage));
          }
        }
      }
      _socketError(e) {
        const events = this._events.filter((event) => event.event === "error");
        if (events && events.length) {
          events.forEach((event) => event.callback(e));
        }
      }
      _queueSubscriptions() {
        const subscriptions = this._subscriptions;
        subscriptions.forEach((topic) => this._queue.push({
          topic,
          type: "sub",
          payload: "",
          silent: true
        }));
        this._subscriptions = this.opts.subscriptions || [];
      }
      _setToQueue(socketMessage) {
        this._queue.push(socketMessage);
      }
      _pushQueue() {
        const queue = this._queue;
        queue.forEach((socketMessage) => this._socketSend(socketMessage));
        this._queue = [];
      }
    };
    esm_default = SocketTransport;
  }
});

// node_modules/@walletconnect/core/dist/esm/errors.js
var ERROR_SESSION_CONNECTED, ERROR_SESSION_DISCONNECTED, ERROR_SESSION_REJECTED, ERROR_MISSING_JSON_RPC, ERROR_MISSING_RESULT, ERROR_MISSING_ERROR, ERROR_MISSING_METHOD, ERROR_MISSING_ID, ERROR_MISSING_REQUIRED, ERROR_INVALID_RESPONSE, ERROR_INVALID_URI, ERROR_QRCODE_MODAL_NOT_PROVIDED, ERROR_QRCODE_MODAL_USER_CLOSED;
var init_errors = __esm({
  "node_modules/@walletconnect/core/dist/esm/errors.js"() {
    ERROR_SESSION_CONNECTED = "Session currently connected";
    ERROR_SESSION_DISCONNECTED = "Session currently disconnected";
    ERROR_SESSION_REJECTED = "Session Rejected";
    ERROR_MISSING_JSON_RPC = "Missing JSON RPC response";
    ERROR_MISSING_RESULT = `JSON-RPC success response must include "result" field`;
    ERROR_MISSING_ERROR = `JSON-RPC error response must include "error" field`;
    ERROR_MISSING_METHOD = `JSON RPC request must have valid "method" value`;
    ERROR_MISSING_ID = `JSON RPC request must have valid "id" value`;
    ERROR_MISSING_REQUIRED = "Missing one of the required parameters: bridge / uri / session";
    ERROR_INVALID_RESPONSE = "JSON RPC response format is invalid";
    ERROR_INVALID_URI = "URI format is invalid";
    ERROR_QRCODE_MODAL_NOT_PROVIDED = "QRCode Modal not provided";
    ERROR_QRCODE_MODAL_USER_CLOSED = "User close QRCode Modal";
  }
});

// node_modules/@walletconnect/core/dist/esm/events.js
var EventManager, events_default;
var init_events = __esm({
  "node_modules/@walletconnect/core/dist/esm/events.js"() {
    init_esm5();
    EventManager = class {
      constructor() {
        this._eventEmitters = [];
      }
      subscribe(eventEmitter) {
        this._eventEmitters.push(eventEmitter);
      }
      unsubscribe(event) {
        this._eventEmitters = this._eventEmitters.filter((x) => x.event !== event);
      }
      trigger(payload) {
        let eventEmitters = [];
        let event;
        if (isJsonRpcRequest(payload)) {
          event = payload.method;
        } else if (isJsonRpcResponseSuccess(payload) || isJsonRpcResponseError(payload)) {
          event = `response:${payload.id}`;
        } else if (isInternalEvent(payload)) {
          event = payload.event;
        } else {
          event = "";
        }
        if (event) {
          eventEmitters = this._eventEmitters.filter((eventEmitter) => eventEmitter.event === event);
        }
        if ((!eventEmitters || !eventEmitters.length) && !isReservedEvent(event) && !isInternalEvent(event)) {
          eventEmitters = this._eventEmitters.filter((eventEmitter) => eventEmitter.event === "call_request");
        }
        eventEmitters.forEach((eventEmitter) => {
          if (isJsonRpcResponseError(payload)) {
            const error = new Error(payload.error.message);
            eventEmitter.callback(error, null);
          } else {
            eventEmitter.callback(null, payload);
          }
        });
      }
    };
    events_default = EventManager;
  }
});

// node_modules/@walletconnect/core/dist/esm/storage.js
var SessionStorage, storage_default;
var init_storage = __esm({
  "node_modules/@walletconnect/core/dist/esm/storage.js"() {
    init_esm5();
    SessionStorage = class {
      constructor(storageId = "walletconnect") {
        this.storageId = storageId;
      }
      getSession() {
        let session = null;
        const json = getLocal(this.storageId);
        if (json && isWalletConnectSession(json)) {
          session = json;
        }
        return session;
      }
      setSession(session) {
        setLocal(this.storageId, session);
        return session;
      }
      removeSession() {
        removeLocal(this.storageId);
      }
    };
    storage_default = SessionStorage;
  }
});

// node_modules/@walletconnect/core/dist/esm/url.js
function extractHostname(url) {
  let hostname = url.indexOf("//") > -1 ? url.split("/")[2] : url.split("/")[0];
  hostname = hostname.split(":")[0];
  hostname = hostname.split("?")[0];
  return hostname;
}
function extractRootDomain(url) {
  return extractHostname(url).split(".").slice(-2).join(".");
}
function randomBridgeIndex() {
  return Math.floor(Math.random() * bridges.length);
}
function selectRandomBridgeUrl() {
  return bridges[randomBridgeIndex()];
}
function shouldSelectRandomly(url) {
  return extractRootDomain(url) === domain;
}
function getBridgeUrl(url) {
  if (shouldSelectRandomly(url)) {
    return selectRandomBridgeUrl();
  }
  return url;
}
var domain, alphanumerical, bridges;
var init_url2 = __esm({
  "node_modules/@walletconnect/core/dist/esm/url.js"() {
    domain = "walletconnect.org";
    alphanumerical = "abcdefghijklmnopqrstuvwxyz0123456789";
    bridges = alphanumerical.split("").map((char) => `https://${char}.bridge.walletconnect.org`);
  }
});

// node_modules/@walletconnect/core/dist/esm/index.js
var Connector, esm_default2;
var init_esm7 = __esm({
  "node_modules/@walletconnect/core/dist/esm/index.js"() {
    init_esm5();
    init_esm6();
    init_errors();
    init_events();
    init_storage();
    init_url2();
    Connector = class {
      constructor(opts) {
        this.protocol = "wc";
        this.version = 1;
        this._bridge = "";
        this._key = null;
        this._clientId = "";
        this._clientMeta = null;
        this._peerId = "";
        this._peerMeta = null;
        this._handshakeId = 0;
        this._handshakeTopic = "";
        this._connected = false;
        this._accounts = [];
        this._chainId = 0;
        this._networkId = 0;
        this._rpcUrl = "";
        this._eventManager = new events_default();
        this._clientMeta = getClientMeta() || opts.connectorOpts.clientMeta || null;
        this._cryptoLib = opts.cryptoLib;
        this._sessionStorage = opts.sessionStorage || new storage_default(opts.connectorOpts.storageId);
        this._qrcodeModal = opts.connectorOpts.qrcodeModal;
        this._qrcodeModalOptions = opts.connectorOpts.qrcodeModalOptions;
        this._signingMethods = [...signingMethods, ...opts.connectorOpts.signingMethods || []];
        if (!opts.connectorOpts.bridge && !opts.connectorOpts.uri && !opts.connectorOpts.session) {
          throw new Error(ERROR_MISSING_REQUIRED);
        }
        if (opts.connectorOpts.bridge) {
          this.bridge = getBridgeUrl(opts.connectorOpts.bridge);
        }
        if (opts.connectorOpts.uri) {
          this.uri = opts.connectorOpts.uri;
        }
        const session = opts.connectorOpts.session || this._getStorageSession();
        if (session) {
          this.session = session;
        }
        if (this.handshakeId) {
          this._subscribeToSessionResponse(this.handshakeId, "Session request rejected");
        }
        this._transport = opts.transport || new esm_default({
          protocol: this.protocol,
          version: this.version,
          url: this.bridge,
          subscriptions: [this.clientId]
        });
        this._subscribeToInternalEvents();
        this._initTransport();
        if (opts.connectorOpts.uri) {
          this._subscribeToSessionRequest();
        }
        if (opts.pushServerOpts) {
          this._registerPushServer(opts.pushServerOpts);
        }
      }
      set bridge(value) {
        if (!value) {
          return;
        }
        this._bridge = value;
      }
      get bridge() {
        return this._bridge;
      }
      set key(value) {
        if (!value) {
          return;
        }
        const key = convertHexToArrayBuffer(value);
        this._key = key;
      }
      get key() {
        if (this._key) {
          const key = convertArrayBufferToHex(this._key, true);
          return key;
        }
        return "";
      }
      set clientId(value) {
        if (!value) {
          return;
        }
        this._clientId = value;
      }
      get clientId() {
        let clientId = this._clientId;
        if (!clientId) {
          clientId = this._clientId = uuid();
        }
        return this._clientId;
      }
      set peerId(value) {
        if (!value) {
          return;
        }
        this._peerId = value;
      }
      get peerId() {
        return this._peerId;
      }
      set clientMeta(value) {
      }
      get clientMeta() {
        let clientMeta = this._clientMeta;
        if (!clientMeta) {
          clientMeta = this._clientMeta = getClientMeta();
        }
        return clientMeta;
      }
      set peerMeta(value) {
        this._peerMeta = value;
      }
      get peerMeta() {
        const peerMeta = this._peerMeta;
        return peerMeta;
      }
      set handshakeTopic(value) {
        if (!value) {
          return;
        }
        this._handshakeTopic = value;
      }
      get handshakeTopic() {
        return this._handshakeTopic;
      }
      set handshakeId(value) {
        if (!value) {
          return;
        }
        this._handshakeId = value;
      }
      get handshakeId() {
        return this._handshakeId;
      }
      get uri() {
        const _uri = this._formatUri();
        return _uri;
      }
      set uri(value) {
        if (!value) {
          return;
        }
        const { handshakeTopic, bridge, key } = this._parseUri(value);
        this.handshakeTopic = handshakeTopic;
        this.bridge = bridge;
        this.key = key;
      }
      set chainId(value) {
        this._chainId = value;
      }
      get chainId() {
        const chainId = this._chainId;
        return chainId;
      }
      set networkId(value) {
        this._networkId = value;
      }
      get networkId() {
        const networkId = this._networkId;
        return networkId;
      }
      set accounts(value) {
        this._accounts = value;
      }
      get accounts() {
        const accounts = this._accounts;
        return accounts;
      }
      set rpcUrl(value) {
        this._rpcUrl = value;
      }
      get rpcUrl() {
        const rpcUrl = this._rpcUrl;
        return rpcUrl;
      }
      set connected(value) {
      }
      get connected() {
        return this._connected;
      }
      set pending(value) {
      }
      get pending() {
        return !!this._handshakeTopic;
      }
      get session() {
        return {
          connected: this.connected,
          accounts: this.accounts,
          chainId: this.chainId,
          bridge: this.bridge,
          key: this.key,
          clientId: this.clientId,
          clientMeta: this.clientMeta,
          peerId: this.peerId,
          peerMeta: this.peerMeta,
          handshakeId: this.handshakeId,
          handshakeTopic: this.handshakeTopic
        };
      }
      set session(value) {
        if (!value) {
          return;
        }
        this._connected = value.connected;
        this.accounts = value.accounts;
        this.chainId = value.chainId;
        this.bridge = value.bridge;
        this.key = value.key;
        this.clientId = value.clientId;
        this.clientMeta = value.clientMeta;
        this.peerId = value.peerId;
        this.peerMeta = value.peerMeta;
        this.handshakeId = value.handshakeId;
        this.handshakeTopic = value.handshakeTopic;
      }
      on(event, callback) {
        const eventEmitter = {
          event,
          callback
        };
        this._eventManager.subscribe(eventEmitter);
      }
      off(event) {
        this._eventManager.unsubscribe(event);
      }
      async createInstantRequest(instantRequest) {
        this._key = await this._generateKey();
        const request = this._formatRequest({
          method: "wc_instantRequest",
          params: [
            {
              peerId: this.clientId,
              peerMeta: this.clientMeta,
              request: this._formatRequest(instantRequest)
            }
          ]
        });
        this.handshakeId = request.id;
        this.handshakeTopic = uuid();
        this._eventManager.trigger({
          event: "display_uri",
          params: [this.uri]
        });
        this.on("modal_closed", () => {
          throw new Error(ERROR_QRCODE_MODAL_USER_CLOSED);
        });
        const endInstantRequest = () => {
          this.killSession();
        };
        try {
          const result = await this._sendCallRequest(request);
          if (result) {
            endInstantRequest();
          }
          return result;
        } catch (error) {
          endInstantRequest();
          throw error;
        }
      }
      async connect(opts) {
        if (!this._qrcodeModal) {
          throw new Error(ERROR_QRCODE_MODAL_NOT_PROVIDED);
        }
        if (this.connected) {
          return {
            chainId: this.chainId,
            accounts: this.accounts
          };
        }
        await this.createSession(opts);
        return new Promise(async (resolve, reject) => {
          this.on("modal_closed", () => reject(new Error(ERROR_QRCODE_MODAL_USER_CLOSED)));
          this.on("connect", (error, payload) => {
            if (error) {
              return reject(error);
            }
            resolve(payload.params[0]);
          });
        });
      }
      async createSession(opts) {
        if (this._connected) {
          throw new Error(ERROR_SESSION_CONNECTED);
        }
        if (this.pending) {
          return;
        }
        this._key = await this._generateKey();
        const request = this._formatRequest({
          method: "wc_sessionRequest",
          params: [
            {
              peerId: this.clientId,
              peerMeta: this.clientMeta,
              chainId: opts && opts.chainId ? opts.chainId : null
            }
          ]
        });
        this.handshakeId = request.id;
        this.handshakeTopic = uuid();
        this._sendSessionRequest(request, "Session update rejected", {
          topic: this.handshakeTopic
        });
        this._eventManager.trigger({
          event: "display_uri",
          params: [this.uri]
        });
      }
      approveSession(sessionStatus) {
        if (this._connected) {
          throw new Error(ERROR_SESSION_CONNECTED);
        }
        this.chainId = sessionStatus.chainId;
        this.accounts = sessionStatus.accounts;
        this.networkId = sessionStatus.networkId || 0;
        this.rpcUrl = sessionStatus.rpcUrl || "";
        const sessionParams = {
          approved: true,
          chainId: this.chainId,
          networkId: this.networkId,
          accounts: this.accounts,
          rpcUrl: this.rpcUrl,
          peerId: this.clientId,
          peerMeta: this.clientMeta
        };
        const response = {
          id: this.handshakeId,
          jsonrpc: "2.0",
          result: sessionParams
        };
        this._sendResponse(response);
        this._connected = true;
        this._setStorageSession();
        this._eventManager.trigger({
          event: "connect",
          params: [
            {
              peerId: this.peerId,
              peerMeta: this.peerMeta,
              chainId: this.chainId,
              accounts: this.accounts
            }
          ]
        });
      }
      rejectSession(sessionError) {
        if (this._connected) {
          throw new Error(ERROR_SESSION_CONNECTED);
        }
        const message = sessionError && sessionError.message ? sessionError.message : ERROR_SESSION_REJECTED;
        const response = this._formatResponse({
          id: this.handshakeId,
          error: { message }
        });
        this._sendResponse(response);
        this._connected = false;
        this._eventManager.trigger({
          event: "disconnect",
          params: [{ message }]
        });
        this._removeStorageSession();
      }
      updateSession(sessionStatus) {
        if (!this._connected) {
          throw new Error(ERROR_SESSION_DISCONNECTED);
        }
        this.chainId = sessionStatus.chainId;
        this.accounts = sessionStatus.accounts;
        this.networkId = sessionStatus.networkId || 0;
        this.rpcUrl = sessionStatus.rpcUrl || "";
        const sessionParams = {
          approved: true,
          chainId: this.chainId,
          networkId: this.networkId,
          accounts: this.accounts,
          rpcUrl: this.rpcUrl
        };
        const request = this._formatRequest({
          method: "wc_sessionUpdate",
          params: [sessionParams]
        });
        this._sendSessionRequest(request, "Session update rejected");
        this._eventManager.trigger({
          event: "session_update",
          params: [
            {
              chainId: this.chainId,
              accounts: this.accounts
            }
          ]
        });
        this._manageStorageSession();
      }
      async killSession(sessionError) {
        const message = sessionError ? sessionError.message : "Session Disconnected";
        const sessionParams = {
          approved: false,
          chainId: null,
          networkId: null,
          accounts: null
        };
        const request = this._formatRequest({
          method: "wc_sessionUpdate",
          params: [sessionParams]
        });
        await this._sendRequest(request);
        this._handleSessionDisconnect(message);
      }
      async sendTransaction(tx) {
        if (!this._connected) {
          throw new Error(ERROR_SESSION_DISCONNECTED);
        }
        const parsedTx = parseTransactionData(tx);
        const request = this._formatRequest({
          method: "eth_sendTransaction",
          params: [parsedTx]
        });
        const result = await this._sendCallRequest(request);
        return result;
      }
      async signTransaction(tx) {
        if (!this._connected) {
          throw new Error(ERROR_SESSION_DISCONNECTED);
        }
        const parsedTx = parseTransactionData(tx);
        const request = this._formatRequest({
          method: "eth_signTransaction",
          params: [parsedTx]
        });
        const result = await this._sendCallRequest(request);
        return result;
      }
      async signMessage(params) {
        if (!this._connected) {
          throw new Error(ERROR_SESSION_DISCONNECTED);
        }
        const request = this._formatRequest({
          method: "eth_sign",
          params
        });
        const result = await this._sendCallRequest(request);
        return result;
      }
      async signPersonalMessage(params) {
        if (!this._connected) {
          throw new Error(ERROR_SESSION_DISCONNECTED);
        }
        params = parsePersonalSign(params);
        const request = this._formatRequest({
          method: "personal_sign",
          params
        });
        const result = await this._sendCallRequest(request);
        return result;
      }
      async signTypedData(params) {
        if (!this._connected) {
          throw new Error(ERROR_SESSION_DISCONNECTED);
        }
        const request = this._formatRequest({
          method: "eth_signTypedData",
          params
        });
        const result = await this._sendCallRequest(request);
        return result;
      }
      async updateChain(chainParams) {
        if (!this._connected) {
          throw new Error("Session currently disconnected");
        }
        const request = this._formatRequest({
          method: "wallet_updateChain",
          params: [chainParams]
        });
        const result = await this._sendCallRequest(request);
        return result;
      }
      unsafeSend(request, options) {
        this._sendRequest(request, options);
        this._eventManager.trigger({
          event: "call_request_sent",
          params: [{ request, options }]
        });
        return new Promise((resolve, reject) => {
          this._subscribeToResponse(request.id, (error, payload) => {
            if (error) {
              reject(error);
              return;
            }
            if (!payload) {
              throw new Error(ERROR_MISSING_JSON_RPC);
            }
            resolve(payload);
          });
        });
      }
      async sendCustomRequest(request, options) {
        if (!this._connected) {
          throw new Error(ERROR_SESSION_DISCONNECTED);
        }
        switch (request.method) {
          case "eth_accounts":
            return this.accounts;
          case "eth_chainId":
            return convertNumberToHex(this.chainId);
          case "eth_sendTransaction":
          case "eth_signTransaction":
            if (request.params) {
              request.params[0] = parseTransactionData(request.params[0]);
            }
            break;
          case "personal_sign":
            if (request.params) {
              request.params = parsePersonalSign(request.params);
            }
            break;
          default:
            break;
        }
        const formattedRequest = this._formatRequest(request);
        const result = await this._sendCallRequest(formattedRequest, options);
        return result;
      }
      approveRequest(response) {
        if (isJsonRpcResponseSuccess(response)) {
          const formattedResponse = this._formatResponse(response);
          this._sendResponse(formattedResponse);
        } else {
          throw new Error(ERROR_MISSING_RESULT);
        }
      }
      rejectRequest(response) {
        if (isJsonRpcResponseError(response)) {
          const formattedResponse = this._formatResponse(response);
          this._sendResponse(formattedResponse);
        } else {
          throw new Error(ERROR_MISSING_ERROR);
        }
      }
      transportClose() {
        this._transport.close();
      }
      async _sendRequest(request, options) {
        const callRequest = this._formatRequest(request);
        const encryptionPayload = await this._encrypt(callRequest);
        const topic = typeof (options === null || options === void 0 ? void 0 : options.topic) !== "undefined" ? options.topic : this.peerId;
        const payload = JSON.stringify(encryptionPayload);
        const silent = typeof (options === null || options === void 0 ? void 0 : options.forcePushNotification) !== "undefined" ? !options.forcePushNotification : isSilentPayload(callRequest);
        this._transport.send(payload, topic, silent);
      }
      async _sendResponse(response) {
        const encryptionPayload = await this._encrypt(response);
        const topic = this.peerId;
        const payload = JSON.stringify(encryptionPayload);
        const silent = true;
        this._transport.send(payload, topic, silent);
      }
      async _sendSessionRequest(request, errorMsg, options) {
        this._sendRequest(request, options);
        this._subscribeToSessionResponse(request.id, errorMsg);
      }
      _sendCallRequest(request, options) {
        this._sendRequest(request, options);
        this._eventManager.trigger({
          event: "call_request_sent",
          params: [{ request, options }]
        });
        return this._subscribeToCallResponse(request.id);
      }
      _formatRequest(request) {
        if (typeof request.method === "undefined") {
          throw new Error(ERROR_MISSING_METHOD);
        }
        const formattedRequest = {
          id: typeof request.id === "undefined" ? payloadId2() : request.id,
          jsonrpc: "2.0",
          method: request.method,
          params: typeof request.params === "undefined" ? [] : request.params
        };
        return formattedRequest;
      }
      _formatResponse(response) {
        if (typeof response.id === "undefined") {
          throw new Error(ERROR_MISSING_ID);
        }
        const baseResponse = { id: response.id, jsonrpc: "2.0" };
        if (isJsonRpcResponseError(response)) {
          const error = formatRpcError(response.error);
          const errorResponse = Object.assign(Object.assign(Object.assign({}, baseResponse), response), { error });
          return errorResponse;
        } else if (isJsonRpcResponseSuccess(response)) {
          const successResponse = Object.assign(Object.assign({}, baseResponse), response);
          return successResponse;
        }
        throw new Error(ERROR_INVALID_RESPONSE);
      }
      _handleSessionDisconnect(errorMsg) {
        const message = errorMsg || "Session Disconnected";
        if (!this._connected) {
          if (this._qrcodeModal) {
            this._qrcodeModal.close();
          }
          removeLocal(mobileLinkChoiceKey);
        }
        if (this._connected) {
          this._connected = false;
        }
        if (this._handshakeId) {
          this._handshakeId = 0;
        }
        if (this._handshakeTopic) {
          this._handshakeTopic = "";
        }
        if (this._peerId) {
          this._peerId = "";
        }
        this._eventManager.trigger({
          event: "disconnect",
          params: [{ message }]
        });
        this._removeStorageSession();
        this.transportClose();
      }
      _handleSessionResponse(errorMsg, sessionParams) {
        if (sessionParams) {
          if (sessionParams.approved) {
            if (!this._connected) {
              this._connected = true;
              if (sessionParams.chainId) {
                this.chainId = sessionParams.chainId;
              }
              if (sessionParams.accounts) {
                this.accounts = sessionParams.accounts;
              }
              if (sessionParams.peerId && !this.peerId) {
                this.peerId = sessionParams.peerId;
              }
              if (sessionParams.peerMeta && !this.peerMeta) {
                this.peerMeta = sessionParams.peerMeta;
              }
              this._eventManager.trigger({
                event: "connect",
                params: [
                  {
                    peerId: this.peerId,
                    peerMeta: this.peerMeta,
                    chainId: this.chainId,
                    accounts: this.accounts
                  }
                ]
              });
            } else {
              if (sessionParams.chainId) {
                this.chainId = sessionParams.chainId;
              }
              if (sessionParams.accounts) {
                this.accounts = sessionParams.accounts;
              }
              this._eventManager.trigger({
                event: "session_update",
                params: [
                  {
                    chainId: this.chainId,
                    accounts: this.accounts
                  }
                ]
              });
            }
            this._manageStorageSession();
          } else {
            this._handleSessionDisconnect(errorMsg);
          }
        } else {
          this._handleSessionDisconnect(errorMsg);
        }
      }
      async _handleIncomingMessages(socketMessage) {
        const activeTopics = [this.clientId, this.handshakeTopic];
        if (!activeTopics.includes(socketMessage.topic)) {
          return;
        }
        let encryptionPayload;
        try {
          encryptionPayload = JSON.parse(socketMessage.payload);
        } catch (error) {
          return;
        }
        const payload = await this._decrypt(encryptionPayload);
        if (payload) {
          this._eventManager.trigger(payload);
        }
      }
      _subscribeToSessionRequest() {
        this._transport.subscribe(this.handshakeTopic);
      }
      _subscribeToResponse(id, callback) {
        this.on(`response:${id}`, callback);
      }
      _subscribeToSessionResponse(id, errorMsg) {
        this._subscribeToResponse(id, (error, payload) => {
          if (error) {
            this._handleSessionResponse(error.message);
            return;
          }
          if (isJsonRpcResponseSuccess(payload)) {
            this._handleSessionResponse(errorMsg, payload.result);
          } else if (payload.error && payload.error.message) {
            this._handleSessionResponse(payload.error.message);
          } else {
            this._handleSessionResponse(errorMsg);
          }
        });
      }
      _subscribeToCallResponse(id) {
        return new Promise((resolve, reject) => {
          this._subscribeToResponse(id, (error, payload) => {
            if (error) {
              reject(error);
              return;
            }
            if (isJsonRpcResponseSuccess(payload)) {
              resolve(payload.result);
            } else if (payload.error && payload.error.message) {
              reject(payload.error);
            } else {
              reject(new Error(ERROR_INVALID_RESPONSE));
            }
          });
        });
      }
      _subscribeToInternalEvents() {
        this.on("display_uri", () => {
          if (this._qrcodeModal) {
            this._qrcodeModal.open(this.uri, () => {
              this._eventManager.trigger({
                event: "modal_closed",
                params: []
              });
            }, this._qrcodeModalOptions);
          }
        });
        this.on("connect", () => {
          if (this._qrcodeModal) {
            this._qrcodeModal.close();
          }
        });
        this.on("call_request_sent", (error, payload) => {
          const { request } = payload.params[0];
          if (isMobile() && this._signingMethods.includes(request.method)) {
            const mobileLinkUrl = getLocal(mobileLinkChoiceKey);
            if (mobileLinkUrl) {
              window.location.href = mobileLinkUrl.href;
            }
          }
        });
        this.on("wc_sessionRequest", (error, payload) => {
          if (error) {
            this._eventManager.trigger({
              event: "error",
              params: [
                {
                  code: "SESSION_REQUEST_ERROR",
                  message: error.toString()
                }
              ]
            });
          }
          this.handshakeId = payload.id;
          this.peerId = payload.params[0].peerId;
          this.peerMeta = payload.params[0].peerMeta;
          const internalPayload = Object.assign(Object.assign({}, payload), { method: "session_request" });
          this._eventManager.trigger(internalPayload);
        });
        this.on("wc_sessionUpdate", (error, payload) => {
          if (error) {
            this._handleSessionResponse(error.message);
          }
          this._handleSessionResponse("Session disconnected", payload.params[0]);
        });
      }
      _initTransport() {
        this._transport.on("message", (socketMessage) => this._handleIncomingMessages(socketMessage));
        this._transport.on("open", () => this._eventManager.trigger({ event: "transport_open", params: [] }));
        this._transport.on("close", () => this._eventManager.trigger({ event: "transport_close", params: [] }));
        this._transport.on("error", () => this._eventManager.trigger({
          event: "transport_error",
          params: ["Websocket connection failed"]
        }));
        this._transport.open();
      }
      _formatUri() {
        const protocol = this.protocol;
        const handshakeTopic = this.handshakeTopic;
        const version2 = this.version;
        const bridge = encodeURIComponent(this.bridge);
        const key = this.key;
        const uri = `${protocol}:${handshakeTopic}@${version2}?bridge=${bridge}&key=${key}`;
        return uri;
      }
      _parseUri(uri) {
        const result = parseWalletConnectUri(uri);
        if (result.protocol === this.protocol) {
          if (!result.handshakeTopic) {
            throw Error("Invalid or missing handshakeTopic parameter value");
          }
          const handshakeTopic = result.handshakeTopic;
          if (!result.bridge) {
            throw Error("Invalid or missing bridge url parameter value");
          }
          const bridge = decodeURIComponent(result.bridge);
          if (!result.key) {
            throw Error("Invalid or missing key parameter value");
          }
          const key = result.key;
          return { handshakeTopic, bridge, key };
        } else {
          throw new Error(ERROR_INVALID_URI);
        }
      }
      async _generateKey() {
        if (this._cryptoLib) {
          const result = await this._cryptoLib.generateKey();
          return result;
        }
        return null;
      }
      async _encrypt(data) {
        const key = this._key;
        if (this._cryptoLib && key) {
          const result = await this._cryptoLib.encrypt(data, key);
          return result;
        }
        return null;
      }
      async _decrypt(payload) {
        const key = this._key;
        if (this._cryptoLib && key) {
          const result = await this._cryptoLib.decrypt(payload, key);
          return result;
        }
        return null;
      }
      _getStorageSession() {
        let result = null;
        if (this._sessionStorage) {
          result = this._sessionStorage.getSession();
        }
        return result;
      }
      _setStorageSession() {
        if (this._sessionStorage) {
          this._sessionStorage.setSession(this.session);
        }
      }
      _removeStorageSession() {
        if (this._sessionStorage) {
          this._sessionStorage.removeSession();
        }
      }
      _manageStorageSession() {
        if (this._connected) {
          this._setStorageSession();
        } else {
          this._removeStorageSession();
        }
      }
      _registerPushServer(pushServerOpts) {
        if (!pushServerOpts.url || typeof pushServerOpts.url !== "string") {
          throw Error("Invalid or missing pushServerOpts.url parameter value");
        }
        if (!pushServerOpts.type || typeof pushServerOpts.type !== "string") {
          throw Error("Invalid or missing pushServerOpts.type parameter value");
        }
        if (!pushServerOpts.token || typeof pushServerOpts.token !== "string") {
          throw Error("Invalid or missing pushServerOpts.token parameter value");
        }
        const pushSubscription = {
          bridge: this.bridge,
          topic: this.clientId,
          type: pushServerOpts.type,
          token: pushServerOpts.token,
          peerName: "",
          language: pushServerOpts.language || ""
        };
        this.on("connect", async (error, payload) => {
          if (error) {
            throw error;
          }
          if (pushServerOpts.peerMeta) {
            const peerName = payload.params[0].peerMeta.name;
            pushSubscription.peerName = peerName;
          }
          try {
            const response = await fetch(`${pushServerOpts.url}/new`, {
              method: "POST",
              headers: {
                Accept: "application/json",
                "Content-Type": "application/json"
              },
              body: JSON.stringify(pushSubscription)
            });
            const json = await response.json();
            if (!json.success) {
              throw Error("Failed to register in Push Server");
            }
          } catch (error2) {
            throw Error("Failed to register in Push Server");
          }
        });
      }
    };
    esm_default2 = Connector;
  }
});

// node_modules/@walletconnect/randombytes/dist/esm/browser/index.js
function randomBytes(length) {
  const browserCrypto = env.getBrowerCrypto();
  return browserCrypto.getRandomValues(new Uint8Array(length));
}
var env;
var init_browser2 = __esm({
  "node_modules/@walletconnect/randombytes/dist/esm/browser/index.js"() {
    env = __toESM(require_cjs());
  }
});

// node_modules/@walletconnect/crypto/dist/esm/constants/length.js
var LENGTH_0, LENGTH_1, LENGTH_16, LENGTH_32, LENGTH_64, LENGTH_128, LENGTH_256, LENGTH_512, LENGTH_1024;
var init_length = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/constants/length.js"() {
    LENGTH_0 = 0;
    LENGTH_1 = 1;
    LENGTH_16 = 16;
    LENGTH_32 = 32;
    LENGTH_64 = 64;
    LENGTH_128 = 128;
    LENGTH_256 = 256;
    LENGTH_512 = 512;
    LENGTH_1024 = 1024;
  }
});

// node_modules/@walletconnect/crypto/dist/esm/constants/default.js
var AES_LENGTH, HMAC_LENGTH, AES_BROWSER_ALGO, HMAC_BROWSER_ALGO, HMAC_BROWSER, SHA256_BROWSER_ALGO, SHA512_BROWSER_ALGO, AES_NODE_ALGO, HMAC_NODE_ALGO, SHA256_NODE_ALGO, SHA512_NODE_ALGO, RIPEMD160_NODE_ALGO, PREFIX_LENGTH, KEY_LENGTH, IV_LENGTH, MAC_LENGTH;
var init_default = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/constants/default.js"() {
    init_length();
    AES_LENGTH = LENGTH_256;
    HMAC_LENGTH = LENGTH_256;
    AES_BROWSER_ALGO = "AES-CBC";
    HMAC_BROWSER_ALGO = `SHA-${AES_LENGTH}`;
    HMAC_BROWSER = "HMAC";
    SHA256_BROWSER_ALGO = "SHA-256";
    SHA512_BROWSER_ALGO = "SHA-512";
    AES_NODE_ALGO = `aes-${AES_LENGTH}-cbc`;
    HMAC_NODE_ALGO = `sha${HMAC_LENGTH}`;
    SHA256_NODE_ALGO = "sha256";
    SHA512_NODE_ALGO = "sha512";
    RIPEMD160_NODE_ALGO = "ripemd160";
    PREFIX_LENGTH = LENGTH_1;
    KEY_LENGTH = LENGTH_32;
    IV_LENGTH = LENGTH_16;
    MAC_LENGTH = LENGTH_32;
  }
});

// node_modules/@walletconnect/crypto/dist/esm/constants/encoding.js
var HEX_ENC, UTF8_ENC;
var init_encoding2 = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/constants/encoding.js"() {
    HEX_ENC = "hex";
    UTF8_ENC = "utf8";
  }
});

// node_modules/@walletconnect/crypto/dist/esm/constants/error.js
var ERROR_BAD_MAC;
var init_error = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/constants/error.js"() {
    ERROR_BAD_MAC = "Bad MAC";
  }
});

// node_modules/@walletconnect/crypto/dist/esm/constants/operations.js
var ENCRYPT_OP, DECRYPT_OP, SIGN_OP, VERIFY_OP;
var init_operations = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/constants/operations.js"() {
    ENCRYPT_OP = "encrypt";
    DECRYPT_OP = "decrypt";
    SIGN_OP = "sign";
    VERIFY_OP = "verify";
  }
});

// node_modules/@walletconnect/crypto/dist/esm/constants/index.js
var init_constants2 = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/constants/index.js"() {
    init_default();
    init_encoding2();
    init_error();
    init_length();
    init_operations();
  }
});

// node_modules/@walletconnect/crypto/dist/esm/lib/browser.js
function getAlgo(type) {
  return type === AES_BROWSER_ALGO ? { length: AES_LENGTH, name: AES_BROWSER_ALGO } : {
    hash: { name: HMAC_BROWSER_ALGO },
    name: HMAC_BROWSER
  };
}
function getOps(type) {
  return type === AES_BROWSER_ALGO ? [ENCRYPT_OP, DECRYPT_OP] : [SIGN_OP, VERIFY_OP];
}
async function browserImportKey(buffer, type = AES_BROWSER_ALGO) {
  return env2.getSubtleCrypto().importKey("raw", buffer, getAlgo(type), true, getOps(type));
}
async function browserAesEncrypt(iv, key, data) {
  const subtle = env2.getSubtleCrypto();
  const cryptoKey = await browserImportKey(key, AES_BROWSER_ALGO);
  const result = await subtle.encrypt({
    iv,
    name: AES_BROWSER_ALGO
  }, cryptoKey, data);
  return new Uint8Array(result);
}
async function browserAesDecrypt(iv, key, data) {
  const subtle = env2.getSubtleCrypto();
  const cryptoKey = await browserImportKey(key, AES_BROWSER_ALGO);
  const result = await subtle.decrypt({
    iv,
    name: AES_BROWSER_ALGO
  }, cryptoKey, data);
  return new Uint8Array(result);
}
async function browserHmacSha256Sign(key, data) {
  const subtle = env2.getSubtleCrypto();
  const cryptoKey = await browserImportKey(key, HMAC_BROWSER);
  const signature = await subtle.sign({
    length: HMAC_LENGTH,
    name: HMAC_BROWSER
  }, cryptoKey, data);
  return new Uint8Array(signature);
}
async function browserHmacSha512Sign(key, data) {
  const subtle = env2.getSubtleCrypto();
  const cryptoKey = await browserImportKey(key, HMAC_BROWSER);
  const signature = await subtle.sign({
    length: LENGTH_512,
    name: HMAC_BROWSER
  }, cryptoKey, data);
  return new Uint8Array(signature);
}
async function browserSha256(data) {
  const subtle = env2.getSubtleCrypto();
  const result = await subtle.digest({
    name: SHA256_BROWSER_ALGO
  }, data);
  return new Uint8Array(result);
}
async function browserSha512(data) {
  const subtle = env2.getSubtleCrypto();
  const result = await subtle.digest({
    name: SHA512_BROWSER_ALGO
  }, data);
  return new Uint8Array(result);
}
var env2;
var init_browser3 = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/lib/browser.js"() {
    env2 = __toESM(require_cjs());
    init_constants2();
  }
});

// node_modules/@walletconnect/crypto/dist/esm/browser/aes.js
function aesCbcEncrypt(iv, key, data) {
  return browserAesEncrypt(iv, key, data);
}
function aesCbcDecrypt(iv, key, data) {
  return browserAesDecrypt(iv, key, data);
}
var init_aes = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/browser/aes.js"() {
    init_browser3();
  }
});

// node_modules/@walletconnect/crypto/dist/esm/helpers/env.js
var env_exports = {};
var init_env = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/helpers/env.js"() {
    __reExport(env_exports, __toESM(require_cjs()));
  }
});

// node_modules/@walletconnect/crypto/dist/esm/helpers/pkcs7.js
var PADDING, pkcs7;
var init_pkcs7 = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/helpers/pkcs7.js"() {
    PADDING = [
      [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16],
      [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15],
      [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14],
      [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13],
      [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12],
      [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],
      [10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
      [9, 9, 9, 9, 9, 9, 9, 9, 9],
      [8, 8, 8, 8, 8, 8, 8, 8],
      [7, 7, 7, 7, 7, 7, 7],
      [6, 6, 6, 6, 6, 6],
      [5, 5, 5, 5, 5],
      [4, 4, 4, 4],
      [3, 3, 3],
      [2, 2],
      [1]
    ];
    pkcs7 = {
      pad(plaintext) {
        const padding = PADDING[plaintext.byteLength % 16 || 0];
        const result = new Uint8Array(plaintext.byteLength + padding.length);
        result.set(plaintext);
        result.set(padding, plaintext.byteLength);
        return result;
      },
      unpad(padded) {
        return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);
      }
    };
  }
});

// node_modules/@walletconnect/crypto/dist/esm/helpers/types.js
var init_types = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/helpers/types.js"() {
  }
});

// node_modules/@walletconnect/crypto/dist/esm/helpers/validators.js
function assert(condition, message) {
  if (!condition) {
    throw new Error(message || "Assertion failed");
  }
}
function isConstantTime(arr1, arr2) {
  if (arr1.length !== arr2.length) {
    return false;
  }
  let res = 0;
  for (let i = 0; i < arr1.length; i++) {
    res |= arr1[i] ^ arr2[i];
  }
  return res === 0;
}
var init_validators2 = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/helpers/validators.js"() {
  }
});

// node_modules/@walletconnect/crypto/dist/esm/helpers/index.js
var helpers_exports = {};
__export(helpers_exports, {
  assert: () => assert,
  isConstantTime: () => isConstantTime,
  pkcs7: () => pkcs7
});
var init_helpers = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/helpers/index.js"() {
    init_env();
    __reExport(helpers_exports, env_exports);
    init_pkcs7();
    init_types();
    init_validators2();
  }
});

// node_modules/@walletconnect/crypto/dist/esm/browser/hmac.js
async function hmacSha256Sign(key, msg) {
  const result = await browserHmacSha256Sign(key, msg);
  return result;
}
async function hmacSha256Verify(key, msg, sig) {
  const expectedSig = await browserHmacSha256Sign(key, msg);
  const result = isConstantTime(expectedSig, sig);
  return result;
}
async function hmacSha512Sign(key, msg) {
  const result = await browserHmacSha512Sign(key, msg);
  return result;
}
async function hmacSha512Verify(key, msg, sig) {
  const expectedSig = await browserHmacSha512Sign(key, msg);
  const result = isConstantTime(expectedSig, sig);
  return result;
}
var init_hmac = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/browser/hmac.js"() {
    init_browser3();
    init_helpers();
  }
});

// node_modules/@walletconnect/crypto/dist/esm/browser/sha2.js
async function sha256(msg) {
  const result = await browserSha256(msg);
  return result;
}
async function sha512(msg) {
  const result = await browserSha512(msg);
  return result;
}
async function ripemd160(_msg) {
  throw new Error("Not supported for Browser async methods, use sync instead!");
}
var init_sha2 = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/browser/sha2.js"() {
    init_browser3();
  }
});

// node_modules/@walletconnect/crypto/dist/esm/browser/index.js
var browser_exports = {};
__export(browser_exports, {
  AES_BROWSER_ALGO: () => AES_BROWSER_ALGO,
  AES_LENGTH: () => AES_LENGTH,
  AES_NODE_ALGO: () => AES_NODE_ALGO,
  DECRYPT_OP: () => DECRYPT_OP,
  ENCRYPT_OP: () => ENCRYPT_OP,
  ERROR_BAD_MAC: () => ERROR_BAD_MAC,
  HEX_ENC: () => HEX_ENC,
  HMAC_BROWSER: () => HMAC_BROWSER,
  HMAC_BROWSER_ALGO: () => HMAC_BROWSER_ALGO,
  HMAC_LENGTH: () => HMAC_LENGTH,
  HMAC_NODE_ALGO: () => HMAC_NODE_ALGO,
  IV_LENGTH: () => IV_LENGTH,
  KEY_LENGTH: () => KEY_LENGTH,
  LENGTH_0: () => LENGTH_0,
  LENGTH_1: () => LENGTH_1,
  LENGTH_1024: () => LENGTH_1024,
  LENGTH_128: () => LENGTH_128,
  LENGTH_16: () => LENGTH_16,
  LENGTH_256: () => LENGTH_256,
  LENGTH_32: () => LENGTH_32,
  LENGTH_512: () => LENGTH_512,
  LENGTH_64: () => LENGTH_64,
  MAC_LENGTH: () => MAC_LENGTH,
  PREFIX_LENGTH: () => PREFIX_LENGTH,
  RIPEMD160_NODE_ALGO: () => RIPEMD160_NODE_ALGO,
  SHA256_BROWSER_ALGO: () => SHA256_BROWSER_ALGO,
  SHA256_NODE_ALGO: () => SHA256_NODE_ALGO,
  SHA512_BROWSER_ALGO: () => SHA512_BROWSER_ALGO,
  SHA512_NODE_ALGO: () => SHA512_NODE_ALGO,
  SIGN_OP: () => SIGN_OP,
  UTF8_ENC: () => UTF8_ENC,
  VERIFY_OP: () => VERIFY_OP,
  aesCbcDecrypt: () => aesCbcDecrypt,
  aesCbcEncrypt: () => aesCbcEncrypt,
  assert: () => assert,
  hmacSha256Sign: () => hmacSha256Sign,
  hmacSha256Verify: () => hmacSha256Verify,
  hmacSha512Sign: () => hmacSha512Sign,
  hmacSha512Verify: () => hmacSha512Verify,
  isConstantTime: () => isConstantTime,
  pkcs7: () => pkcs7,
  randomBytes: () => randomBytes,
  ripemd160: () => ripemd160,
  sha256: () => sha256,
  sha512: () => sha512
});
var init_browser4 = __esm({
  "node_modules/@walletconnect/crypto/dist/esm/browser/index.js"() {
    init_browser2();
    init_aes();
    init_hmac();
    init_sha2();
    init_helpers();
    __reExport(browser_exports, helpers_exports);
    init_constants2();
  }
});

// node_modules/@walletconnect/iso-crypto/dist/esm/index.js
var esm_exports4 = {};
__export(esm_exports4, {
  decrypt: () => decrypt,
  encrypt: () => encrypt,
  generateKey: () => generateKey,
  verifyHmac: () => verifyHmac
});
async function generateKey(length) {
  const _length = (length || 256) / 8;
  const bytes = randomBytes(_length);
  const result = convertBufferToArrayBuffer(arrayToBuffer(bytes));
  return result;
}
async function verifyHmac(payload, key) {
  const cipherText = hexToArray(payload.data);
  const iv = hexToArray(payload.iv);
  const hmac = hexToArray(payload.hmac);
  const hmacHex = arrayToHex(hmac, false);
  const unsigned = concatArrays(cipherText, iv);
  const chmac = await hmacSha256Sign(key, unsigned);
  const chmacHex = arrayToHex(chmac, false);
  if (removeHexPrefix(hmacHex) === removeHexPrefix(chmacHex)) {
    return true;
  }
  return false;
}
async function encrypt(data, key, providedIv) {
  const _key = bufferToArray(convertArrayBufferToBuffer(key));
  const ivArrayBuffer = providedIv || await generateKey(128);
  const iv = bufferToArray(convertArrayBufferToBuffer(ivArrayBuffer));
  const ivHex = arrayToHex(iv, false);
  const contentString = JSON.stringify(data);
  const content = utf8ToArray(contentString);
  const cipherText = await aesCbcEncrypt(iv, _key, content);
  const cipherTextHex = arrayToHex(cipherText, false);
  const unsigned = concatArrays(cipherText, iv);
  const hmac = await hmacSha256Sign(_key, unsigned);
  const hmacHex = arrayToHex(hmac, false);
  return {
    data: cipherTextHex,
    hmac: hmacHex,
    iv: ivHex
  };
}
async function decrypt(payload, key) {
  const _key = bufferToArray(convertArrayBufferToBuffer(key));
  if (!_key) {
    throw new Error("Missing key: required for decryption");
  }
  const verified = await verifyHmac(payload, _key);
  if (!verified) {
    return null;
  }
  const cipherText = hexToArray(payload.data);
  const iv = hexToArray(payload.iv);
  const buffer = await aesCbcDecrypt(iv, _key, cipherText);
  const utf8 = arrayToUtf8(buffer);
  let data;
  try {
    data = JSON.parse(utf8);
  } catch (error) {
    return null;
  }
  return data;
}
var init_esm8 = __esm({
  "node_modules/@walletconnect/iso-crypto/dist/esm/index.js"() {
    init_browser4();
    init_esm4();
    init_esm5();
  }
});

// node_modules/@walletconnect/client/dist/esm/index.js
var esm_exports5 = {};
__export(esm_exports5, {
  default: () => esm_default3
});
var WalletConnect, esm_default3;
var init_esm9 = __esm({
  "node_modules/@walletconnect/client/dist/esm/index.js"() {
    init_esm7();
    init_esm8();
    WalletConnect = class extends esm_default2 {
      constructor(connectorOpts, pushServerOpts) {
        super({
          cryptoLib: esm_exports4,
          connectorOpts,
          pushServerOpts
        });
      }
    };
    esm_default3 = WalletConnect;
  }
});

// node_modules/algosdk/dist/browser/algosdk.min.js
var require_algosdk_min = __commonJS({
  "node_modules/algosdk/dist/browser/algosdk.min.js"(exports, module) {
    !(function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.algosdk = t() : e.algosdk = t();
    })(self, (() => (() => {
      var e = { 406: function(e2) {
        e2.exports = (function(e3) {
          var t2 = {};
          function r2(s2) {
            if (t2[s2]) return t2[s2].exports;
            var n = t2[s2] = { i: s2, l: false, exports: {} };
            return e3[s2].call(n.exports, n, n.exports, r2), n.l = true, n.exports;
          }
          return r2.m = e3, r2.c = t2, r2.d = function(e4, t3, s2) {
            r2.o(e4, t3) || Object.defineProperty(e4, t3, { enumerable: true, get: s2 });
          }, r2.r = function(e4) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e4, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e4, "__esModule", { value: true });
          }, r2.t = function(e4, t3) {
            if (1 & t3 && (e4 = r2(e4)), 8 & t3) return e4;
            if (4 & t3 && "object" == typeof e4 && e4 && e4.__esModule) return e4;
            var s2 = /* @__PURE__ */ Object.create(null);
            if (r2.r(s2), Object.defineProperty(s2, "default", { enumerable: true, value: e4 }), 2 & t3 && "string" != typeof e4) for (var n in e4) r2.d(s2, n, (function(t4) {
              return e4[t4];
            }).bind(null, n));
            return s2;
          }, r2.n = function(e4) {
            var t3 = e4 && e4.__esModule ? function() {
              return e4.default;
            } : function() {
              return e4;
            };
            return r2.d(t3, "a", t3), t3;
          }, r2.o = function(e4, t3) {
            return Object.prototype.hasOwnProperty.call(e4, t3);
          }, r2.p = "", r2(r2.s = 0);
        })([function(e3, t2, r2) {
          "use strict";
          r2.r(t2), r2.d(t2, "encode", (function() {
            return T;
          })), r2.d(t2, "decode", (function() {
            return W;
          })), r2.d(t2, "decodeAsync", (function() {
            return G;
          })), r2.d(t2, "decodeArrayStream", (function() {
            return Y;
          })), r2.d(t2, "decodeStream", (function() {
            return J;
          })), r2.d(t2, "Decoder", (function() {
            return L;
          })), r2.d(t2, "Encoder", (function() {
            return S;
          })), r2.d(t2, "ExtensionCodec", (function() {
            return A;
          })), r2.d(t2, "ExtData", (function() {
            return p;
          })), r2.d(t2, "EXT_TIMESTAMP", (function() {
            return m;
          })), r2.d(t2, "encodeDateToTimeSpec", (function() {
            return w;
          })), r2.d(t2, "encodeTimeSpecToTimestamp", (function() {
            return y;
          })), r2.d(t2, "decodeTimestampToTimeSpec", (function() {
            return v;
          })), r2.d(t2, "encodeTimestampExtension", (function() {
            return b;
          })), r2.d(t2, "decodeTimestampExtension", (function() {
            return x;
          }));
          var s2 = function(e4, t3) {
            var r3 = "function" == typeof Symbol && e4[Symbol.iterator];
            if (!r3) return e4;
            var s3, n2, i2 = r3.call(e4), o2 = [];
            try {
              for (; (void 0 === t3 || t3-- > 0) && !(s3 = i2.next()).done; ) o2.push(s3.value);
            } catch (e5) {
              n2 = { error: e5 };
            } finally {
              try {
                s3 && !s3.done && (r3 = i2.return) && r3.call(i2);
              } finally {
                if (n2) throw n2.error;
              }
            }
            return o2;
          }, n = function() {
            for (var e4 = [], t3 = 0; t3 < arguments.length; t3++) e4 = e4.concat(s2(arguments[t3]));
            return e4;
          }, i = "undefined" != typeof process && "undefined" != typeof TextEncoder && "undefined" != typeof TextDecoder;
          function o(e4) {
            for (var t3 = e4.length, r3 = 0, s3 = 0; s3 < t3; ) {
              var n2 = e4.charCodeAt(s3++);
              if (0 != (4294967168 & n2)) if (0 == (4294965248 & n2)) r3 += 2;
              else {
                if (n2 >= 55296 && n2 <= 56319 && s3 < t3) {
                  var i2 = e4.charCodeAt(s3);
                  56320 == (64512 & i2) && (++s3, n2 = ((1023 & n2) << 10) + (1023 & i2) + 65536);
                }
                r3 += 0 == (4294901760 & n2) ? 3 : 4;
              }
              else r3++;
            }
            return r3;
          }
          var a = i ? new TextEncoder() : void 0, c = "undefined" != typeof process ? 200 : 0, u = (null == a ? void 0 : a.encodeInto) ? function(e4, t3, r3) {
            a.encodeInto(e4, t3.subarray(r3));
          } : function(e4, t3, r3) {
            t3.set(a.encode(e4), r3);
          };
          function l(e4, t3, r3) {
            for (var s3 = t3, i2 = s3 + r3, o2 = [], a2 = ""; s3 < i2; ) {
              var c2 = e4[s3++];
              if (0 == (128 & c2)) o2.push(c2);
              else if (192 == (224 & c2)) {
                var u2 = 63 & e4[s3++];
                o2.push((31 & c2) << 6 | u2);
              } else if (224 == (240 & c2)) {
                u2 = 63 & e4[s3++];
                var l2 = 63 & e4[s3++];
                o2.push((31 & c2) << 12 | u2 << 6 | l2);
              } else if (240 == (248 & c2)) {
                var d2 = (7 & c2) << 18 | (u2 = 63 & e4[s3++]) << 12 | (l2 = 63 & e4[s3++]) << 6 | 63 & e4[s3++];
                d2 > 65535 && (d2 -= 65536, o2.push(d2 >>> 10 & 1023 | 55296), d2 = 56320 | 1023 & d2), o2.push(d2);
              } else o2.push(c2);
              o2.length >= 4096 && (a2 += String.fromCharCode.apply(String, n(o2)), o2.length = 0);
            }
            return o2.length > 0 && (a2 += String.fromCharCode.apply(String, n(o2))), a2;
          }
          var d = i ? new TextDecoder() : null, h = "undefined" != typeof process ? 200 : 0, p = function(e4, t3) {
            this.type = e4, this.data = t3;
          };
          function f(e4, t3, r3) {
            var s3 = Math.floor(r3 / 4294967296), n2 = r3;
            e4.setUint32(t3, s3), e4.setUint32(t3 + 4, n2);
          }
          function g(e4, t3) {
            var r3 = e4.getInt32(t3), s3 = e4.getUint32(t3 + 4), n2 = r3 < Math.floor(Number.MIN_SAFE_INTEGER / 4294967296) || r3 === Math.floor(Number.MIN_SAFE_INTEGER / 4294967296) && 0 === s3, i2 = r3 > Math.floor(Number.MAX_SAFE_INTEGER / 4294967296);
            return n2 || i2 ? BigInt(r3) * BigInt(4294967296) + BigInt(s3) : 4294967296 * r3 + s3;
          }
          var m = -1;
          function y(e4) {
            var t3, r3 = e4.sec, s3 = e4.nsec;
            if (r3 >= 0 && s3 >= 0 && r3 <= 17179869183) {
              if (0 === s3 && r3 <= 4294967295) {
                var n2 = new Uint8Array(4);
                return (t3 = new DataView(n2.buffer)).setUint32(0, r3), n2;
              }
              var i2 = r3 / 4294967296, o2 = 4294967295 & r3;
              return n2 = new Uint8Array(8), (t3 = new DataView(n2.buffer)).setUint32(0, s3 << 2 | 3 & i2), t3.setUint32(4, o2), n2;
            }
            return n2 = new Uint8Array(12), (t3 = new DataView(n2.buffer)).setUint32(0, s3), f(t3, 4, r3), n2;
          }
          function w(e4) {
            var t3 = e4.getTime(), r3 = Math.floor(t3 / 1e3), s3 = 1e6 * (t3 - 1e3 * r3), n2 = Math.floor(s3 / 1e9);
            return { sec: r3 + n2, nsec: s3 - 1e9 * n2 };
          }
          function b(e4) {
            return e4 instanceof Date ? y(w(e4)) : null;
          }
          function v(e4) {
            var t3 = new DataView(e4.buffer, e4.byteOffset, e4.byteLength);
            switch (e4.byteLength) {
              case 4:
                return { sec: t3.getUint32(0), nsec: 0 };
              case 8:
                var r3 = t3.getUint32(0);
                return { sec: 4294967296 * (3 & r3) + t3.getUint32(4), nsec: r3 >>> 2 };
              case 12:
                return { sec: g(t3, 4), nsec: t3.getUint32(0) };
              default:
                throw new Error("Unrecognized data size for timestamp: " + e4.length);
            }
          }
          function x(e4) {
            var t3 = v(e4);
            return new Date(1e3 * t3.sec + t3.nsec / 1e6);
          }
          var _ = { type: m, encode: b, decode: x }, A = (function() {
            function e4() {
              this.builtInEncoders = [], this.builtInDecoders = [], this.encoders = [], this.decoders = [], this.register(_);
            }
            return e4.prototype.register = function(e5) {
              var t3 = e5.type, r3 = e5.encode, s3 = e5.decode;
              if (t3 >= 0) this.encoders[t3] = r3, this.decoders[t3] = s3;
              else {
                var n2 = 1 + t3;
                this.builtInEncoders[n2] = r3, this.builtInDecoders[n2] = s3;
              }
            }, e4.prototype.tryToEncode = function(e5, t3) {
              for (var r3 = 0; r3 < this.builtInEncoders.length; r3++) if (null != (s3 = this.builtInEncoders[r3]) && null != (n2 = s3(e5, t3))) return new p(-1 - r3, n2);
              for (r3 = 0; r3 < this.encoders.length; r3++) {
                var s3, n2;
                if (null != (s3 = this.encoders[r3]) && null != (n2 = s3(e5, t3))) return new p(r3, n2);
              }
              return e5 instanceof p ? e5 : null;
            }, e4.prototype.decode = function(e5, t3, r3) {
              var s3 = t3 < 0 ? this.builtInDecoders[-1 - t3] : this.decoders[t3];
              return s3 ? s3(e5, t3, r3) : new p(t3, e5);
            }, e4.defaultCodec = new e4(), e4;
          })();
          function E(e4) {
            return e4 instanceof Uint8Array ? e4 : ArrayBuffer.isView(e4) ? new Uint8Array(e4.buffer, e4.byteOffset, e4.byteLength) : e4 instanceof ArrayBuffer ? new Uint8Array(e4) : Uint8Array.from(e4);
          }
          var k = function(e4) {
            var t3 = "function" == typeof Symbol && Symbol.iterator, r3 = t3 && e4[t3], s3 = 0;
            if (r3) return r3.call(e4);
            if (e4 && "number" == typeof e4.length) return { next: function() {
              return e4 && s3 >= e4.length && (e4 = void 0), { value: e4 && e4[s3++], done: !e4 };
            } };
            throw new TypeError(t3 ? "Object is not iterable." : "Symbol.iterator is not defined.");
          }, S = (function() {
            function e4(e5, t3, r3, s3, n2, i2, o2, a2) {
              void 0 === e5 && (e5 = A.defaultCodec), void 0 === t3 && (t3 = void 0), void 0 === r3 && (r3 = 100), void 0 === s3 && (s3 = 2048), void 0 === n2 && (n2 = false), void 0 === i2 && (i2 = false), void 0 === o2 && (o2 = false), void 0 === a2 && (a2 = false), this.extensionCodec = e5, this.context = t3, this.maxDepth = r3, this.initialBufferSize = s3, this.sortKeys = n2, this.forceFloat32 = i2, this.ignoreUndefined = o2, this.forceIntegerToFloat = a2, this.pos = 0, this.view = new DataView(new ArrayBuffer(this.initialBufferSize)), this.bytes = new Uint8Array(this.view.buffer);
            }
            return e4.prototype.getUint8Array = function() {
              return this.bytes.subarray(0, this.pos);
            }, e4.prototype.reinitializeState = function() {
              this.pos = 0;
            }, e4.prototype.encode = function(e5) {
              return this.reinitializeState(), this.doEncode(e5, 1), this.getUint8Array();
            }, e4.prototype.doEncode = function(e5, t3) {
              if (t3 > this.maxDepth) throw new Error("Too deep objects in depth " + t3);
              null == e5 ? this.encodeNil() : "boolean" == typeof e5 ? this.encodeBoolean(e5) : "number" == typeof e5 ? this.encodeNumber(e5) : "string" == typeof e5 ? this.encodeString(e5) : "bigint" == typeof e5 ? this.encodebigint(e5) : this.encodeObject(e5, t3);
            }, e4.prototype.ensureBufferSizeToWrite = function(e5) {
              var t3 = this.pos + e5;
              this.view.byteLength < t3 && this.resizeBuffer(2 * t3);
            }, e4.prototype.resizeBuffer = function(e5) {
              var t3 = new ArrayBuffer(e5), r3 = new Uint8Array(t3), s3 = new DataView(t3);
              r3.set(this.bytes), this.view = s3, this.bytes = r3;
            }, e4.prototype.encodeNil = function() {
              this.writeU8(192);
            }, e4.prototype.encodeBoolean = function(e5) {
              false === e5 ? this.writeU8(194) : this.writeU8(195);
            }, e4.prototype.encodeNumber = function(e5) {
              Number.isSafeInteger(e5) && !this.forceIntegerToFloat ? e5 >= 0 ? e5 < 128 ? this.writeU8(e5) : e5 < 256 ? (this.writeU8(204), this.writeU8(e5)) : e5 < 65536 ? (this.writeU8(205), this.writeU16(e5)) : e5 < 4294967296 ? (this.writeU8(206), this.writeU32(e5)) : (this.writeU8(207), this.writeU64(e5)) : e5 >= -32 ? this.writeU8(224 | e5 + 32) : e5 >= -128 ? (this.writeU8(208), this.writeI8(e5)) : e5 >= -32768 ? (this.writeU8(209), this.writeI16(e5)) : e5 >= -2147483648 ? (this.writeU8(210), this.writeI32(e5)) : (this.writeU8(211), this.writeI64(e5)) : this.forceFloat32 ? (this.writeU8(202), this.writeF32(e5)) : (this.writeU8(203), this.writeF64(e5));
            }, e4.prototype.encodebigint = function(e5) {
              e5 >= BigInt(0) ? e5 < BigInt(128) ? this.writeU8(Number(e5)) : e5 < BigInt(256) ? (this.writeU8(204), this.writeU8(Number(e5))) : e5 < BigInt(65536) ? (this.writeU8(205), this.writeU16(Number(e5))) : e5 < BigInt(4294967296) ? (this.writeU8(206), this.writeU32(Number(e5))) : (this.writeU8(207), this.writeBig64(e5)) : e5 >= BigInt(-32) ? this.writeU8(224 | Number(e5) + 32) : e5 >= BigInt(-128) ? (this.writeU8(208), this.writeI8(Number(e5))) : e5 >= BigInt(-32768) ? (this.writeU8(209), this.writeI16(Number(e5))) : e5 >= BigInt(-2147483648) ? (this.writeU8(210), this.writeI32(Number(e5))) : (this.writeU8(211), this.writeBig64(e5));
            }, e4.prototype.writeStringHeader = function(e5) {
              if (e5 < 32) this.writeU8(160 + e5);
              else if (e5 < 256) this.writeU8(217), this.writeU8(e5);
              else if (e5 < 65536) this.writeU8(218), this.writeU16(e5);
              else {
                if (!(e5 < 4294967296)) throw new Error("Too long string: " + e5 + " bytes in UTF-8");
                this.writeU8(219), this.writeU32(e5);
              }
            }, e4.prototype.encodeString = function(e5) {
              var t3 = e5.length;
              if (i && t3 > c) {
                var r3 = o(e5);
                this.ensureBufferSizeToWrite(5 + r3), this.writeStringHeader(r3), u(e5, this.bytes, this.pos), this.pos += r3;
              } else r3 = o(e5), this.ensureBufferSizeToWrite(5 + r3), this.writeStringHeader(r3), (function(e6, t4, r4) {
                for (var s3 = e6.length, n2 = r4, i2 = 0; i2 < s3; ) {
                  var o2 = e6.charCodeAt(i2++);
                  if (0 != (4294967168 & o2)) {
                    if (0 == (4294965248 & o2)) t4[n2++] = o2 >> 6 & 31 | 192;
                    else {
                      if (o2 >= 55296 && o2 <= 56319 && i2 < s3) {
                        var a2 = e6.charCodeAt(i2);
                        56320 == (64512 & a2) && (++i2, o2 = ((1023 & o2) << 10) + (1023 & a2) + 65536);
                      }
                      0 == (4294901760 & o2) ? (t4[n2++] = o2 >> 12 & 15 | 224, t4[n2++] = o2 >> 6 & 63 | 128) : (t4[n2++] = o2 >> 18 & 7 | 240, t4[n2++] = o2 >> 12 & 63 | 128, t4[n2++] = o2 >> 6 & 63 | 128);
                    }
                    t4[n2++] = 63 & o2 | 128;
                  } else t4[n2++] = o2;
                }
              })(e5, this.bytes, this.pos), this.pos += r3;
            }, e4.prototype.encodeObject = function(e5, t3) {
              var r3 = this.extensionCodec.tryToEncode(e5, this.context);
              if (null != r3) this.encodeExtension(r3);
              else if (Array.isArray(e5)) this.encodeArray(e5, t3);
              else if (ArrayBuffer.isView(e5)) this.encodeBinary(e5);
              else {
                if ("object" != typeof e5) throw new Error("Unrecognized object: " + Object.prototype.toString.apply(e5));
                this.encodeMap(e5, t3);
              }
            }, e4.prototype.encodeBinary = function(e5) {
              var t3 = e5.byteLength;
              if (t3 < 256) this.writeU8(196), this.writeU8(t3);
              else if (t3 < 65536) this.writeU8(197), this.writeU16(t3);
              else {
                if (!(t3 < 4294967296)) throw new Error("Too large binary: " + t3);
                this.writeU8(198), this.writeU32(t3);
              }
              var r3 = E(e5);
              this.writeU8a(r3);
            }, e4.prototype.encodeArray = function(e5, t3) {
              var r3, s3, n2 = e5.length;
              if (n2 < 16) this.writeU8(144 + n2);
              else if (n2 < 65536) this.writeU8(220), this.writeU16(n2);
              else {
                if (!(n2 < 4294967296)) throw new Error("Too large array: " + n2);
                this.writeU8(221), this.writeU32(n2);
              }
              try {
                for (var i2 = k(e5), o2 = i2.next(); !o2.done; o2 = i2.next()) {
                  var a2 = o2.value;
                  this.doEncode(a2, t3 + 1);
                }
              } catch (e6) {
                r3 = { error: e6 };
              } finally {
                try {
                  o2 && !o2.done && (s3 = i2.return) && s3.call(i2);
                } finally {
                  if (r3) throw r3.error;
                }
              }
            }, e4.prototype.countWithoutUndefined = function(e5, t3) {
              var r3, s3, n2 = 0;
              try {
                for (var i2 = k(t3), o2 = i2.next(); !o2.done; o2 = i2.next()) void 0 !== e5[o2.value] && n2++;
              } catch (e6) {
                r3 = { error: e6 };
              } finally {
                try {
                  o2 && !o2.done && (s3 = i2.return) && s3.call(i2);
                } finally {
                  if (r3) throw r3.error;
                }
              }
              return n2;
            }, e4.prototype.encodeMap = function(e5, t3) {
              var r3, s3, n2 = Object.keys(e5);
              this.sortKeys && n2.sort();
              var i2 = this.ignoreUndefined ? this.countWithoutUndefined(e5, n2) : n2.length;
              if (i2 < 16) this.writeU8(128 + i2);
              else if (i2 < 65536) this.writeU8(222), this.writeU16(i2);
              else {
                if (!(i2 < 4294967296)) throw new Error("Too large map object: " + i2);
                this.writeU8(223), this.writeU32(i2);
              }
              try {
                for (var o2 = k(n2), a2 = o2.next(); !a2.done; a2 = o2.next()) {
                  var c2 = a2.value, u2 = e5[c2];
                  this.ignoreUndefined && void 0 === u2 || (this.encodeString(c2), this.doEncode(u2, t3 + 1));
                }
              } catch (e6) {
                r3 = { error: e6 };
              } finally {
                try {
                  a2 && !a2.done && (s3 = o2.return) && s3.call(o2);
                } finally {
                  if (r3) throw r3.error;
                }
              }
            }, e4.prototype.encodeExtension = function(e5) {
              var t3 = e5.data.length;
              if (1 === t3) this.writeU8(212);
              else if (2 === t3) this.writeU8(213);
              else if (4 === t3) this.writeU8(214);
              else if (8 === t3) this.writeU8(215);
              else if (16 === t3) this.writeU8(216);
              else if (t3 < 256) this.writeU8(199), this.writeU8(t3);
              else if (t3 < 65536) this.writeU8(200), this.writeU16(t3);
              else {
                if (!(t3 < 4294967296)) throw new Error("Too large extension object: " + t3);
                this.writeU8(201), this.writeU32(t3);
              }
              this.writeI8(e5.type), this.writeU8a(e5.data);
            }, e4.prototype.writeU8 = function(e5) {
              this.ensureBufferSizeToWrite(1), this.view.setUint8(this.pos, e5), this.pos++;
            }, e4.prototype.writeU8a = function(e5) {
              var t3 = e5.length;
              this.ensureBufferSizeToWrite(t3), this.bytes.set(e5, this.pos), this.pos += t3;
            }, e4.prototype.writeI8 = function(e5) {
              this.ensureBufferSizeToWrite(1), this.view.setInt8(this.pos, e5), this.pos++;
            }, e4.prototype.writeU16 = function(e5) {
              this.ensureBufferSizeToWrite(2), this.view.setUint16(this.pos, e5), this.pos += 2;
            }, e4.prototype.writeI16 = function(e5) {
              this.ensureBufferSizeToWrite(2), this.view.setInt16(this.pos, e5), this.pos += 2;
            }, e4.prototype.writeU32 = function(e5) {
              this.ensureBufferSizeToWrite(4), this.view.setUint32(this.pos, e5), this.pos += 4;
            }, e4.prototype.writeI32 = function(e5) {
              this.ensureBufferSizeToWrite(4), this.view.setInt32(this.pos, e5), this.pos += 4;
            }, e4.prototype.writeF32 = function(e5) {
              this.ensureBufferSizeToWrite(4), this.view.setFloat32(this.pos, e5), this.pos += 4;
            }, e4.prototype.writeF64 = function(e5) {
              this.ensureBufferSizeToWrite(8), this.view.setFloat64(this.pos, e5), this.pos += 8;
            }, e4.prototype.writeU64 = function(e5) {
              this.ensureBufferSizeToWrite(8), (function(e6, t3, r3) {
                var s3 = r3 / 4294967296, n2 = r3;
                e6.setUint32(t3, s3), e6.setUint32(t3 + 4, n2);
              })(this.view, this.pos, e5), this.pos += 8;
            }, e4.prototype.writeI64 = function(e5) {
              this.ensureBufferSizeToWrite(8), f(this.view, this.pos, e5), this.pos += 8;
            }, e4.prototype.writeBig64 = function(e5) {
              this.ensureBufferSizeToWrite(8), (function(e6, t3, r3) {
                var s3 = Number(r3 / BigInt(4294967296)), n2 = Number(r3 % BigInt(4294967296));
                s3 < 0 && 0 !== n2 && (s3 -= 1), e6.setUint32(t3, s3), e6.setUint32(t3 + 4, n2);
              })(this.view, this.pos, e5), this.pos += 8;
            }, e4;
          })(), R = {};
          function T(e4, t3) {
            return void 0 === t3 && (t3 = R), new S(t3.extensionCodec, t3.context, t3.maxDepth, t3.initialBufferSize, t3.sortKeys, t3.forceFloat32, t3.ignoreUndefined, t3.forceIntegerToFloat).encode(e4);
          }
          function I(e4) {
            return (e4 < 0 ? "-" : "") + "0x" + Math.abs(e4).toString(16).padStart(2, "0");
          }
          var B = (function() {
            function e4(e5, t3) {
              void 0 === e5 && (e5 = 16), void 0 === t3 && (t3 = 16), this.maxKeyLength = e5, this.maxLengthPerKey = t3, this.hit = 0, this.miss = 0, this.caches = [];
              for (var r3 = 0; r3 < this.maxKeyLength; r3++) this.caches.push([]);
            }
            return e4.prototype.canBeCached = function(e5) {
              return e5 > 0 && e5 <= this.maxKeyLength;
            }, e4.prototype.get = function(e5, t3, r3) {
              var s3 = this.caches[r3 - 1], n2 = s3.length;
              e: for (var i2 = 0; i2 < n2; i2++) {
                for (var o2 = s3[i2], a2 = o2.bytes, c2 = 0; c2 < r3; c2++) if (a2[c2] !== e5[t3 + c2]) continue e;
                return o2.value;
              }
              return null;
            }, e4.prototype.store = function(e5, t3) {
              var r3 = this.caches[e5.length - 1], s3 = { bytes: e5, value: t3 };
              r3.length >= this.maxLengthPerKey ? r3[Math.random() * r3.length | 0] = s3 : r3.push(s3);
            }, e4.prototype.decode = function(e5, t3, r3) {
              var s3 = this.get(e5, t3, r3);
              if (null != s3) return this.hit++, s3;
              this.miss++;
              var n2 = l(e5, t3, r3), i2 = Uint8Array.prototype.slice.call(e5, t3, t3 + r3);
              return this.store(i2, n2), n2;
            }, e4;
          })(), U = function(e4, t3) {
            var r3, s3, n2, i2, o2 = { label: 0, sent: function() {
              if (1 & n2[0]) throw n2[1];
              return n2[1];
            }, trys: [], ops: [] };
            return i2 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (i2[Symbol.iterator] = function() {
              return this;
            }), i2;
            function a2(i3) {
              return function(a3) {
                return (function(i4) {
                  if (r3) throw new TypeError("Generator is already executing.");
                  for (; o2; ) try {
                    if (r3 = 1, s3 && (n2 = 2 & i4[0] ? s3.return : i4[0] ? s3.throw || ((n2 = s3.return) && n2.call(s3), 0) : s3.next) && !(n2 = n2.call(s3, i4[1])).done) return n2;
                    switch (s3 = 0, n2 && (i4 = [2 & i4[0], n2.value]), i4[0]) {
                      case 0:
                      case 1:
                        n2 = i4;
                        break;
                      case 4:
                        return o2.label++, { value: i4[1], done: false };
                      case 5:
                        o2.label++, s3 = i4[1], i4 = [0];
                        continue;
                      case 7:
                        i4 = o2.ops.pop(), o2.trys.pop();
                        continue;
                      default:
                        if (!((n2 = (n2 = o2.trys).length > 0 && n2[n2.length - 1]) || 6 !== i4[0] && 2 !== i4[0])) {
                          o2 = 0;
                          continue;
                        }
                        if (3 === i4[0] && (!n2 || i4[1] > n2[0] && i4[1] < n2[3])) {
                          o2.label = i4[1];
                          break;
                        }
                        if (6 === i4[0] && o2.label < n2[1]) {
                          o2.label = n2[1], n2 = i4;
                          break;
                        }
                        if (n2 && o2.label < n2[2]) {
                          o2.label = n2[2], o2.ops.push(i4);
                          break;
                        }
                        n2[2] && o2.ops.pop(), o2.trys.pop();
                        continue;
                    }
                    i4 = t3.call(e4, o2);
                  } catch (e5) {
                    i4 = [6, e5], s3 = 0;
                  } finally {
                    r3 = n2 = 0;
                  }
                  if (5 & i4[0]) throw i4[1];
                  return { value: i4[0] ? i4[1] : void 0, done: true };
                })([i3, a3]);
              };
            }
          }, P = function(e4) {
            if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
            var t3, r3 = e4[Symbol.asyncIterator];
            return r3 ? r3.call(e4) : (e4 = "function" == typeof __values ? __values(e4) : e4[Symbol.iterator](), t3 = {}, s3("next"), s3("throw"), s3("return"), t3[Symbol.asyncIterator] = function() {
              return this;
            }, t3);
            function s3(r4) {
              t3[r4] = e4[r4] && function(t4) {
                return new Promise((function(s4, n2) {
                  !(function(e5, t5, r5, s5) {
                    Promise.resolve(s5).then((function(t6) {
                      e5({ value: t6, done: r5 });
                    }), t5);
                  })(s4, n2, (t4 = e4[r4](t4)).done, t4.value);
                }));
              };
            }
          }, j = function(e4) {
            return this instanceof j ? (this.v = e4, this) : new j(e4);
          }, q = new DataView(new ArrayBuffer(0)), $ = new Uint8Array(q.buffer), C = (function() {
            try {
              q.getInt8(0);
            } catch (e4) {
              return e4.constructor;
            }
            throw new Error("never reached");
          })(), D = new C("Insufficient data"), O = new B(), L = (function() {
            function e4(e5, t3, r3, s3, n2, i2, o2, a2) {
              void 0 === e5 && (e5 = A.defaultCodec), void 0 === t3 && (t3 = void 0), void 0 === r3 && (r3 = 4294967295), void 0 === s3 && (s3 = 4294967295), void 0 === n2 && (n2 = 4294967295), void 0 === i2 && (i2 = 4294967295), void 0 === o2 && (o2 = 4294967295), void 0 === a2 && (a2 = O), this.extensionCodec = e5, this.context = t3, this.maxStrLength = r3, this.maxBinLength = s3, this.maxArrayLength = n2, this.maxMapLength = i2, this.maxExtLength = o2, this.keyDecoder = a2, this.totalPos = 0, this.pos = 0, this.view = q, this.bytes = $, this.headByte = -1, this.stack = [];
            }
            return e4.prototype.reinitializeState = function() {
              this.totalPos = 0, this.headByte = -1;
            }, e4.prototype.setBuffer = function(e5) {
              this.bytes = E(e5), this.view = (function(e6) {
                if (e6 instanceof ArrayBuffer) return new DataView(e6);
                var t3 = E(e6);
                return new DataView(t3.buffer, t3.byteOffset, t3.byteLength);
              })(this.bytes), this.pos = 0;
            }, e4.prototype.appendBuffer = function(e5) {
              if (-1 !== this.headByte || this.hasRemaining()) {
                var t3 = this.bytes.subarray(this.pos), r3 = E(e5), s3 = new Uint8Array(t3.length + r3.length);
                s3.set(t3), s3.set(r3, t3.length), this.setBuffer(s3);
              } else this.setBuffer(e5);
            }, e4.prototype.hasRemaining = function(e5) {
              return void 0 === e5 && (e5 = 1), this.view.byteLength - this.pos >= e5;
            }, e4.prototype.createNoExtraBytesError = function(e5) {
              var t3 = this.view, r3 = this.pos;
              return new RangeError("Extra " + (t3.byteLength - r3) + " of " + t3.byteLength + " byte(s) found at buffer[" + e5 + "]");
            }, e4.prototype.decode = function(e5) {
              return this.reinitializeState(), this.setBuffer(e5), this.doDecodeSingleSync();
            }, e4.prototype.doDecodeSingleSync = function() {
              var e5 = this.doDecodeSync();
              if (this.hasRemaining()) throw this.createNoExtraBytesError(this.pos);
              return e5;
            }, e4.prototype.decodeAsync = function(e5) {
              var t3, r3, s3, n2;
              return (function(e6, t4, r4, s4) {
                return new (r4 || (r4 = Promise))((function(n3, i2) {
                  function o2(e7) {
                    try {
                      c2(s4.next(e7));
                    } catch (e8) {
                      i2(e8);
                    }
                  }
                  function a2(e7) {
                    try {
                      c2(s4.throw(e7));
                    } catch (e8) {
                      i2(e8);
                    }
                  }
                  function c2(e7) {
                    var t5;
                    e7.done ? n3(e7.value) : (t5 = e7.value, t5 instanceof r4 ? t5 : new r4((function(e8) {
                      e8(t5);
                    }))).then(o2, a2);
                  }
                  c2((s4 = s4.apply(e6, t4 || [])).next());
                }));
              })(this, void 0, void 0, (function() {
                var i2, o2, a2, c2, u2, l2, d2, h2;
                return U(this, (function(p2) {
                  switch (p2.label) {
                    case 0:
                      i2 = false, p2.label = 1;
                    case 1:
                      p2.trys.push([1, 6, 7, 12]), t3 = P(e5), p2.label = 2;
                    case 2:
                      return [4, t3.next()];
                    case 3:
                      if ((r3 = p2.sent()).done) return [3, 5];
                      if (a2 = r3.value, i2) throw this.createNoExtraBytesError(this.totalPos);
                      this.appendBuffer(a2);
                      try {
                        o2 = this.doDecodeSync(), i2 = true;
                      } catch (e6) {
                        if (!(e6 instanceof C)) throw e6;
                      }
                      this.totalPos += this.pos, p2.label = 4;
                    case 4:
                      return [3, 2];
                    case 5:
                      return [3, 12];
                    case 6:
                      return c2 = p2.sent(), s3 = { error: c2 }, [3, 12];
                    case 7:
                      return p2.trys.push([7, , 10, 11]), r3 && !r3.done && (n2 = t3.return) ? [4, n2.call(t3)] : [3, 9];
                    case 8:
                      p2.sent(), p2.label = 9;
                    case 9:
                      return [3, 11];
                    case 10:
                      if (s3) throw s3.error;
                      return [7];
                    case 11:
                      return [7];
                    case 12:
                      if (i2) {
                        if (this.hasRemaining()) throw this.createNoExtraBytesError(this.totalPos);
                        return [2, o2];
                      }
                      throw l2 = (u2 = this).headByte, d2 = u2.pos, h2 = u2.totalPos, new RangeError("Insufficient data in parcing " + I(l2) + " at " + h2 + " (" + d2 + " in the current buffer)");
                  }
                }));
              }));
            }, e4.prototype.decodeArrayStream = function(e5) {
              return this.decodeMultiAsync(e5, true);
            }, e4.prototype.decodeStream = function(e5) {
              return this.decodeMultiAsync(e5, false);
            }, e4.prototype.decodeMultiAsync = function(e5, t3) {
              return (function(e6, t4, r3) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var s3, n2 = r3.apply(e6, t4 || []), i2 = [];
                return s3 = {}, o2("next"), o2("throw"), o2("return"), s3[Symbol.asyncIterator] = function() {
                  return this;
                }, s3;
                function o2(e7) {
                  n2[e7] && (s3[e7] = function(t5) {
                    return new Promise((function(r4, s4) {
                      i2.push([e7, t5, r4, s4]) > 1 || a2(e7, t5);
                    }));
                  });
                }
                function a2(e7, t5) {
                  try {
                    (r4 = n2[e7](t5)).value instanceof j ? Promise.resolve(r4.value.v).then(c2, u2) : l2(i2[0][2], r4);
                  } catch (e8) {
                    l2(i2[0][3], e8);
                  }
                  var r4;
                }
                function c2(e7) {
                  a2("next", e7);
                }
                function u2(e7) {
                  a2("throw", e7);
                }
                function l2(e7, t5) {
                  e7(t5), i2.shift(), i2.length && a2(i2[0][0], i2[0][1]);
                }
              })(this, arguments, (function() {
                var r3, s3, n2, i2, o2, a2, c2, u2, l2;
                return U(this, (function(d2) {
                  switch (d2.label) {
                    case 0:
                      r3 = t3, s3 = -1, d2.label = 1;
                    case 1:
                      d2.trys.push([1, 13, 14, 19]), n2 = P(e5), d2.label = 2;
                    case 2:
                      return [4, j(n2.next())];
                    case 3:
                      if ((i2 = d2.sent()).done) return [3, 12];
                      if (o2 = i2.value, t3 && 0 === s3) throw this.createNoExtraBytesError(this.totalPos);
                      this.appendBuffer(o2), r3 && (s3 = this.readArraySize(), r3 = false, this.complete()), d2.label = 4;
                    case 4:
                      d2.trys.push([4, 9, , 10]), d2.label = 5;
                    case 5:
                      return [4, j(this.doDecodeSync())];
                    case 6:
                      return [4, d2.sent()];
                    case 7:
                      return d2.sent(), 0 == --s3 ? [3, 8] : [3, 5];
                    case 8:
                      return [3, 10];
                    case 9:
                      if (!((a2 = d2.sent()) instanceof C)) throw a2;
                      return [3, 10];
                    case 10:
                      this.totalPos += this.pos, d2.label = 11;
                    case 11:
                      return [3, 2];
                    case 12:
                      return [3, 19];
                    case 13:
                      return c2 = d2.sent(), u2 = { error: c2 }, [3, 19];
                    case 14:
                      return d2.trys.push([14, , 17, 18]), i2 && !i2.done && (l2 = n2.return) ? [4, j(l2.call(n2))] : [3, 16];
                    case 15:
                      d2.sent(), d2.label = 16;
                    case 16:
                      return [3, 18];
                    case 17:
                      if (u2) throw u2.error;
                      return [7];
                    case 18:
                      return [7];
                    case 19:
                      return [2];
                  }
                }));
              }));
            }, e4.prototype.doDecodeSync = function() {
              e: for (; ; ) {
                var e5 = this.readHeadByte(), t3 = void 0;
                if (e5 >= 224) t3 = e5 - 256;
                else if (e5 < 192) if (e5 < 128) t3 = e5;
                else if (e5 < 144) {
                  if (0 != (s3 = e5 - 128)) {
                    this.pushMapState(s3), this.complete();
                    continue e;
                  }
                  t3 = {};
                } else if (e5 < 160) {
                  if (0 != (s3 = e5 - 144)) {
                    this.pushArrayState(s3), this.complete();
                    continue e;
                  }
                  t3 = [];
                } else {
                  var r3 = e5 - 160;
                  t3 = this.decodeUtf8String(r3, 0);
                }
                else if (192 === e5) t3 = null;
                else if (194 === e5) t3 = false;
                else if (195 === e5) t3 = true;
                else if (202 === e5) t3 = this.readF32();
                else if (203 === e5) t3 = this.readF64();
                else if (204 === e5) t3 = this.readU8();
                else if (205 === e5) t3 = this.readU16();
                else if (206 === e5) t3 = this.readU32();
                else if (207 === e5) t3 = this.readU64();
                else if (208 === e5) t3 = this.readI8();
                else if (209 === e5) t3 = this.readI16();
                else if (210 === e5) t3 = this.readI32();
                else if (211 === e5) t3 = this.readI64();
                else if (217 === e5) r3 = this.lookU8(), t3 = this.decodeUtf8String(r3, 1);
                else if (218 === e5) r3 = this.lookU16(), t3 = this.decodeUtf8String(r3, 2);
                else if (219 === e5) r3 = this.lookU32(), t3 = this.decodeUtf8String(r3, 4);
                else if (220 === e5) {
                  if (0 !== (s3 = this.readU16())) {
                    this.pushArrayState(s3), this.complete();
                    continue e;
                  }
                  t3 = [];
                } else if (221 === e5) {
                  if (0 !== (s3 = this.readU32())) {
                    this.pushArrayState(s3), this.complete();
                    continue e;
                  }
                  t3 = [];
                } else if (222 === e5) {
                  if (0 !== (s3 = this.readU16())) {
                    this.pushMapState(s3), this.complete();
                    continue e;
                  }
                  t3 = {};
                } else if (223 === e5) {
                  if (0 !== (s3 = this.readU32())) {
                    this.pushMapState(s3), this.complete();
                    continue e;
                  }
                  t3 = {};
                } else if (196 === e5) {
                  var s3 = this.lookU8();
                  t3 = this.decodeBinary(s3, 1);
                } else if (197 === e5) s3 = this.lookU16(), t3 = this.decodeBinary(s3, 2);
                else if (198 === e5) s3 = this.lookU32(), t3 = this.decodeBinary(s3, 4);
                else if (212 === e5) t3 = this.decodeExtension(1, 0);
                else if (213 === e5) t3 = this.decodeExtension(2, 0);
                else if (214 === e5) t3 = this.decodeExtension(4, 0);
                else if (215 === e5) t3 = this.decodeExtension(8, 0);
                else if (216 === e5) t3 = this.decodeExtension(16, 0);
                else if (199 === e5) s3 = this.lookU8(), t3 = this.decodeExtension(s3, 1);
                else if (200 === e5) s3 = this.lookU16(), t3 = this.decodeExtension(s3, 2);
                else {
                  if (201 !== e5) throw new Error("Unrecognized type byte: " + I(e5));
                  s3 = this.lookU32(), t3 = this.decodeExtension(s3, 4);
                }
                this.complete();
                for (var n2 = this.stack; n2.length > 0; ) {
                  var i2 = n2[n2.length - 1];
                  if (0 === i2.type) {
                    if (i2.array[i2.position] = t3, i2.position++, i2.position !== i2.size) continue e;
                    n2.pop(), t3 = i2.array;
                  } else {
                    if (1 === i2.type) {
                      if (void 0, "string" != (o2 = typeof t3) && "number" !== o2) throw new Error("The type of key must be string or number but " + typeof t3);
                      i2.key = t3, i2.type = 2;
                      continue e;
                    }
                    if (i2.map[i2.key] = t3, i2.readCount++, i2.readCount !== i2.size) {
                      i2.key = null, i2.type = 1;
                      continue e;
                    }
                    n2.pop(), t3 = i2.map;
                  }
                }
                return t3;
              }
              var o2;
            }, e4.prototype.readHeadByte = function() {
              return -1 === this.headByte && (this.headByte = this.readU8()), this.headByte;
            }, e4.prototype.complete = function() {
              this.headByte = -1;
            }, e4.prototype.readArraySize = function() {
              var e5 = this.readHeadByte();
              switch (e5) {
                case 220:
                  return this.readU16();
                case 221:
                  return this.readU32();
                default:
                  if (e5 < 160) return e5 - 144;
                  throw new Error("Unrecognized array type byte: " + I(e5));
              }
            }, e4.prototype.pushMapState = function(e5) {
              if (e5 > this.maxMapLength) throw new Error("Max length exceeded: map length (" + e5 + ") > maxMapLengthLength (" + this.maxMapLength + ")");
              this.stack.push({ type: 1, size: e5, key: null, readCount: 0, map: {} });
            }, e4.prototype.pushArrayState = function(e5) {
              if (e5 > this.maxArrayLength) throw new Error("Max length exceeded: array length (" + e5 + ") > maxArrayLength (" + this.maxArrayLength + ")");
              this.stack.push({ type: 0, size: e5, array: new Array(e5), position: 0 });
            }, e4.prototype.decodeUtf8String = function(e5, t3) {
              var r3;
              if (e5 > this.maxStrLength) throw new Error("Max length exceeded: UTF-8 byte length (" + e5 + ") > maxStrLength (" + this.maxStrLength + ")");
              if (this.bytes.byteLength < this.pos + t3 + e5) throw D;
              var s3, n2 = this.pos + t3;
              return s3 = this.stateIsMapKey() && (null === (r3 = this.keyDecoder) || void 0 === r3 ? void 0 : r3.canBeCached(e5)) ? this.keyDecoder.decode(this.bytes, n2, e5) : i && e5 > h ? (function(e6, t4, r4) {
                var s4 = e6.subarray(t4, t4 + r4);
                return d.decode(s4);
              })(this.bytes, n2, e5) : l(this.bytes, n2, e5), this.pos += t3 + e5, s3;
            }, e4.prototype.stateIsMapKey = function() {
              return this.stack.length > 0 && 1 === this.stack[this.stack.length - 1].type;
            }, e4.prototype.decodeBinary = function(e5, t3) {
              if (e5 > this.maxBinLength) throw new Error("Max length exceeded: bin length (" + e5 + ") > maxBinLength (" + this.maxBinLength + ")");
              if (!this.hasRemaining(e5 + t3)) throw D;
              var r3 = this.pos + t3, s3 = this.bytes.subarray(r3, r3 + e5);
              return this.pos += t3 + e5, s3;
            }, e4.prototype.decodeExtension = function(e5, t3) {
              if (e5 > this.maxExtLength) throw new Error("Max length exceeded: ext length (" + e5 + ") > maxExtLength (" + this.maxExtLength + ")");
              var r3 = this.view.getInt8(this.pos + t3), s3 = this.decodeBinary(e5, t3 + 1);
              return this.extensionCodec.decode(s3, r3, this.context);
            }, e4.prototype.lookU8 = function() {
              return this.view.getUint8(this.pos);
            }, e4.prototype.lookU16 = function() {
              return this.view.getUint16(this.pos);
            }, e4.prototype.lookU32 = function() {
              return this.view.getUint32(this.pos);
            }, e4.prototype.readU8 = function() {
              var e5 = this.view.getUint8(this.pos);
              return this.pos++, e5;
            }, e4.prototype.readI8 = function() {
              var e5 = this.view.getInt8(this.pos);
              return this.pos++, e5;
            }, e4.prototype.readU16 = function() {
              var e5 = this.view.getUint16(this.pos);
              return this.pos += 2, e5;
            }, e4.prototype.readI16 = function() {
              var e5 = this.view.getInt16(this.pos);
              return this.pos += 2, e5;
            }, e4.prototype.readU32 = function() {
              var e5 = this.view.getUint32(this.pos);
              return this.pos += 4, e5;
            }, e4.prototype.readI32 = function() {
              var e5 = this.view.getInt32(this.pos);
              return this.pos += 4, e5;
            }, e4.prototype.readU64 = function() {
              var e5, t3, r3, s3, n2 = (e5 = this.view, t3 = this.pos, r3 = e5.getUint32(t3), s3 = e5.getUint32(t3 + 4), r3 > Math.floor(Number.MAX_SAFE_INTEGER / 4294967296) ? BigInt(r3) * BigInt(4294967296) + BigInt(s3) : 4294967296 * r3 + s3);
              return this.pos += 8, n2;
            }, e4.prototype.readI64 = function() {
              var e5 = g(this.view, this.pos);
              return this.pos += 8, e5;
            }, e4.prototype.readF32 = function() {
              var e5 = this.view.getFloat32(this.pos);
              return this.pos += 4, e5;
            }, e4.prototype.readF64 = function() {
              var e5 = this.view.getFloat64(this.pos);
              return this.pos += 8, e5;
            }, e4;
          })(), M = {};
          function W(e4, t3) {
            return void 0 === t3 && (t3 = M), new L(t3.extensionCodec, t3.context, t3.maxStrLength, t3.maxBinLength, t3.maxArrayLength, t3.maxMapLength, t3.maxExtLength).decode(e4);
          }
          var N = function(e4, t3) {
            var r3, s3, n2, i2, o2 = { label: 0, sent: function() {
              if (1 & n2[0]) throw n2[1];
              return n2[1];
            }, trys: [], ops: [] };
            return i2 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (i2[Symbol.iterator] = function() {
              return this;
            }), i2;
            function a2(i3) {
              return function(a3) {
                return (function(i4) {
                  if (r3) throw new TypeError("Generator is already executing.");
                  for (; o2; ) try {
                    if (r3 = 1, s3 && (n2 = 2 & i4[0] ? s3.return : i4[0] ? s3.throw || ((n2 = s3.return) && n2.call(s3), 0) : s3.next) && !(n2 = n2.call(s3, i4[1])).done) return n2;
                    switch (s3 = 0, n2 && (i4 = [2 & i4[0], n2.value]), i4[0]) {
                      case 0:
                      case 1:
                        n2 = i4;
                        break;
                      case 4:
                        return o2.label++, { value: i4[1], done: false };
                      case 5:
                        o2.label++, s3 = i4[1], i4 = [0];
                        continue;
                      case 7:
                        i4 = o2.ops.pop(), o2.trys.pop();
                        continue;
                      default:
                        if (!((n2 = (n2 = o2.trys).length > 0 && n2[n2.length - 1]) || 6 !== i4[0] && 2 !== i4[0])) {
                          o2 = 0;
                          continue;
                        }
                        if (3 === i4[0] && (!n2 || i4[1] > n2[0] && i4[1] < n2[3])) {
                          o2.label = i4[1];
                          break;
                        }
                        if (6 === i4[0] && o2.label < n2[1]) {
                          o2.label = n2[1], n2 = i4;
                          break;
                        }
                        if (n2 && o2.label < n2[2]) {
                          o2.label = n2[2], o2.ops.push(i4);
                          break;
                        }
                        n2[2] && o2.ops.pop(), o2.trys.pop();
                        continue;
                    }
                    i4 = t3.call(e4, o2);
                  } catch (e5) {
                    i4 = [6, e5], s3 = 0;
                  } finally {
                    r3 = n2 = 0;
                  }
                  if (5 & i4[0]) throw i4[1];
                  return { value: i4[0] ? i4[1] : void 0, done: true };
                })([i3, a3]);
              };
            }
          }, K = function(e4) {
            return this instanceof K ? (this.v = e4, this) : new K(e4);
          }, F = function(e4, t3, r3) {
            if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
            var s3, n2 = r3.apply(e4, t3 || []), i2 = [];
            return s3 = {}, o2("next"), o2("throw"), o2("return"), s3[Symbol.asyncIterator] = function() {
              return this;
            }, s3;
            function o2(e5) {
              n2[e5] && (s3[e5] = function(t4) {
                return new Promise((function(r4, s4) {
                  i2.push([e5, t4, r4, s4]) > 1 || a2(e5, t4);
                }));
              });
            }
            function a2(e5, t4) {
              try {
                (r4 = n2[e5](t4)).value instanceof K ? Promise.resolve(r4.value.v).then(c2, u2) : l2(i2[0][2], r4);
              } catch (e6) {
                l2(i2[0][3], e6);
              }
              var r4;
            }
            function c2(e5) {
              a2("next", e5);
            }
            function u2(e5) {
              a2("throw", e5);
            }
            function l2(e5, t4) {
              e5(t4), i2.shift(), i2.length && a2(i2[0][0], i2[0][1]);
            }
          };
          function z(e4) {
            return null != e4[Symbol.asyncIterator] ? e4 : (function(e5) {
              return F(this, arguments, (function() {
                var t3, r3, s3, n2;
                return N(this, (function(i2) {
                  switch (i2.label) {
                    case 0:
                      t3 = e5.getReader(), i2.label = 1;
                    case 1:
                      i2.trys.push([1, , 9, 10]), i2.label = 2;
                    case 2:
                      return [4, K(t3.read())];
                    case 3:
                      return r3 = i2.sent(), s3 = r3.done, n2 = r3.value, s3 ? [4, K(void 0)] : [3, 5];
                    case 4:
                      return [2, i2.sent()];
                    case 5:
                      return (function(e6) {
                        if (null == e6) throw new Error("Assertion Failure: value must not be null nor undefined");
                      })(n2), [4, K(n2)];
                    case 6:
                      return [4, i2.sent()];
                    case 7:
                      return i2.sent(), [3, 2];
                    case 8:
                      return [3, 10];
                    case 9:
                      return t3.releaseLock(), [7];
                    case 10:
                      return [2];
                  }
                }));
              }));
            })(e4);
          }
          var V = function(e4, t3, r3, s3) {
            return new (r3 || (r3 = Promise))((function(n2, i2) {
              function o2(e5) {
                try {
                  c2(s3.next(e5));
                } catch (e6) {
                  i2(e6);
                }
              }
              function a2(e5) {
                try {
                  c2(s3.throw(e5));
                } catch (e6) {
                  i2(e6);
                }
              }
              function c2(e5) {
                var t4;
                e5.done ? n2(e5.value) : (t4 = e5.value, t4 instanceof r3 ? t4 : new r3((function(e6) {
                  e6(t4);
                }))).then(o2, a2);
              }
              c2((s3 = s3.apply(e4, t3 || [])).next());
            }));
          }, H = function(e4, t3) {
            var r3, s3, n2, i2, o2 = { label: 0, sent: function() {
              if (1 & n2[0]) throw n2[1];
              return n2[1];
            }, trys: [], ops: [] };
            return i2 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (i2[Symbol.iterator] = function() {
              return this;
            }), i2;
            function a2(i3) {
              return function(a3) {
                return (function(i4) {
                  if (r3) throw new TypeError("Generator is already executing.");
                  for (; o2; ) try {
                    if (r3 = 1, s3 && (n2 = 2 & i4[0] ? s3.return : i4[0] ? s3.throw || ((n2 = s3.return) && n2.call(s3), 0) : s3.next) && !(n2 = n2.call(s3, i4[1])).done) return n2;
                    switch (s3 = 0, n2 && (i4 = [2 & i4[0], n2.value]), i4[0]) {
                      case 0:
                      case 1:
                        n2 = i4;
                        break;
                      case 4:
                        return o2.label++, { value: i4[1], done: false };
                      case 5:
                        o2.label++, s3 = i4[1], i4 = [0];
                        continue;
                      case 7:
                        i4 = o2.ops.pop(), o2.trys.pop();
                        continue;
                      default:
                        if (!((n2 = (n2 = o2.trys).length > 0 && n2[n2.length - 1]) || 6 !== i4[0] && 2 !== i4[0])) {
                          o2 = 0;
                          continue;
                        }
                        if (3 === i4[0] && (!n2 || i4[1] > n2[0] && i4[1] < n2[3])) {
                          o2.label = i4[1];
                          break;
                        }
                        if (6 === i4[0] && o2.label < n2[1]) {
                          o2.label = n2[1], n2 = i4;
                          break;
                        }
                        if (n2 && o2.label < n2[2]) {
                          o2.label = n2[2], o2.ops.push(i4);
                          break;
                        }
                        n2[2] && o2.ops.pop(), o2.trys.pop();
                        continue;
                    }
                    i4 = t3.call(e4, o2);
                  } catch (e5) {
                    i4 = [6, e5], s3 = 0;
                  } finally {
                    r3 = n2 = 0;
                  }
                  if (5 & i4[0]) throw i4[1];
                  return { value: i4[0] ? i4[1] : void 0, done: true };
                })([i3, a3]);
              };
            }
          };
          function G(e4, t3) {
            return void 0 === t3 && (t3 = M), V(this, void 0, void 0, (function() {
              var r3;
              return H(this, (function(s3) {
                return r3 = z(e4), [2, new L(t3.extensionCodec, t3.context, t3.maxStrLength, t3.maxBinLength, t3.maxArrayLength, t3.maxMapLength, t3.maxExtLength).decodeAsync(r3)];
              }));
            }));
          }
          function Y(e4, t3) {
            void 0 === t3 && (t3 = M);
            var r3 = z(e4);
            return new L(t3.extensionCodec, t3.context, t3.maxStrLength, t3.maxBinLength, t3.maxArrayLength, t3.maxMapLength, t3.maxExtLength).decodeArrayStream(r3);
          }
          function J(e4, t3) {
            void 0 === t3 && (t3 = M);
            var r3 = z(e4);
            return new L(t3.extensionCodec, t3.context, t3.maxStrLength, t3.maxBinLength, t3.maxArrayLength, t3.maxMapLength, t3.maxExtLength).decodeStream(r3);
          }
        }]);
      }, 155: (e2, t2) => {
        "use strict";
        t2.byteLength = function(e3) {
          var t3 = a(e3), r3 = t3[0], s3 = t3[1];
          return 3 * (r3 + s3) / 4 - s3;
        }, t2.toByteArray = function(e3) {
          var t3, r3, i2 = a(e3), o2 = i2[0], c2 = i2[1], u = new n((function(e4, t4, r4) {
            return 3 * (t4 + r4) / 4 - r4;
          })(0, o2, c2)), l = 0, d = c2 > 0 ? o2 - 4 : o2;
          for (r3 = 0; r3 < d; r3 += 4) t3 = s2[e3.charCodeAt(r3)] << 18 | s2[e3.charCodeAt(r3 + 1)] << 12 | s2[e3.charCodeAt(r3 + 2)] << 6 | s2[e3.charCodeAt(r3 + 3)], u[l++] = t3 >> 16 & 255, u[l++] = t3 >> 8 & 255, u[l++] = 255 & t3;
          return 2 === c2 && (t3 = s2[e3.charCodeAt(r3)] << 2 | s2[e3.charCodeAt(r3 + 1)] >> 4, u[l++] = 255 & t3), 1 === c2 && (t3 = s2[e3.charCodeAt(r3)] << 10 | s2[e3.charCodeAt(r3 + 1)] << 4 | s2[e3.charCodeAt(r3 + 2)] >> 2, u[l++] = t3 >> 8 & 255, u[l++] = 255 & t3), u;
        }, t2.fromByteArray = function(e3) {
          for (var t3, s3 = e3.length, n2 = s3 % 3, i2 = [], o2 = 16383, a2 = 0, u = s3 - n2; a2 < u; a2 += o2) i2.push(c(e3, a2, a2 + o2 > u ? u : a2 + o2));
          return 1 === n2 ? (t3 = e3[s3 - 1], i2.push(r2[t3 >> 2] + r2[t3 << 4 & 63] + "==")) : 2 === n2 && (t3 = (e3[s3 - 2] << 8) + e3[s3 - 1], i2.push(r2[t3 >> 10] + r2[t3 >> 4 & 63] + r2[t3 << 2 & 63] + "=")), i2.join("");
        };
        for (var r2 = [], s2 = [], n = "undefined" != typeof Uint8Array ? Uint8Array : Array, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", o = 0; o < 64; ++o) r2[o] = i[o], s2[i.charCodeAt(o)] = o;
        function a(e3) {
          var t3 = e3.length;
          if (t3 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
          var r3 = e3.indexOf("=");
          return -1 === r3 && (r3 = t3), [r3, r3 === t3 ? 0 : 4 - r3 % 4];
        }
        function c(e3, t3, s3) {
          for (var n2, i2, o2 = [], a2 = t3; a2 < s3; a2 += 3) n2 = (e3[a2] << 16 & 16711680) + (e3[a2 + 1] << 8 & 65280) + (255 & e3[a2 + 2]), o2.push(r2[(i2 = n2) >> 18 & 63] + r2[i2 >> 12 & 63] + r2[i2 >> 6 & 63] + r2[63 & i2]);
          return o2.join("");
        }
        s2["-".charCodeAt(0)] = 62, s2["_".charCodeAt(0)] = 63;
      }, 117: function(e2, t2, r2) {
        var s2;
        !(function(n) {
          "use strict";
          var i, o = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, a = Math.ceil, c = Math.floor, u = "[BigNumber Error] ", l = u + "Number primitive has more than 15 significant digits: ", d = 1e14, h = 14, p = 9007199254740991, f = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], g = 1e7, m = 1e9;
          function y(e3) {
            var t3 = 0 | e3;
            return e3 > 0 || e3 === t3 ? t3 : t3 - 1;
          }
          function w(e3) {
            for (var t3, r3, s3 = 1, n2 = e3.length, i2 = e3[0] + ""; s3 < n2; ) {
              for (t3 = e3[s3++] + "", r3 = h - t3.length; r3--; t3 = "0" + t3) ;
              i2 += t3;
            }
            for (n2 = i2.length; 48 === i2.charCodeAt(--n2); ) ;
            return i2.slice(0, n2 + 1 || 1);
          }
          function b(e3, t3) {
            var r3, s3, n2 = e3.c, i2 = t3.c, o2 = e3.s, a2 = t3.s, c2 = e3.e, u2 = t3.e;
            if (!o2 || !a2) return null;
            if (r3 = n2 && !n2[0], s3 = i2 && !i2[0], r3 || s3) return r3 ? s3 ? 0 : -a2 : o2;
            if (o2 != a2) return o2;
            if (r3 = o2 < 0, s3 = c2 == u2, !n2 || !i2) return s3 ? 0 : !n2 ^ r3 ? 1 : -1;
            if (!s3) return c2 > u2 ^ r3 ? 1 : -1;
            for (a2 = (c2 = n2.length) < (u2 = i2.length) ? c2 : u2, o2 = 0; o2 < a2; o2++) if (n2[o2] != i2[o2]) return n2[o2] > i2[o2] ^ r3 ? 1 : -1;
            return c2 == u2 ? 0 : c2 > u2 ^ r3 ? 1 : -1;
          }
          function v(e3, t3, r3, s3) {
            if (e3 < t3 || e3 > r3 || e3 !== c(e3)) throw Error(u + (s3 || "Argument") + ("number" == typeof e3 ? e3 < t3 || e3 > r3 ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(e3));
          }
          function x(e3) {
            var t3 = e3.c.length - 1;
            return y(e3.e / h) == t3 && e3.c[t3] % 2 != 0;
          }
          function _(e3, t3) {
            return (e3.length > 1 ? e3.charAt(0) + "." + e3.slice(1) : e3) + (t3 < 0 ? "e" : "e+") + t3;
          }
          function A(e3, t3, r3) {
            var s3, n2;
            if (t3 < 0) {
              for (n2 = r3 + "."; ++t3; n2 += r3) ;
              e3 = n2 + e3;
            } else if (++t3 > (s3 = e3.length)) {
              for (n2 = r3, t3 -= s3; --t3; n2 += r3) ;
              e3 += n2;
            } else t3 < s3 && (e3 = e3.slice(0, t3) + "." + e3.slice(t3));
            return e3;
          }
          i = (function e3(t3) {
            var r3, s3, n2, i2, E, k, S, R, T, I, B = K.prototype = { constructor: K, toString: null, valueOf: null }, U = new K(1), P = 20, j = 4, q = -7, $ = 21, C = -1e7, D = 1e7, O = false, L = 1, M = 0, W = { prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: " ", suffix: "" }, N = "0123456789abcdefghijklmnopqrstuvwxyz";
            function K(e4, t4) {
              var r4, i3, a2, u2, d2, f2, g2, m2, y2 = this;
              if (!(y2 instanceof K)) return new K(e4, t4);
              if (null == t4) {
                if (e4 && true === e4._isBigNumber) return y2.s = e4.s, void (!e4.c || e4.e > D ? y2.c = y2.e = null : e4.e < C ? y2.c = [y2.e = 0] : (y2.e = e4.e, y2.c = e4.c.slice()));
                if ((f2 = "number" == typeof e4) && 0 * e4 == 0) {
                  if (y2.s = 1 / e4 < 0 ? (e4 = -e4, -1) : 1, e4 === ~~e4) {
                    for (u2 = 0, d2 = e4; d2 >= 10; d2 /= 10, u2++) ;
                    return void (u2 > D ? y2.c = y2.e = null : (y2.e = u2, y2.c = [e4]));
                  }
                  m2 = String(e4);
                } else {
                  if (!o.test(m2 = String(e4))) return n2(y2, m2, f2);
                  y2.s = 45 == m2.charCodeAt(0) ? (m2 = m2.slice(1), -1) : 1;
                }
                (u2 = m2.indexOf(".")) > -1 && (m2 = m2.replace(".", "")), (d2 = m2.search(/e/i)) > 0 ? (u2 < 0 && (u2 = d2), u2 += +m2.slice(d2 + 1), m2 = m2.substring(0, d2)) : u2 < 0 && (u2 = m2.length);
              } else {
                if (v(t4, 2, N.length, "Base"), 10 == t4) return H(y2 = new K(e4), P + y2.e + 1, j);
                if (m2 = String(e4), f2 = "number" == typeof e4) {
                  if (0 * e4 != 0) return n2(y2, m2, f2, t4);
                  if (y2.s = 1 / e4 < 0 ? (m2 = m2.slice(1), -1) : 1, K.DEBUG && m2.replace(/^0\.0*|\./, "").length > 15) throw Error(l + e4);
                } else y2.s = 45 === m2.charCodeAt(0) ? (m2 = m2.slice(1), -1) : 1;
                for (r4 = N.slice(0, t4), u2 = d2 = 0, g2 = m2.length; d2 < g2; d2++) if (r4.indexOf(i3 = m2.charAt(d2)) < 0) {
                  if ("." == i3) {
                    if (d2 > u2) {
                      u2 = g2;
                      continue;
                    }
                  } else if (!a2 && (m2 == m2.toUpperCase() && (m2 = m2.toLowerCase()) || m2 == m2.toLowerCase() && (m2 = m2.toUpperCase()))) {
                    a2 = true, d2 = -1, u2 = 0;
                    continue;
                  }
                  return n2(y2, String(e4), f2, t4);
                }
                f2 = false, (u2 = (m2 = s3(m2, t4, 10, y2.s)).indexOf(".")) > -1 ? m2 = m2.replace(".", "") : u2 = m2.length;
              }
              for (d2 = 0; 48 === m2.charCodeAt(d2); d2++) ;
              for (g2 = m2.length; 48 === m2.charCodeAt(--g2); ) ;
              if (m2 = m2.slice(d2, ++g2)) {
                if (g2 -= d2, f2 && K.DEBUG && g2 > 15 && (e4 > p || e4 !== c(e4))) throw Error(l + y2.s * e4);
                if ((u2 = u2 - d2 - 1) > D) y2.c = y2.e = null;
                else if (u2 < C) y2.c = [y2.e = 0];
                else {
                  if (y2.e = u2, y2.c = [], d2 = (u2 + 1) % h, u2 < 0 && (d2 += h), d2 < g2) {
                    for (d2 && y2.c.push(+m2.slice(0, d2)), g2 -= h; d2 < g2; ) y2.c.push(+m2.slice(d2, d2 += h));
                    d2 = h - (m2 = m2.slice(d2)).length;
                  } else d2 -= g2;
                  for (; d2--; m2 += "0") ;
                  y2.c.push(+m2);
                }
              } else y2.c = [y2.e = 0];
            }
            function F(e4, t4, r4, s4) {
              var n3, i3, o2, a2, c2;
              if (null == r4 ? r4 = j : v(r4, 0, 8), !e4.c) return e4.toString();
              if (n3 = e4.c[0], o2 = e4.e, null == t4) c2 = w(e4.c), c2 = 1 == s4 || 2 == s4 && (o2 <= q || o2 >= $) ? _(c2, o2) : A(c2, o2, "0");
              else if (i3 = (e4 = H(new K(e4), t4, r4)).e, a2 = (c2 = w(e4.c)).length, 1 == s4 || 2 == s4 && (t4 <= i3 || i3 <= q)) {
                for (; a2 < t4; c2 += "0", a2++) ;
                c2 = _(c2, i3);
              } else if (t4 -= o2, c2 = A(c2, i3, "0"), i3 + 1 > a2) {
                if (--t4 > 0) for (c2 += "."; t4--; c2 += "0") ;
              } else if ((t4 += i3 - a2) > 0) for (i3 + 1 == a2 && (c2 += "."); t4--; c2 += "0") ;
              return e4.s < 0 && n3 ? "-" + c2 : c2;
            }
            function z(e4, t4) {
              for (var r4, s4 = 1, n3 = new K(e4[0]); s4 < e4.length; s4++) {
                if (!(r4 = new K(e4[s4])).s) {
                  n3 = r4;
                  break;
                }
                t4.call(n3, r4) && (n3 = r4);
              }
              return n3;
            }
            function V(e4, t4, r4) {
              for (var s4 = 1, n3 = t4.length; !t4[--n3]; t4.pop()) ;
              for (n3 = t4[0]; n3 >= 10; n3 /= 10, s4++) ;
              return (r4 = s4 + r4 * h - 1) > D ? e4.c = e4.e = null : r4 < C ? e4.c = [e4.e = 0] : (e4.e = r4, e4.c = t4), e4;
            }
            function H(e4, t4, r4, s4) {
              var n3, i3, o2, u2, l2, p2, g2, m2 = e4.c, y2 = f;
              if (m2) {
                e: {
                  for (n3 = 1, u2 = m2[0]; u2 >= 10; u2 /= 10, n3++) ;
                  if ((i3 = t4 - n3) < 0) i3 += h, o2 = t4, g2 = (l2 = m2[p2 = 0]) / y2[n3 - o2 - 1] % 10 | 0;
                  else if ((p2 = a((i3 + 1) / h)) >= m2.length) {
                    if (!s4) break e;
                    for (; m2.length <= p2; m2.push(0)) ;
                    l2 = g2 = 0, n3 = 1, o2 = (i3 %= h) - h + 1;
                  } else {
                    for (l2 = u2 = m2[p2], n3 = 1; u2 >= 10; u2 /= 10, n3++) ;
                    g2 = (o2 = (i3 %= h) - h + n3) < 0 ? 0 : l2 / y2[n3 - o2 - 1] % 10 | 0;
                  }
                  if (s4 = s4 || t4 < 0 || null != m2[p2 + 1] || (o2 < 0 ? l2 : l2 % y2[n3 - o2 - 1]), s4 = r4 < 4 ? (g2 || s4) && (0 == r4 || r4 == (e4.s < 0 ? 3 : 2)) : g2 > 5 || 5 == g2 && (4 == r4 || s4 || 6 == r4 && (i3 > 0 ? o2 > 0 ? l2 / y2[n3 - o2] : 0 : m2[p2 - 1]) % 10 & 1 || r4 == (e4.s < 0 ? 8 : 7)), t4 < 1 || !m2[0]) return m2.length = 0, s4 ? (t4 -= e4.e + 1, m2[0] = y2[(h - t4 % h) % h], e4.e = -t4 || 0) : m2[0] = e4.e = 0, e4;
                  if (0 == i3 ? (m2.length = p2, u2 = 1, p2--) : (m2.length = p2 + 1, u2 = y2[h - i3], m2[p2] = o2 > 0 ? c(l2 / y2[n3 - o2] % y2[o2]) * u2 : 0), s4) for (; ; ) {
                    if (0 == p2) {
                      for (i3 = 1, o2 = m2[0]; o2 >= 10; o2 /= 10, i3++) ;
                      for (o2 = m2[0] += u2, u2 = 1; o2 >= 10; o2 /= 10, u2++) ;
                      i3 != u2 && (e4.e++, m2[0] == d && (m2[0] = 1));
                      break;
                    }
                    if (m2[p2] += u2, m2[p2] != d) break;
                    m2[p2--] = 0, u2 = 1;
                  }
                  for (i3 = m2.length; 0 === m2[--i3]; m2.pop()) ;
                }
                e4.e > D ? e4.c = e4.e = null : e4.e < C && (e4.c = [e4.e = 0]);
              }
              return e4;
            }
            function G(e4) {
              var t4, r4 = e4.e;
              return null === r4 ? e4.toString() : (t4 = w(e4.c), t4 = r4 <= q || r4 >= $ ? _(t4, r4) : A(t4, r4, "0"), e4.s < 0 ? "-" + t4 : t4);
            }
            return K.clone = e3, K.ROUND_UP = 0, K.ROUND_DOWN = 1, K.ROUND_CEIL = 2, K.ROUND_FLOOR = 3, K.ROUND_HALF_UP = 4, K.ROUND_HALF_DOWN = 5, K.ROUND_HALF_EVEN = 6, K.ROUND_HALF_CEIL = 7, K.ROUND_HALF_FLOOR = 8, K.EUCLID = 9, K.config = K.set = function(e4) {
              var t4, r4;
              if (null != e4) {
                if ("object" != typeof e4) throw Error(u + "Object expected: " + e4);
                if (e4.hasOwnProperty(t4 = "DECIMAL_PLACES") && (v(r4 = e4[t4], 0, m, t4), P = r4), e4.hasOwnProperty(t4 = "ROUNDING_MODE") && (v(r4 = e4[t4], 0, 8, t4), j = r4), e4.hasOwnProperty(t4 = "EXPONENTIAL_AT") && ((r4 = e4[t4]) && r4.pop ? (v(r4[0], -m, 0, t4), v(r4[1], 0, m, t4), q = r4[0], $ = r4[1]) : (v(r4, -m, m, t4), q = -($ = r4 < 0 ? -r4 : r4))), e4.hasOwnProperty(t4 = "RANGE")) if ((r4 = e4[t4]) && r4.pop) v(r4[0], -m, -1, t4), v(r4[1], 1, m, t4), C = r4[0], D = r4[1];
                else {
                  if (v(r4, -m, m, t4), !r4) throw Error(u + t4 + " cannot be zero: " + r4);
                  C = -(D = r4 < 0 ? -r4 : r4);
                }
                if (e4.hasOwnProperty(t4 = "CRYPTO")) {
                  if ((r4 = e4[t4]) !== !!r4) throw Error(u + t4 + " not true or false: " + r4);
                  if (r4) {
                    if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw O = !r4, Error(u + "crypto unavailable");
                    O = r4;
                  } else O = r4;
                }
                if (e4.hasOwnProperty(t4 = "MODULO_MODE") && (v(r4 = e4[t4], 0, 9, t4), L = r4), e4.hasOwnProperty(t4 = "POW_PRECISION") && (v(r4 = e4[t4], 0, m, t4), M = r4), e4.hasOwnProperty(t4 = "FORMAT")) {
                  if ("object" != typeof (r4 = e4[t4])) throw Error(u + t4 + " not an object: " + r4);
                  W = r4;
                }
                if (e4.hasOwnProperty(t4 = "ALPHABET")) {
                  if ("string" != typeof (r4 = e4[t4]) || /^.?$|[+\-.\s]|(.).*\1/.test(r4)) throw Error(u + t4 + " invalid: " + r4);
                  N = r4;
                }
              }
              return { DECIMAL_PLACES: P, ROUNDING_MODE: j, EXPONENTIAL_AT: [q, $], RANGE: [C, D], CRYPTO: O, MODULO_MODE: L, POW_PRECISION: M, FORMAT: W, ALPHABET: N };
            }, K.isBigNumber = function(e4) {
              if (!e4 || true !== e4._isBigNumber) return false;
              if (!K.DEBUG) return true;
              var t4, r4, s4 = e4.c, n3 = e4.e, i3 = e4.s;
              e: if ("[object Array]" == {}.toString.call(s4)) {
                if ((1 === i3 || -1 === i3) && n3 >= -m && n3 <= m && n3 === c(n3)) {
                  if (0 === s4[0]) {
                    if (0 === n3 && 1 === s4.length) return true;
                    break e;
                  }
                  if ((t4 = (n3 + 1) % h) < 1 && (t4 += h), String(s4[0]).length == t4) {
                    for (t4 = 0; t4 < s4.length; t4++) if ((r4 = s4[t4]) < 0 || r4 >= d || r4 !== c(r4)) break e;
                    if (0 !== r4) return true;
                  }
                }
              } else if (null === s4 && null === n3 && (null === i3 || 1 === i3 || -1 === i3)) return true;
              throw Error(u + "Invalid BigNumber: " + e4);
            }, K.maximum = K.max = function() {
              return z(arguments, B.lt);
            }, K.minimum = K.min = function() {
              return z(arguments, B.gt);
            }, K.random = (i2 = 9007199254740992, E = Math.random() * i2 & 2097151 ? function() {
              return c(Math.random() * i2);
            } : function() {
              return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
            }, function(e4) {
              var t4, r4, s4, n3, i3, o2 = 0, l2 = [], d2 = new K(U);
              if (null == e4 ? e4 = P : v(e4, 0, m), n3 = a(e4 / h), O) if (crypto.getRandomValues) {
                for (t4 = crypto.getRandomValues(new Uint32Array(n3 *= 2)); o2 < n3; ) (i3 = 131072 * t4[o2] + (t4[o2 + 1] >>> 11)) >= 9e15 ? (r4 = crypto.getRandomValues(new Uint32Array(2)), t4[o2] = r4[0], t4[o2 + 1] = r4[1]) : (l2.push(i3 % 1e14), o2 += 2);
                o2 = n3 / 2;
              } else {
                if (!crypto.randomBytes) throw O = false, Error(u + "crypto unavailable");
                for (t4 = crypto.randomBytes(n3 *= 7); o2 < n3; ) (i3 = 281474976710656 * (31 & t4[o2]) + 1099511627776 * t4[o2 + 1] + 4294967296 * t4[o2 + 2] + 16777216 * t4[o2 + 3] + (t4[o2 + 4] << 16) + (t4[o2 + 5] << 8) + t4[o2 + 6]) >= 9e15 ? crypto.randomBytes(7).copy(t4, o2) : (l2.push(i3 % 1e14), o2 += 7);
                o2 = n3 / 7;
              }
              if (!O) for (; o2 < n3; ) (i3 = E()) < 9e15 && (l2[o2++] = i3 % 1e14);
              for (n3 = l2[--o2], e4 %= h, n3 && e4 && (i3 = f[h - e4], l2[o2] = c(n3 / i3) * i3); 0 === l2[o2]; l2.pop(), o2--) ;
              if (o2 < 0) l2 = [s4 = 0];
              else {
                for (s4 = -1; 0 === l2[0]; l2.splice(0, 1), s4 -= h) ;
                for (o2 = 1, i3 = l2[0]; i3 >= 10; i3 /= 10, o2++) ;
                o2 < h && (s4 -= h - o2);
              }
              return d2.e = s4, d2.c = l2, d2;
            }), K.sum = function() {
              for (var e4 = 1, t4 = arguments, r4 = new K(t4[0]); e4 < t4.length; ) r4 = r4.plus(t4[e4++]);
              return r4;
            }, s3 = /* @__PURE__ */ (function() {
              var e4 = "0123456789";
              function t4(e5, t5, r4, s4) {
                for (var n3, i3, o2 = [0], a2 = 0, c2 = e5.length; a2 < c2; ) {
                  for (i3 = o2.length; i3--; o2[i3] *= t5) ;
                  for (o2[0] += s4.indexOf(e5.charAt(a2++)), n3 = 0; n3 < o2.length; n3++) o2[n3] > r4 - 1 && (null == o2[n3 + 1] && (o2[n3 + 1] = 0), o2[n3 + 1] += o2[n3] / r4 | 0, o2[n3] %= r4);
                }
                return o2.reverse();
              }
              return function(s4, n3, i3, o2, a2) {
                var c2, u2, l2, d2, h2, p2, f2, g2, m2 = s4.indexOf("."), y2 = P, b2 = j;
                for (m2 >= 0 && (d2 = M, M = 0, s4 = s4.replace(".", ""), p2 = (g2 = new K(n3)).pow(s4.length - m2), M = d2, g2.c = t4(A(w(p2.c), p2.e, "0"), 10, i3, e4), g2.e = g2.c.length), l2 = d2 = (f2 = t4(s4, n3, i3, a2 ? (c2 = N, e4) : (c2 = e4, N))).length; 0 == f2[--d2]; f2.pop()) ;
                if (!f2[0]) return c2.charAt(0);
                if (m2 < 0 ? --l2 : (p2.c = f2, p2.e = l2, p2.s = o2, f2 = (p2 = r3(p2, g2, y2, b2, i3)).c, h2 = p2.r, l2 = p2.e), m2 = f2[u2 = l2 + y2 + 1], d2 = i3 / 2, h2 = h2 || u2 < 0 || null != f2[u2 + 1], h2 = b2 < 4 ? (null != m2 || h2) && (0 == b2 || b2 == (p2.s < 0 ? 3 : 2)) : m2 > d2 || m2 == d2 && (4 == b2 || h2 || 6 == b2 && 1 & f2[u2 - 1] || b2 == (p2.s < 0 ? 8 : 7)), u2 < 1 || !f2[0]) s4 = h2 ? A(c2.charAt(1), -y2, c2.charAt(0)) : c2.charAt(0);
                else {
                  if (f2.length = u2, h2) for (--i3; ++f2[--u2] > i3; ) f2[u2] = 0, u2 || (++l2, f2 = [1].concat(f2));
                  for (d2 = f2.length; !f2[--d2]; ) ;
                  for (m2 = 0, s4 = ""; m2 <= d2; s4 += c2.charAt(f2[m2++])) ;
                  s4 = A(s4, l2, c2.charAt(0));
                }
                return s4;
              };
            })(), r3 = /* @__PURE__ */ (function() {
              function e4(e5, t5, r5) {
                var s4, n3, i3, o2, a2 = 0, c2 = e5.length, u2 = t5 % g, l2 = t5 / g | 0;
                for (e5 = e5.slice(); c2--; ) a2 = ((n3 = u2 * (i3 = e5[c2] % g) + (s4 = l2 * i3 + (o2 = e5[c2] / g | 0) * u2) % g * g + a2) / r5 | 0) + (s4 / g | 0) + l2 * o2, e5[c2] = n3 % r5;
                return a2 && (e5 = [a2].concat(e5)), e5;
              }
              function t4(e5, t5, r5, s4) {
                var n3, i3;
                if (r5 != s4) i3 = r5 > s4 ? 1 : -1;
                else for (n3 = i3 = 0; n3 < r5; n3++) if (e5[n3] != t5[n3]) {
                  i3 = e5[n3] > t5[n3] ? 1 : -1;
                  break;
                }
                return i3;
              }
              function r4(e5, t5, r5, s4) {
                for (var n3 = 0; r5--; ) e5[r5] -= n3, n3 = e5[r5] < t5[r5] ? 1 : 0, e5[r5] = n3 * s4 + e5[r5] - t5[r5];
                for (; !e5[0] && e5.length > 1; e5.splice(0, 1)) ;
              }
              return function(s4, n3, i3, o2, a2) {
                var u2, l2, p2, f2, g2, m2, w2, b2, v2, x2, _2, A2, E2, k2, S2, R2, T2, I2 = s4.s == n3.s ? 1 : -1, B2 = s4.c, U2 = n3.c;
                if (!(B2 && B2[0] && U2 && U2[0])) return new K(s4.s && n3.s && (B2 ? !U2 || B2[0] != U2[0] : U2) ? B2 && 0 == B2[0] || !U2 ? 0 * I2 : I2 / 0 : NaN);
                for (v2 = (b2 = new K(I2)).c = [], I2 = i3 + (l2 = s4.e - n3.e) + 1, a2 || (a2 = d, l2 = y(s4.e / h) - y(n3.e / h), I2 = I2 / h | 0), p2 = 0; U2[p2] == (B2[p2] || 0); p2++) ;
                if (U2[p2] > (B2[p2] || 0) && l2--, I2 < 0) v2.push(1), f2 = true;
                else {
                  for (k2 = B2.length, R2 = U2.length, p2 = 0, I2 += 2, (g2 = c(a2 / (U2[0] + 1))) > 1 && (U2 = e4(U2, g2, a2), B2 = e4(B2, g2, a2), R2 = U2.length, k2 = B2.length), E2 = R2, _2 = (x2 = B2.slice(0, R2)).length; _2 < R2; x2[_2++] = 0) ;
                  T2 = U2.slice(), T2 = [0].concat(T2), S2 = U2[0], U2[1] >= a2 / 2 && S2++;
                  do {
                    if (g2 = 0, (u2 = t4(U2, x2, R2, _2)) < 0) {
                      if (A2 = x2[0], R2 != _2 && (A2 = A2 * a2 + (x2[1] || 0)), (g2 = c(A2 / S2)) > 1) for (g2 >= a2 && (g2 = a2 - 1), w2 = (m2 = e4(U2, g2, a2)).length, _2 = x2.length; 1 == t4(m2, x2, w2, _2); ) g2--, r4(m2, R2 < w2 ? T2 : U2, w2, a2), w2 = m2.length, u2 = 1;
                      else 0 == g2 && (u2 = g2 = 1), w2 = (m2 = U2.slice()).length;
                      if (w2 < _2 && (m2 = [0].concat(m2)), r4(x2, m2, _2, a2), _2 = x2.length, -1 == u2) for (; t4(U2, x2, R2, _2) < 1; ) g2++, r4(x2, R2 < _2 ? T2 : U2, _2, a2), _2 = x2.length;
                    } else 0 === u2 && (g2++, x2 = [0]);
                    v2[p2++] = g2, x2[0] ? x2[_2++] = B2[E2] || 0 : (x2 = [B2[E2]], _2 = 1);
                  } while ((E2++ < k2 || null != x2[0]) && I2--);
                  f2 = null != x2[0], v2[0] || v2.splice(0, 1);
                }
                if (a2 == d) {
                  for (p2 = 1, I2 = v2[0]; I2 >= 10; I2 /= 10, p2++) ;
                  H(b2, i3 + (b2.e = p2 + l2 * h - 1) + 1, o2, f2);
                } else b2.e = l2, b2.r = +f2;
                return b2;
              };
            })(), k = /^(-?)0([xbo])(?=\w[\w.]*$)/i, S = /^([^.]+)\.$/, R = /^\.([^.]+)$/, T = /^-?(Infinity|NaN)$/, I = /^\s*\+(?=[\w.])|^\s+|\s+$/g, n2 = function(e4, t4, r4, s4) {
              var n3, i3 = r4 ? t4 : t4.replace(I, "");
              if (T.test(i3)) e4.s = isNaN(i3) ? null : i3 < 0 ? -1 : 1;
              else {
                if (!r4 && (i3 = i3.replace(k, (function(e5, t5, r5) {
                  return n3 = "x" == (r5 = r5.toLowerCase()) ? 16 : "b" == r5 ? 2 : 8, s4 && s4 != n3 ? e5 : t5;
                })), s4 && (n3 = s4, i3 = i3.replace(S, "$1").replace(R, "0.$1")), t4 != i3)) return new K(i3, n3);
                if (K.DEBUG) throw Error(u + "Not a" + (s4 ? " base " + s4 : "") + " number: " + t4);
                e4.s = null;
              }
              e4.c = e4.e = null;
            }, B.absoluteValue = B.abs = function() {
              var e4 = new K(this);
              return e4.s < 0 && (e4.s = 1), e4;
            }, B.comparedTo = function(e4, t4) {
              return b(this, new K(e4, t4));
            }, B.decimalPlaces = B.dp = function(e4, t4) {
              var r4, s4, n3, i3 = this;
              if (null != e4) return v(e4, 0, m), null == t4 ? t4 = j : v(t4, 0, 8), H(new K(i3), e4 + i3.e + 1, t4);
              if (!(r4 = i3.c)) return null;
              if (s4 = ((n3 = r4.length - 1) - y(this.e / h)) * h, n3 = r4[n3]) for (; n3 % 10 == 0; n3 /= 10, s4--) ;
              return s4 < 0 && (s4 = 0), s4;
            }, B.dividedBy = B.div = function(e4, t4) {
              return r3(this, new K(e4, t4), P, j);
            }, B.dividedToIntegerBy = B.idiv = function(e4, t4) {
              return r3(this, new K(e4, t4), 0, 1);
            }, B.exponentiatedBy = B.pow = function(e4, t4) {
              var r4, s4, n3, i3, o2, l2, d2, p2, f2 = this;
              if ((e4 = new K(e4)).c && !e4.isInteger()) throw Error(u + "Exponent not an integer: " + G(e4));
              if (null != t4 && (t4 = new K(t4)), o2 = e4.e > 14, !f2.c || !f2.c[0] || 1 == f2.c[0] && !f2.e && 1 == f2.c.length || !e4.c || !e4.c[0]) return p2 = new K(Math.pow(+G(f2), o2 ? 2 - x(e4) : +G(e4))), t4 ? p2.mod(t4) : p2;
              if (l2 = e4.s < 0, t4) {
                if (t4.c ? !t4.c[0] : !t4.s) return new K(NaN);
                (s4 = !l2 && f2.isInteger() && t4.isInteger()) && (f2 = f2.mod(t4));
              } else {
                if (e4.e > 9 && (f2.e > 0 || f2.e < -1 || (0 == f2.e ? f2.c[0] > 1 || o2 && f2.c[1] >= 24e7 : f2.c[0] < 8e13 || o2 && f2.c[0] <= 9999975e7))) return i3 = f2.s < 0 && x(e4) ? -0 : 0, f2.e > -1 && (i3 = 1 / i3), new K(l2 ? 1 / i3 : i3);
                M && (i3 = a(M / h + 2));
              }
              for (o2 ? (r4 = new K(0.5), l2 && (e4.s = 1), d2 = x(e4)) : d2 = (n3 = Math.abs(+G(e4))) % 2, p2 = new K(U); ; ) {
                if (d2) {
                  if (!(p2 = p2.times(f2)).c) break;
                  i3 ? p2.c.length > i3 && (p2.c.length = i3) : s4 && (p2 = p2.mod(t4));
                }
                if (n3) {
                  if (0 === (n3 = c(n3 / 2))) break;
                  d2 = n3 % 2;
                } else if (H(e4 = e4.times(r4), e4.e + 1, 1), e4.e > 14) d2 = x(e4);
                else {
                  if (0 == (n3 = +G(e4))) break;
                  d2 = n3 % 2;
                }
                f2 = f2.times(f2), i3 ? f2.c && f2.c.length > i3 && (f2.c.length = i3) : s4 && (f2 = f2.mod(t4));
              }
              return s4 ? p2 : (l2 && (p2 = U.div(p2)), t4 ? p2.mod(t4) : i3 ? H(p2, M, j, void 0) : p2);
            }, B.integerValue = function(e4) {
              var t4 = new K(this);
              return null == e4 ? e4 = j : v(e4, 0, 8), H(t4, t4.e + 1, e4);
            }, B.isEqualTo = B.eq = function(e4, t4) {
              return 0 === b(this, new K(e4, t4));
            }, B.isFinite = function() {
              return !!this.c;
            }, B.isGreaterThan = B.gt = function(e4, t4) {
              return b(this, new K(e4, t4)) > 0;
            }, B.isGreaterThanOrEqualTo = B.gte = function(e4, t4) {
              return 1 === (t4 = b(this, new K(e4, t4))) || 0 === t4;
            }, B.isInteger = function() {
              return !!this.c && y(this.e / h) > this.c.length - 2;
            }, B.isLessThan = B.lt = function(e4, t4) {
              return b(this, new K(e4, t4)) < 0;
            }, B.isLessThanOrEqualTo = B.lte = function(e4, t4) {
              return -1 === (t4 = b(this, new K(e4, t4))) || 0 === t4;
            }, B.isNaN = function() {
              return !this.s;
            }, B.isNegative = function() {
              return this.s < 0;
            }, B.isPositive = function() {
              return this.s > 0;
            }, B.isZero = function() {
              return !!this.c && 0 == this.c[0];
            }, B.minus = function(e4, t4) {
              var r4, s4, n3, i3, o2 = this, a2 = o2.s;
              if (t4 = (e4 = new K(e4, t4)).s, !a2 || !t4) return new K(NaN);
              if (a2 != t4) return e4.s = -t4, o2.plus(e4);
              var c2 = o2.e / h, u2 = e4.e / h, l2 = o2.c, p2 = e4.c;
              if (!c2 || !u2) {
                if (!l2 || !p2) return l2 ? (e4.s = -t4, e4) : new K(p2 ? o2 : NaN);
                if (!l2[0] || !p2[0]) return p2[0] ? (e4.s = -t4, e4) : new K(l2[0] ? o2 : 3 == j ? -0 : 0);
              }
              if (c2 = y(c2), u2 = y(u2), l2 = l2.slice(), a2 = c2 - u2) {
                for ((i3 = a2 < 0) ? (a2 = -a2, n3 = l2) : (u2 = c2, n3 = p2), n3.reverse(), t4 = a2; t4--; n3.push(0)) ;
                n3.reverse();
              } else for (s4 = (i3 = (a2 = l2.length) < (t4 = p2.length)) ? a2 : t4, a2 = t4 = 0; t4 < s4; t4++) if (l2[t4] != p2[t4]) {
                i3 = l2[t4] < p2[t4];
                break;
              }
              if (i3 && (n3 = l2, l2 = p2, p2 = n3, e4.s = -e4.s), (t4 = (s4 = p2.length) - (r4 = l2.length)) > 0) for (; t4--; l2[r4++] = 0) ;
              for (t4 = d - 1; s4 > a2; ) {
                if (l2[--s4] < p2[s4]) {
                  for (r4 = s4; r4 && !l2[--r4]; l2[r4] = t4) ;
                  --l2[r4], l2[s4] += d;
                }
                l2[s4] -= p2[s4];
              }
              for (; 0 == l2[0]; l2.splice(0, 1), --u2) ;
              return l2[0] ? V(e4, l2, u2) : (e4.s = 3 == j ? -1 : 1, e4.c = [e4.e = 0], e4);
            }, B.modulo = B.mod = function(e4, t4) {
              var s4, n3, i3 = this;
              return e4 = new K(e4, t4), !i3.c || !e4.s || e4.c && !e4.c[0] ? new K(NaN) : !e4.c || i3.c && !i3.c[0] ? new K(i3) : (9 == L ? (n3 = e4.s, e4.s = 1, s4 = r3(i3, e4, 0, 3), e4.s = n3, s4.s *= n3) : s4 = r3(i3, e4, 0, L), (e4 = i3.minus(s4.times(e4))).c[0] || 1 != L || (e4.s = i3.s), e4);
            }, B.multipliedBy = B.times = function(e4, t4) {
              var r4, s4, n3, i3, o2, a2, c2, u2, l2, p2, f2, m2, w2, b2, v2, x2 = this, _2 = x2.c, A2 = (e4 = new K(e4, t4)).c;
              if (!(_2 && A2 && _2[0] && A2[0])) return !x2.s || !e4.s || _2 && !_2[0] && !A2 || A2 && !A2[0] && !_2 ? e4.c = e4.e = e4.s = null : (e4.s *= x2.s, _2 && A2 ? (e4.c = [0], e4.e = 0) : e4.c = e4.e = null), e4;
              for (s4 = y(x2.e / h) + y(e4.e / h), e4.s *= x2.s, (c2 = _2.length) < (p2 = A2.length) && (w2 = _2, _2 = A2, A2 = w2, n3 = c2, c2 = p2, p2 = n3), n3 = c2 + p2, w2 = []; n3--; w2.push(0)) ;
              for (b2 = d, v2 = g, n3 = p2; --n3 >= 0; ) {
                for (r4 = 0, f2 = A2[n3] % v2, m2 = A2[n3] / v2 | 0, i3 = n3 + (o2 = c2); i3 > n3; ) r4 = ((u2 = f2 * (u2 = _2[--o2] % v2) + (a2 = m2 * u2 + (l2 = _2[o2] / v2 | 0) * f2) % v2 * v2 + w2[i3] + r4) / b2 | 0) + (a2 / v2 | 0) + m2 * l2, w2[i3--] = u2 % b2;
                w2[i3] = r4;
              }
              return r4 ? ++s4 : w2.splice(0, 1), V(e4, w2, s4);
            }, B.negated = function() {
              var e4 = new K(this);
              return e4.s = -e4.s || null, e4;
            }, B.plus = function(e4, t4) {
              var r4, s4 = this, n3 = s4.s;
              if (t4 = (e4 = new K(e4, t4)).s, !n3 || !t4) return new K(NaN);
              if (n3 != t4) return e4.s = -t4, s4.minus(e4);
              var i3 = s4.e / h, o2 = e4.e / h, a2 = s4.c, c2 = e4.c;
              if (!i3 || !o2) {
                if (!a2 || !c2) return new K(n3 / 0);
                if (!a2[0] || !c2[0]) return c2[0] ? e4 : new K(a2[0] ? s4 : 0 * n3);
              }
              if (i3 = y(i3), o2 = y(o2), a2 = a2.slice(), n3 = i3 - o2) {
                for (n3 > 0 ? (o2 = i3, r4 = c2) : (n3 = -n3, r4 = a2), r4.reverse(); n3--; r4.push(0)) ;
                r4.reverse();
              }
              for ((n3 = a2.length) - (t4 = c2.length) < 0 && (r4 = c2, c2 = a2, a2 = r4, t4 = n3), n3 = 0; t4; ) n3 = (a2[--t4] = a2[t4] + c2[t4] + n3) / d | 0, a2[t4] = d === a2[t4] ? 0 : a2[t4] % d;
              return n3 && (a2 = [n3].concat(a2), ++o2), V(e4, a2, o2);
            }, B.precision = B.sd = function(e4, t4) {
              var r4, s4, n3, i3 = this;
              if (null != e4 && e4 !== !!e4) return v(e4, 1, m), null == t4 ? t4 = j : v(t4, 0, 8), H(new K(i3), e4, t4);
              if (!(r4 = i3.c)) return null;
              if (s4 = (n3 = r4.length - 1) * h + 1, n3 = r4[n3]) {
                for (; n3 % 10 == 0; n3 /= 10, s4--) ;
                for (n3 = r4[0]; n3 >= 10; n3 /= 10, s4++) ;
              }
              return e4 && i3.e + 1 > s4 && (s4 = i3.e + 1), s4;
            }, B.shiftedBy = function(e4) {
              return v(e4, -9007199254740991, p), this.times("1e" + e4);
            }, B.squareRoot = B.sqrt = function() {
              var e4, t4, s4, n3, i3, o2 = this, a2 = o2.c, c2 = o2.s, u2 = o2.e, l2 = P + 4, d2 = new K("0.5");
              if (1 !== c2 || !a2 || !a2[0]) return new K(!c2 || c2 < 0 && (!a2 || a2[0]) ? NaN : a2 ? o2 : 1 / 0);
              if (0 == (c2 = Math.sqrt(+G(o2))) || c2 == 1 / 0 ? (((t4 = w(a2)).length + u2) % 2 == 0 && (t4 += "0"), c2 = Math.sqrt(+t4), u2 = y((u2 + 1) / 2) - (u2 < 0 || u2 % 2), s4 = new K(t4 = c2 == 1 / 0 ? "5e" + u2 : (t4 = c2.toExponential()).slice(0, t4.indexOf("e") + 1) + u2)) : s4 = new K(c2 + ""), s4.c[0]) {
                for ((c2 = (u2 = s4.e) + l2) < 3 && (c2 = 0); ; ) if (i3 = s4, s4 = d2.times(i3.plus(r3(o2, i3, l2, 1))), w(i3.c).slice(0, c2) === (t4 = w(s4.c)).slice(0, c2)) {
                  if (s4.e < u2 && --c2, "9999" != (t4 = t4.slice(c2 - 3, c2 + 1)) && (n3 || "4999" != t4)) {
                    +t4 && (+t4.slice(1) || "5" != t4.charAt(0)) || (H(s4, s4.e + P + 2, 1), e4 = !s4.times(s4).eq(o2));
                    break;
                  }
                  if (!n3 && (H(i3, i3.e + P + 2, 0), i3.times(i3).eq(o2))) {
                    s4 = i3;
                    break;
                  }
                  l2 += 4, c2 += 4, n3 = 1;
                }
              }
              return H(s4, s4.e + P + 1, j, e4);
            }, B.toExponential = function(e4, t4) {
              return null != e4 && (v(e4, 0, m), e4++), F(this, e4, t4, 1);
            }, B.toFixed = function(e4, t4) {
              return null != e4 && (v(e4, 0, m), e4 = e4 + this.e + 1), F(this, e4, t4);
            }, B.toFormat = function(e4, t4, r4) {
              var s4, n3 = this;
              if (null == r4) null != e4 && t4 && "object" == typeof t4 ? (r4 = t4, t4 = null) : e4 && "object" == typeof e4 ? (r4 = e4, e4 = t4 = null) : r4 = W;
              else if ("object" != typeof r4) throw Error(u + "Argument not an object: " + r4);
              if (s4 = n3.toFixed(e4, t4), n3.c) {
                var i3, o2 = s4.split("."), a2 = +r4.groupSize, c2 = +r4.secondaryGroupSize, l2 = r4.groupSeparator || "", d2 = o2[0], h2 = o2[1], p2 = n3.s < 0, f2 = p2 ? d2.slice(1) : d2, g2 = f2.length;
                if (c2 && (i3 = a2, a2 = c2, c2 = i3, g2 -= i3), a2 > 0 && g2 > 0) {
                  for (i3 = g2 % a2 || a2, d2 = f2.substr(0, i3); i3 < g2; i3 += a2) d2 += l2 + f2.substr(i3, a2);
                  c2 > 0 && (d2 += l2 + f2.slice(i3)), p2 && (d2 = "-" + d2);
                }
                s4 = h2 ? d2 + (r4.decimalSeparator || "") + ((c2 = +r4.fractionGroupSize) ? h2.replace(new RegExp("\\d{" + c2 + "}\\B", "g"), "$&" + (r4.fractionGroupSeparator || "")) : h2) : d2;
              }
              return (r4.prefix || "") + s4 + (r4.suffix || "");
            }, B.toFraction = function(e4) {
              var t4, s4, n3, i3, o2, a2, c2, l2, d2, p2, g2, m2, y2 = this, b2 = y2.c;
              if (null != e4 && (!(c2 = new K(e4)).isInteger() && (c2.c || 1 !== c2.s) || c2.lt(U))) throw Error(u + "Argument " + (c2.isInteger() ? "out of range: " : "not an integer: ") + G(c2));
              if (!b2) return new K(y2);
              for (t4 = new K(U), d2 = s4 = new K(U), n3 = l2 = new K(U), m2 = w(b2), o2 = t4.e = m2.length - y2.e - 1, t4.c[0] = f[(a2 = o2 % h) < 0 ? h + a2 : a2], e4 = !e4 || c2.comparedTo(t4) > 0 ? o2 > 0 ? t4 : d2 : c2, a2 = D, D = 1 / 0, c2 = new K(m2), l2.c[0] = 0; p2 = r3(c2, t4, 0, 1), 1 != (i3 = s4.plus(p2.times(n3))).comparedTo(e4); ) s4 = n3, n3 = i3, d2 = l2.plus(p2.times(i3 = d2)), l2 = i3, t4 = c2.minus(p2.times(i3 = t4)), c2 = i3;
              return i3 = r3(e4.minus(s4), n3, 0, 1), l2 = l2.plus(i3.times(d2)), s4 = s4.plus(i3.times(n3)), l2.s = d2.s = y2.s, g2 = r3(d2, n3, o2 *= 2, j).minus(y2).abs().comparedTo(r3(l2, s4, o2, j).minus(y2).abs()) < 1 ? [d2, n3] : [l2, s4], D = a2, g2;
            }, B.toNumber = function() {
              return +G(this);
            }, B.toPrecision = function(e4, t4) {
              return null != e4 && v(e4, 1, m), F(this, e4, t4, 2);
            }, B.toString = function(e4) {
              var t4, r4 = this, n3 = r4.s, i3 = r4.e;
              return null === i3 ? n3 ? (t4 = "Infinity", n3 < 0 && (t4 = "-" + t4)) : t4 = "NaN" : (null == e4 ? t4 = i3 <= q || i3 >= $ ? _(w(r4.c), i3) : A(w(r4.c), i3, "0") : 10 === e4 ? t4 = A(w((r4 = H(new K(r4), P + i3 + 1, j)).c), r4.e, "0") : (v(e4, 2, N.length, "Base"), t4 = s3(A(w(r4.c), i3, "0"), 10, e4, n3, true)), n3 < 0 && r4.c[0] && (t4 = "-" + t4)), t4;
            }, B.valueOf = B.toJSON = function() {
              return G(this);
            }, B._isBigNumber = true, null != t3 && K.set(t3), K;
          })(), i.default = i.BigNumber = i, void 0 === (s2 = (function() {
            return i;
          }).call(t2, r2, t2, e2)) || (e2.exports = s2);
        })();
      }, 486: (e2, t2, r2) => {
        "use strict";
        const s2 = r2(155), n = r2(525), i = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
        t2.lW = c, t2.h2 = 50;
        const o = 2147483647;
        function a(e3) {
          if (e3 > o) throw new RangeError('The value "' + e3 + '" is invalid for option "size"');
          const t3 = new Uint8Array(e3);
          return Object.setPrototypeOf(t3, c.prototype), t3;
        }
        function c(e3, t3, r3) {
          if ("number" == typeof e3) {
            if ("string" == typeof t3) throw new TypeError('The "string" argument must be of type string. Received type number');
            return d(e3);
          }
          return u(e3, t3, r3);
        }
        function u(e3, t3, r3) {
          if ("string" == typeof e3) return (function(e4, t4) {
            if ("string" == typeof t4 && "" !== t4 || (t4 = "utf8"), !c.isEncoding(t4)) throw new TypeError("Unknown encoding: " + t4);
            const r4 = 0 | g(e4, t4);
            let s4 = a(r4);
            const n3 = s4.write(e4, t4);
            return n3 !== r4 && (s4 = s4.slice(0, n3)), s4;
          })(e3, t3);
          if (ArrayBuffer.isView(e3)) return (function(e4) {
            if (Y(e4, Uint8Array)) {
              const t4 = new Uint8Array(e4);
              return p(t4.buffer, t4.byteOffset, t4.byteLength);
            }
            return h(e4);
          })(e3);
          if (null == e3) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e3);
          if (Y(e3, ArrayBuffer) || e3 && Y(e3.buffer, ArrayBuffer)) return p(e3, t3, r3);
          if ("undefined" != typeof SharedArrayBuffer && (Y(e3, SharedArrayBuffer) || e3 && Y(e3.buffer, SharedArrayBuffer))) return p(e3, t3, r3);
          if ("number" == typeof e3) throw new TypeError('The "value" argument must not be of type number. Received type number');
          const s3 = e3.valueOf && e3.valueOf();
          if (null != s3 && s3 !== e3) return c.from(s3, t3, r3);
          const n2 = (function(e4) {
            if (c.isBuffer(e4)) {
              const t4 = 0 | f(e4.length), r4 = a(t4);
              return 0 === r4.length || e4.copy(r4, 0, 0, t4), r4;
            }
            return void 0 !== e4.length ? "number" != typeof e4.length || J(e4.length) ? a(0) : h(e4) : "Buffer" === e4.type && Array.isArray(e4.data) ? h(e4.data) : void 0;
          })(e3);
          if (n2) return n2;
          if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e3[Symbol.toPrimitive]) return c.from(e3[Symbol.toPrimitive]("string"), t3, r3);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e3);
        }
        function l(e3) {
          if ("number" != typeof e3) throw new TypeError('"size" argument must be of type number');
          if (e3 < 0) throw new RangeError('The value "' + e3 + '" is invalid for option "size"');
        }
        function d(e3) {
          return l(e3), a(e3 < 0 ? 0 : 0 | f(e3));
        }
        function h(e3) {
          const t3 = e3.length < 0 ? 0 : 0 | f(e3.length), r3 = a(t3);
          for (let s3 = 0; s3 < t3; s3 += 1) r3[s3] = 255 & e3[s3];
          return r3;
        }
        function p(e3, t3, r3) {
          if (t3 < 0 || e3.byteLength < t3) throw new RangeError('"offset" is outside of buffer bounds');
          if (e3.byteLength < t3 + (r3 || 0)) throw new RangeError('"length" is outside of buffer bounds');
          let s3;
          return s3 = void 0 === t3 && void 0 === r3 ? new Uint8Array(e3) : void 0 === r3 ? new Uint8Array(e3, t3) : new Uint8Array(e3, t3, r3), Object.setPrototypeOf(s3, c.prototype), s3;
        }
        function f(e3) {
          if (e3 >= o) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + o.toString(16) + " bytes");
          return 0 | e3;
        }
        function g(e3, t3) {
          if (c.isBuffer(e3)) return e3.length;
          if (ArrayBuffer.isView(e3) || Y(e3, ArrayBuffer)) return e3.byteLength;
          if ("string" != typeof e3) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e3);
          const r3 = e3.length, s3 = arguments.length > 2 && true === arguments[2];
          if (!s3 && 0 === r3) return 0;
          let n2 = false;
          for (; ; ) switch (t3) {
            case "ascii":
            case "latin1":
            case "binary":
              return r3;
            case "utf8":
            case "utf-8":
              return V(e3).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r3;
            case "hex":
              return r3 >>> 1;
            case "base64":
              return H(e3).length;
            default:
              if (n2) return s3 ? -1 : V(e3).length;
              t3 = ("" + t3).toLowerCase(), n2 = true;
          }
        }
        function m(e3, t3, r3) {
          let s3 = false;
          if ((void 0 === t3 || t3 < 0) && (t3 = 0), t3 > this.length) return "";
          if ((void 0 === r3 || r3 > this.length) && (r3 = this.length), r3 <= 0) return "";
          if ((r3 >>>= 0) <= (t3 >>>= 0)) return "";
          for (e3 || (e3 = "utf8"); ; ) switch (e3) {
            case "hex":
              return B(this, t3, r3);
            case "utf8":
            case "utf-8":
              return S(this, t3, r3);
            case "ascii":
              return T(this, t3, r3);
            case "latin1":
            case "binary":
              return I(this, t3, r3);
            case "base64":
              return k(this, t3, r3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return U(this, t3, r3);
            default:
              if (s3) throw new TypeError("Unknown encoding: " + e3);
              e3 = (e3 + "").toLowerCase(), s3 = true;
          }
        }
        function y(e3, t3, r3) {
          const s3 = e3[t3];
          e3[t3] = e3[r3], e3[r3] = s3;
        }
        function w(e3, t3, r3, s3, n2) {
          if (0 === e3.length) return -1;
          if ("string" == typeof r3 ? (s3 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), J(r3 = +r3) && (r3 = n2 ? 0 : e3.length - 1), r3 < 0 && (r3 = e3.length + r3), r3 >= e3.length) {
            if (n2) return -1;
            r3 = e3.length - 1;
          } else if (r3 < 0) {
            if (!n2) return -1;
            r3 = 0;
          }
          if ("string" == typeof t3 && (t3 = c.from(t3, s3)), c.isBuffer(t3)) return 0 === t3.length ? -1 : b(e3, t3, r3, s3, n2);
          if ("number" == typeof t3) return t3 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? n2 ? Uint8Array.prototype.indexOf.call(e3, t3, r3) : Uint8Array.prototype.lastIndexOf.call(e3, t3, r3) : b(e3, [t3], r3, s3, n2);
          throw new TypeError("val must be string, number or Buffer");
        }
        function b(e3, t3, r3, s3, n2) {
          let i2, o2 = 1, a2 = e3.length, c2 = t3.length;
          if (void 0 !== s3 && ("ucs2" === (s3 = String(s3).toLowerCase()) || "ucs-2" === s3 || "utf16le" === s3 || "utf-16le" === s3)) {
            if (e3.length < 2 || t3.length < 2) return -1;
            o2 = 2, a2 /= 2, c2 /= 2, r3 /= 2;
          }
          function u2(e4, t4) {
            return 1 === o2 ? e4[t4] : e4.readUInt16BE(t4 * o2);
          }
          if (n2) {
            let s4 = -1;
            for (i2 = r3; i2 < a2; i2++) if (u2(e3, i2) === u2(t3, -1 === s4 ? 0 : i2 - s4)) {
              if (-1 === s4 && (s4 = i2), i2 - s4 + 1 === c2) return s4 * o2;
            } else -1 !== s4 && (i2 -= i2 - s4), s4 = -1;
          } else for (r3 + c2 > a2 && (r3 = a2 - c2), i2 = r3; i2 >= 0; i2--) {
            let r4 = true;
            for (let s4 = 0; s4 < c2; s4++) if (u2(e3, i2 + s4) !== u2(t3, s4)) {
              r4 = false;
              break;
            }
            if (r4) return i2;
          }
          return -1;
        }
        function v(e3, t3, r3, s3) {
          r3 = Number(r3) || 0;
          const n2 = e3.length - r3;
          s3 ? (s3 = Number(s3)) > n2 && (s3 = n2) : s3 = n2;
          const i2 = t3.length;
          let o2;
          for (s3 > i2 / 2 && (s3 = i2 / 2), o2 = 0; o2 < s3; ++o2) {
            const s4 = parseInt(t3.substr(2 * o2, 2), 16);
            if (J(s4)) return o2;
            e3[r3 + o2] = s4;
          }
          return o2;
        }
        function x(e3, t3, r3, s3) {
          return G(V(t3, e3.length - r3), e3, r3, s3);
        }
        function _(e3, t3, r3, s3) {
          return G((function(e4) {
            const t4 = [];
            for (let r4 = 0; r4 < e4.length; ++r4) t4.push(255 & e4.charCodeAt(r4));
            return t4;
          })(t3), e3, r3, s3);
        }
        function A(e3, t3, r3, s3) {
          return G(H(t3), e3, r3, s3);
        }
        function E(e3, t3, r3, s3) {
          return G((function(e4, t4) {
            let r4, s4, n2;
            const i2 = [];
            for (let o2 = 0; o2 < e4.length && !((t4 -= 2) < 0); ++o2) r4 = e4.charCodeAt(o2), s4 = r4 >> 8, n2 = r4 % 256, i2.push(n2), i2.push(s4);
            return i2;
          })(t3, e3.length - r3), e3, r3, s3);
        }
        function k(e3, t3, r3) {
          return 0 === t3 && r3 === e3.length ? s2.fromByteArray(e3) : s2.fromByteArray(e3.slice(t3, r3));
        }
        function S(e3, t3, r3) {
          r3 = Math.min(e3.length, r3);
          const s3 = [];
          let n2 = t3;
          for (; n2 < r3; ) {
            const t4 = e3[n2];
            let i2 = null, o2 = t4 > 239 ? 4 : t4 > 223 ? 3 : t4 > 191 ? 2 : 1;
            if (n2 + o2 <= r3) {
              let r4, s4, a2, c2;
              switch (o2) {
                case 1:
                  t4 < 128 && (i2 = t4);
                  break;
                case 2:
                  r4 = e3[n2 + 1], 128 == (192 & r4) && (c2 = (31 & t4) << 6 | 63 & r4, c2 > 127 && (i2 = c2));
                  break;
                case 3:
                  r4 = e3[n2 + 1], s4 = e3[n2 + 2], 128 == (192 & r4) && 128 == (192 & s4) && (c2 = (15 & t4) << 12 | (63 & r4) << 6 | 63 & s4, c2 > 2047 && (c2 < 55296 || c2 > 57343) && (i2 = c2));
                  break;
                case 4:
                  r4 = e3[n2 + 1], s4 = e3[n2 + 2], a2 = e3[n2 + 3], 128 == (192 & r4) && 128 == (192 & s4) && 128 == (192 & a2) && (c2 = (15 & t4) << 18 | (63 & r4) << 12 | (63 & s4) << 6 | 63 & a2, c2 > 65535 && c2 < 1114112 && (i2 = c2));
              }
            }
            null === i2 ? (i2 = 65533, o2 = 1) : i2 > 65535 && (i2 -= 65536, s3.push(i2 >>> 10 & 1023 | 55296), i2 = 56320 | 1023 & i2), s3.push(i2), n2 += o2;
          }
          return (function(e4) {
            const t4 = e4.length;
            if (t4 <= R) return String.fromCharCode.apply(String, e4);
            let r4 = "", s4 = 0;
            for (; s4 < t4; ) r4 += String.fromCharCode.apply(String, e4.slice(s4, s4 += R));
            return r4;
          })(s3);
        }
        c.TYPED_ARRAY_SUPPORT = (function() {
          try {
            const e3 = new Uint8Array(1), t3 = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(t3, Uint8Array.prototype), Object.setPrototypeOf(e3, t3), 42 === e3.foo();
          } catch (e3) {
            return false;
          }
        })(), c.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(c.prototype, "parent", { enumerable: true, get: function() {
          if (c.isBuffer(this)) return this.buffer;
        } }), Object.defineProperty(c.prototype, "offset", { enumerable: true, get: function() {
          if (c.isBuffer(this)) return this.byteOffset;
        } }), c.poolSize = 8192, c.from = function(e3, t3, r3) {
          return u(e3, t3, r3);
        }, Object.setPrototypeOf(c.prototype, Uint8Array.prototype), Object.setPrototypeOf(c, Uint8Array), c.alloc = function(e3, t3, r3) {
          return (function(e4, t4, r4) {
            return l(e4), e4 <= 0 ? a(e4) : void 0 !== t4 ? "string" == typeof r4 ? a(e4).fill(t4, r4) : a(e4).fill(t4) : a(e4);
          })(e3, t3, r3);
        }, c.allocUnsafe = function(e3) {
          return d(e3);
        }, c.allocUnsafeSlow = function(e3) {
          return d(e3);
        }, c.isBuffer = function(e3) {
          return null != e3 && true === e3._isBuffer && e3 !== c.prototype;
        }, c.compare = function(e3, t3) {
          if (Y(e3, Uint8Array) && (e3 = c.from(e3, e3.offset, e3.byteLength)), Y(t3, Uint8Array) && (t3 = c.from(t3, t3.offset, t3.byteLength)), !c.isBuffer(e3) || !c.isBuffer(t3)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (e3 === t3) return 0;
          let r3 = e3.length, s3 = t3.length;
          for (let n2 = 0, i2 = Math.min(r3, s3); n2 < i2; ++n2) if (e3[n2] !== t3[n2]) {
            r3 = e3[n2], s3 = t3[n2];
            break;
          }
          return r3 < s3 ? -1 : s3 < r3 ? 1 : 0;
        }, c.isEncoding = function(e3) {
          switch (String(e3).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, c.concat = function(e3, t3) {
          if (!Array.isArray(e3)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === e3.length) return c.alloc(0);
          let r3;
          if (void 0 === t3) for (t3 = 0, r3 = 0; r3 < e3.length; ++r3) t3 += e3[r3].length;
          const s3 = c.allocUnsafe(t3);
          let n2 = 0;
          for (r3 = 0; r3 < e3.length; ++r3) {
            let t4 = e3[r3];
            if (Y(t4, Uint8Array)) n2 + t4.length > s3.length ? (c.isBuffer(t4) || (t4 = c.from(t4)), t4.copy(s3, n2)) : Uint8Array.prototype.set.call(s3, t4, n2);
            else {
              if (!c.isBuffer(t4)) throw new TypeError('"list" argument must be an Array of Buffers');
              t4.copy(s3, n2);
            }
            n2 += t4.length;
          }
          return s3;
        }, c.byteLength = g, c.prototype._isBuffer = true, c.prototype.swap16 = function() {
          const e3 = this.length;
          if (e3 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (let t3 = 0; t3 < e3; t3 += 2) y(this, t3, t3 + 1);
          return this;
        }, c.prototype.swap32 = function() {
          const e3 = this.length;
          if (e3 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (let t3 = 0; t3 < e3; t3 += 4) y(this, t3, t3 + 3), y(this, t3 + 1, t3 + 2);
          return this;
        }, c.prototype.swap64 = function() {
          const e3 = this.length;
          if (e3 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (let t3 = 0; t3 < e3; t3 += 8) y(this, t3, t3 + 7), y(this, t3 + 1, t3 + 6), y(this, t3 + 2, t3 + 5), y(this, t3 + 3, t3 + 4);
          return this;
        }, c.prototype.toString = function() {
          const e3 = this.length;
          return 0 === e3 ? "" : 0 === arguments.length ? S(this, 0, e3) : m.apply(this, arguments);
        }, c.prototype.toLocaleString = c.prototype.toString, c.prototype.equals = function(e3) {
          if (!c.isBuffer(e3)) throw new TypeError("Argument must be a Buffer");
          return this === e3 || 0 === c.compare(this, e3);
        }, c.prototype.inspect = function() {
          let e3 = "";
          const r3 = t2.h2;
          return e3 = this.toString("hex", 0, r3).replace(/(.{2})/g, "$1 ").trim(), this.length > r3 && (e3 += " ... "), "<Buffer " + e3 + ">";
        }, i && (c.prototype[i] = c.prototype.inspect), c.prototype.compare = function(e3, t3, r3, s3, n2) {
          if (Y(e3, Uint8Array) && (e3 = c.from(e3, e3.offset, e3.byteLength)), !c.isBuffer(e3)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e3);
          if (void 0 === t3 && (t3 = 0), void 0 === r3 && (r3 = e3 ? e3.length : 0), void 0 === s3 && (s3 = 0), void 0 === n2 && (n2 = this.length), t3 < 0 || r3 > e3.length || s3 < 0 || n2 > this.length) throw new RangeError("out of range index");
          if (s3 >= n2 && t3 >= r3) return 0;
          if (s3 >= n2) return -1;
          if (t3 >= r3) return 1;
          if (this === e3) return 0;
          let i2 = (n2 >>>= 0) - (s3 >>>= 0), o2 = (r3 >>>= 0) - (t3 >>>= 0);
          const a2 = Math.min(i2, o2), u2 = this.slice(s3, n2), l2 = e3.slice(t3, r3);
          for (let e4 = 0; e4 < a2; ++e4) if (u2[e4] !== l2[e4]) {
            i2 = u2[e4], o2 = l2[e4];
            break;
          }
          return i2 < o2 ? -1 : o2 < i2 ? 1 : 0;
        }, c.prototype.includes = function(e3, t3, r3) {
          return -1 !== this.indexOf(e3, t3, r3);
        }, c.prototype.indexOf = function(e3, t3, r3) {
          return w(this, e3, t3, r3, true);
        }, c.prototype.lastIndexOf = function(e3, t3, r3) {
          return w(this, e3, t3, r3, false);
        }, c.prototype.write = function(e3, t3, r3, s3) {
          if (void 0 === t3) s3 = "utf8", r3 = this.length, t3 = 0;
          else if (void 0 === r3 && "string" == typeof t3) s3 = t3, r3 = this.length, t3 = 0;
          else {
            if (!isFinite(t3)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t3 >>>= 0, isFinite(r3) ? (r3 >>>= 0, void 0 === s3 && (s3 = "utf8")) : (s3 = r3, r3 = void 0);
          }
          const n2 = this.length - t3;
          if ((void 0 === r3 || r3 > n2) && (r3 = n2), e3.length > 0 && (r3 < 0 || t3 < 0) || t3 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          s3 || (s3 = "utf8");
          let i2 = false;
          for (; ; ) switch (s3) {
            case "hex":
              return v(this, e3, t3, r3);
            case "utf8":
            case "utf-8":
              return x(this, e3, t3, r3);
            case "ascii":
            case "latin1":
            case "binary":
              return _(this, e3, t3, r3);
            case "base64":
              return A(this, e3, t3, r3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return E(this, e3, t3, r3);
            default:
              if (i2) throw new TypeError("Unknown encoding: " + s3);
              s3 = ("" + s3).toLowerCase(), i2 = true;
          }
        }, c.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        const R = 4096;
        function T(e3, t3, r3) {
          let s3 = "";
          r3 = Math.min(e3.length, r3);
          for (let n2 = t3; n2 < r3; ++n2) s3 += String.fromCharCode(127 & e3[n2]);
          return s3;
        }
        function I(e3, t3, r3) {
          let s3 = "";
          r3 = Math.min(e3.length, r3);
          for (let n2 = t3; n2 < r3; ++n2) s3 += String.fromCharCode(e3[n2]);
          return s3;
        }
        function B(e3, t3, r3) {
          const s3 = e3.length;
          (!t3 || t3 < 0) && (t3 = 0), (!r3 || r3 < 0 || r3 > s3) && (r3 = s3);
          let n2 = "";
          for (let s4 = t3; s4 < r3; ++s4) n2 += X[e3[s4]];
          return n2;
        }
        function U(e3, t3, r3) {
          const s3 = e3.slice(t3, r3);
          let n2 = "";
          for (let e4 = 0; e4 < s3.length - 1; e4 += 2) n2 += String.fromCharCode(s3[e4] + 256 * s3[e4 + 1]);
          return n2;
        }
        function P(e3, t3, r3) {
          if (e3 % 1 != 0 || e3 < 0) throw new RangeError("offset is not uint");
          if (e3 + t3 > r3) throw new RangeError("Trying to access beyond buffer length");
        }
        function j(e3, t3, r3, s3, n2, i2) {
          if (!c.isBuffer(e3)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t3 > n2 || t3 < i2) throw new RangeError('"value" argument is out of bounds');
          if (r3 + s3 > e3.length) throw new RangeError("Index out of range");
        }
        function q(e3, t3, r3, s3, n2) {
          N(t3, s3, n2, e3, r3, 7);
          let i2 = Number(t3 & BigInt(4294967295));
          e3[r3++] = i2, i2 >>= 8, e3[r3++] = i2, i2 >>= 8, e3[r3++] = i2, i2 >>= 8, e3[r3++] = i2;
          let o2 = Number(t3 >> BigInt(32) & BigInt(4294967295));
          return e3[r3++] = o2, o2 >>= 8, e3[r3++] = o2, o2 >>= 8, e3[r3++] = o2, o2 >>= 8, e3[r3++] = o2, r3;
        }
        function $(e3, t3, r3, s3, n2) {
          N(t3, s3, n2, e3, r3, 7);
          let i2 = Number(t3 & BigInt(4294967295));
          e3[r3 + 7] = i2, i2 >>= 8, e3[r3 + 6] = i2, i2 >>= 8, e3[r3 + 5] = i2, i2 >>= 8, e3[r3 + 4] = i2;
          let o2 = Number(t3 >> BigInt(32) & BigInt(4294967295));
          return e3[r3 + 3] = o2, o2 >>= 8, e3[r3 + 2] = o2, o2 >>= 8, e3[r3 + 1] = o2, o2 >>= 8, e3[r3] = o2, r3 + 8;
        }
        function C(e3, t3, r3, s3, n2, i2) {
          if (r3 + s3 > e3.length) throw new RangeError("Index out of range");
          if (r3 < 0) throw new RangeError("Index out of range");
        }
        function D(e3, t3, r3, s3, i2) {
          return t3 = +t3, r3 >>>= 0, i2 || C(e3, 0, r3, 4), n.write(e3, t3, r3, s3, 23, 4), r3 + 4;
        }
        function O(e3, t3, r3, s3, i2) {
          return t3 = +t3, r3 >>>= 0, i2 || C(e3, 0, r3, 8), n.write(e3, t3, r3, s3, 52, 8), r3 + 8;
        }
        c.prototype.slice = function(e3, t3) {
          const r3 = this.length;
          (e3 = ~~e3) < 0 ? (e3 += r3) < 0 && (e3 = 0) : e3 > r3 && (e3 = r3), (t3 = void 0 === t3 ? r3 : ~~t3) < 0 ? (t3 += r3) < 0 && (t3 = 0) : t3 > r3 && (t3 = r3), t3 < e3 && (t3 = e3);
          const s3 = this.subarray(e3, t3);
          return Object.setPrototypeOf(s3, c.prototype), s3;
        }, c.prototype.readUintLE = c.prototype.readUIntLE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || P(e3, t3, this.length);
          let s3 = this[e3], n2 = 1, i2 = 0;
          for (; ++i2 < t3 && (n2 *= 256); ) s3 += this[e3 + i2] * n2;
          return s3;
        }, c.prototype.readUintBE = c.prototype.readUIntBE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || P(e3, t3, this.length);
          let s3 = this[e3 + --t3], n2 = 1;
          for (; t3 > 0 && (n2 *= 256); ) s3 += this[e3 + --t3] * n2;
          return s3;
        }, c.prototype.readUint8 = c.prototype.readUInt8 = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 1, this.length), this[e3];
        }, c.prototype.readUint16LE = c.prototype.readUInt16LE = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 2, this.length), this[e3] | this[e3 + 1] << 8;
        }, c.prototype.readUint16BE = c.prototype.readUInt16BE = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 2, this.length), this[e3] << 8 | this[e3 + 1];
        }, c.prototype.readUint32LE = c.prototype.readUInt32LE = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 4, this.length), (this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16) + 16777216 * this[e3 + 3];
        }, c.prototype.readUint32BE = c.prototype.readUInt32BE = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 4, this.length), 16777216 * this[e3] + (this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3]);
        }, c.prototype.readBigUInt64LE = Z((function(e3) {
          K(e3 >>>= 0, "offset");
          const t3 = this[e3], r3 = this[e3 + 7];
          void 0 !== t3 && void 0 !== r3 || F(e3, this.length - 8);
          const s3 = t3 + 256 * this[++e3] + 65536 * this[++e3] + this[++e3] * 2 ** 24, n2 = this[++e3] + 256 * this[++e3] + 65536 * this[++e3] + r3 * 2 ** 24;
          return BigInt(s3) + (BigInt(n2) << BigInt(32));
        })), c.prototype.readBigUInt64BE = Z((function(e3) {
          K(e3 >>>= 0, "offset");
          const t3 = this[e3], r3 = this[e3 + 7];
          void 0 !== t3 && void 0 !== r3 || F(e3, this.length - 8);
          const s3 = t3 * 2 ** 24 + 65536 * this[++e3] + 256 * this[++e3] + this[++e3], n2 = this[++e3] * 2 ** 24 + 65536 * this[++e3] + 256 * this[++e3] + r3;
          return (BigInt(s3) << BigInt(32)) + BigInt(n2);
        })), c.prototype.readIntLE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || P(e3, t3, this.length);
          let s3 = this[e3], n2 = 1, i2 = 0;
          for (; ++i2 < t3 && (n2 *= 256); ) s3 += this[e3 + i2] * n2;
          return n2 *= 128, s3 >= n2 && (s3 -= Math.pow(2, 8 * t3)), s3;
        }, c.prototype.readIntBE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || P(e3, t3, this.length);
          let s3 = t3, n2 = 1, i2 = this[e3 + --s3];
          for (; s3 > 0 && (n2 *= 256); ) i2 += this[e3 + --s3] * n2;
          return n2 *= 128, i2 >= n2 && (i2 -= Math.pow(2, 8 * t3)), i2;
        }, c.prototype.readInt8 = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 1, this.length), 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
        }, c.prototype.readInt16LE = function(e3, t3) {
          e3 >>>= 0, t3 || P(e3, 2, this.length);
          const r3 = this[e3] | this[e3 + 1] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, c.prototype.readInt16BE = function(e3, t3) {
          e3 >>>= 0, t3 || P(e3, 2, this.length);
          const r3 = this[e3 + 1] | this[e3] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, c.prototype.readInt32LE = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 4, this.length), this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16 | this[e3 + 3] << 24;
        }, c.prototype.readInt32BE = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 4, this.length), this[e3] << 24 | this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3];
        }, c.prototype.readBigInt64LE = Z((function(e3) {
          K(e3 >>>= 0, "offset");
          const t3 = this[e3], r3 = this[e3 + 7];
          void 0 !== t3 && void 0 !== r3 || F(e3, this.length - 8);
          const s3 = this[e3 + 4] + 256 * this[e3 + 5] + 65536 * this[e3 + 6] + (r3 << 24);
          return (BigInt(s3) << BigInt(32)) + BigInt(t3 + 256 * this[++e3] + 65536 * this[++e3] + this[++e3] * 2 ** 24);
        })), c.prototype.readBigInt64BE = Z((function(e3) {
          K(e3 >>>= 0, "offset");
          const t3 = this[e3], r3 = this[e3 + 7];
          void 0 !== t3 && void 0 !== r3 || F(e3, this.length - 8);
          const s3 = (t3 << 24) + 65536 * this[++e3] + 256 * this[++e3] + this[++e3];
          return (BigInt(s3) << BigInt(32)) + BigInt(this[++e3] * 2 ** 24 + 65536 * this[++e3] + 256 * this[++e3] + r3);
        })), c.prototype.readFloatLE = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 4, this.length), n.read(this, e3, true, 23, 4);
        }, c.prototype.readFloatBE = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 4, this.length), n.read(this, e3, false, 23, 4);
        }, c.prototype.readDoubleLE = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 8, this.length), n.read(this, e3, true, 52, 8);
        }, c.prototype.readDoubleBE = function(e3, t3) {
          return e3 >>>= 0, t3 || P(e3, 8, this.length), n.read(this, e3, false, 52, 8);
        }, c.prototype.writeUintLE = c.prototype.writeUIntLE = function(e3, t3, r3, s3) {
          e3 = +e3, t3 >>>= 0, r3 >>>= 0, s3 || j(this, e3, t3, r3, Math.pow(2, 8 * r3) - 1, 0);
          let n2 = 1, i2 = 0;
          for (this[t3] = 255 & e3; ++i2 < r3 && (n2 *= 256); ) this[t3 + i2] = e3 / n2 & 255;
          return t3 + r3;
        }, c.prototype.writeUintBE = c.prototype.writeUIntBE = function(e3, t3, r3, s3) {
          e3 = +e3, t3 >>>= 0, r3 >>>= 0, s3 || j(this, e3, t3, r3, Math.pow(2, 8 * r3) - 1, 0);
          let n2 = r3 - 1, i2 = 1;
          for (this[t3 + n2] = 255 & e3; --n2 >= 0 && (i2 *= 256); ) this[t3 + n2] = e3 / i2 & 255;
          return t3 + r3;
        }, c.prototype.writeUint8 = c.prototype.writeUInt8 = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || j(this, e3, t3, 1, 255, 0), this[t3] = 255 & e3, t3 + 1;
        }, c.prototype.writeUint16LE = c.prototype.writeUInt16LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || j(this, e3, t3, 2, 65535, 0), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, t3 + 2;
        }, c.prototype.writeUint16BE = c.prototype.writeUInt16BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || j(this, e3, t3, 2, 65535, 0), this[t3] = e3 >>> 8, this[t3 + 1] = 255 & e3, t3 + 2;
        }, c.prototype.writeUint32LE = c.prototype.writeUInt32LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || j(this, e3, t3, 4, 4294967295, 0), this[t3 + 3] = e3 >>> 24, this[t3 + 2] = e3 >>> 16, this[t3 + 1] = e3 >>> 8, this[t3] = 255 & e3, t3 + 4;
        }, c.prototype.writeUint32BE = c.prototype.writeUInt32BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || j(this, e3, t3, 4, 4294967295, 0), this[t3] = e3 >>> 24, this[t3 + 1] = e3 >>> 16, this[t3 + 2] = e3 >>> 8, this[t3 + 3] = 255 & e3, t3 + 4;
        }, c.prototype.writeBigUInt64LE = Z((function(e3, t3 = 0) {
          return q(this, e3, t3, BigInt(0), BigInt("0xffffffffffffffff"));
        })), c.prototype.writeBigUInt64BE = Z((function(e3, t3 = 0) {
          return $(this, e3, t3, BigInt(0), BigInt("0xffffffffffffffff"));
        })), c.prototype.writeIntLE = function(e3, t3, r3, s3) {
          if (e3 = +e3, t3 >>>= 0, !s3) {
            const s4 = Math.pow(2, 8 * r3 - 1);
            j(this, e3, t3, r3, s4 - 1, -s4);
          }
          let n2 = 0, i2 = 1, o2 = 0;
          for (this[t3] = 255 & e3; ++n2 < r3 && (i2 *= 256); ) e3 < 0 && 0 === o2 && 0 !== this[t3 + n2 - 1] && (o2 = 1), this[t3 + n2] = (e3 / i2 >> 0) - o2 & 255;
          return t3 + r3;
        }, c.prototype.writeIntBE = function(e3, t3, r3, s3) {
          if (e3 = +e3, t3 >>>= 0, !s3) {
            const s4 = Math.pow(2, 8 * r3 - 1);
            j(this, e3, t3, r3, s4 - 1, -s4);
          }
          let n2 = r3 - 1, i2 = 1, o2 = 0;
          for (this[t3 + n2] = 255 & e3; --n2 >= 0 && (i2 *= 256); ) e3 < 0 && 0 === o2 && 0 !== this[t3 + n2 + 1] && (o2 = 1), this[t3 + n2] = (e3 / i2 >> 0) - o2 & 255;
          return t3 + r3;
        }, c.prototype.writeInt8 = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || j(this, e3, t3, 1, 127, -128), e3 < 0 && (e3 = 255 + e3 + 1), this[t3] = 255 & e3, t3 + 1;
        }, c.prototype.writeInt16LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || j(this, e3, t3, 2, 32767, -32768), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, t3 + 2;
        }, c.prototype.writeInt16BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || j(this, e3, t3, 2, 32767, -32768), this[t3] = e3 >>> 8, this[t3 + 1] = 255 & e3, t3 + 2;
        }, c.prototype.writeInt32LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || j(this, e3, t3, 4, 2147483647, -2147483648), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, this[t3 + 2] = e3 >>> 16, this[t3 + 3] = e3 >>> 24, t3 + 4;
        }, c.prototype.writeInt32BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || j(this, e3, t3, 4, 2147483647, -2147483648), e3 < 0 && (e3 = 4294967295 + e3 + 1), this[t3] = e3 >>> 24, this[t3 + 1] = e3 >>> 16, this[t3 + 2] = e3 >>> 8, this[t3 + 3] = 255 & e3, t3 + 4;
        }, c.prototype.writeBigInt64LE = Z((function(e3, t3 = 0) {
          return q(this, e3, t3, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        })), c.prototype.writeBigInt64BE = Z((function(e3, t3 = 0) {
          return $(this, e3, t3, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        })), c.prototype.writeFloatLE = function(e3, t3, r3) {
          return D(this, e3, t3, true, r3);
        }, c.prototype.writeFloatBE = function(e3, t3, r3) {
          return D(this, e3, t3, false, r3);
        }, c.prototype.writeDoubleLE = function(e3, t3, r3) {
          return O(this, e3, t3, true, r3);
        }, c.prototype.writeDoubleBE = function(e3, t3, r3) {
          return O(this, e3, t3, false, r3);
        }, c.prototype.copy = function(e3, t3, r3, s3) {
          if (!c.isBuffer(e3)) throw new TypeError("argument should be a Buffer");
          if (r3 || (r3 = 0), s3 || 0 === s3 || (s3 = this.length), t3 >= e3.length && (t3 = e3.length), t3 || (t3 = 0), s3 > 0 && s3 < r3 && (s3 = r3), s3 === r3) return 0;
          if (0 === e3.length || 0 === this.length) return 0;
          if (t3 < 0) throw new RangeError("targetStart out of bounds");
          if (r3 < 0 || r3 >= this.length) throw new RangeError("Index out of range");
          if (s3 < 0) throw new RangeError("sourceEnd out of bounds");
          s3 > this.length && (s3 = this.length), e3.length - t3 < s3 - r3 && (s3 = e3.length - t3 + r3);
          const n2 = s3 - r3;
          return this === e3 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t3, r3, s3) : Uint8Array.prototype.set.call(e3, this.subarray(r3, s3), t3), n2;
        }, c.prototype.fill = function(e3, t3, r3, s3) {
          if ("string" == typeof e3) {
            if ("string" == typeof t3 ? (s3 = t3, t3 = 0, r3 = this.length) : "string" == typeof r3 && (s3 = r3, r3 = this.length), void 0 !== s3 && "string" != typeof s3) throw new TypeError("encoding must be a string");
            if ("string" == typeof s3 && !c.isEncoding(s3)) throw new TypeError("Unknown encoding: " + s3);
            if (1 === e3.length) {
              const t4 = e3.charCodeAt(0);
              ("utf8" === s3 && t4 < 128 || "latin1" === s3) && (e3 = t4);
            }
          } else "number" == typeof e3 ? e3 &= 255 : "boolean" == typeof e3 && (e3 = Number(e3));
          if (t3 < 0 || this.length < t3 || this.length < r3) throw new RangeError("Out of range index");
          if (r3 <= t3) return this;
          let n2;
          if (t3 >>>= 0, r3 = void 0 === r3 ? this.length : r3 >>> 0, e3 || (e3 = 0), "number" == typeof e3) for (n2 = t3; n2 < r3; ++n2) this[n2] = e3;
          else {
            const i2 = c.isBuffer(e3) ? e3 : c.from(e3, s3), o2 = i2.length;
            if (0 === o2) throw new TypeError('The value "' + e3 + '" is invalid for argument "value"');
            for (n2 = 0; n2 < r3 - t3; ++n2) this[n2 + t3] = i2[n2 % o2];
          }
          return this;
        };
        const L = {};
        function M(e3, t3, r3) {
          L[e3] = class extends r3 {
            constructor() {
              super(), Object.defineProperty(this, "message", { value: t3.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${e3}]`, this.stack, delete this.name;
            }
            get code() {
              return e3;
            }
            set code(e4) {
              Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: e4, writable: true });
            }
            toString() {
              return `${this.name} [${e3}]: ${this.message}`;
            }
          };
        }
        function W(e3) {
          let t3 = "", r3 = e3.length;
          const s3 = "-" === e3[0] ? 1 : 0;
          for (; r3 >= s3 + 4; r3 -= 3) t3 = `_${e3.slice(r3 - 3, r3)}${t3}`;
          return `${e3.slice(0, r3)}${t3}`;
        }
        function N(e3, t3, r3, s3, n2, i2) {
          if (e3 > r3 || e3 < t3) {
            const s4 = "bigint" == typeof t3 ? "n" : "";
            let n3;
            throw n3 = i2 > 3 ? 0 === t3 || t3 === BigInt(0) ? `>= 0${s4} and < 2${s4} ** ${8 * (i2 + 1)}${s4}` : `>= -(2${s4} ** ${8 * (i2 + 1) - 1}${s4}) and < 2 ** ${8 * (i2 + 1) - 1}${s4}` : `>= ${t3}${s4} and <= ${r3}${s4}`, new L.ERR_OUT_OF_RANGE("value", n3, e3);
          }
          !(function(e4, t4, r4) {
            K(t4, "offset"), void 0 !== e4[t4] && void 0 !== e4[t4 + r4] || F(t4, e4.length - (r4 + 1));
          })(s3, n2, i2);
        }
        function K(e3, t3) {
          if ("number" != typeof e3) throw new L.ERR_INVALID_ARG_TYPE(t3, "number", e3);
        }
        function F(e3, t3, r3) {
          if (Math.floor(e3) !== e3) throw K(e3, r3), new L.ERR_OUT_OF_RANGE(r3 || "offset", "an integer", e3);
          if (t3 < 0) throw new L.ERR_BUFFER_OUT_OF_BOUNDS();
          throw new L.ERR_OUT_OF_RANGE(r3 || "offset", `>= ${r3 ? 1 : 0} and <= ${t3}`, e3);
        }
        M("ERR_BUFFER_OUT_OF_BOUNDS", (function(e3) {
          return e3 ? `${e3} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
        }), RangeError), M("ERR_INVALID_ARG_TYPE", (function(e3, t3) {
          return `The "${e3}" argument must be of type number. Received type ${typeof t3}`;
        }), TypeError), M("ERR_OUT_OF_RANGE", (function(e3, t3, r3) {
          let s3 = `The value of "${e3}" is out of range.`, n2 = r3;
          return Number.isInteger(r3) && Math.abs(r3) > 2 ** 32 ? n2 = W(String(r3)) : "bigint" == typeof r3 && (n2 = String(r3), (r3 > BigInt(2) ** BigInt(32) || r3 < -(BigInt(2) ** BigInt(32))) && (n2 = W(n2)), n2 += "n"), s3 += ` It must be ${t3}. Received ${n2}`, s3;
        }), RangeError);
        const z = /[^+/0-9A-Za-z-_]/g;
        function V(e3, t3) {
          let r3;
          t3 = t3 || 1 / 0;
          const s3 = e3.length;
          let n2 = null;
          const i2 = [];
          for (let o2 = 0; o2 < s3; ++o2) {
            if (r3 = e3.charCodeAt(o2), r3 > 55295 && r3 < 57344) {
              if (!n2) {
                if (r3 > 56319) {
                  (t3 -= 3) > -1 && i2.push(239, 191, 189);
                  continue;
                }
                if (o2 + 1 === s3) {
                  (t3 -= 3) > -1 && i2.push(239, 191, 189);
                  continue;
                }
                n2 = r3;
                continue;
              }
              if (r3 < 56320) {
                (t3 -= 3) > -1 && i2.push(239, 191, 189), n2 = r3;
                continue;
              }
              r3 = 65536 + (n2 - 55296 << 10 | r3 - 56320);
            } else n2 && (t3 -= 3) > -1 && i2.push(239, 191, 189);
            if (n2 = null, r3 < 128) {
              if ((t3 -= 1) < 0) break;
              i2.push(r3);
            } else if (r3 < 2048) {
              if ((t3 -= 2) < 0) break;
              i2.push(r3 >> 6 | 192, 63 & r3 | 128);
            } else if (r3 < 65536) {
              if ((t3 -= 3) < 0) break;
              i2.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            } else {
              if (!(r3 < 1114112)) throw new Error("Invalid code point");
              if ((t3 -= 4) < 0) break;
              i2.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            }
          }
          return i2;
        }
        function H(e3) {
          return s2.toByteArray((function(e4) {
            if ((e4 = (e4 = e4.split("=")[0]).trim().replace(z, "")).length < 2) return "";
            for (; e4.length % 4 != 0; ) e4 += "=";
            return e4;
          })(e3));
        }
        function G(e3, t3, r3, s3) {
          let n2;
          for (n2 = 0; n2 < s3 && !(n2 + r3 >= t3.length || n2 >= e3.length); ++n2) t3[n2 + r3] = e3[n2];
          return n2;
        }
        function Y(e3, t3) {
          return e3 instanceof t3 || null != e3 && null != e3.constructor && null != e3.constructor.name && e3.constructor.name === t3.name;
        }
        function J(e3) {
          return e3 != e3;
        }
        const X = (function() {
          const e3 = "0123456789abcdef", t3 = new Array(256);
          for (let r3 = 0; r3 < 16; ++r3) {
            const s3 = 16 * r3;
            for (let n2 = 0; n2 < 16; ++n2) t3[s3 + n2] = e3[r3] + e3[n2];
          }
          return t3;
        })();
        function Z(e3) {
          return "undefined" == typeof BigInt ? Q : e3;
        }
        function Q() {
          throw new Error("BigInt not supported");
        }
      }, 267: (e2, t2, r2) => {
        var s2;
        !(function() {
          "use strict";
          var t3 = "object" == typeof window ? window : {};
          !t3.HI_BASE32_NO_NODE_JS && "object" == typeof process && process.versions && process.versions.node && (t3 = r2.g);
          var n = !t3.HI_BASE32_NO_COMMON_JS && e2.exports, i = r2.amdO, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".split(""), a = { A: 0, B: 1, C: 2, D: 3, E: 4, F: 5, G: 6, H: 7, I: 8, J: 9, K: 10, L: 11, M: 12, N: 13, O: 14, P: 15, Q: 16, R: 17, S: 18, T: 19, U: 20, V: 21, W: 22, X: 23, Y: 24, Z: 25, 2: 26, 3: 27, 4: 28, 5: 29, 6: 30, 7: 31 }, c = [0, 0, 0, 0, 0, 0, 0, 0], u = function(e3, t4) {
            t4.length > 10 && (t4 = "..." + t4.substr(-10));
            var r3 = new Error("Decoded data is not valid UTF-8. Maybe try base32.decode.asBytes()? Partial data after reading " + e3 + " bytes: " + t4 + " <-");
            throw r3.position = e3, r3;
          }, l = function(e3) {
            if ("" === e3) return [];
            if (!/^[A-Z2-7=]+$/.test(e3)) throw new Error("Invalid base32 characters");
            for (var t4, r3, s3, n2, i2, o2, c2, u2, l2 = [], d2 = 0, h2 = (e3 = e3.replace(/=/g, "")).length, p = 0, f = h2 >> 3 << 3; p < f; ) t4 = a[e3.charAt(p++)], r3 = a[e3.charAt(p++)], s3 = a[e3.charAt(p++)], n2 = a[e3.charAt(p++)], i2 = a[e3.charAt(p++)], o2 = a[e3.charAt(p++)], c2 = a[e3.charAt(p++)], u2 = a[e3.charAt(p++)], l2[d2++] = 255 & (t4 << 3 | r3 >>> 2), l2[d2++] = 255 & (r3 << 6 | s3 << 1 | n2 >>> 4), l2[d2++] = 255 & (n2 << 4 | i2 >>> 1), l2[d2++] = 255 & (i2 << 7 | o2 << 2 | c2 >>> 3), l2[d2++] = 255 & (c2 << 5 | u2);
            var g = h2 - f;
            return 2 === g ? (t4 = a[e3.charAt(p++)], r3 = a[e3.charAt(p++)], l2[d2++] = 255 & (t4 << 3 | r3 >>> 2)) : 4 === g ? (t4 = a[e3.charAt(p++)], r3 = a[e3.charAt(p++)], s3 = a[e3.charAt(p++)], n2 = a[e3.charAt(p++)], l2[d2++] = 255 & (t4 << 3 | r3 >>> 2), l2[d2++] = 255 & (r3 << 6 | s3 << 1 | n2 >>> 4)) : 5 === g ? (t4 = a[e3.charAt(p++)], r3 = a[e3.charAt(p++)], s3 = a[e3.charAt(p++)], n2 = a[e3.charAt(p++)], i2 = a[e3.charAt(p++)], l2[d2++] = 255 & (t4 << 3 | r3 >>> 2), l2[d2++] = 255 & (r3 << 6 | s3 << 1 | n2 >>> 4), l2[d2++] = 255 & (n2 << 4 | i2 >>> 1)) : 7 === g && (t4 = a[e3.charAt(p++)], r3 = a[e3.charAt(p++)], s3 = a[e3.charAt(p++)], n2 = a[e3.charAt(p++)], i2 = a[e3.charAt(p++)], o2 = a[e3.charAt(p++)], c2 = a[e3.charAt(p++)], l2[d2++] = 255 & (t4 << 3 | r3 >>> 2), l2[d2++] = 255 & (r3 << 6 | s3 << 1 | n2 >>> 4), l2[d2++] = 255 & (n2 << 4 | i2 >>> 1), l2[d2++] = 255 & (i2 << 7 | o2 << 2 | c2 >>> 3)), l2;
          }, d = function(e3, t4) {
            if (!t4) return (function(e4) {
              for (var t5, r4, s4 = "", n3 = e4.length, i3 = 0, o3 = 0; i3 < n3; ) if ((t5 = e4[i3++]) <= 127) s4 += String.fromCharCode(t5);
              else {
                t5 > 191 && t5 <= 223 ? (r4 = 31 & t5, o3 = 1) : t5 <= 239 ? (r4 = 15 & t5, o3 = 2) : t5 <= 247 ? (r4 = 7 & t5, o3 = 3) : u(i3, s4);
                for (var a2 = 0; a2 < o3; ++a2) ((t5 = e4[i3++]) < 128 || t5 > 191) && u(i3, s4), r4 <<= 6, r4 += 63 & t5;
                r4 >= 55296 && r4 <= 57343 && u(i3, s4), r4 > 1114111 && u(i3, s4), r4 <= 65535 ? s4 += String.fromCharCode(r4) : (r4 -= 65536, s4 += String.fromCharCode(55296 + (r4 >> 10)), s4 += String.fromCharCode(56320 + (1023 & r4)));
              }
              return s4;
            })(l(e3));
            if ("" === e3) return "";
            if (!/^[A-Z2-7=]+$/.test(e3)) throw new Error("Invalid base32 characters");
            var r3, s3, n2, i2, o2, c2, d2, h2, p = "", f = e3.indexOf("=");
            -1 === f && (f = e3.length);
            for (var g = 0, m = f >> 3 << 3; g < m; ) r3 = a[e3.charAt(g++)], s3 = a[e3.charAt(g++)], n2 = a[e3.charAt(g++)], i2 = a[e3.charAt(g++)], o2 = a[e3.charAt(g++)], c2 = a[e3.charAt(g++)], d2 = a[e3.charAt(g++)], h2 = a[e3.charAt(g++)], p += String.fromCharCode(255 & (r3 << 3 | s3 >>> 2)) + String.fromCharCode(255 & (s3 << 6 | n2 << 1 | i2 >>> 4)) + String.fromCharCode(255 & (i2 << 4 | o2 >>> 1)) + String.fromCharCode(255 & (o2 << 7 | c2 << 2 | d2 >>> 3)) + String.fromCharCode(255 & (d2 << 5 | h2));
            var y = f - m;
            return 2 === y ? (r3 = a[e3.charAt(g++)], s3 = a[e3.charAt(g++)], p += String.fromCharCode(255 & (r3 << 3 | s3 >>> 2))) : 4 === y ? (r3 = a[e3.charAt(g++)], s3 = a[e3.charAt(g++)], n2 = a[e3.charAt(g++)], i2 = a[e3.charAt(g++)], p += String.fromCharCode(255 & (r3 << 3 | s3 >>> 2)) + String.fromCharCode(255 & (s3 << 6 | n2 << 1 | i2 >>> 4))) : 5 === y ? (r3 = a[e3.charAt(g++)], s3 = a[e3.charAt(g++)], n2 = a[e3.charAt(g++)], i2 = a[e3.charAt(g++)], o2 = a[e3.charAt(g++)], p += String.fromCharCode(255 & (r3 << 3 | s3 >>> 2)) + String.fromCharCode(255 & (s3 << 6 | n2 << 1 | i2 >>> 4)) + String.fromCharCode(255 & (i2 << 4 | o2 >>> 1))) : 7 === y && (r3 = a[e3.charAt(g++)], s3 = a[e3.charAt(g++)], n2 = a[e3.charAt(g++)], i2 = a[e3.charAt(g++)], o2 = a[e3.charAt(g++)], c2 = a[e3.charAt(g++)], d2 = a[e3.charAt(g++)], p += String.fromCharCode(255 & (r3 << 3 | s3 >>> 2)) + String.fromCharCode(255 & (s3 << 6 | n2 << 1 | i2 >>> 4)) + String.fromCharCode(255 & (i2 << 4 | o2 >>> 1)) + String.fromCharCode(255 & (o2 << 7 | c2 << 2 | d2 >>> 3))), p;
          }, h = { encode: function(e3, t4) {
            var r3 = "string" != typeof e3;
            return r3 && e3.constructor === ArrayBuffer && (e3 = new Uint8Array(e3)), r3 ? (function(e4) {
              for (var t5, r4, s3, n2, i2, a2 = "", c2 = e4.length, u2 = 0, l2 = 5 * parseInt(c2 / 5); u2 < l2; ) t5 = e4[u2++], r4 = e4[u2++], s3 = e4[u2++], n2 = e4[u2++], i2 = e4[u2++], a2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[31 & (r4 << 4 | s3 >>> 4)] + o[31 & (s3 << 1 | n2 >>> 7)] + o[n2 >>> 2 & 31] + o[31 & (n2 << 3 | i2 >>> 5)] + o[31 & i2];
              var d2 = c2 - l2;
              return 1 === d2 ? (t5 = e4[u2], a2 += o[t5 >>> 3] + o[t5 << 2 & 31] + "======") : 2 === d2 ? (t5 = e4[u2++], r4 = e4[u2], a2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[r4 << 4 & 31] + "====") : 3 === d2 ? (t5 = e4[u2++], r4 = e4[u2++], s3 = e4[u2], a2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[31 & (r4 << 4 | s3 >>> 4)] + o[s3 << 1 & 31] + "===") : 4 === d2 && (t5 = e4[u2++], r4 = e4[u2++], s3 = e4[u2++], n2 = e4[u2], a2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[31 & (r4 << 4 | s3 >>> 4)] + o[31 & (s3 << 1 | n2 >>> 7)] + o[n2 >>> 2 & 31] + o[n2 << 3 & 31] + "="), a2;
            })(e3) : t4 ? (function(e4) {
              for (var t5, r4, s3, n2, i2, a2 = "", c2 = e4.length, u2 = 0, l2 = 5 * parseInt(c2 / 5); u2 < l2; ) t5 = e4.charCodeAt(u2++), r4 = e4.charCodeAt(u2++), s3 = e4.charCodeAt(u2++), n2 = e4.charCodeAt(u2++), i2 = e4.charCodeAt(u2++), a2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[31 & (r4 << 4 | s3 >>> 4)] + o[31 & (s3 << 1 | n2 >>> 7)] + o[n2 >>> 2 & 31] + o[31 & (n2 << 3 | i2 >>> 5)] + o[31 & i2];
              var d2 = c2 - l2;
              return 1 === d2 ? (t5 = e4.charCodeAt(u2), a2 += o[t5 >>> 3] + o[t5 << 2 & 31] + "======") : 2 === d2 ? (t5 = e4.charCodeAt(u2++), r4 = e4.charCodeAt(u2), a2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[r4 << 4 & 31] + "====") : 3 === d2 ? (t5 = e4.charCodeAt(u2++), r4 = e4.charCodeAt(u2++), s3 = e4.charCodeAt(u2), a2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[31 & (r4 << 4 | s3 >>> 4)] + o[s3 << 1 & 31] + "===") : 4 === d2 && (t5 = e4.charCodeAt(u2++), r4 = e4.charCodeAt(u2++), s3 = e4.charCodeAt(u2++), n2 = e4.charCodeAt(u2), a2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[31 & (r4 << 4 | s3 >>> 4)] + o[31 & (s3 << 1 | n2 >>> 7)] + o[n2 >>> 2 & 31] + o[n2 << 3 & 31] + "="), a2;
            })(e3) : (function(e4) {
              var t5, r4, s3, n2, i2, a2, u2, l2 = false, d2 = "", h2 = 0, p = 0, f = e4.length;
              if ("" === e4) return d2;
              do {
                for (c[0] = c[5], c[1] = c[6], c[2] = c[7], u2 = p; h2 < f && u2 < 5; ++h2) (a2 = e4.charCodeAt(h2)) < 128 ? c[u2++] = a2 : a2 < 2048 ? (c[u2++] = 192 | a2 >> 6, c[u2++] = 128 | 63 & a2) : a2 < 55296 || a2 >= 57344 ? (c[u2++] = 224 | a2 >> 12, c[u2++] = 128 | a2 >> 6 & 63, c[u2++] = 128 | 63 & a2) : (a2 = 65536 + ((1023 & a2) << 10 | 1023 & e4.charCodeAt(++h2)), c[u2++] = 240 | a2 >> 18, c[u2++] = 128 | a2 >> 12 & 63, c[u2++] = 128 | a2 >> 6 & 63, c[u2++] = 128 | 63 & a2);
                p = u2 - 5, h2 === f && ++h2, h2 > f && u2 < 6 && (l2 = true), t5 = c[0], u2 > 4 ? (r4 = c[1], s3 = c[2], n2 = c[3], i2 = c[4], d2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[31 & (r4 << 4 | s3 >>> 4)] + o[31 & (s3 << 1 | n2 >>> 7)] + o[n2 >>> 2 & 31] + o[31 & (n2 << 3 | i2 >>> 5)] + o[31 & i2]) : 1 === u2 ? d2 += o[t5 >>> 3] + o[t5 << 2 & 31] + "======" : 2 === u2 ? (r4 = c[1], d2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[r4 << 4 & 31] + "====") : 3 === u2 ? (r4 = c[1], s3 = c[2], d2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[31 & (r4 << 4 | s3 >>> 4)] + o[s3 << 1 & 31] + "===") : (r4 = c[1], s3 = c[2], n2 = c[3], d2 += o[t5 >>> 3] + o[31 & (t5 << 2 | r4 >>> 6)] + o[r4 >>> 1 & 31] + o[31 & (r4 << 4 | s3 >>> 4)] + o[31 & (s3 << 1 | n2 >>> 7)] + o[n2 >>> 2 & 31] + o[n2 << 3 & 31] + "=");
              } while (!l2);
              return d2;
            })(e3);
          }, decode: d };
          d.asBytes = l, n ? e2.exports = h : (t3.base32 = h, i && (void 0 === (s2 = (function() {
            return h;
          }).call(h, r2, h, e2)) || (e2.exports = s2)));
        })();
      }, 525: (e2, t2) => {
        t2.read = function(e3, t3, r2, s2, n) {
          var i, o, a = 8 * n - s2 - 1, c = (1 << a) - 1, u = c >> 1, l = -7, d = r2 ? n - 1 : 0, h = r2 ? -1 : 1, p = e3[t3 + d];
          for (d += h, i = p & (1 << -l) - 1, p >>= -l, l += a; l > 0; i = 256 * i + e3[t3 + d], d += h, l -= 8) ;
          for (o = i & (1 << -l) - 1, i >>= -l, l += s2; l > 0; o = 256 * o + e3[t3 + d], d += h, l -= 8) ;
          if (0 === i) i = 1 - u;
          else {
            if (i === c) return o ? NaN : 1 / 0 * (p ? -1 : 1);
            o += Math.pow(2, s2), i -= u;
          }
          return (p ? -1 : 1) * o * Math.pow(2, i - s2);
        }, t2.write = function(e3, t3, r2, s2, n, i) {
          var o, a, c, u = 8 * i - n - 1, l = (1 << u) - 1, d = l >> 1, h = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = s2 ? 0 : i - 1, f = s2 ? 1 : -1, g = t3 < 0 || 0 === t3 && 1 / t3 < 0 ? 1 : 0;
          for (t3 = Math.abs(t3), isNaN(t3) || t3 === 1 / 0 ? (a = isNaN(t3) ? 1 : 0, o = l) : (o = Math.floor(Math.log(t3) / Math.LN2), t3 * (c = Math.pow(2, -o)) < 1 && (o--, c *= 2), (t3 += o + d >= 1 ? h / c : h * Math.pow(2, 1 - d)) * c >= 2 && (o++, c /= 2), o + d >= l ? (a = 0, o = l) : o + d >= 1 ? (a = (t3 * c - 1) * Math.pow(2, n), o += d) : (a = t3 * Math.pow(2, d - 1) * Math.pow(2, n), o = 0)); n >= 8; e3[r2 + p] = 255 & a, p += f, a /= 256, n -= 8) ;
          for (o = o << n | a, u += n; u > 0; e3[r2 + p] = 255 & o, p += f, o /= 256, u -= 8) ;
          e3[r2 + p - f] |= 128 * g;
        };
      }, 757: (e2, t2, r2) => {
        var s2;
        !(function() {
          "use strict";
          var t3 = "input is invalid type", n = "object" == typeof window, i = n ? window : {};
          i.JS_SHA512_NO_WINDOW && (n = false);
          var o = !n && "object" == typeof self;
          !i.JS_SHA512_NO_NODE_JS && "object" == typeof process && process.versions && process.versions.node ? i = r2.g : o && (i = self);
          var a = !i.JS_SHA512_NO_COMMON_JS && e2.exports, c = r2.amdO, u = !i.JS_SHA512_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer, l = "0123456789abcdef".split(""), d = [-2147483648, 8388608, 32768, 128], h = [24, 16, 8, 0], p = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], f = ["hex", "array", "digest", "arrayBuffer"], g = [];
          !i.JS_SHA512_NO_NODE_JS && Array.isArray || (Array.isArray = function(e3) {
            return "[object Array]" === Object.prototype.toString.call(e3);
          }), !u || !i.JS_SHA512_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function(e3) {
            return "object" == typeof e3 && e3.buffer && e3.buffer.constructor === ArrayBuffer;
          });
          var m = function(e3, t4) {
            return function(r3) {
              return new v(t4, true).update(r3)[e3]();
            };
          }, y = function(e3) {
            var t4 = m("hex", e3);
            t4.create = function() {
              return new v(e3);
            }, t4.update = function(e4) {
              return t4.create().update(e4);
            };
            for (var r3 = 0; r3 < f.length; ++r3) {
              var s3 = f[r3];
              t4[s3] = m(s3, e3);
            }
            return t4;
          }, w = function(e3, t4) {
            return function(r3, s3) {
              return new x(r3, t4, true).update(s3)[e3]();
            };
          }, b = function(e3) {
            var t4 = w("hex", e3);
            t4.create = function(t5) {
              return new x(t5, e3);
            }, t4.update = function(e4, r4) {
              return t4.create(e4).update(r4);
            };
            for (var r3 = 0; r3 < f.length; ++r3) {
              var s3 = f[r3];
              t4[s3] = w(s3, e3);
            }
            return t4;
          };
          function v(e3, t4) {
            t4 ? (g[0] = g[1] = g[2] = g[3] = g[4] = g[5] = g[6] = g[7] = g[8] = g[9] = g[10] = g[11] = g[12] = g[13] = g[14] = g[15] = g[16] = g[17] = g[18] = g[19] = g[20] = g[21] = g[22] = g[23] = g[24] = g[25] = g[26] = g[27] = g[28] = g[29] = g[30] = g[31] = g[32] = 0, this.blocks = g) : this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 384 == e3 ? (this.h0h = 3418070365, this.h0l = 3238371032, this.h1h = 1654270250, this.h1l = 914150663, this.h2h = 2438529370, this.h2l = 812702999, this.h3h = 355462360, this.h3l = 4144912697, this.h4h = 1731405415, this.h4l = 4290775857, this.h5h = 2394180231, this.h5l = 1750603025, this.h6h = 3675008525, this.h6l = 1694076839, this.h7h = 1203062813, this.h7l = 3204075428) : 256 == e3 ? (this.h0h = 573645204, this.h0l = 4230739756, this.h1h = 2673172387, this.h1l = 3360449730, this.h2h = 596883563, this.h2l = 1867755857, this.h3h = 2520282905, this.h3l = 1497426621, this.h4h = 2519219938, this.h4l = 2827943907, this.h5h = 3193839141, this.h5l = 1401305490, this.h6h = 721525244, this.h6l = 746961066, this.h7h = 246885852, this.h7l = 2177182882) : 224 == e3 ? (this.h0h = 2352822216, this.h0l = 424955298, this.h1h = 1944164710, this.h1l = 2312950998, this.h2h = 502970286, this.h2l = 855612546, this.h3h = 1738396948, this.h3l = 1479516111, this.h4h = 258812777, this.h4l = 2077511080, this.h5h = 2011393907, this.h5l = 79989058, this.h6h = 1067287976, this.h6l = 1780299464, this.h7h = 286451373, this.h7l = 2446758561) : (this.h0h = 1779033703, this.h0l = 4089235720, this.h1h = 3144134277, this.h1l = 2227873595, this.h2h = 1013904242, this.h2l = 4271175723, this.h3h = 2773480762, this.h3l = 1595750129, this.h4h = 1359893119, this.h4l = 2917565137, this.h5h = 2600822924, this.h5l = 725511199, this.h6h = 528734635, this.h6l = 4215389547, this.h7h = 1541459225, this.h7l = 327033209), this.bits = e3, this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = false;
          }
          function x(e3, r3, s3) {
            var n2, i2 = typeof e3;
            if ("string" !== i2) {
              if ("object" !== i2) throw new Error(t3);
              if (null === e3) throw new Error(t3);
              if (u && e3.constructor === ArrayBuffer) e3 = new Uint8Array(e3);
              else if (!(Array.isArray(e3) || u && ArrayBuffer.isView(e3))) throw new Error(t3);
              n2 = true;
            }
            var o2 = e3.length;
            if (!n2) {
              for (var a2, c2 = [], l2 = (o2 = e3.length, 0), d2 = 0; d2 < o2; ++d2) (a2 = e3.charCodeAt(d2)) < 128 ? c2[l2++] = a2 : a2 < 2048 ? (c2[l2++] = 192 | a2 >> 6, c2[l2++] = 128 | 63 & a2) : a2 < 55296 || a2 >= 57344 ? (c2[l2++] = 224 | a2 >> 12, c2[l2++] = 128 | a2 >> 6 & 63, c2[l2++] = 128 | 63 & a2) : (a2 = 65536 + ((1023 & a2) << 10 | 1023 & e3.charCodeAt(++d2)), c2[l2++] = 240 | a2 >> 18, c2[l2++] = 128 | a2 >> 12 & 63, c2[l2++] = 128 | a2 >> 6 & 63, c2[l2++] = 128 | 63 & a2);
              e3 = c2;
            }
            e3.length > 128 && (e3 = new v(r3, true).update(e3).array());
            var h2 = [], p2 = [];
            for (d2 = 0; d2 < 128; ++d2) {
              var f2 = e3[d2] || 0;
              h2[d2] = 92 ^ f2, p2[d2] = 54 ^ f2;
            }
            v.call(this, r3, s3), this.update(p2), this.oKeyPad = h2, this.inner = true, this.sharedMemory = s3;
          }
          v.prototype.update = function(e3) {
            if (this.finalized) throw new Error("finalize already called");
            var r3, s3 = typeof e3;
            if ("string" !== s3) {
              if ("object" !== s3) throw new Error(t3);
              if (null === e3) throw new Error(t3);
              if (u && e3.constructor === ArrayBuffer) e3 = new Uint8Array(e3);
              else if (!(Array.isArray(e3) || u && ArrayBuffer.isView(e3))) throw new Error(t3);
              r3 = true;
            }
            for (var n2, i2, o2 = 0, a2 = e3.length, c2 = this.blocks; o2 < a2; ) {
              if (this.hashed && (this.hashed = false, c2[0] = this.block, c2[1] = c2[2] = c2[3] = c2[4] = c2[5] = c2[6] = c2[7] = c2[8] = c2[9] = c2[10] = c2[11] = c2[12] = c2[13] = c2[14] = c2[15] = c2[16] = c2[17] = c2[18] = c2[19] = c2[20] = c2[21] = c2[22] = c2[23] = c2[24] = c2[25] = c2[26] = c2[27] = c2[28] = c2[29] = c2[30] = c2[31] = c2[32] = 0), r3) for (i2 = this.start; o2 < a2 && i2 < 128; ++o2) c2[i2 >> 2] |= e3[o2] << h[3 & i2++];
              else for (i2 = this.start; o2 < a2 && i2 < 128; ++o2) (n2 = e3.charCodeAt(o2)) < 128 ? c2[i2 >> 2] |= n2 << h[3 & i2++] : n2 < 2048 ? (c2[i2 >> 2] |= (192 | n2 >> 6) << h[3 & i2++], c2[i2 >> 2] |= (128 | 63 & n2) << h[3 & i2++]) : n2 < 55296 || n2 >= 57344 ? (c2[i2 >> 2] |= (224 | n2 >> 12) << h[3 & i2++], c2[i2 >> 2] |= (128 | n2 >> 6 & 63) << h[3 & i2++], c2[i2 >> 2] |= (128 | 63 & n2) << h[3 & i2++]) : (n2 = 65536 + ((1023 & n2) << 10 | 1023 & e3.charCodeAt(++o2)), c2[i2 >> 2] |= (240 | n2 >> 18) << h[3 & i2++], c2[i2 >> 2] |= (128 | n2 >> 12 & 63) << h[3 & i2++], c2[i2 >> 2] |= (128 | n2 >> 6 & 63) << h[3 & i2++], c2[i2 >> 2] |= (128 | 63 & n2) << h[3 & i2++]);
              this.lastByteIndex = i2, this.bytes += i2 - this.start, i2 >= 128 ? (this.block = c2[32], this.start = i2 - 128, this.hash(), this.hashed = true) : this.start = i2;
            }
            return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this;
          }, v.prototype.finalize = function() {
            if (!this.finalized) {
              this.finalized = true;
              var e3 = this.blocks, t4 = this.lastByteIndex;
              e3[32] = this.block, e3[t4 >> 2] |= d[3 & t4], this.block = e3[32], t4 >= 112 && (this.hashed || this.hash(), e3[0] = this.block, e3[1] = e3[2] = e3[3] = e3[4] = e3[5] = e3[6] = e3[7] = e3[8] = e3[9] = e3[10] = e3[11] = e3[12] = e3[13] = e3[14] = e3[15] = e3[16] = e3[17] = e3[18] = e3[19] = e3[20] = e3[21] = e3[22] = e3[23] = e3[24] = e3[25] = e3[26] = e3[27] = e3[28] = e3[29] = e3[30] = e3[31] = e3[32] = 0), e3[30] = this.hBytes << 3 | this.bytes >>> 29, e3[31] = this.bytes << 3, this.hash();
            }
          }, v.prototype.hash = function() {
            var e3, t4, r3, s3, n2, i2, o2, a2, c2, u2, l2, d2, h2, f2, g2, m2, y2, w2, b2, v2, x2, _2, A, E, k, S = this.h0h, R = this.h0l, T = this.h1h, I = this.h1l, B = this.h2h, U = this.h2l, P = this.h3h, j = this.h3l, q = this.h4h, $ = this.h4l, C = this.h5h, D = this.h5l, O = this.h6h, L = this.h6l, M = this.h7h, W = this.h7l, N = this.blocks;
            for (e3 = 32; e3 < 160; e3 += 2) t4 = ((v2 = N[e3 - 30]) >>> 1 | (x2 = N[e3 - 29]) << 31) ^ (v2 >>> 8 | x2 << 24) ^ v2 >>> 7, r3 = (x2 >>> 1 | v2 << 31) ^ (x2 >>> 8 | v2 << 24) ^ (x2 >>> 7 | v2 << 25), s3 = ((v2 = N[e3 - 4]) >>> 19 | (x2 = N[e3 - 3]) << 13) ^ (x2 >>> 29 | v2 << 3) ^ v2 >>> 6, n2 = (x2 >>> 19 | v2 << 13) ^ (v2 >>> 29 | x2 << 3) ^ (x2 >>> 6 | v2 << 26), v2 = N[e3 - 32], x2 = N[e3 - 31], c2 = ((_2 = N[e3 - 14]) >>> 16) + (v2 >>> 16) + (t4 >>> 16) + (s3 >>> 16) + ((a2 = (65535 & _2) + (65535 & v2) + (65535 & t4) + (65535 & s3) + ((o2 = ((A = N[e3 - 13]) >>> 16) + (x2 >>> 16) + (r3 >>> 16) + (n2 >>> 16) + ((i2 = (65535 & A) + (65535 & x2) + (65535 & r3) + (65535 & n2)) >>> 16)) >>> 16)) >>> 16), N[e3] = c2 << 16 | 65535 & a2, N[e3 + 1] = o2 << 16 | 65535 & i2;
            var K = S, F = R, z = T, V = I, H = B, G = U, Y = P, J = j, X = q, Z = $, Q = C, ee = D, te = O, re = L, se = M, ne = W;
            for (m2 = z & H, y2 = V & G, e3 = 0; e3 < 160; e3 += 8) t4 = (K >>> 28 | F << 4) ^ (F >>> 2 | K << 30) ^ (F >>> 7 | K << 25), r3 = (F >>> 28 | K << 4) ^ (K >>> 2 | F << 30) ^ (K >>> 7 | F << 25), s3 = (X >>> 14 | Z << 18) ^ (X >>> 18 | Z << 14) ^ (Z >>> 9 | X << 23), n2 = (Z >>> 14 | X << 18) ^ (Z >>> 18 | X << 14) ^ (X >>> 9 | Z << 23), w2 = (u2 = K & z) ^ K & H ^ m2, b2 = (l2 = F & V) ^ F & G ^ y2, E = X & Q ^ ~X & te, k = Z & ee ^ ~Z & re, v2 = N[e3], x2 = N[e3 + 1], v2 = (c2 = ((_2 = p[e3]) >>> 16) + (v2 >>> 16) + (E >>> 16) + (s3 >>> 16) + (se >>> 16) + ((a2 = (65535 & _2) + (65535 & v2) + (65535 & E) + (65535 & s3) + (65535 & se) + ((o2 = ((A = p[e3 + 1]) >>> 16) + (x2 >>> 16) + (k >>> 16) + (n2 >>> 16) + (ne >>> 16) + ((i2 = (65535 & A) + (65535 & x2) + (65535 & k) + (65535 & n2) + (65535 & ne)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, x2 = o2 << 16 | 65535 & i2, _2 = (c2 = (w2 >>> 16) + (t4 >>> 16) + ((a2 = (65535 & w2) + (65535 & t4) + ((o2 = (b2 >>> 16) + (r3 >>> 16) + ((i2 = (65535 & b2) + (65535 & r3)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, A = o2 << 16 | 65535 & i2, se = (c2 = (Y >>> 16) + (v2 >>> 16) + ((a2 = (65535 & Y) + (65535 & v2) + ((o2 = (J >>> 16) + (x2 >>> 16) + ((i2 = (65535 & J) + (65535 & x2)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, ne = o2 << 16 | 65535 & i2, t4 = ((Y = (c2 = (_2 >>> 16) + (v2 >>> 16) + ((a2 = (65535 & _2) + (65535 & v2) + ((o2 = (A >>> 16) + (x2 >>> 16) + ((i2 = (65535 & A) + (65535 & x2)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2) >>> 28 | (J = o2 << 16 | 65535 & i2) << 4) ^ (J >>> 2 | Y << 30) ^ (J >>> 7 | Y << 25), r3 = (J >>> 28 | Y << 4) ^ (Y >>> 2 | J << 30) ^ (Y >>> 7 | J << 25), s3 = (se >>> 14 | ne << 18) ^ (se >>> 18 | ne << 14) ^ (ne >>> 9 | se << 23), n2 = (ne >>> 14 | se << 18) ^ (ne >>> 18 | se << 14) ^ (se >>> 9 | ne << 23), w2 = (d2 = Y & K) ^ Y & z ^ u2, b2 = (h2 = J & F) ^ J & V ^ l2, E = se & X ^ ~se & Q, k = ne & Z ^ ~ne & ee, v2 = N[e3 + 2], x2 = N[e3 + 3], v2 = (c2 = ((_2 = p[e3 + 2]) >>> 16) + (v2 >>> 16) + (E >>> 16) + (s3 >>> 16) + (te >>> 16) + ((a2 = (65535 & _2) + (65535 & v2) + (65535 & E) + (65535 & s3) + (65535 & te) + ((o2 = ((A = p[e3 + 3]) >>> 16) + (x2 >>> 16) + (k >>> 16) + (n2 >>> 16) + (re >>> 16) + ((i2 = (65535 & A) + (65535 & x2) + (65535 & k) + (65535 & n2) + (65535 & re)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, x2 = o2 << 16 | 65535 & i2, _2 = (c2 = (w2 >>> 16) + (t4 >>> 16) + ((a2 = (65535 & w2) + (65535 & t4) + ((o2 = (b2 >>> 16) + (r3 >>> 16) + ((i2 = (65535 & b2) + (65535 & r3)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, A = o2 << 16 | 65535 & i2, te = (c2 = (H >>> 16) + (v2 >>> 16) + ((a2 = (65535 & H) + (65535 & v2) + ((o2 = (G >>> 16) + (x2 >>> 16) + ((i2 = (65535 & G) + (65535 & x2)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, re = o2 << 16 | 65535 & i2, t4 = ((H = (c2 = (_2 >>> 16) + (v2 >>> 16) + ((a2 = (65535 & _2) + (65535 & v2) + ((o2 = (A >>> 16) + (x2 >>> 16) + ((i2 = (65535 & A) + (65535 & x2)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2) >>> 28 | (G = o2 << 16 | 65535 & i2) << 4) ^ (G >>> 2 | H << 30) ^ (G >>> 7 | H << 25), r3 = (G >>> 28 | H << 4) ^ (H >>> 2 | G << 30) ^ (H >>> 7 | G << 25), s3 = (te >>> 14 | re << 18) ^ (te >>> 18 | re << 14) ^ (re >>> 9 | te << 23), n2 = (re >>> 14 | te << 18) ^ (re >>> 18 | te << 14) ^ (te >>> 9 | re << 23), w2 = (f2 = H & Y) ^ H & K ^ d2, b2 = (g2 = G & J) ^ G & F ^ h2, E = te & se ^ ~te & X, k = re & ne ^ ~re & Z, v2 = N[e3 + 4], x2 = N[e3 + 5], v2 = (c2 = ((_2 = p[e3 + 4]) >>> 16) + (v2 >>> 16) + (E >>> 16) + (s3 >>> 16) + (Q >>> 16) + ((a2 = (65535 & _2) + (65535 & v2) + (65535 & E) + (65535 & s3) + (65535 & Q) + ((o2 = ((A = p[e3 + 5]) >>> 16) + (x2 >>> 16) + (k >>> 16) + (n2 >>> 16) + (ee >>> 16) + ((i2 = (65535 & A) + (65535 & x2) + (65535 & k) + (65535 & n2) + (65535 & ee)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, x2 = o2 << 16 | 65535 & i2, _2 = (c2 = (w2 >>> 16) + (t4 >>> 16) + ((a2 = (65535 & w2) + (65535 & t4) + ((o2 = (b2 >>> 16) + (r3 >>> 16) + ((i2 = (65535 & b2) + (65535 & r3)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, A = o2 << 16 | 65535 & i2, Q = (c2 = (z >>> 16) + (v2 >>> 16) + ((a2 = (65535 & z) + (65535 & v2) + ((o2 = (V >>> 16) + (x2 >>> 16) + ((i2 = (65535 & V) + (65535 & x2)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, ee = o2 << 16 | 65535 & i2, t4 = ((z = (c2 = (_2 >>> 16) + (v2 >>> 16) + ((a2 = (65535 & _2) + (65535 & v2) + ((o2 = (A >>> 16) + (x2 >>> 16) + ((i2 = (65535 & A) + (65535 & x2)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2) >>> 28 | (V = o2 << 16 | 65535 & i2) << 4) ^ (V >>> 2 | z << 30) ^ (V >>> 7 | z << 25), r3 = (V >>> 28 | z << 4) ^ (z >>> 2 | V << 30) ^ (z >>> 7 | V << 25), s3 = (Q >>> 14 | ee << 18) ^ (Q >>> 18 | ee << 14) ^ (ee >>> 9 | Q << 23), n2 = (ee >>> 14 | Q << 18) ^ (ee >>> 18 | Q << 14) ^ (Q >>> 9 | ee << 23), w2 = (m2 = z & H) ^ z & Y ^ f2, b2 = (y2 = V & G) ^ V & J ^ g2, E = Q & te ^ ~Q & se, k = ee & re ^ ~ee & ne, v2 = N[e3 + 6], x2 = N[e3 + 7], v2 = (c2 = ((_2 = p[e3 + 6]) >>> 16) + (v2 >>> 16) + (E >>> 16) + (s3 >>> 16) + (X >>> 16) + ((a2 = (65535 & _2) + (65535 & v2) + (65535 & E) + (65535 & s3) + (65535 & X) + ((o2 = ((A = p[e3 + 7]) >>> 16) + (x2 >>> 16) + (k >>> 16) + (n2 >>> 16) + (Z >>> 16) + ((i2 = (65535 & A) + (65535 & x2) + (65535 & k) + (65535 & n2) + (65535 & Z)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, x2 = o2 << 16 | 65535 & i2, _2 = (c2 = (w2 >>> 16) + (t4 >>> 16) + ((a2 = (65535 & w2) + (65535 & t4) + ((o2 = (b2 >>> 16) + (r3 >>> 16) + ((i2 = (65535 & b2) + (65535 & r3)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, A = o2 << 16 | 65535 & i2, X = (c2 = (K >>> 16) + (v2 >>> 16) + ((a2 = (65535 & K) + (65535 & v2) + ((o2 = (F >>> 16) + (x2 >>> 16) + ((i2 = (65535 & F) + (65535 & x2)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, Z = o2 << 16 | 65535 & i2, K = (c2 = (_2 >>> 16) + (v2 >>> 16) + ((a2 = (65535 & _2) + (65535 & v2) + ((o2 = (A >>> 16) + (x2 >>> 16) + ((i2 = (65535 & A) + (65535 & x2)) >>> 16)) >>> 16)) >>> 16)) << 16 | 65535 & a2, F = o2 << 16 | 65535 & i2;
            c2 = (S >>> 16) + (K >>> 16) + ((a2 = (65535 & S) + (65535 & K) + ((o2 = (R >>> 16) + (F >>> 16) + ((i2 = (65535 & R) + (65535 & F)) >>> 16)) >>> 16)) >>> 16), this.h0h = c2 << 16 | 65535 & a2, this.h0l = o2 << 16 | 65535 & i2, c2 = (T >>> 16) + (z >>> 16) + ((a2 = (65535 & T) + (65535 & z) + ((o2 = (I >>> 16) + (V >>> 16) + ((i2 = (65535 & I) + (65535 & V)) >>> 16)) >>> 16)) >>> 16), this.h1h = c2 << 16 | 65535 & a2, this.h1l = o2 << 16 | 65535 & i2, c2 = (B >>> 16) + (H >>> 16) + ((a2 = (65535 & B) + (65535 & H) + ((o2 = (U >>> 16) + (G >>> 16) + ((i2 = (65535 & U) + (65535 & G)) >>> 16)) >>> 16)) >>> 16), this.h2h = c2 << 16 | 65535 & a2, this.h2l = o2 << 16 | 65535 & i2, c2 = (P >>> 16) + (Y >>> 16) + ((a2 = (65535 & P) + (65535 & Y) + ((o2 = (j >>> 16) + (J >>> 16) + ((i2 = (65535 & j) + (65535 & J)) >>> 16)) >>> 16)) >>> 16), this.h3h = c2 << 16 | 65535 & a2, this.h3l = o2 << 16 | 65535 & i2, c2 = (q >>> 16) + (X >>> 16) + ((a2 = (65535 & q) + (65535 & X) + ((o2 = ($ >>> 16) + (Z >>> 16) + ((i2 = (65535 & $) + (65535 & Z)) >>> 16)) >>> 16)) >>> 16), this.h4h = c2 << 16 | 65535 & a2, this.h4l = o2 << 16 | 65535 & i2, c2 = (C >>> 16) + (Q >>> 16) + ((a2 = (65535 & C) + (65535 & Q) + ((o2 = (D >>> 16) + (ee >>> 16) + ((i2 = (65535 & D) + (65535 & ee)) >>> 16)) >>> 16)) >>> 16), this.h5h = c2 << 16 | 65535 & a2, this.h5l = o2 << 16 | 65535 & i2, c2 = (O >>> 16) + (te >>> 16) + ((a2 = (65535 & O) + (65535 & te) + ((o2 = (L >>> 16) + (re >>> 16) + ((i2 = (65535 & L) + (65535 & re)) >>> 16)) >>> 16)) >>> 16), this.h6h = c2 << 16 | 65535 & a2, this.h6l = o2 << 16 | 65535 & i2, c2 = (M >>> 16) + (se >>> 16) + ((a2 = (65535 & M) + (65535 & se) + ((o2 = (W >>> 16) + (ne >>> 16) + ((i2 = (65535 & W) + (65535 & ne)) >>> 16)) >>> 16)) >>> 16), this.h7h = c2 << 16 | 65535 & a2, this.h7l = o2 << 16 | 65535 & i2;
          }, v.prototype.hex = function() {
            this.finalize();
            var e3 = this.h0h, t4 = this.h0l, r3 = this.h1h, s3 = this.h1l, n2 = this.h2h, i2 = this.h2l, o2 = this.h3h, a2 = this.h3l, c2 = this.h4h, u2 = this.h4l, d2 = this.h5h, h2 = this.h5l, p2 = this.h6h, f2 = this.h6l, g2 = this.h7h, m2 = this.h7l, y2 = this.bits, w2 = l[e3 >> 28 & 15] + l[e3 >> 24 & 15] + l[e3 >> 20 & 15] + l[e3 >> 16 & 15] + l[e3 >> 12 & 15] + l[e3 >> 8 & 15] + l[e3 >> 4 & 15] + l[15 & e3] + l[t4 >> 28 & 15] + l[t4 >> 24 & 15] + l[t4 >> 20 & 15] + l[t4 >> 16 & 15] + l[t4 >> 12 & 15] + l[t4 >> 8 & 15] + l[t4 >> 4 & 15] + l[15 & t4] + l[r3 >> 28 & 15] + l[r3 >> 24 & 15] + l[r3 >> 20 & 15] + l[r3 >> 16 & 15] + l[r3 >> 12 & 15] + l[r3 >> 8 & 15] + l[r3 >> 4 & 15] + l[15 & r3] + l[s3 >> 28 & 15] + l[s3 >> 24 & 15] + l[s3 >> 20 & 15] + l[s3 >> 16 & 15] + l[s3 >> 12 & 15] + l[s3 >> 8 & 15] + l[s3 >> 4 & 15] + l[15 & s3] + l[n2 >> 28 & 15] + l[n2 >> 24 & 15] + l[n2 >> 20 & 15] + l[n2 >> 16 & 15] + l[n2 >> 12 & 15] + l[n2 >> 8 & 15] + l[n2 >> 4 & 15] + l[15 & n2] + l[i2 >> 28 & 15] + l[i2 >> 24 & 15] + l[i2 >> 20 & 15] + l[i2 >> 16 & 15] + l[i2 >> 12 & 15] + l[i2 >> 8 & 15] + l[i2 >> 4 & 15] + l[15 & i2] + l[o2 >> 28 & 15] + l[o2 >> 24 & 15] + l[o2 >> 20 & 15] + l[o2 >> 16 & 15] + l[o2 >> 12 & 15] + l[o2 >> 8 & 15] + l[o2 >> 4 & 15] + l[15 & o2];
            return y2 >= 256 && (w2 += l[a2 >> 28 & 15] + l[a2 >> 24 & 15] + l[a2 >> 20 & 15] + l[a2 >> 16 & 15] + l[a2 >> 12 & 15] + l[a2 >> 8 & 15] + l[a2 >> 4 & 15] + l[15 & a2]), y2 >= 384 && (w2 += l[c2 >> 28 & 15] + l[c2 >> 24 & 15] + l[c2 >> 20 & 15] + l[c2 >> 16 & 15] + l[c2 >> 12 & 15] + l[c2 >> 8 & 15] + l[c2 >> 4 & 15] + l[15 & c2] + l[u2 >> 28 & 15] + l[u2 >> 24 & 15] + l[u2 >> 20 & 15] + l[u2 >> 16 & 15] + l[u2 >> 12 & 15] + l[u2 >> 8 & 15] + l[u2 >> 4 & 15] + l[15 & u2] + l[d2 >> 28 & 15] + l[d2 >> 24 & 15] + l[d2 >> 20 & 15] + l[d2 >> 16 & 15] + l[d2 >> 12 & 15] + l[d2 >> 8 & 15] + l[d2 >> 4 & 15] + l[15 & d2] + l[h2 >> 28 & 15] + l[h2 >> 24 & 15] + l[h2 >> 20 & 15] + l[h2 >> 16 & 15] + l[h2 >> 12 & 15] + l[h2 >> 8 & 15] + l[h2 >> 4 & 15] + l[15 & h2]), 512 == y2 && (w2 += l[p2 >> 28 & 15] + l[p2 >> 24 & 15] + l[p2 >> 20 & 15] + l[p2 >> 16 & 15] + l[p2 >> 12 & 15] + l[p2 >> 8 & 15] + l[p2 >> 4 & 15] + l[15 & p2] + l[f2 >> 28 & 15] + l[f2 >> 24 & 15] + l[f2 >> 20 & 15] + l[f2 >> 16 & 15] + l[f2 >> 12 & 15] + l[f2 >> 8 & 15] + l[f2 >> 4 & 15] + l[15 & f2] + l[g2 >> 28 & 15] + l[g2 >> 24 & 15] + l[g2 >> 20 & 15] + l[g2 >> 16 & 15] + l[g2 >> 12 & 15] + l[g2 >> 8 & 15] + l[g2 >> 4 & 15] + l[15 & g2] + l[m2 >> 28 & 15] + l[m2 >> 24 & 15] + l[m2 >> 20 & 15] + l[m2 >> 16 & 15] + l[m2 >> 12 & 15] + l[m2 >> 8 & 15] + l[m2 >> 4 & 15] + l[15 & m2]), w2;
          }, v.prototype.toString = v.prototype.hex, v.prototype.digest = function() {
            this.finalize();
            var e3 = this.h0h, t4 = this.h0l, r3 = this.h1h, s3 = this.h1l, n2 = this.h2h, i2 = this.h2l, o2 = this.h3h, a2 = this.h3l, c2 = this.h4h, u2 = this.h4l, l2 = this.h5h, d2 = this.h5l, h2 = this.h6h, p2 = this.h6l, f2 = this.h7h, g2 = this.h7l, m2 = this.bits, y2 = [e3 >> 24 & 255, e3 >> 16 & 255, e3 >> 8 & 255, 255 & e3, t4 >> 24 & 255, t4 >> 16 & 255, t4 >> 8 & 255, 255 & t4, r3 >> 24 & 255, r3 >> 16 & 255, r3 >> 8 & 255, 255 & r3, s3 >> 24 & 255, s3 >> 16 & 255, s3 >> 8 & 255, 255 & s3, n2 >> 24 & 255, n2 >> 16 & 255, n2 >> 8 & 255, 255 & n2, i2 >> 24 & 255, i2 >> 16 & 255, i2 >> 8 & 255, 255 & i2, o2 >> 24 & 255, o2 >> 16 & 255, o2 >> 8 & 255, 255 & o2];
            return m2 >= 256 && y2.push(a2 >> 24 & 255, a2 >> 16 & 255, a2 >> 8 & 255, 255 & a2), m2 >= 384 && y2.push(c2 >> 24 & 255, c2 >> 16 & 255, c2 >> 8 & 255, 255 & c2, u2 >> 24 & 255, u2 >> 16 & 255, u2 >> 8 & 255, 255 & u2, l2 >> 24 & 255, l2 >> 16 & 255, l2 >> 8 & 255, 255 & l2, d2 >> 24 & 255, d2 >> 16 & 255, d2 >> 8 & 255, 255 & d2), 512 == m2 && y2.push(h2 >> 24 & 255, h2 >> 16 & 255, h2 >> 8 & 255, 255 & h2, p2 >> 24 & 255, p2 >> 16 & 255, p2 >> 8 & 255, 255 & p2, f2 >> 24 & 255, f2 >> 16 & 255, f2 >> 8 & 255, 255 & f2, g2 >> 24 & 255, g2 >> 16 & 255, g2 >> 8 & 255, 255 & g2), y2;
          }, v.prototype.array = v.prototype.digest, v.prototype.arrayBuffer = function() {
            this.finalize();
            var e3 = this.bits, t4 = new ArrayBuffer(e3 / 8), r3 = new DataView(t4);
            return r3.setUint32(0, this.h0h), r3.setUint32(4, this.h0l), r3.setUint32(8, this.h1h), r3.setUint32(12, this.h1l), r3.setUint32(16, this.h2h), r3.setUint32(20, this.h2l), r3.setUint32(24, this.h3h), e3 >= 256 && r3.setUint32(28, this.h3l), e3 >= 384 && (r3.setUint32(32, this.h4h), r3.setUint32(36, this.h4l), r3.setUint32(40, this.h5h), r3.setUint32(44, this.h5l)), 512 == e3 && (r3.setUint32(48, this.h6h), r3.setUint32(52, this.h6l), r3.setUint32(56, this.h7h), r3.setUint32(60, this.h7l)), t4;
          }, v.prototype.clone = function() {
            var e3 = new v(this.bits, false);
            return this.copyTo(e3), e3;
          }, v.prototype.copyTo = function(e3) {
            var t4 = 0, r3 = ["h0h", "h0l", "h1h", "h1l", "h2h", "h2l", "h3h", "h3l", "h4h", "h4l", "h5h", "h5l", "h6h", "h6l", "h7h", "h7l", "start", "bytes", "hBytes", "finalized", "hashed", "lastByteIndex"];
            for (t4 = 0; t4 < r3.length; ++t4) e3[r3[t4]] = this[r3[t4]];
            for (t4 = 0; t4 < this.blocks.length; ++t4) e3.blocks[t4] = this.blocks[t4];
          }, x.prototype = new v(), x.prototype.finalize = function() {
            if (v.prototype.finalize.call(this), this.inner) {
              this.inner = false;
              var e3 = this.array();
              v.call(this, this.bits, this.sharedMemory), this.update(this.oKeyPad), this.update(e3), v.prototype.finalize.call(this);
            }
          }, x.prototype.clone = function() {
            var e3 = new x([], this.bits, false);
            this.copyTo(e3), e3.inner = this.inner;
            for (var t4 = 0; t4 < this.oKeyPad.length; ++t4) e3.oKeyPad[t4] = this.oKeyPad[t4];
            return e3;
          };
          var _ = y(512);
          _.sha512 = _, _.sha384 = y(384), _.sha512_256 = y(256), _.sha512_224 = y(224), _.sha512.hmac = b(512), _.sha384.hmac = b(384), _.sha512_256.hmac = b(256), _.sha512_224.hmac = b(224), a ? e2.exports = _ : (i.sha512 = _.sha512, i.sha384 = _.sha384, i.sha512_256 = _.sha512_256, i.sha512_224 = _.sha512_224, c && (void 0 === (s2 = (function() {
            return _;
          }).call(_, r2, _, e2)) || (e2.exports = s2)));
        })();
      }, 360: (e2, t2, r2) => {
        var s2 = r2(592).stringify, n = r2(385);
        e2.exports = function(e3) {
          return { parse: n(e3), stringify: s2 };
        }, e2.exports.parse = n(), e2.exports.stringify = s2;
      }, 385: (e2, t2, r2) => {
        var s2 = null;
        const n = /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/, i = /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;
        e2.exports = function(e3) {
          "use strict";
          var t3 = { strict: false, storeAsString: false, alwaysParseAsBig: false, useNativeBigInt: false, protoAction: "error", constructorAction: "error" };
          if (null != e3) {
            if (true === e3.strict && (t3.strict = true), true === e3.storeAsString && (t3.storeAsString = true), t3.alwaysParseAsBig = true === e3.alwaysParseAsBig && e3.alwaysParseAsBig, t3.useNativeBigInt = true === e3.useNativeBigInt && e3.useNativeBigInt, void 0 !== e3.constructorAction) {
              if ("error" !== e3.constructorAction && "ignore" !== e3.constructorAction && "preserve" !== e3.constructorAction) throw new Error(`Incorrect value for constructorAction option, must be "error", "ignore" or undefined but passed ${e3.constructorAction}`);
              t3.constructorAction = e3.constructorAction;
            }
            if (void 0 !== e3.protoAction) {
              if ("error" !== e3.protoAction && "ignore" !== e3.protoAction && "preserve" !== e3.protoAction) throw new Error(`Incorrect value for protoAction option, must be "error", "ignore" or undefined but passed ${e3.protoAction}`);
              t3.protoAction = e3.protoAction;
            }
          }
          var o, a, c, u, l = { '"': '"', "\\": "\\", "/": "/", b: "\b", f: "\f", n: "\n", r: "\r", t: "	" }, d = function(e4) {
            throw { name: "SyntaxError", message: e4, at: o, text: c };
          }, h = function(e4) {
            return e4 && e4 !== a && d("Expected '" + e4 + "' instead of '" + a + "'"), a = c.charAt(o), o += 1, a;
          }, p = function() {
            var e4, n2 = "";
            for ("-" === a && (n2 = "-", h("-")); a >= "0" && a <= "9"; ) n2 += a, h();
            if ("." === a) for (n2 += "."; h() && a >= "0" && a <= "9"; ) n2 += a;
            if ("e" === a || "E" === a) for (n2 += a, h(), "-" !== a && "+" !== a || (n2 += a, h()); a >= "0" && a <= "9"; ) n2 += a, h();
            if (e4 = +n2, isFinite(e4)) return null == s2 && (s2 = r2(117)), n2.length > 15 ? t3.storeAsString ? n2 : t3.useNativeBigInt ? BigInt(n2) : new s2(n2) : t3.alwaysParseAsBig ? t3.useNativeBigInt ? BigInt(e4) : new s2(e4) : e4;
            d("Bad number");
          }, f = function() {
            var e4, t4, r3, s3 = "";
            if ('"' === a) for (var n2 = o; h(); ) {
              if ('"' === a) return o - 1 > n2 && (s3 += c.substring(n2, o - 1)), h(), s3;
              if ("\\" === a) {
                if (o - 1 > n2 && (s3 += c.substring(n2, o - 1)), h(), "u" === a) {
                  for (r3 = 0, t4 = 0; t4 < 4 && (e4 = parseInt(h(), 16), isFinite(e4)); t4 += 1) r3 = 16 * r3 + e4;
                  s3 += String.fromCharCode(r3);
                } else {
                  if ("string" != typeof l[a]) break;
                  s3 += l[a];
                }
                n2 = o;
              }
            }
            d("Bad string");
          }, g = function() {
            for (; a && a <= " "; ) h();
          };
          return u = function() {
            switch (g(), a) {
              case "{":
                return (function() {
                  var e4, r3 = /* @__PURE__ */ Object.create(null);
                  if ("{" === a) {
                    if (h("{"), g(), "}" === a) return h("}"), r3;
                    for (; a; ) {
                      if (e4 = f(), g(), h(":"), true === t3.strict && Object.hasOwnProperty.call(r3, e4) && d('Duplicate key "' + e4 + '"'), true === n.test(e4) ? "error" === t3.protoAction ? d("Object contains forbidden prototype property") : "ignore" === t3.protoAction ? u() : r3[e4] = u() : true === i.test(e4) ? "error" === t3.constructorAction ? d("Object contains forbidden constructor property") : "ignore" === t3.constructorAction ? u() : r3[e4] = u() : r3[e4] = u(), g(), "}" === a) return h("}"), r3;
                      h(","), g();
                    }
                  }
                  d("Bad object");
                })();
              case "[":
                return (function() {
                  var e4 = [];
                  if ("[" === a) {
                    if (h("["), g(), "]" === a) return h("]"), e4;
                    for (; a; ) {
                      if (e4.push(u()), g(), "]" === a) return h("]"), e4;
                      h(","), g();
                    }
                  }
                  d("Bad array");
                })();
              case '"':
                return f();
              case "-":
                return p();
              default:
                return a >= "0" && a <= "9" ? p() : (function() {
                  switch (a) {
                    case "t":
                      return h("t"), h("r"), h("u"), h("e"), true;
                    case "f":
                      return h("f"), h("a"), h("l"), h("s"), h("e"), false;
                    case "n":
                      return h("n"), h("u"), h("l"), h("l"), null;
                  }
                  d("Unexpected '" + a + "'");
                })();
            }
          }, function(e4, t4) {
            var r3;
            return c = e4 + "", o = 0, a = " ", r3 = u(), g(), a && d("Syntax error"), "function" == typeof t4 ? (function e5(r4, s3) {
              var n2, i2 = r4[s3];
              return i2 && "object" == typeof i2 && Object.keys(i2).forEach((function(t5) {
                void 0 !== (n2 = e5(i2, t5)) ? i2[t5] = n2 : delete i2[t5];
              })), t4.call(r4, s3, i2);
            })({ "": r3 }, "") : r3;
          };
        };
      }, 592: (e2, t2, r2) => {
        var s2 = r2(117), n = e2.exports;
        !(function() {
          "use strict";
          var e3, t3, r3, i = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, o = { "\b": "\\b", "	": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" };
          function a(e4) {
            return i.lastIndex = 0, i.test(e4) ? '"' + e4.replace(i, (function(e5) {
              var t4 = o[e5];
              return "string" == typeof t4 ? t4 : "\\u" + ("0000" + e5.charCodeAt(0).toString(16)).slice(-4);
            })) + '"' : '"' + e4 + '"';
          }
          function c(n2, i2) {
            var o2, u, l, d, h, p = e3, f = i2[n2], g = null != f && (f instanceof s2 || s2.isBigNumber(f));
            switch (f && "object" == typeof f && "function" == typeof f.toJSON && (f = f.toJSON(n2)), "function" == typeof r3 && (f = r3.call(i2, n2, f)), typeof f) {
              case "string":
                return g ? f : a(f);
              case "number":
                return isFinite(f) ? String(f) : "null";
              case "boolean":
              case "null":
              case "bigint":
                return String(f);
              case "object":
                if (!f) return "null";
                if (e3 += t3, h = [], "[object Array]" === Object.prototype.toString.apply(f)) {
                  for (d = f.length, o2 = 0; o2 < d; o2 += 1) h[o2] = c(o2, f) || "null";
                  return l = 0 === h.length ? "[]" : e3 ? "[\n" + e3 + h.join(",\n" + e3) + "\n" + p + "]" : "[" + h.join(",") + "]", e3 = p, l;
                }
                if (r3 && "object" == typeof r3) for (d = r3.length, o2 = 0; o2 < d; o2 += 1) "string" == typeof r3[o2] && (l = c(u = r3[o2], f)) && h.push(a(u) + (e3 ? ": " : ":") + l);
                else Object.keys(f).forEach((function(t4) {
                  var r4 = c(t4, f);
                  r4 && h.push(a(t4) + (e3 ? ": " : ":") + r4);
                }));
                return l = 0 === h.length ? "{}" : e3 ? "{\n" + e3 + h.join(",\n" + e3) + "\n" + p + "}" : "{" + h.join(",") + "}", e3 = p, l;
            }
          }
          "function" != typeof n.stringify && (n.stringify = function(s3, n2, i2) {
            var o2;
            if (e3 = "", t3 = "", "number" == typeof i2) for (o2 = 0; o2 < i2; o2 += 1) t3 += " ";
            else "string" == typeof i2 && (t3 = i2);
            if (r3 = n2, n2 && "function" != typeof n2 && ("object" != typeof n2 || "number" != typeof n2.length)) throw new Error("JSON.stringify");
            return c("", { "": s3 });
          });
        })();
      }, 765: function(e2, t2) {
        !(function(e3) {
          "use strict";
          var t3 = function(e4) {
            var t4, r3 = new Float64Array(16);
            if (e4) for (t4 = 0; t4 < e4.length; t4++) r3[t4] = e4[t4];
            return r3;
          }, r2 = function() {
            throw new Error("no PRNG");
          }, s2 = new Uint8Array(16), n = new Uint8Array(32);
          n[0] = 9;
          var i = t3(), o = t3([1]), a = t3([56129, 1]), c = t3([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]), u = t3([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]), l = t3([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]), d = t3([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]), h = t3([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
          function p(e4, t4, r3, s3) {
            e4[t4] = r3 >> 24 & 255, e4[t4 + 1] = r3 >> 16 & 255, e4[t4 + 2] = r3 >> 8 & 255, e4[t4 + 3] = 255 & r3, e4[t4 + 4] = s3 >> 24 & 255, e4[t4 + 5] = s3 >> 16 & 255, e4[t4 + 6] = s3 >> 8 & 255, e4[t4 + 7] = 255 & s3;
          }
          function f(e4, t4, r3, s3, n2) {
            var i2, o2 = 0;
            for (i2 = 0; i2 < n2; i2++) o2 |= e4[t4 + i2] ^ r3[s3 + i2];
            return (1 & o2 - 1 >>> 8) - 1;
          }
          function g(e4, t4, r3, s3) {
            return f(e4, t4, r3, s3, 16);
          }
          function m(e4, t4, r3, s3) {
            return f(e4, t4, r3, s3, 32);
          }
          function y(e4, t4, r3, s3) {
            !(function(e5, t5, r4, s4) {
              for (var n2, i2 = 255 & s4[0] | (255 & s4[1]) << 8 | (255 & s4[2]) << 16 | (255 & s4[3]) << 24, o2 = 255 & r4[0] | (255 & r4[1]) << 8 | (255 & r4[2]) << 16 | (255 & r4[3]) << 24, a2 = 255 & r4[4] | (255 & r4[5]) << 8 | (255 & r4[6]) << 16 | (255 & r4[7]) << 24, c2 = 255 & r4[8] | (255 & r4[9]) << 8 | (255 & r4[10]) << 16 | (255 & r4[11]) << 24, u2 = 255 & r4[12] | (255 & r4[13]) << 8 | (255 & r4[14]) << 16 | (255 & r4[15]) << 24, l2 = 255 & s4[4] | (255 & s4[5]) << 8 | (255 & s4[6]) << 16 | (255 & s4[7]) << 24, d2 = 255 & t5[0] | (255 & t5[1]) << 8 | (255 & t5[2]) << 16 | (255 & t5[3]) << 24, h2 = 255 & t5[4] | (255 & t5[5]) << 8 | (255 & t5[6]) << 16 | (255 & t5[7]) << 24, p2 = 255 & t5[8] | (255 & t5[9]) << 8 | (255 & t5[10]) << 16 | (255 & t5[11]) << 24, f2 = 255 & t5[12] | (255 & t5[13]) << 8 | (255 & t5[14]) << 16 | (255 & t5[15]) << 24, g2 = 255 & s4[8] | (255 & s4[9]) << 8 | (255 & s4[10]) << 16 | (255 & s4[11]) << 24, m2 = 255 & r4[16] | (255 & r4[17]) << 8 | (255 & r4[18]) << 16 | (255 & r4[19]) << 24, y2 = 255 & r4[20] | (255 & r4[21]) << 8 | (255 & r4[22]) << 16 | (255 & r4[23]) << 24, w2 = 255 & r4[24] | (255 & r4[25]) << 8 | (255 & r4[26]) << 16 | (255 & r4[27]) << 24, b2 = 255 & r4[28] | (255 & r4[29]) << 8 | (255 & r4[30]) << 16 | (255 & r4[31]) << 24, v2 = 255 & s4[12] | (255 & s4[13]) << 8 | (255 & s4[14]) << 16 | (255 & s4[15]) << 24, x2 = i2, _2 = o2, A2 = a2, E2 = c2, k2 = u2, S2 = l2, R2 = d2, T2 = h2, I2 = p2, B2 = f2, U2 = g2, P2 = m2, j2 = y2, q2 = w2, $2 = b2, C2 = v2, D2 = 0; D2 < 20; D2 += 2) x2 ^= (n2 = (j2 ^= (n2 = (I2 ^= (n2 = (k2 ^= (n2 = x2 + j2 | 0) << 7 | n2 >>> 25) + x2 | 0) << 9 | n2 >>> 23) + k2 | 0) << 13 | n2 >>> 19) + I2 | 0) << 18 | n2 >>> 14, S2 ^= (n2 = (_2 ^= (n2 = (q2 ^= (n2 = (B2 ^= (n2 = S2 + _2 | 0) << 7 | n2 >>> 25) + S2 | 0) << 9 | n2 >>> 23) + B2 | 0) << 13 | n2 >>> 19) + q2 | 0) << 18 | n2 >>> 14, U2 ^= (n2 = (R2 ^= (n2 = (A2 ^= (n2 = ($2 ^= (n2 = U2 + R2 | 0) << 7 | n2 >>> 25) + U2 | 0) << 9 | n2 >>> 23) + $2 | 0) << 13 | n2 >>> 19) + A2 | 0) << 18 | n2 >>> 14, C2 ^= (n2 = (P2 ^= (n2 = (T2 ^= (n2 = (E2 ^= (n2 = C2 + P2 | 0) << 7 | n2 >>> 25) + C2 | 0) << 9 | n2 >>> 23) + E2 | 0) << 13 | n2 >>> 19) + T2 | 0) << 18 | n2 >>> 14, x2 ^= (n2 = (E2 ^= (n2 = (A2 ^= (n2 = (_2 ^= (n2 = x2 + E2 | 0) << 7 | n2 >>> 25) + x2 | 0) << 9 | n2 >>> 23) + _2 | 0) << 13 | n2 >>> 19) + A2 | 0) << 18 | n2 >>> 14, S2 ^= (n2 = (k2 ^= (n2 = (T2 ^= (n2 = (R2 ^= (n2 = S2 + k2 | 0) << 7 | n2 >>> 25) + S2 | 0) << 9 | n2 >>> 23) + R2 | 0) << 13 | n2 >>> 19) + T2 | 0) << 18 | n2 >>> 14, U2 ^= (n2 = (B2 ^= (n2 = (I2 ^= (n2 = (P2 ^= (n2 = U2 + B2 | 0) << 7 | n2 >>> 25) + U2 | 0) << 9 | n2 >>> 23) + P2 | 0) << 13 | n2 >>> 19) + I2 | 0) << 18 | n2 >>> 14, C2 ^= (n2 = ($2 ^= (n2 = (q2 ^= (n2 = (j2 ^= (n2 = C2 + $2 | 0) << 7 | n2 >>> 25) + C2 | 0) << 9 | n2 >>> 23) + j2 | 0) << 13 | n2 >>> 19) + q2 | 0) << 18 | n2 >>> 14;
              x2 = x2 + i2 | 0, _2 = _2 + o2 | 0, A2 = A2 + a2 | 0, E2 = E2 + c2 | 0, k2 = k2 + u2 | 0, S2 = S2 + l2 | 0, R2 = R2 + d2 | 0, T2 = T2 + h2 | 0, I2 = I2 + p2 | 0, B2 = B2 + f2 | 0, U2 = U2 + g2 | 0, P2 = P2 + m2 | 0, j2 = j2 + y2 | 0, q2 = q2 + w2 | 0, $2 = $2 + b2 | 0, C2 = C2 + v2 | 0, e5[0] = x2 >>> 0 & 255, e5[1] = x2 >>> 8 & 255, e5[2] = x2 >>> 16 & 255, e5[3] = x2 >>> 24 & 255, e5[4] = _2 >>> 0 & 255, e5[5] = _2 >>> 8 & 255, e5[6] = _2 >>> 16 & 255, e5[7] = _2 >>> 24 & 255, e5[8] = A2 >>> 0 & 255, e5[9] = A2 >>> 8 & 255, e5[10] = A2 >>> 16 & 255, e5[11] = A2 >>> 24 & 255, e5[12] = E2 >>> 0 & 255, e5[13] = E2 >>> 8 & 255, e5[14] = E2 >>> 16 & 255, e5[15] = E2 >>> 24 & 255, e5[16] = k2 >>> 0 & 255, e5[17] = k2 >>> 8 & 255, e5[18] = k2 >>> 16 & 255, e5[19] = k2 >>> 24 & 255, e5[20] = S2 >>> 0 & 255, e5[21] = S2 >>> 8 & 255, e5[22] = S2 >>> 16 & 255, e5[23] = S2 >>> 24 & 255, e5[24] = R2 >>> 0 & 255, e5[25] = R2 >>> 8 & 255, e5[26] = R2 >>> 16 & 255, e5[27] = R2 >>> 24 & 255, e5[28] = T2 >>> 0 & 255, e5[29] = T2 >>> 8 & 255, e5[30] = T2 >>> 16 & 255, e5[31] = T2 >>> 24 & 255, e5[32] = I2 >>> 0 & 255, e5[33] = I2 >>> 8 & 255, e5[34] = I2 >>> 16 & 255, e5[35] = I2 >>> 24 & 255, e5[36] = B2 >>> 0 & 255, e5[37] = B2 >>> 8 & 255, e5[38] = B2 >>> 16 & 255, e5[39] = B2 >>> 24 & 255, e5[40] = U2 >>> 0 & 255, e5[41] = U2 >>> 8 & 255, e5[42] = U2 >>> 16 & 255, e5[43] = U2 >>> 24 & 255, e5[44] = P2 >>> 0 & 255, e5[45] = P2 >>> 8 & 255, e5[46] = P2 >>> 16 & 255, e5[47] = P2 >>> 24 & 255, e5[48] = j2 >>> 0 & 255, e5[49] = j2 >>> 8 & 255, e5[50] = j2 >>> 16 & 255, e5[51] = j2 >>> 24 & 255, e5[52] = q2 >>> 0 & 255, e5[53] = q2 >>> 8 & 255, e5[54] = q2 >>> 16 & 255, e5[55] = q2 >>> 24 & 255, e5[56] = $2 >>> 0 & 255, e5[57] = $2 >>> 8 & 255, e5[58] = $2 >>> 16 & 255, e5[59] = $2 >>> 24 & 255, e5[60] = C2 >>> 0 & 255, e5[61] = C2 >>> 8 & 255, e5[62] = C2 >>> 16 & 255, e5[63] = C2 >>> 24 & 255;
            })(e4, t4, r3, s3);
          }
          function w(e4, t4, r3, s3) {
            !(function(e5, t5, r4, s4) {
              for (var n2, i2 = 255 & s4[0] | (255 & s4[1]) << 8 | (255 & s4[2]) << 16 | (255 & s4[3]) << 24, o2 = 255 & r4[0] | (255 & r4[1]) << 8 | (255 & r4[2]) << 16 | (255 & r4[3]) << 24, a2 = 255 & r4[4] | (255 & r4[5]) << 8 | (255 & r4[6]) << 16 | (255 & r4[7]) << 24, c2 = 255 & r4[8] | (255 & r4[9]) << 8 | (255 & r4[10]) << 16 | (255 & r4[11]) << 24, u2 = 255 & r4[12] | (255 & r4[13]) << 8 | (255 & r4[14]) << 16 | (255 & r4[15]) << 24, l2 = 255 & s4[4] | (255 & s4[5]) << 8 | (255 & s4[6]) << 16 | (255 & s4[7]) << 24, d2 = 255 & t5[0] | (255 & t5[1]) << 8 | (255 & t5[2]) << 16 | (255 & t5[3]) << 24, h2 = 255 & t5[4] | (255 & t5[5]) << 8 | (255 & t5[6]) << 16 | (255 & t5[7]) << 24, p2 = 255 & t5[8] | (255 & t5[9]) << 8 | (255 & t5[10]) << 16 | (255 & t5[11]) << 24, f2 = 255 & t5[12] | (255 & t5[13]) << 8 | (255 & t5[14]) << 16 | (255 & t5[15]) << 24, g2 = 255 & s4[8] | (255 & s4[9]) << 8 | (255 & s4[10]) << 16 | (255 & s4[11]) << 24, m2 = 255 & r4[16] | (255 & r4[17]) << 8 | (255 & r4[18]) << 16 | (255 & r4[19]) << 24, y2 = 255 & r4[20] | (255 & r4[21]) << 8 | (255 & r4[22]) << 16 | (255 & r4[23]) << 24, w2 = 255 & r4[24] | (255 & r4[25]) << 8 | (255 & r4[26]) << 16 | (255 & r4[27]) << 24, b2 = 255 & r4[28] | (255 & r4[29]) << 8 | (255 & r4[30]) << 16 | (255 & r4[31]) << 24, v2 = 255 & s4[12] | (255 & s4[13]) << 8 | (255 & s4[14]) << 16 | (255 & s4[15]) << 24, x2 = 0; x2 < 20; x2 += 2) i2 ^= (n2 = (y2 ^= (n2 = (p2 ^= (n2 = (u2 ^= (n2 = i2 + y2 | 0) << 7 | n2 >>> 25) + i2 | 0) << 9 | n2 >>> 23) + u2 | 0) << 13 | n2 >>> 19) + p2 | 0) << 18 | n2 >>> 14, l2 ^= (n2 = (o2 ^= (n2 = (w2 ^= (n2 = (f2 ^= (n2 = l2 + o2 | 0) << 7 | n2 >>> 25) + l2 | 0) << 9 | n2 >>> 23) + f2 | 0) << 13 | n2 >>> 19) + w2 | 0) << 18 | n2 >>> 14, g2 ^= (n2 = (d2 ^= (n2 = (a2 ^= (n2 = (b2 ^= (n2 = g2 + d2 | 0) << 7 | n2 >>> 25) + g2 | 0) << 9 | n2 >>> 23) + b2 | 0) << 13 | n2 >>> 19) + a2 | 0) << 18 | n2 >>> 14, v2 ^= (n2 = (m2 ^= (n2 = (h2 ^= (n2 = (c2 ^= (n2 = v2 + m2 | 0) << 7 | n2 >>> 25) + v2 | 0) << 9 | n2 >>> 23) + c2 | 0) << 13 | n2 >>> 19) + h2 | 0) << 18 | n2 >>> 14, i2 ^= (n2 = (c2 ^= (n2 = (a2 ^= (n2 = (o2 ^= (n2 = i2 + c2 | 0) << 7 | n2 >>> 25) + i2 | 0) << 9 | n2 >>> 23) + o2 | 0) << 13 | n2 >>> 19) + a2 | 0) << 18 | n2 >>> 14, l2 ^= (n2 = (u2 ^= (n2 = (h2 ^= (n2 = (d2 ^= (n2 = l2 + u2 | 0) << 7 | n2 >>> 25) + l2 | 0) << 9 | n2 >>> 23) + d2 | 0) << 13 | n2 >>> 19) + h2 | 0) << 18 | n2 >>> 14, g2 ^= (n2 = (f2 ^= (n2 = (p2 ^= (n2 = (m2 ^= (n2 = g2 + f2 | 0) << 7 | n2 >>> 25) + g2 | 0) << 9 | n2 >>> 23) + m2 | 0) << 13 | n2 >>> 19) + p2 | 0) << 18 | n2 >>> 14, v2 ^= (n2 = (b2 ^= (n2 = (w2 ^= (n2 = (y2 ^= (n2 = v2 + b2 | 0) << 7 | n2 >>> 25) + v2 | 0) << 9 | n2 >>> 23) + y2 | 0) << 13 | n2 >>> 19) + w2 | 0) << 18 | n2 >>> 14;
              e5[0] = i2 >>> 0 & 255, e5[1] = i2 >>> 8 & 255, e5[2] = i2 >>> 16 & 255, e5[3] = i2 >>> 24 & 255, e5[4] = l2 >>> 0 & 255, e5[5] = l2 >>> 8 & 255, e5[6] = l2 >>> 16 & 255, e5[7] = l2 >>> 24 & 255, e5[8] = g2 >>> 0 & 255, e5[9] = g2 >>> 8 & 255, e5[10] = g2 >>> 16 & 255, e5[11] = g2 >>> 24 & 255, e5[12] = v2 >>> 0 & 255, e5[13] = v2 >>> 8 & 255, e5[14] = v2 >>> 16 & 255, e5[15] = v2 >>> 24 & 255, e5[16] = d2 >>> 0 & 255, e5[17] = d2 >>> 8 & 255, e5[18] = d2 >>> 16 & 255, e5[19] = d2 >>> 24 & 255, e5[20] = h2 >>> 0 & 255, e5[21] = h2 >>> 8 & 255, e5[22] = h2 >>> 16 & 255, e5[23] = h2 >>> 24 & 255, e5[24] = p2 >>> 0 & 255, e5[25] = p2 >>> 8 & 255, e5[26] = p2 >>> 16 & 255, e5[27] = p2 >>> 24 & 255, e5[28] = f2 >>> 0 & 255, e5[29] = f2 >>> 8 & 255, e5[30] = f2 >>> 16 & 255, e5[31] = f2 >>> 24 & 255;
            })(e4, t4, r3, s3);
          }
          var b = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
          function v(e4, t4, r3, s3, n2, i2, o2) {
            var a2, c2, u2 = new Uint8Array(16), l2 = new Uint8Array(64);
            for (c2 = 0; c2 < 16; c2++) u2[c2] = 0;
            for (c2 = 0; c2 < 8; c2++) u2[c2] = i2[c2];
            for (; n2 >= 64; ) {
              for (y(l2, u2, o2, b), c2 = 0; c2 < 64; c2++) e4[t4 + c2] = r3[s3 + c2] ^ l2[c2];
              for (a2 = 1, c2 = 8; c2 < 16; c2++) a2 = a2 + (255 & u2[c2]) | 0, u2[c2] = 255 & a2, a2 >>>= 8;
              n2 -= 64, t4 += 64, s3 += 64;
            }
            if (n2 > 0) for (y(l2, u2, o2, b), c2 = 0; c2 < n2; c2++) e4[t4 + c2] = r3[s3 + c2] ^ l2[c2];
            return 0;
          }
          function x(e4, t4, r3, s3, n2) {
            var i2, o2, a2 = new Uint8Array(16), c2 = new Uint8Array(64);
            for (o2 = 0; o2 < 16; o2++) a2[o2] = 0;
            for (o2 = 0; o2 < 8; o2++) a2[o2] = s3[o2];
            for (; r3 >= 64; ) {
              for (y(c2, a2, n2, b), o2 = 0; o2 < 64; o2++) e4[t4 + o2] = c2[o2];
              for (i2 = 1, o2 = 8; o2 < 16; o2++) i2 = i2 + (255 & a2[o2]) | 0, a2[o2] = 255 & i2, i2 >>>= 8;
              r3 -= 64, t4 += 64;
            }
            if (r3 > 0) for (y(c2, a2, n2, b), o2 = 0; o2 < r3; o2++) e4[t4 + o2] = c2[o2];
            return 0;
          }
          function _(e4, t4, r3, s3, n2) {
            var i2 = new Uint8Array(32);
            w(i2, s3, n2, b);
            for (var o2 = new Uint8Array(8), a2 = 0; a2 < 8; a2++) o2[a2] = s3[a2 + 16];
            return x(e4, t4, r3, o2, i2);
          }
          function A(e4, t4, r3, s3, n2, i2, o2) {
            var a2 = new Uint8Array(32);
            w(a2, i2, o2, b);
            for (var c2 = new Uint8Array(8), u2 = 0; u2 < 8; u2++) c2[u2] = i2[u2 + 16];
            return v(e4, t4, r3, s3, n2, c2, a2);
          }
          var E = function(e4) {
            var t4, r3, s3, n2, i2, o2, a2, c2;
            this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.leftover = 0, this.fin = 0, t4 = 255 & e4[0] | (255 & e4[1]) << 8, this.r[0] = 8191 & t4, r3 = 255 & e4[2] | (255 & e4[3]) << 8, this.r[1] = 8191 & (t4 >>> 13 | r3 << 3), s3 = 255 & e4[4] | (255 & e4[5]) << 8, this.r[2] = 7939 & (r3 >>> 10 | s3 << 6), n2 = 255 & e4[6] | (255 & e4[7]) << 8, this.r[3] = 8191 & (s3 >>> 7 | n2 << 9), i2 = 255 & e4[8] | (255 & e4[9]) << 8, this.r[4] = 255 & (n2 >>> 4 | i2 << 12), this.r[5] = i2 >>> 1 & 8190, o2 = 255 & e4[10] | (255 & e4[11]) << 8, this.r[6] = 8191 & (i2 >>> 14 | o2 << 2), a2 = 255 & e4[12] | (255 & e4[13]) << 8, this.r[7] = 8065 & (o2 >>> 11 | a2 << 5), c2 = 255 & e4[14] | (255 & e4[15]) << 8, this.r[8] = 8191 & (a2 >>> 8 | c2 << 8), this.r[9] = c2 >>> 5 & 127, this.pad[0] = 255 & e4[16] | (255 & e4[17]) << 8, this.pad[1] = 255 & e4[18] | (255 & e4[19]) << 8, this.pad[2] = 255 & e4[20] | (255 & e4[21]) << 8, this.pad[3] = 255 & e4[22] | (255 & e4[23]) << 8, this.pad[4] = 255 & e4[24] | (255 & e4[25]) << 8, this.pad[5] = 255 & e4[26] | (255 & e4[27]) << 8, this.pad[6] = 255 & e4[28] | (255 & e4[29]) << 8, this.pad[7] = 255 & e4[30] | (255 & e4[31]) << 8;
          };
          function k(e4, t4, r3, s3, n2, i2) {
            var o2 = new E(i2);
            return o2.update(r3, s3, n2), o2.finish(e4, t4), 0;
          }
          function S(e4, t4, r3, s3, n2, i2) {
            var o2 = new Uint8Array(16);
            return k(o2, 0, r3, s3, n2, i2), g(e4, t4, o2, 0);
          }
          function R(e4, t4, r3, s3, n2) {
            var i2;
            if (r3 < 32) return -1;
            for (A(e4, 0, t4, 0, r3, s3, n2), k(e4, 16, e4, 32, r3 - 32, e4), i2 = 0; i2 < 16; i2++) e4[i2] = 0;
            return 0;
          }
          function T(e4, t4, r3, s3, n2) {
            var i2, o2 = new Uint8Array(32);
            if (r3 < 32) return -1;
            if (_(o2, 0, 32, s3, n2), 0 !== S(t4, 16, t4, 32, r3 - 32, o2)) return -1;
            for (A(e4, 0, t4, 0, r3, s3, n2), i2 = 0; i2 < 32; i2++) e4[i2] = 0;
            return 0;
          }
          function I(e4, t4) {
            var r3;
            for (r3 = 0; r3 < 16; r3++) e4[r3] = 0 | t4[r3];
          }
          function B(e4) {
            var t4, r3, s3 = 1;
            for (t4 = 0; t4 < 16; t4++) r3 = e4[t4] + s3 + 65535, s3 = Math.floor(r3 / 65536), e4[t4] = r3 - 65536 * s3;
            e4[0] += s3 - 1 + 37 * (s3 - 1);
          }
          function U(e4, t4, r3) {
            for (var s3, n2 = ~(r3 - 1), i2 = 0; i2 < 16; i2++) s3 = n2 & (e4[i2] ^ t4[i2]), e4[i2] ^= s3, t4[i2] ^= s3;
          }
          function P(e4, r3) {
            var s3, n2, i2, o2 = t3(), a2 = t3();
            for (s3 = 0; s3 < 16; s3++) a2[s3] = r3[s3];
            for (B(a2), B(a2), B(a2), n2 = 0; n2 < 2; n2++) {
              for (o2[0] = a2[0] - 65517, s3 = 1; s3 < 15; s3++) o2[s3] = a2[s3] - 65535 - (o2[s3 - 1] >> 16 & 1), o2[s3 - 1] &= 65535;
              o2[15] = a2[15] - 32767 - (o2[14] >> 16 & 1), i2 = o2[15] >> 16 & 1, o2[14] &= 65535, U(a2, o2, 1 - i2);
            }
            for (s3 = 0; s3 < 16; s3++) e4[2 * s3] = 255 & a2[s3], e4[2 * s3 + 1] = a2[s3] >> 8;
          }
          function j(e4, t4) {
            var r3 = new Uint8Array(32), s3 = new Uint8Array(32);
            return P(r3, e4), P(s3, t4), m(r3, 0, s3, 0);
          }
          function q(e4) {
            var t4 = new Uint8Array(32);
            return P(t4, e4), 1 & t4[0];
          }
          function $(e4, t4) {
            var r3;
            for (r3 = 0; r3 < 16; r3++) e4[r3] = t4[2 * r3] + (t4[2 * r3 + 1] << 8);
            e4[15] &= 32767;
          }
          function C(e4, t4, r3) {
            for (var s3 = 0; s3 < 16; s3++) e4[s3] = t4[s3] + r3[s3];
          }
          function D(e4, t4, r3) {
            for (var s3 = 0; s3 < 16; s3++) e4[s3] = t4[s3] - r3[s3];
          }
          function O(e4, t4, r3) {
            var s3, n2, i2 = 0, o2 = 0, a2 = 0, c2 = 0, u2 = 0, l2 = 0, d2 = 0, h2 = 0, p2 = 0, f2 = 0, g2 = 0, m2 = 0, y2 = 0, w2 = 0, b2 = 0, v2 = 0, x2 = 0, _2 = 0, A2 = 0, E2 = 0, k2 = 0, S2 = 0, R2 = 0, T2 = 0, I2 = 0, B2 = 0, U2 = 0, P2 = 0, j2 = 0, q2 = 0, $2 = 0, C2 = r3[0], D2 = r3[1], O2 = r3[2], L2 = r3[3], M2 = r3[4], W2 = r3[5], N2 = r3[6], K2 = r3[7], F2 = r3[8], z2 = r3[9], V2 = r3[10], H2 = r3[11], G2 = r3[12], Y2 = r3[13], J2 = r3[14], X2 = r3[15];
            i2 += (s3 = t4[0]) * C2, o2 += s3 * D2, a2 += s3 * O2, c2 += s3 * L2, u2 += s3 * M2, l2 += s3 * W2, d2 += s3 * N2, h2 += s3 * K2, p2 += s3 * F2, f2 += s3 * z2, g2 += s3 * V2, m2 += s3 * H2, y2 += s3 * G2, w2 += s3 * Y2, b2 += s3 * J2, v2 += s3 * X2, o2 += (s3 = t4[1]) * C2, a2 += s3 * D2, c2 += s3 * O2, u2 += s3 * L2, l2 += s3 * M2, d2 += s3 * W2, h2 += s3 * N2, p2 += s3 * K2, f2 += s3 * F2, g2 += s3 * z2, m2 += s3 * V2, y2 += s3 * H2, w2 += s3 * G2, b2 += s3 * Y2, v2 += s3 * J2, x2 += s3 * X2, a2 += (s3 = t4[2]) * C2, c2 += s3 * D2, u2 += s3 * O2, l2 += s3 * L2, d2 += s3 * M2, h2 += s3 * W2, p2 += s3 * N2, f2 += s3 * K2, g2 += s3 * F2, m2 += s3 * z2, y2 += s3 * V2, w2 += s3 * H2, b2 += s3 * G2, v2 += s3 * Y2, x2 += s3 * J2, _2 += s3 * X2, c2 += (s3 = t4[3]) * C2, u2 += s3 * D2, l2 += s3 * O2, d2 += s3 * L2, h2 += s3 * M2, p2 += s3 * W2, f2 += s3 * N2, g2 += s3 * K2, m2 += s3 * F2, y2 += s3 * z2, w2 += s3 * V2, b2 += s3 * H2, v2 += s3 * G2, x2 += s3 * Y2, _2 += s3 * J2, A2 += s3 * X2, u2 += (s3 = t4[4]) * C2, l2 += s3 * D2, d2 += s3 * O2, h2 += s3 * L2, p2 += s3 * M2, f2 += s3 * W2, g2 += s3 * N2, m2 += s3 * K2, y2 += s3 * F2, w2 += s3 * z2, b2 += s3 * V2, v2 += s3 * H2, x2 += s3 * G2, _2 += s3 * Y2, A2 += s3 * J2, E2 += s3 * X2, l2 += (s3 = t4[5]) * C2, d2 += s3 * D2, h2 += s3 * O2, p2 += s3 * L2, f2 += s3 * M2, g2 += s3 * W2, m2 += s3 * N2, y2 += s3 * K2, w2 += s3 * F2, b2 += s3 * z2, v2 += s3 * V2, x2 += s3 * H2, _2 += s3 * G2, A2 += s3 * Y2, E2 += s3 * J2, k2 += s3 * X2, d2 += (s3 = t4[6]) * C2, h2 += s3 * D2, p2 += s3 * O2, f2 += s3 * L2, g2 += s3 * M2, m2 += s3 * W2, y2 += s3 * N2, w2 += s3 * K2, b2 += s3 * F2, v2 += s3 * z2, x2 += s3 * V2, _2 += s3 * H2, A2 += s3 * G2, E2 += s3 * Y2, k2 += s3 * J2, S2 += s3 * X2, h2 += (s3 = t4[7]) * C2, p2 += s3 * D2, f2 += s3 * O2, g2 += s3 * L2, m2 += s3 * M2, y2 += s3 * W2, w2 += s3 * N2, b2 += s3 * K2, v2 += s3 * F2, x2 += s3 * z2, _2 += s3 * V2, A2 += s3 * H2, E2 += s3 * G2, k2 += s3 * Y2, S2 += s3 * J2, R2 += s3 * X2, p2 += (s3 = t4[8]) * C2, f2 += s3 * D2, g2 += s3 * O2, m2 += s3 * L2, y2 += s3 * M2, w2 += s3 * W2, b2 += s3 * N2, v2 += s3 * K2, x2 += s3 * F2, _2 += s3 * z2, A2 += s3 * V2, E2 += s3 * H2, k2 += s3 * G2, S2 += s3 * Y2, R2 += s3 * J2, T2 += s3 * X2, f2 += (s3 = t4[9]) * C2, g2 += s3 * D2, m2 += s3 * O2, y2 += s3 * L2, w2 += s3 * M2, b2 += s3 * W2, v2 += s3 * N2, x2 += s3 * K2, _2 += s3 * F2, A2 += s3 * z2, E2 += s3 * V2, k2 += s3 * H2, S2 += s3 * G2, R2 += s3 * Y2, T2 += s3 * J2, I2 += s3 * X2, g2 += (s3 = t4[10]) * C2, m2 += s3 * D2, y2 += s3 * O2, w2 += s3 * L2, b2 += s3 * M2, v2 += s3 * W2, x2 += s3 * N2, _2 += s3 * K2, A2 += s3 * F2, E2 += s3 * z2, k2 += s3 * V2, S2 += s3 * H2, R2 += s3 * G2, T2 += s3 * Y2, I2 += s3 * J2, B2 += s3 * X2, m2 += (s3 = t4[11]) * C2, y2 += s3 * D2, w2 += s3 * O2, b2 += s3 * L2, v2 += s3 * M2, x2 += s3 * W2, _2 += s3 * N2, A2 += s3 * K2, E2 += s3 * F2, k2 += s3 * z2, S2 += s3 * V2, R2 += s3 * H2, T2 += s3 * G2, I2 += s3 * Y2, B2 += s3 * J2, U2 += s3 * X2, y2 += (s3 = t4[12]) * C2, w2 += s3 * D2, b2 += s3 * O2, v2 += s3 * L2, x2 += s3 * M2, _2 += s3 * W2, A2 += s3 * N2, E2 += s3 * K2, k2 += s3 * F2, S2 += s3 * z2, R2 += s3 * V2, T2 += s3 * H2, I2 += s3 * G2, B2 += s3 * Y2, U2 += s3 * J2, P2 += s3 * X2, w2 += (s3 = t4[13]) * C2, b2 += s3 * D2, v2 += s3 * O2, x2 += s3 * L2, _2 += s3 * M2, A2 += s3 * W2, E2 += s3 * N2, k2 += s3 * K2, S2 += s3 * F2, R2 += s3 * z2, T2 += s3 * V2, I2 += s3 * H2, B2 += s3 * G2, U2 += s3 * Y2, P2 += s3 * J2, j2 += s3 * X2, b2 += (s3 = t4[14]) * C2, v2 += s3 * D2, x2 += s3 * O2, _2 += s3 * L2, A2 += s3 * M2, E2 += s3 * W2, k2 += s3 * N2, S2 += s3 * K2, R2 += s3 * F2, T2 += s3 * z2, I2 += s3 * V2, B2 += s3 * H2, U2 += s3 * G2, P2 += s3 * Y2, j2 += s3 * J2, q2 += s3 * X2, v2 += (s3 = t4[15]) * C2, o2 += 38 * (_2 += s3 * O2), a2 += 38 * (A2 += s3 * L2), c2 += 38 * (E2 += s3 * M2), u2 += 38 * (k2 += s3 * W2), l2 += 38 * (S2 += s3 * N2), d2 += 38 * (R2 += s3 * K2), h2 += 38 * (T2 += s3 * F2), p2 += 38 * (I2 += s3 * z2), f2 += 38 * (B2 += s3 * V2), g2 += 38 * (U2 += s3 * H2), m2 += 38 * (P2 += s3 * G2), y2 += 38 * (j2 += s3 * Y2), w2 += 38 * (q2 += s3 * J2), b2 += 38 * ($2 += s3 * X2), i2 = (s3 = (i2 += 38 * (x2 += s3 * D2)) + (n2 = 1) + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), o2 = (s3 = o2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), a2 = (s3 = a2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), c2 = (s3 = c2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), u2 = (s3 = u2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), l2 = (s3 = l2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), d2 = (s3 = d2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), h2 = (s3 = h2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), p2 = (s3 = p2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), f2 = (s3 = f2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), g2 = (s3 = g2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), m2 = (s3 = m2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), y2 = (s3 = y2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), w2 = (s3 = w2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), b2 = (s3 = b2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), v2 = (s3 = v2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), i2 = (s3 = (i2 += n2 - 1 + 37 * (n2 - 1)) + (n2 = 1) + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), o2 = (s3 = o2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), a2 = (s3 = a2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), c2 = (s3 = c2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), u2 = (s3 = u2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), l2 = (s3 = l2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), d2 = (s3 = d2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), h2 = (s3 = h2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), p2 = (s3 = p2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), f2 = (s3 = f2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), g2 = (s3 = g2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), m2 = (s3 = m2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), y2 = (s3 = y2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), w2 = (s3 = w2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), b2 = (s3 = b2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), v2 = (s3 = v2 + n2 + 65535) - 65536 * (n2 = Math.floor(s3 / 65536)), i2 += n2 - 1 + 37 * (n2 - 1), e4[0] = i2, e4[1] = o2, e4[2] = a2, e4[3] = c2, e4[4] = u2, e4[5] = l2, e4[6] = d2, e4[7] = h2, e4[8] = p2, e4[9] = f2, e4[10] = g2, e4[11] = m2, e4[12] = y2, e4[13] = w2, e4[14] = b2, e4[15] = v2;
          }
          function L(e4, t4) {
            O(e4, t4, t4);
          }
          function M(e4, r3) {
            var s3, n2 = t3();
            for (s3 = 0; s3 < 16; s3++) n2[s3] = r3[s3];
            for (s3 = 253; s3 >= 0; s3--) L(n2, n2), 2 !== s3 && 4 !== s3 && O(n2, n2, r3);
            for (s3 = 0; s3 < 16; s3++) e4[s3] = n2[s3];
          }
          function W(e4, r3) {
            var s3, n2 = t3();
            for (s3 = 0; s3 < 16; s3++) n2[s3] = r3[s3];
            for (s3 = 250; s3 >= 0; s3--) L(n2, n2), 1 !== s3 && O(n2, n2, r3);
            for (s3 = 0; s3 < 16; s3++) e4[s3] = n2[s3];
          }
          function N(e4, r3, s3) {
            var n2, i2, o2 = new Uint8Array(32), c2 = new Float64Array(80), u2 = t3(), l2 = t3(), d2 = t3(), h2 = t3(), p2 = t3(), f2 = t3();
            for (i2 = 0; i2 < 31; i2++) o2[i2] = r3[i2];
            for (o2[31] = 127 & r3[31] | 64, o2[0] &= 248, $(c2, s3), i2 = 0; i2 < 16; i2++) l2[i2] = c2[i2], h2[i2] = u2[i2] = d2[i2] = 0;
            for (u2[0] = h2[0] = 1, i2 = 254; i2 >= 0; --i2) U(u2, l2, n2 = o2[i2 >>> 3] >>> (7 & i2) & 1), U(d2, h2, n2), C(p2, u2, d2), D(u2, u2, d2), C(d2, l2, h2), D(l2, l2, h2), L(h2, p2), L(f2, u2), O(u2, d2, u2), O(d2, l2, p2), C(p2, u2, d2), D(u2, u2, d2), L(l2, u2), D(d2, h2, f2), O(u2, d2, a), C(u2, u2, h2), O(d2, d2, u2), O(u2, h2, f2), O(h2, l2, c2), L(l2, p2), U(u2, l2, n2), U(d2, h2, n2);
            for (i2 = 0; i2 < 16; i2++) c2[i2 + 16] = u2[i2], c2[i2 + 32] = d2[i2], c2[i2 + 48] = l2[i2], c2[i2 + 64] = h2[i2];
            var g2 = c2.subarray(32), m2 = c2.subarray(16);
            return M(g2, g2), O(m2, m2, g2), P(e4, m2), 0;
          }
          function K(e4, t4) {
            return N(e4, t4, n);
          }
          function F(e4, t4) {
            return r2(t4, 32), K(e4, t4);
          }
          function z(e4, t4, r3) {
            var n2 = new Uint8Array(32);
            return N(n2, r3, t4), w(e4, s2, n2, b);
          }
          E.prototype.blocks = function(e4, t4, r3) {
            for (var s3, n2, i2, o2, a2, c2, u2, l2, d2, h2, p2, f2, g2, m2, y2, w2, b2, v2, x2, _2 = this.fin ? 0 : 2048, A2 = this.h[0], E2 = this.h[1], k2 = this.h[2], S2 = this.h[3], R2 = this.h[4], T2 = this.h[5], I2 = this.h[6], B2 = this.h[7], U2 = this.h[8], P2 = this.h[9], j2 = this.r[0], q2 = this.r[1], $2 = this.r[2], C2 = this.r[3], D2 = this.r[4], O2 = this.r[5], L2 = this.r[6], M2 = this.r[7], W2 = this.r[8], N2 = this.r[9]; r3 >= 16; ) h2 = d2 = 0, h2 += (A2 += 8191 & (s3 = 255 & e4[t4 + 0] | (255 & e4[t4 + 1]) << 8)) * j2, h2 += (E2 += 8191 & (s3 >>> 13 | (n2 = 255 & e4[t4 + 2] | (255 & e4[t4 + 3]) << 8) << 3)) * (5 * N2), h2 += (k2 += 8191 & (n2 >>> 10 | (i2 = 255 & e4[t4 + 4] | (255 & e4[t4 + 5]) << 8) << 6)) * (5 * W2), h2 += (S2 += 8191 & (i2 >>> 7 | (o2 = 255 & e4[t4 + 6] | (255 & e4[t4 + 7]) << 8) << 9)) * (5 * M2), d2 = (h2 += (R2 += 8191 & (o2 >>> 4 | (a2 = 255 & e4[t4 + 8] | (255 & e4[t4 + 9]) << 8) << 12)) * (5 * L2)) >>> 13, h2 &= 8191, h2 += (T2 += a2 >>> 1 & 8191) * (5 * O2), h2 += (I2 += 8191 & (a2 >>> 14 | (c2 = 255 & e4[t4 + 10] | (255 & e4[t4 + 11]) << 8) << 2)) * (5 * D2), h2 += (B2 += 8191 & (c2 >>> 11 | (u2 = 255 & e4[t4 + 12] | (255 & e4[t4 + 13]) << 8) << 5)) * (5 * C2), h2 += (U2 += 8191 & (u2 >>> 8 | (l2 = 255 & e4[t4 + 14] | (255 & e4[t4 + 15]) << 8) << 8)) * (5 * $2), p2 = d2 += (h2 += (P2 += l2 >>> 5 | _2) * (5 * q2)) >>> 13, p2 += A2 * q2, p2 += E2 * j2, p2 += k2 * (5 * N2), p2 += S2 * (5 * W2), d2 = (p2 += R2 * (5 * M2)) >>> 13, p2 &= 8191, p2 += T2 * (5 * L2), p2 += I2 * (5 * O2), p2 += B2 * (5 * D2), p2 += U2 * (5 * C2), d2 += (p2 += P2 * (5 * $2)) >>> 13, p2 &= 8191, f2 = d2, f2 += A2 * $2, f2 += E2 * q2, f2 += k2 * j2, f2 += S2 * (5 * N2), d2 = (f2 += R2 * (5 * W2)) >>> 13, f2 &= 8191, f2 += T2 * (5 * M2), f2 += I2 * (5 * L2), f2 += B2 * (5 * O2), f2 += U2 * (5 * D2), g2 = d2 += (f2 += P2 * (5 * C2)) >>> 13, g2 += A2 * C2, g2 += E2 * $2, g2 += k2 * q2, g2 += S2 * j2, d2 = (g2 += R2 * (5 * N2)) >>> 13, g2 &= 8191, g2 += T2 * (5 * W2), g2 += I2 * (5 * M2), g2 += B2 * (5 * L2), g2 += U2 * (5 * O2), m2 = d2 += (g2 += P2 * (5 * D2)) >>> 13, m2 += A2 * D2, m2 += E2 * C2, m2 += k2 * $2, m2 += S2 * q2, d2 = (m2 += R2 * j2) >>> 13, m2 &= 8191, m2 += T2 * (5 * N2), m2 += I2 * (5 * W2), m2 += B2 * (5 * M2), m2 += U2 * (5 * L2), y2 = d2 += (m2 += P2 * (5 * O2)) >>> 13, y2 += A2 * O2, y2 += E2 * D2, y2 += k2 * C2, y2 += S2 * $2, d2 = (y2 += R2 * q2) >>> 13, y2 &= 8191, y2 += T2 * j2, y2 += I2 * (5 * N2), y2 += B2 * (5 * W2), y2 += U2 * (5 * M2), w2 = d2 += (y2 += P2 * (5 * L2)) >>> 13, w2 += A2 * L2, w2 += E2 * O2, w2 += k2 * D2, w2 += S2 * C2, d2 = (w2 += R2 * $2) >>> 13, w2 &= 8191, w2 += T2 * q2, w2 += I2 * j2, w2 += B2 * (5 * N2), w2 += U2 * (5 * W2), b2 = d2 += (w2 += P2 * (5 * M2)) >>> 13, b2 += A2 * M2, b2 += E2 * L2, b2 += k2 * O2, b2 += S2 * D2, d2 = (b2 += R2 * C2) >>> 13, b2 &= 8191, b2 += T2 * $2, b2 += I2 * q2, b2 += B2 * j2, b2 += U2 * (5 * N2), v2 = d2 += (b2 += P2 * (5 * W2)) >>> 13, v2 += A2 * W2, v2 += E2 * M2, v2 += k2 * L2, v2 += S2 * O2, d2 = (v2 += R2 * D2) >>> 13, v2 &= 8191, v2 += T2 * C2, v2 += I2 * $2, v2 += B2 * q2, v2 += U2 * j2, x2 = d2 += (v2 += P2 * (5 * N2)) >>> 13, x2 += A2 * N2, x2 += E2 * W2, x2 += k2 * M2, x2 += S2 * L2, d2 = (x2 += R2 * O2) >>> 13, x2 &= 8191, x2 += T2 * D2, x2 += I2 * C2, x2 += B2 * $2, x2 += U2 * q2, A2 = h2 = 8191 & (d2 = (d2 = ((d2 += (x2 += P2 * j2) >>> 13) << 2) + d2 | 0) + (h2 &= 8191) | 0), E2 = p2 += d2 >>>= 13, k2 = f2 &= 8191, S2 = g2 &= 8191, R2 = m2 &= 8191, T2 = y2 &= 8191, I2 = w2 &= 8191, B2 = b2 &= 8191, U2 = v2 &= 8191, P2 = x2 &= 8191, t4 += 16, r3 -= 16;
            this.h[0] = A2, this.h[1] = E2, this.h[2] = k2, this.h[3] = S2, this.h[4] = R2, this.h[5] = T2, this.h[6] = I2, this.h[7] = B2, this.h[8] = U2, this.h[9] = P2;
          }, E.prototype.finish = function(e4, t4) {
            var r3, s3, n2, i2, o2 = new Uint16Array(10);
            if (this.leftover) {
              for (i2 = this.leftover, this.buffer[i2++] = 1; i2 < 16; i2++) this.buffer[i2] = 0;
              this.fin = 1, this.blocks(this.buffer, 0, 16);
            }
            for (r3 = this.h[1] >>> 13, this.h[1] &= 8191, i2 = 2; i2 < 10; i2++) this.h[i2] += r3, r3 = this.h[i2] >>> 13, this.h[i2] &= 8191;
            for (this.h[0] += 5 * r3, r3 = this.h[0] >>> 13, this.h[0] &= 8191, this.h[1] += r3, r3 = this.h[1] >>> 13, this.h[1] &= 8191, this.h[2] += r3, o2[0] = this.h[0] + 5, r3 = o2[0] >>> 13, o2[0] &= 8191, i2 = 1; i2 < 10; i2++) o2[i2] = this.h[i2] + r3, r3 = o2[i2] >>> 13, o2[i2] &= 8191;
            for (o2[9] -= 8192, s3 = (1 ^ r3) - 1, i2 = 0; i2 < 10; i2++) o2[i2] &= s3;
            for (s3 = ~s3, i2 = 0; i2 < 10; i2++) this.h[i2] = this.h[i2] & s3 | o2[i2];
            for (this.h[0] = 65535 & (this.h[0] | this.h[1] << 13), this.h[1] = 65535 & (this.h[1] >>> 3 | this.h[2] << 10), this.h[2] = 65535 & (this.h[2] >>> 6 | this.h[3] << 7), this.h[3] = 65535 & (this.h[3] >>> 9 | this.h[4] << 4), this.h[4] = 65535 & (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14), this.h[5] = 65535 & (this.h[6] >>> 2 | this.h[7] << 11), this.h[6] = 65535 & (this.h[7] >>> 5 | this.h[8] << 8), this.h[7] = 65535 & (this.h[8] >>> 8 | this.h[9] << 5), n2 = this.h[0] + this.pad[0], this.h[0] = 65535 & n2, i2 = 1; i2 < 8; i2++) n2 = (this.h[i2] + this.pad[i2] | 0) + (n2 >>> 16) | 0, this.h[i2] = 65535 & n2;
            e4[t4 + 0] = this.h[0] >>> 0 & 255, e4[t4 + 1] = this.h[0] >>> 8 & 255, e4[t4 + 2] = this.h[1] >>> 0 & 255, e4[t4 + 3] = this.h[1] >>> 8 & 255, e4[t4 + 4] = this.h[2] >>> 0 & 255, e4[t4 + 5] = this.h[2] >>> 8 & 255, e4[t4 + 6] = this.h[3] >>> 0 & 255, e4[t4 + 7] = this.h[3] >>> 8 & 255, e4[t4 + 8] = this.h[4] >>> 0 & 255, e4[t4 + 9] = this.h[4] >>> 8 & 255, e4[t4 + 10] = this.h[5] >>> 0 & 255, e4[t4 + 11] = this.h[5] >>> 8 & 255, e4[t4 + 12] = this.h[6] >>> 0 & 255, e4[t4 + 13] = this.h[6] >>> 8 & 255, e4[t4 + 14] = this.h[7] >>> 0 & 255, e4[t4 + 15] = this.h[7] >>> 8 & 255;
          }, E.prototype.update = function(e4, t4, r3) {
            var s3, n2;
            if (this.leftover) {
              for ((n2 = 16 - this.leftover) > r3 && (n2 = r3), s3 = 0; s3 < n2; s3++) this.buffer[this.leftover + s3] = e4[t4 + s3];
              if (r3 -= n2, t4 += n2, this.leftover += n2, this.leftover < 16) return;
              this.blocks(this.buffer, 0, 16), this.leftover = 0;
            }
            if (r3 >= 16 && (n2 = r3 - r3 % 16, this.blocks(e4, t4, n2), t4 += n2, r3 -= n2), r3) {
              for (s3 = 0; s3 < r3; s3++) this.buffer[this.leftover + s3] = e4[t4 + s3];
              this.leftover += r3;
            }
          };
          var V = R, H = T, G = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
          function Y(e4, t4, r3, s3) {
            for (var n2, i2, o2, a2, c2, u2, l2, d2, h2, p2, f2, g2, m2, y2, w2, b2, v2, x2, _2, A2, E2, k2, S2, R2, T2, I2, B2 = new Int32Array(16), U2 = new Int32Array(16), P2 = e4[0], j2 = e4[1], q2 = e4[2], $2 = e4[3], C2 = e4[4], D2 = e4[5], O2 = e4[6], L2 = e4[7], M2 = t4[0], W2 = t4[1], N2 = t4[2], K2 = t4[3], F2 = t4[4], z2 = t4[5], V2 = t4[6], H2 = t4[7], Y2 = 0; s3 >= 128; ) {
              for (_2 = 0; _2 < 16; _2++) A2 = 8 * _2 + Y2, B2[_2] = r3[A2 + 0] << 24 | r3[A2 + 1] << 16 | r3[A2 + 2] << 8 | r3[A2 + 3], U2[_2] = r3[A2 + 4] << 24 | r3[A2 + 5] << 16 | r3[A2 + 6] << 8 | r3[A2 + 7];
              for (_2 = 0; _2 < 80; _2++) if (n2 = P2, i2 = j2, o2 = q2, a2 = $2, c2 = C2, u2 = D2, l2 = O2, h2 = M2, p2 = W2, f2 = N2, g2 = K2, m2 = F2, y2 = z2, w2 = V2, S2 = 65535 & (k2 = H2), R2 = k2 >>> 16, T2 = 65535 & (E2 = L2), I2 = E2 >>> 16, S2 += 65535 & (k2 = (F2 >>> 14 | C2 << 18) ^ (F2 >>> 18 | C2 << 14) ^ (C2 >>> 9 | F2 << 23)), R2 += k2 >>> 16, T2 += 65535 & (E2 = (C2 >>> 14 | F2 << 18) ^ (C2 >>> 18 | F2 << 14) ^ (F2 >>> 9 | C2 << 23)), I2 += E2 >>> 16, S2 += 65535 & (k2 = F2 & z2 ^ ~F2 & V2), R2 += k2 >>> 16, T2 += 65535 & (E2 = C2 & D2 ^ ~C2 & O2), I2 += E2 >>> 16, E2 = G[2 * _2], S2 += 65535 & (k2 = G[2 * _2 + 1]), R2 += k2 >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, E2 = B2[_2 % 16], R2 += (k2 = U2[_2 % 16]) >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16, S2 = 65535 & (k2 = x2 = 65535 & S2 | R2 << 16), R2 = k2 >>> 16, T2 = 65535 & (E2 = v2 = 65535 & T2 | (I2 += T2 >>> 16) << 16), I2 = E2 >>> 16, S2 += 65535 & (k2 = (M2 >>> 28 | P2 << 4) ^ (P2 >>> 2 | M2 << 30) ^ (P2 >>> 7 | M2 << 25)), R2 += k2 >>> 16, T2 += 65535 & (E2 = (P2 >>> 28 | M2 << 4) ^ (M2 >>> 2 | P2 << 30) ^ (M2 >>> 7 | P2 << 25)), I2 += E2 >>> 16, R2 += (k2 = M2 & W2 ^ M2 & N2 ^ W2 & N2) >>> 16, T2 += 65535 & (E2 = P2 & j2 ^ P2 & q2 ^ j2 & q2), I2 += E2 >>> 16, d2 = 65535 & (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) | (I2 += T2 >>> 16) << 16, b2 = 65535 & S2 | R2 << 16, S2 = 65535 & (k2 = g2), R2 = k2 >>> 16, T2 = 65535 & (E2 = a2), I2 = E2 >>> 16, R2 += (k2 = x2) >>> 16, T2 += 65535 & (E2 = v2), I2 += E2 >>> 16, j2 = n2, q2 = i2, $2 = o2, C2 = a2 = 65535 & (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) | (I2 += T2 >>> 16) << 16, D2 = c2, O2 = u2, L2 = l2, P2 = d2, W2 = h2, N2 = p2, K2 = f2, F2 = g2 = 65535 & S2 | R2 << 16, z2 = m2, V2 = y2, H2 = w2, M2 = b2, _2 % 16 == 15) for (A2 = 0; A2 < 16; A2++) E2 = B2[A2], S2 = 65535 & (k2 = U2[A2]), R2 = k2 >>> 16, T2 = 65535 & E2, I2 = E2 >>> 16, E2 = B2[(A2 + 9) % 16], S2 += 65535 & (k2 = U2[(A2 + 9) % 16]), R2 += k2 >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, v2 = B2[(A2 + 1) % 16], S2 += 65535 & (k2 = ((x2 = U2[(A2 + 1) % 16]) >>> 1 | v2 << 31) ^ (x2 >>> 8 | v2 << 24) ^ (x2 >>> 7 | v2 << 25)), R2 += k2 >>> 16, T2 += 65535 & (E2 = (v2 >>> 1 | x2 << 31) ^ (v2 >>> 8 | x2 << 24) ^ v2 >>> 7), I2 += E2 >>> 16, v2 = B2[(A2 + 14) % 16], R2 += (k2 = ((x2 = U2[(A2 + 14) % 16]) >>> 19 | v2 << 13) ^ (v2 >>> 29 | x2 << 3) ^ (x2 >>> 6 | v2 << 26)) >>> 16, T2 += 65535 & (E2 = (v2 >>> 19 | x2 << 13) ^ (x2 >>> 29 | v2 << 3) ^ v2 >>> 6), I2 += E2 >>> 16, I2 += (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) >>> 16, B2[A2] = 65535 & T2 | I2 << 16, U2[A2] = 65535 & S2 | R2 << 16;
              S2 = 65535 & (k2 = M2), R2 = k2 >>> 16, T2 = 65535 & (E2 = P2), I2 = E2 >>> 16, E2 = e4[0], R2 += (k2 = t4[0]) >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, I2 += (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) >>> 16, e4[0] = P2 = 65535 & T2 | I2 << 16, t4[0] = M2 = 65535 & S2 | R2 << 16, S2 = 65535 & (k2 = W2), R2 = k2 >>> 16, T2 = 65535 & (E2 = j2), I2 = E2 >>> 16, E2 = e4[1], R2 += (k2 = t4[1]) >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, I2 += (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) >>> 16, e4[1] = j2 = 65535 & T2 | I2 << 16, t4[1] = W2 = 65535 & S2 | R2 << 16, S2 = 65535 & (k2 = N2), R2 = k2 >>> 16, T2 = 65535 & (E2 = q2), I2 = E2 >>> 16, E2 = e4[2], R2 += (k2 = t4[2]) >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, I2 += (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) >>> 16, e4[2] = q2 = 65535 & T2 | I2 << 16, t4[2] = N2 = 65535 & S2 | R2 << 16, S2 = 65535 & (k2 = K2), R2 = k2 >>> 16, T2 = 65535 & (E2 = $2), I2 = E2 >>> 16, E2 = e4[3], R2 += (k2 = t4[3]) >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, I2 += (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) >>> 16, e4[3] = $2 = 65535 & T2 | I2 << 16, t4[3] = K2 = 65535 & S2 | R2 << 16, S2 = 65535 & (k2 = F2), R2 = k2 >>> 16, T2 = 65535 & (E2 = C2), I2 = E2 >>> 16, E2 = e4[4], R2 += (k2 = t4[4]) >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, I2 += (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) >>> 16, e4[4] = C2 = 65535 & T2 | I2 << 16, t4[4] = F2 = 65535 & S2 | R2 << 16, S2 = 65535 & (k2 = z2), R2 = k2 >>> 16, T2 = 65535 & (E2 = D2), I2 = E2 >>> 16, E2 = e4[5], R2 += (k2 = t4[5]) >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, I2 += (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) >>> 16, e4[5] = D2 = 65535 & T2 | I2 << 16, t4[5] = z2 = 65535 & S2 | R2 << 16, S2 = 65535 & (k2 = V2), R2 = k2 >>> 16, T2 = 65535 & (E2 = O2), I2 = E2 >>> 16, E2 = e4[6], R2 += (k2 = t4[6]) >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, I2 += (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) >>> 16, e4[6] = O2 = 65535 & T2 | I2 << 16, t4[6] = V2 = 65535 & S2 | R2 << 16, S2 = 65535 & (k2 = H2), R2 = k2 >>> 16, T2 = 65535 & (E2 = L2), I2 = E2 >>> 16, E2 = e4[7], R2 += (k2 = t4[7]) >>> 16, T2 += 65535 & E2, I2 += E2 >>> 16, I2 += (T2 += (R2 += (S2 += 65535 & k2) >>> 16) >>> 16) >>> 16, e4[7] = L2 = 65535 & T2 | I2 << 16, t4[7] = H2 = 65535 & S2 | R2 << 16, Y2 += 128, s3 -= 128;
            }
            return s3;
          }
          function J(e4, t4, r3) {
            var s3, n2 = new Int32Array(8), i2 = new Int32Array(8), o2 = new Uint8Array(256), a2 = r3;
            for (n2[0] = 1779033703, n2[1] = 3144134277, n2[2] = 1013904242, n2[3] = 2773480762, n2[4] = 1359893119, n2[5] = 2600822924, n2[6] = 528734635, n2[7] = 1541459225, i2[0] = 4089235720, i2[1] = 2227873595, i2[2] = 4271175723, i2[3] = 1595750129, i2[4] = 2917565137, i2[5] = 725511199, i2[6] = 4215389547, i2[7] = 327033209, Y(n2, i2, t4, r3), r3 %= 128, s3 = 0; s3 < r3; s3++) o2[s3] = t4[a2 - r3 + s3];
            for (o2[r3] = 128, o2[(r3 = 256 - 128 * (r3 < 112 ? 1 : 0)) - 9] = 0, p(o2, r3 - 8, a2 / 536870912 | 0, a2 << 3), Y(n2, i2, o2, r3), s3 = 0; s3 < 8; s3++) p(e4, 8 * s3, n2[s3], i2[s3]);
            return 0;
          }
          function X(e4, r3) {
            var s3 = t3(), n2 = t3(), i2 = t3(), o2 = t3(), a2 = t3(), c2 = t3(), l2 = t3(), d2 = t3(), h2 = t3();
            D(s3, e4[1], e4[0]), D(h2, r3[1], r3[0]), O(s3, s3, h2), C(n2, e4[0], e4[1]), C(h2, r3[0], r3[1]), O(n2, n2, h2), O(i2, e4[3], r3[3]), O(i2, i2, u), O(o2, e4[2], r3[2]), C(o2, o2, o2), D(a2, n2, s3), D(c2, o2, i2), C(l2, o2, i2), C(d2, n2, s3), O(e4[0], a2, c2), O(e4[1], d2, l2), O(e4[2], l2, c2), O(e4[3], a2, d2);
          }
          function Z(e4, t4, r3) {
            var s3;
            for (s3 = 0; s3 < 4; s3++) U(e4[s3], t4[s3], r3);
          }
          function Q(e4, r3) {
            var s3 = t3(), n2 = t3(), i2 = t3();
            M(i2, r3[2]), O(s3, r3[0], i2), O(n2, r3[1], i2), P(e4, n2), e4[31] ^= q(s3) << 7;
          }
          function ee(e4, t4, r3) {
            var s3, n2;
            for (I(e4[0], i), I(e4[1], o), I(e4[2], o), I(e4[3], i), n2 = 255; n2 >= 0; --n2) Z(e4, t4, s3 = r3[n2 / 8 | 0] >> (7 & n2) & 1), X(t4, e4), X(e4, e4), Z(e4, t4, s3);
          }
          function te(e4, r3) {
            var s3 = [t3(), t3(), t3(), t3()];
            I(s3[0], l), I(s3[1], d), I(s3[2], o), O(s3[3], l, d), ee(e4, s3, r3);
          }
          function re(e4, s3, n2) {
            var i2, o2 = new Uint8Array(64), a2 = [t3(), t3(), t3(), t3()];
            for (n2 || r2(s3, 32), J(o2, s3, 32), o2[0] &= 248, o2[31] &= 127, o2[31] |= 64, te(a2, o2), Q(e4, a2), i2 = 0; i2 < 32; i2++) s3[i2 + 32] = e4[i2];
            return 0;
          }
          var se = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]);
          function ne(e4, t4) {
            var r3, s3, n2, i2;
            for (s3 = 63; s3 >= 32; --s3) {
              for (r3 = 0, n2 = s3 - 32, i2 = s3 - 12; n2 < i2; ++n2) t4[n2] += r3 - 16 * t4[s3] * se[n2 - (s3 - 32)], r3 = Math.floor((t4[n2] + 128) / 256), t4[n2] -= 256 * r3;
              t4[n2] += r3, t4[s3] = 0;
            }
            for (r3 = 0, n2 = 0; n2 < 32; n2++) t4[n2] += r3 - (t4[31] >> 4) * se[n2], r3 = t4[n2] >> 8, t4[n2] &= 255;
            for (n2 = 0; n2 < 32; n2++) t4[n2] -= r3 * se[n2];
            for (s3 = 0; s3 < 32; s3++) t4[s3 + 1] += t4[s3] >> 8, e4[s3] = 255 & t4[s3];
          }
          function ie(e4) {
            var t4, r3 = new Float64Array(64);
            for (t4 = 0; t4 < 64; t4++) r3[t4] = e4[t4];
            for (t4 = 0; t4 < 64; t4++) e4[t4] = 0;
            ne(e4, r3);
          }
          function oe(e4, r3, s3, n2) {
            var i2, o2, a2 = new Uint8Array(64), c2 = new Uint8Array(64), u2 = new Uint8Array(64), l2 = new Float64Array(64), d2 = [t3(), t3(), t3(), t3()];
            J(a2, n2, 32), a2[0] &= 248, a2[31] &= 127, a2[31] |= 64;
            var h2 = s3 + 64;
            for (i2 = 0; i2 < s3; i2++) e4[64 + i2] = r3[i2];
            for (i2 = 0; i2 < 32; i2++) e4[32 + i2] = a2[32 + i2];
            for (J(u2, e4.subarray(32), s3 + 32), ie(u2), te(d2, u2), Q(e4, d2), i2 = 32; i2 < 64; i2++) e4[i2] = n2[i2];
            for (J(c2, e4, s3 + 64), ie(c2), i2 = 0; i2 < 64; i2++) l2[i2] = 0;
            for (i2 = 0; i2 < 32; i2++) l2[i2] = u2[i2];
            for (i2 = 0; i2 < 32; i2++) for (o2 = 0; o2 < 32; o2++) l2[i2 + o2] += c2[i2] * a2[o2];
            return ne(e4.subarray(32), l2), h2;
          }
          function ae(e4, r3, s3, n2) {
            var a2, u2 = new Uint8Array(32), l2 = new Uint8Array(64), d2 = [t3(), t3(), t3(), t3()], p2 = [t3(), t3(), t3(), t3()];
            if (s3 < 64) return -1;
            if ((function(e5, r4) {
              var s4 = t3(), n3 = t3(), a3 = t3(), u3 = t3(), l3 = t3(), d3 = t3(), p3 = t3();
              return I(e5[2], o), $(e5[1], r4), L(a3, e5[1]), O(u3, a3, c), D(a3, a3, e5[2]), C(u3, e5[2], u3), L(l3, u3), L(d3, l3), O(p3, d3, l3), O(s4, p3, a3), O(s4, s4, u3), W(s4, s4), O(s4, s4, a3), O(s4, s4, u3), O(s4, s4, u3), O(e5[0], s4, u3), L(n3, e5[0]), O(n3, n3, u3), j(n3, a3) && O(e5[0], e5[0], h), L(n3, e5[0]), O(n3, n3, u3), j(n3, a3) ? -1 : (q(e5[0]) === r4[31] >> 7 && D(e5[0], i, e5[0]), O(e5[3], e5[0], e5[1]), 0);
            })(p2, n2)) return -1;
            for (a2 = 0; a2 < s3; a2++) e4[a2] = r3[a2];
            for (a2 = 0; a2 < 32; a2++) e4[a2 + 32] = n2[a2];
            if (J(l2, e4, s3), ie(l2), ee(d2, p2, l2), te(p2, r3.subarray(32)), X(d2, p2), Q(u2, d2), s3 -= 64, m(r3, 0, u2, 0)) {
              for (a2 = 0; a2 < s3; a2++) e4[a2] = 0;
              return -1;
            }
            for (a2 = 0; a2 < s3; a2++) e4[a2] = r3[a2 + 64];
            return s3;
          }
          var ce = 32, ue = 24, le = ue, de = 64, he = 32, pe = 64;
          function fe(e4, t4) {
            if (e4.length !== ce) throw new Error("bad key size");
            if (t4.length !== ue) throw new Error("bad nonce size");
          }
          function ge() {
            for (var e4 = 0; e4 < arguments.length; e4++) if (!(arguments[e4] instanceof Uint8Array)) throw new TypeError("unexpected type, use Uint8Array");
          }
          function me(e4) {
            for (var t4 = 0; t4 < e4.length; t4++) e4[t4] = 0;
          }
          e3.lowlevel = { crypto_core_hsalsa20: w, crypto_stream_xor: A, crypto_stream: _, crypto_stream_salsa20_xor: v, crypto_stream_salsa20: x, crypto_onetimeauth: k, crypto_onetimeauth_verify: S, crypto_verify_16: g, crypto_verify_32: m, crypto_secretbox: R, crypto_secretbox_open: T, crypto_scalarmult: N, crypto_scalarmult_base: K, crypto_box_beforenm: z, crypto_box_afternm: V, crypto_box: function(e4, t4, r3, s3, n2, i2) {
            var o2 = new Uint8Array(32);
            return z(o2, n2, i2), V(e4, t4, r3, s3, o2);
          }, crypto_box_open: function(e4, t4, r3, s3, n2, i2) {
            var o2 = new Uint8Array(32);
            return z(o2, n2, i2), H(e4, t4, r3, s3, o2);
          }, crypto_box_keypair: F, crypto_hash: J, crypto_sign: oe, crypto_sign_keypair: re, crypto_sign_open: ae, crypto_secretbox_KEYBYTES: ce, crypto_secretbox_NONCEBYTES: ue, crypto_secretbox_ZEROBYTES: 32, crypto_secretbox_BOXZEROBYTES: 16, crypto_scalarmult_BYTES: 32, crypto_scalarmult_SCALARBYTES: 32, crypto_box_PUBLICKEYBYTES: 32, crypto_box_SECRETKEYBYTES: 32, crypto_box_BEFORENMBYTES: 32, crypto_box_NONCEBYTES: le, crypto_box_ZEROBYTES: 32, crypto_box_BOXZEROBYTES: 16, crypto_sign_BYTES: de, crypto_sign_PUBLICKEYBYTES: he, crypto_sign_SECRETKEYBYTES: pe, crypto_sign_SEEDBYTES: 32, crypto_hash_BYTES: 64, gf: t3, D: c, L: se, pack25519: P, unpack25519: $, M: O, A: C, S: L, Z: D, pow2523: W, add: X, set25519: I, modL: ne, scalarmult: ee, scalarbase: te }, e3.randomBytes = function(e4) {
            var t4 = new Uint8Array(e4);
            return r2(t4, e4), t4;
          }, e3.secretbox = function(e4, t4, r3) {
            ge(e4, t4, r3), fe(r3, t4);
            for (var s3 = new Uint8Array(32 + e4.length), n2 = new Uint8Array(s3.length), i2 = 0; i2 < e4.length; i2++) s3[i2 + 32] = e4[i2];
            return R(n2, s3, s3.length, t4, r3), n2.subarray(16);
          }, e3.secretbox.open = function(e4, t4, r3) {
            ge(e4, t4, r3), fe(r3, t4);
            for (var s3 = new Uint8Array(16 + e4.length), n2 = new Uint8Array(s3.length), i2 = 0; i2 < e4.length; i2++) s3[i2 + 16] = e4[i2];
            return s3.length < 32 || 0 !== T(n2, s3, s3.length, t4, r3) ? null : n2.subarray(32);
          }, e3.secretbox.keyLength = ce, e3.secretbox.nonceLength = ue, e3.secretbox.overheadLength = 16, e3.scalarMult = function(e4, t4) {
            if (ge(e4, t4), 32 !== e4.length) throw new Error("bad n size");
            if (32 !== t4.length) throw new Error("bad p size");
            var r3 = new Uint8Array(32);
            return N(r3, e4, t4), r3;
          }, e3.scalarMult.base = function(e4) {
            if (ge(e4), 32 !== e4.length) throw new Error("bad n size");
            var t4 = new Uint8Array(32);
            return K(t4, e4), t4;
          }, e3.scalarMult.scalarLength = 32, e3.scalarMult.groupElementLength = 32, e3.box = function(t4, r3, s3, n2) {
            var i2 = e3.box.before(s3, n2);
            return e3.secretbox(t4, r3, i2);
          }, e3.box.before = function(e4, t4) {
            ge(e4, t4), (function(e5, t5) {
              if (32 !== e5.length) throw new Error("bad public key size");
              if (32 !== t5.length) throw new Error("bad secret key size");
            })(e4, t4);
            var r3 = new Uint8Array(32);
            return z(r3, e4, t4), r3;
          }, e3.box.after = e3.secretbox, e3.box.open = function(t4, r3, s3, n2) {
            var i2 = e3.box.before(s3, n2);
            return e3.secretbox.open(t4, r3, i2);
          }, e3.box.open.after = e3.secretbox.open, e3.box.keyPair = function() {
            var e4 = new Uint8Array(32), t4 = new Uint8Array(32);
            return F(e4, t4), { publicKey: e4, secretKey: t4 };
          }, e3.box.keyPair.fromSecretKey = function(e4) {
            if (ge(e4), 32 !== e4.length) throw new Error("bad secret key size");
            var t4 = new Uint8Array(32);
            return K(t4, e4), { publicKey: t4, secretKey: new Uint8Array(e4) };
          }, e3.box.publicKeyLength = 32, e3.box.secretKeyLength = 32, e3.box.sharedKeyLength = 32, e3.box.nonceLength = le, e3.box.overheadLength = e3.secretbox.overheadLength, e3.sign = function(e4, t4) {
            if (ge(e4, t4), t4.length !== pe) throw new Error("bad secret key size");
            var r3 = new Uint8Array(de + e4.length);
            return oe(r3, e4, e4.length, t4), r3;
          }, e3.sign.open = function(e4, t4) {
            if (ge(e4, t4), t4.length !== he) throw new Error("bad public key size");
            var r3 = new Uint8Array(e4.length), s3 = ae(r3, e4, e4.length, t4);
            if (s3 < 0) return null;
            for (var n2 = new Uint8Array(s3), i2 = 0; i2 < n2.length; i2++) n2[i2] = r3[i2];
            return n2;
          }, e3.sign.detached = function(t4, r3) {
            for (var s3 = e3.sign(t4, r3), n2 = new Uint8Array(de), i2 = 0; i2 < n2.length; i2++) n2[i2] = s3[i2];
            return n2;
          }, e3.sign.detached.verify = function(e4, t4, r3) {
            if (ge(e4, t4, r3), t4.length !== de) throw new Error("bad signature size");
            if (r3.length !== he) throw new Error("bad public key size");
            var s3, n2 = new Uint8Array(de + e4.length), i2 = new Uint8Array(de + e4.length);
            for (s3 = 0; s3 < de; s3++) n2[s3] = t4[s3];
            for (s3 = 0; s3 < e4.length; s3++) n2[s3 + de] = e4[s3];
            return ae(i2, n2, n2.length, r3) >= 0;
          }, e3.sign.keyPair = function() {
            var e4 = new Uint8Array(he), t4 = new Uint8Array(pe);
            return re(e4, t4), { publicKey: e4, secretKey: t4 };
          }, e3.sign.keyPair.fromSecretKey = function(e4) {
            if (ge(e4), e4.length !== pe) throw new Error("bad secret key size");
            for (var t4 = new Uint8Array(he), r3 = 0; r3 < t4.length; r3++) t4[r3] = e4[32 + r3];
            return { publicKey: t4, secretKey: new Uint8Array(e4) };
          }, e3.sign.keyPair.fromSeed = function(e4) {
            if (ge(e4), 32 !== e4.length) throw new Error("bad seed size");
            for (var t4 = new Uint8Array(he), r3 = new Uint8Array(pe), s3 = 0; s3 < 32; s3++) r3[s3] = e4[s3];
            return re(t4, r3, true), { publicKey: t4, secretKey: r3 };
          }, e3.sign.publicKeyLength = he, e3.sign.secretKeyLength = pe, e3.sign.seedLength = 32, e3.sign.signatureLength = de, e3.hash = function(e4) {
            ge(e4);
            var t4 = new Uint8Array(64);
            return J(t4, e4, e4.length), t4;
          }, e3.hash.hashLength = 64, e3.verify = function(e4, t4) {
            return ge(e4, t4), 0 !== e4.length && 0 !== t4.length && e4.length === t4.length && 0 === f(e4, 0, t4, 0, e4.length);
          }, e3.setPRNG = function(e4) {
            r2 = e4;
          }, (function() {
            var t4 = "undefined" != typeof self ? self.crypto || self.msCrypto : null;
            t4 && t4.getRandomValues ? e3.setPRNG((function(e4, r3) {
              var s3, n2 = new Uint8Array(r3);
              for (s3 = 0; s3 < r3; s3 += 65536) t4.getRandomValues(n2.subarray(s3, s3 + Math.min(r3 - s3, 65536)));
              for (s3 = 0; s3 < r3; s3++) e4[s3] = n2[s3];
              me(n2);
            })) : "undefined" != typeof __require && (t4 = require_crypto()) && t4.randomBytes && e3.setPRNG((function(e4, r3) {
              var s3, n2 = t4.randomBytes(r3);
              for (s3 = 0; s3 < r3; s3++) e4[s3] = n2[s3];
              me(n2);
            }));
          })();
        })(void 0 !== e2 && e2.exports ? e2.exports : self.nacl = self.nacl || {});
      } }, t = {};
      function r(s2) {
        var n = t[s2];
        if (void 0 !== n) return n.exports;
        var i = t[s2] = { exports: {} };
        return e[s2].call(i.exports, i, i.exports, r), i.exports;
      }
      r.amdO = {}, r.n = (e2) => {
        var t2 = e2 && e2.__esModule ? () => e2.default : () => e2;
        return r.d(t2, { a: t2 }), t2;
      }, r.d = (e2, t2) => {
        for (var s2 in t2) r.o(t2, s2) && !r.o(e2, s2) && Object.defineProperty(e2, s2, { enumerable: true, get: t2[s2] });
      }, r.g = (function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
          return this || new Function("return this")();
        } catch (e2) {
          if ("object" == typeof window) return window;
        }
      })(), r.o = (e2, t2) => Object.prototype.hasOwnProperty.call(e2, t2), r.r = (e2) => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
      };
      var s = {};
      return (() => {
        "use strict";
        r.r(s), r.d(s, { ABIAddressType: () => ro, ABIArrayDynamicType: () => ao, ABIArrayStaticType: () => oo, ABIBoolType: () => so, ABIByteType: () => no, ABIContract: () => bo, ABIInterface: () => vo, ABIMethod: () => yo, ABIReferenceType: () => po, ABIStringType: () => io, ABITransactionType: () => ho, ABITupleType: () => co, ABIType: () => Qi, ABIUfixedType: () => to, ABIUintType: () => eo, ADDR_BYTE_SIZE: () => Hi, ALGORAND_MIN_TX_FEE: () => te, Algodv2: () => Sr, AtomicTransactionComposer: () => Eo, AtomicTransactionComposerStatus: () => _o, DryrunResult: () => di, ERROR_INVALID_MICROALGOS: () => qo, ERROR_MULTISIG_BAD_SENDER: () => jo, INVALID_MICROALGOS_ERROR_MSG: () => pe, Indexer: () => an, IntDecoding: () => p, Kmd: () => Rr, LENGTH_ENCODE_BYTE_SIZE: () => Ji, LogicSig: () => Kn, LogicSigAccount: () => Fn, MAX_LEN: () => Vi, MULTISIG_BAD_SENDER_ERROR_MSG: () => So, OnApplicationComplete: () => ee, SINGLE_BOOL_SIZE: () => Yi, SINGLE_BYTE_SIZE: () => Gi, SourceMap: () => ei, Transaction: () => ie, TransactionType: () => Q, abiCheckTransactionType: () => go, abiTypeIsReference: () => mo, abiTypeIsTransaction: () => fo, algosToMicroalgos: () => ge, appendSignMultisigTransaction: () => Ln, appendSignRawMultisigSignature: () => Mn, assignGroupID: () => Sn, bigIntToBytes: () => un, bytesToBigInt: () => ln, computeGroupID: () => kn, createDryrun: () => si, createMultisigTransaction: () => jn, decodeAddress: () => N, decodeObj: () => Po, decodeSignedTransaction: () => ue, decodeUint64: () => B, decodeUnsignedTransaction: () => ce, default: () => $o, encodeAddress: () => F, encodeObj: () => Uo, encodeUint64: () => I, encodeUnsignedSimulateTransaction: () => oe, encodeUnsignedTransaction: () => ae, generateAccount: () => dn, getApplicationAddress: () => H, getMethodByName: () => wo, indexerModels: () => t2, instantiateTxnIfNeeded: () => le, isTransactionWithSigner: () => zi, isValidAddress: () => K, logicSigFromByte: () => Hn, makeApplicationCallTxnFromObject: () => Mi, makeApplicationClearStateTxn: () => Ci, makeApplicationClearStateTxnFromObject: () => Di, makeApplicationCloseOutTxn: () => qi, makeApplicationCloseOutTxnFromObject: () => $i, makeApplicationCreateTxn: () => Si, makeApplicationCreateTxnFromObject: () => Ri, makeApplicationDeleteTxn: () => Bi, makeApplicationDeleteTxnFromObject: () => Ui, makeApplicationNoOpTxn: () => Oi, makeApplicationNoOpTxnFromObject: () => Li, makeApplicationOptInTxn: () => Pi, makeApplicationOptInTxnFromObject: () => ji, makeApplicationUpdateTxn: () => Ti, makeApplicationUpdateTxnFromObject: () => Ii, makeAssetConfigTxnWithSuggestedParams: () => wi, makeAssetConfigTxnWithSuggestedParamsFromObject: () => bi, makeAssetCreateTxnWithSuggestedParams: () => mi, makeAssetCreateTxnWithSuggestedParamsFromObject: () => yi, makeAssetDestroyTxnWithSuggestedParams: () => vi, makeAssetDestroyTxnWithSuggestedParamsFromObject: () => xi, makeAssetFreezeTxnWithSuggestedParams: () => _i, makeAssetFreezeTxnWithSuggestedParamsFromObject: () => Ai, makeAssetTransferTxnWithSuggestedParams: () => Ei, makeAssetTransferTxnWithSuggestedParamsFromObject: () => ki, makeBasicAccountTransactionSigner: () => Wi, makeEmptyTransactionSigner: () => Fi, makeKeyRegistrationTxnWithSuggestedParams: () => fi, makeKeyRegistrationTxnWithSuggestedParamsFromObject: () => gi, makeLogicSigAccountTransactionSigner: () => Ni, makeMultiSigAccountTransactionSigner: () => Ki, makePaymentTxnWithSuggestedParams: () => hi, makePaymentTxnWithSuggestedParamsFromObject: () => pi, masterDerivationKeyToMnemonic: () => An, mergeMultisigTransactions: () => Cn, microalgosToAlgos: () => fe, mnemonicFromSeed: () => wn, mnemonicToMasterDerivationKey: () => _n, mnemonicToSecretKey: () => vn, modelsv2: () => e2, multisigAddress: () => Wn, secretKeyToMnemonic: () => xn, seedFromMnemonic: () => bn, signBid: () => To, signBytes: () => Io, signLogicSigTransaction: () => Vn, signLogicSigTransactionObject: () => zn, signMultisigTransaction: () => On, signTransaction: () => Ro, tealSign: () => Yn, tealSignFromProgram: () => Xn, verifyBytes: () => Bo, verifyMultisig: () => Dn, verifyTealSign: () => Jn, waitForConfirmation: () => cn });
        var e2 = {};
        r.r(e2), r.d(e2, { Account: () => Ae, AccountApplicationResponse: () => Ee, AccountAssetHolding: () => ke, AccountAssetResponse: () => Se, AccountAssetsInformationResponse: () => Re, AccountParticipation: () => Te, AccountStateDelta: () => Ie, AppCallLogs: () => Be, Application: () => Ue, ApplicationInitialStates: () => Pe, ApplicationKVStorage: () => je, ApplicationLocalReference: () => qe, ApplicationLocalState: () => $e, ApplicationParams: () => Ce, ApplicationStateOperation: () => De, ApplicationStateSchema: () => Oe, Asset: () => Le, AssetHolding: () => Me, AssetHoldingReference: () => We, AssetParams: () => Ne, AvmKeyValue: () => Ke, AvmValue: () => Fe, BlockHashResponse: () => ze, BlockLogsResponse: () => Ve, BlockResponse: () => He, BlockTxidsResponse: () => Ge, Box: () => Ye, BoxDescriptor: () => Je, BoxReference: () => Xe, BoxesResponse: () => Ze, BuildVersion: () => Qe, CompileResponse: () => et, DisassembleResponse: () => tt, DryrunRequest: () => rt, DryrunResponse: () => st, DryrunSource: () => nt, DryrunState: () => it, DryrunTxnResult: () => ot, ErrorResponse: () => at, EvalDelta: () => ct, EvalDeltaKeyValue: () => ut, GetBlockTimeStampOffsetResponse: () => lt, GetSyncRoundResponse: () => dt, KvDelta: () => ht, LedgerStateDeltaForTransactionGroup: () => pt, LightBlockHeaderProof: () => ft, NodeStatusResponse: () => gt, PendingTransactionResponse: () => mt, PendingTransactionsResponse: () => yt, PostTransactionsResponse: () => wt, ScratchChange: () => bt, SimulateInitialStates: () => vt, SimulateRequest: () => xt, SimulateRequestTransactionGroup: () => _t, SimulateResponse: () => At, SimulateTraceConfig: () => Et, SimulateTransactionGroupResult: () => kt, SimulateTransactionResult: () => St, SimulateUnnamedResourcesAccessed: () => Rt, SimulationEvalOverrides: () => Tt, SimulationOpcodeTraceUnit: () => It, SimulationTransactionExecTrace: () => Bt, StateProof: () => Ut, StateProofMessage: () => Pt, SupplyResponse: () => jt, TealKeyValue: () => qt, TealValue: () => $t, TransactionGroupLedgerStateDeltasForRoundResponse: () => Ct, TransactionParametersResponse: () => Dt, TransactionProofResponse: () => Ot, Version: () => Lt });
        var t2 = {};
        r.r(t2), r.d(t2, { Account: () => Kr, AccountParticipation: () => Fr, AccountResponse: () => zr, AccountStateDelta: () => Vr, AccountsResponse: () => Hr, Application: () => Gr, ApplicationLocalState: () => Yr, ApplicationLocalStatesResponse: () => Jr, ApplicationLogData: () => Xr, ApplicationLogsResponse: () => Zr, ApplicationParams: () => Qr, ApplicationResponse: () => es, ApplicationStateSchema: () => ts, ApplicationsResponse: () => rs, Asset: () => ss, AssetBalancesResponse: () => ns, AssetHolding: () => is, AssetHoldingsResponse: () => os, AssetParams: () => as, AssetResponse: () => cs, AssetsResponse: () => us, Block: () => ls, BlockHeadersResponse: () => ds, BlockRewards: () => hs, BlockUpgradeState: () => ps, BlockUpgradeVote: () => fs, Box: () => gs, BoxDescriptor: () => ms, BoxesResponse: () => ys, ErrorResponse: () => ws, EvalDelta: () => bs, EvalDeltaKeyValue: () => vs, HashFactory: () => xs, HbProofFields: () => _s, HealthCheck: () => As, IndexerStateProofMessage: () => Es, MerkleArrayProof: () => ks, MiniAssetHolding: () => Ss, ParticipationUpdates: () => Rs, StateProofFields: () => Ts, StateProofParticipant: () => Is, StateProofReveal: () => Bs, StateProofSigSlot: () => Us, StateProofSignature: () => Ps, StateProofTracking: () => js, StateProofVerifier: () => qs, StateSchema: () => $s, TealKeyValue: () => Cs, TealValue: () => Ds, Transaction: () => Os, TransactionApplication: () => Ls, TransactionAssetConfig: () => Ms, TransactionAssetFreeze: () => Ws, TransactionAssetTransfer: () => Ns, TransactionHeartbeat: () => Ks, TransactionKeyreg: () => Fs, TransactionPayment: () => zs, TransactionResponse: () => Vs, TransactionSignature: () => Hs, TransactionSignatureLogicsig: () => Gs, TransactionSignatureMultisig: () => Ys, TransactionSignatureMultisigSubsignature: () => Js, TransactionStateProof: () => Xs, TransactionsResponse: () => Zs });
        var n = {};
        r.r(n), r.d(n, { ABIAddressType: () => ro, ABIArrayDynamicType: () => ao, ABIArrayStaticType: () => oo, ABIBoolType: () => so, ABIByteType: () => no, ABIContract: () => bo, ABIInterface: () => vo, ABIMethod: () => yo, ABIReferenceType: () => po, ABIStringType: () => io, ABITransactionType: () => ho, ABITupleType: () => co, ABIType: () => Qi, ABIUfixedType: () => to, ABIUintType: () => eo, ADDR_BYTE_SIZE: () => Hi, ALGORAND_MIN_TX_FEE: () => te, Algodv2: () => Sr, AtomicTransactionComposer: () => Eo, AtomicTransactionComposerStatus: () => _o, DryrunResult: () => di, ERROR_INVALID_MICROALGOS: () => qo, ERROR_MULTISIG_BAD_SENDER: () => jo, INVALID_MICROALGOS_ERROR_MSG: () => pe, Indexer: () => an, IntDecoding: () => p, Kmd: () => Rr, LENGTH_ENCODE_BYTE_SIZE: () => Ji, LogicSig: () => Kn, LogicSigAccount: () => Fn, MAX_LEN: () => Vi, MULTISIG_BAD_SENDER_ERROR_MSG: () => So, OnApplicationComplete: () => ee, SINGLE_BOOL_SIZE: () => Yi, SINGLE_BYTE_SIZE: () => Gi, SourceMap: () => ei, Transaction: () => ie, TransactionType: () => Q, abiCheckTransactionType: () => go, abiTypeIsReference: () => mo, abiTypeIsTransaction: () => fo, algosToMicroalgos: () => ge, appendSignMultisigTransaction: () => Ln, appendSignRawMultisigSignature: () => Mn, assignGroupID: () => Sn, bigIntToBytes: () => un, bytesToBigInt: () => ln, computeGroupID: () => kn, createDryrun: () => si, createMultisigTransaction: () => jn, decodeAddress: () => N, decodeObj: () => Po, decodeSignedTransaction: () => ue, decodeUint64: () => B, decodeUnsignedTransaction: () => ce, encodeAddress: () => F, encodeObj: () => Uo, encodeUint64: () => I, encodeUnsignedSimulateTransaction: () => oe, encodeUnsignedTransaction: () => ae, generateAccount: () => dn, getApplicationAddress: () => H, getMethodByName: () => wo, indexerModels: () => t2, instantiateTxnIfNeeded: () => le, isTransactionWithSigner: () => zi, isValidAddress: () => K, logicSigFromByte: () => Hn, makeApplicationCallTxnFromObject: () => Mi, makeApplicationClearStateTxn: () => Ci, makeApplicationClearStateTxnFromObject: () => Di, makeApplicationCloseOutTxn: () => qi, makeApplicationCloseOutTxnFromObject: () => $i, makeApplicationCreateTxn: () => Si, makeApplicationCreateTxnFromObject: () => Ri, makeApplicationDeleteTxn: () => Bi, makeApplicationDeleteTxnFromObject: () => Ui, makeApplicationNoOpTxn: () => Oi, makeApplicationNoOpTxnFromObject: () => Li, makeApplicationOptInTxn: () => Pi, makeApplicationOptInTxnFromObject: () => ji, makeApplicationUpdateTxn: () => Ti, makeApplicationUpdateTxnFromObject: () => Ii, makeAssetConfigTxnWithSuggestedParams: () => wi, makeAssetConfigTxnWithSuggestedParamsFromObject: () => bi, makeAssetCreateTxnWithSuggestedParams: () => mi, makeAssetCreateTxnWithSuggestedParamsFromObject: () => yi, makeAssetDestroyTxnWithSuggestedParams: () => vi, makeAssetDestroyTxnWithSuggestedParamsFromObject: () => xi, makeAssetFreezeTxnWithSuggestedParams: () => _i, makeAssetFreezeTxnWithSuggestedParamsFromObject: () => Ai, makeAssetTransferTxnWithSuggestedParams: () => Ei, makeAssetTransferTxnWithSuggestedParamsFromObject: () => ki, makeBasicAccountTransactionSigner: () => Wi, makeEmptyTransactionSigner: () => Fi, makeKeyRegistrationTxnWithSuggestedParams: () => fi, makeKeyRegistrationTxnWithSuggestedParamsFromObject: () => gi, makeLogicSigAccountTransactionSigner: () => Ni, makeMultiSigAccountTransactionSigner: () => Ki, makePaymentTxnWithSuggestedParams: () => hi, makePaymentTxnWithSuggestedParamsFromObject: () => pi, masterDerivationKeyToMnemonic: () => An, mergeMultisigTransactions: () => Cn, microalgosToAlgos: () => fe, mnemonicFromSeed: () => wn, mnemonicToMasterDerivationKey: () => _n, mnemonicToSecretKey: () => vn, modelsv2: () => e2, multisigAddress: () => Wn, secretKeyToMnemonic: () => xn, seedFromMnemonic: () => bn, signBid: () => To, signBytes: () => Io, signLogicSigTransaction: () => Vn, signLogicSigTransactionObject: () => zn, signMultisigTransaction: () => On, signTransaction: () => Ro, tealSign: () => Yn, tealSignFromProgram: () => Xn, verifyBytes: () => Bo, verifyMultisig: () => Dn, verifyTealSign: () => Jn, waitForConfirmation: () => cn });
        var i, o = r(486), a = r(765), c = r.n(a), u = r(757), l = r.n(u), d = r(360), h = r.n(d);
        !(function(e3) {
          e3.DEFAULT = "default", e3.SAFE = "safe", e3.MIXED = "mixed", e3.BIGINT = "bigint";
        })(i || (i = {}));
        const p = i, f = h()({ useNativeBigInt: true, strict: true });
        function g(e3, t3) {
          return e3.length === t3.length && Array.from(e3).every(((e4, r2) => e4 === t3[r2]));
        }
        function m(...e3) {
          const t3 = e3.reduce(((e4, t4) => e4 + t4.length), 0), r2 = new Uint8Array(t3);
          let s2 = 0;
          for (let t4 = 0; t4 < e3.length; t4++) r2.set(e3[t4], s2), s2 += e3[t4].length;
          return r2;
        }
        function y(e3) {
          return l().sha512_256.array(e3);
        }
        function w(e3) {
          return c().sign.keyPair.fromSeed(e3);
        }
        function b(e3) {
          return e3 === c().sign.signatureLength;
        }
        function v(e3) {
          return c().sign.keyPair.fromSecretKey(e3);
        }
        function x(e3, t3) {
          return c().sign.detached(e3, t3);
        }
        function _(e3, t3) {
          return c().verify(e3, t3);
        }
        function A(e3, t3, r2) {
          return c().sign.detached.verify(e3, t3, r2);
        }
        const E = c().sign.publicKeyLength, k = (c().sign.secretKeyLength, 32), S = 32;
        var R = r(267), T = r.n(R);
        function I(e3) {
          if ("bigint" != typeof e3 && !Number.isInteger(e3) || e3 < 0 || e3 > BigInt("0xffffffffffffffff")) throw new Error("Input is not a 64-bit unsigned integer");
          const t3 = new Uint8Array(8);
          return new DataView(t3.buffer).setBigUint64(0, BigInt(e3)), t3;
        }
        function B(e3, t3 = "safe") {
          if ("safe" !== t3 && "mixed" !== t3 && "bigint" !== t3) throw new Error(`Unknown decodingMode option: ${t3}`);
          if (0 === e3.byteLength || e3.byteLength > 8) throw new Error(`Data has unacceptable length. Expected length is between 1 and 8, got ${e3.byteLength}`);
          const r2 = m(new Uint8Array(8 - e3.byteLength), e3), s2 = new DataView(r2.buffer).getBigUint64(0), n2 = s2 > BigInt(Number.MAX_SAFE_INTEGER);
          if ("safe" === t3) {
            if (n2) throw new Error(`Integer exceeds maximum safe integer: ${s2.toString()}. Try decoding with "mixed" or "safe" decodingMode.`);
            return Number(s2);
          }
          return "mixed" !== t3 || n2 ? s2 : Number(s2);
        }
        const U = 36, P = 4, j = 58, q = new Uint8Array([77, 117, 108, 116, 105, 115, 105, 103, 65, 100, 100, 114]), $ = o.lW.from("appID"), C = "address seems to be malformed", D = "wrong checksum for address", O = "invalid multisig version", L = "bad multisig threshold", M = "bad multisig public key - wrong length", W = "nacl public key length is not 32 bytes";
        function N(e3) {
          if ("string" != typeof e3 || e3.length !== j) throw new Error(C);
          const t3 = T().decode.asBytes(e3.toString());
          if (t3.length !== U) throw new Error(C);
          const r2 = new Uint8Array(t3.slice(0, U - P)), s2 = new Uint8Array(t3.slice(E, U));
          if (!g(y(r2).slice(k - P, k), s2)) throw new Error(D);
          return { publicKey: r2, checksum: s2 };
        }
        function K(e3) {
          try {
            N(e3);
          } catch (e4) {
            return false;
          }
          return true;
        }
        function F(e3) {
          const t3 = y(e3).slice(E - P, E);
          return T().encode(m(e3, t3)).toString().slice(0, j);
        }
        function z({ version: e3, threshold: t3, pks: r2 }) {
          if (1 !== e3 || e3 > 255 || e3 < 0) throw new Error(O);
          if (0 === t3 || 0 === r2.length || t3 > r2.length || t3 > 255) throw new Error(L);
          const s2 = U - P;
          if (s2 !== E) throw new Error(W);
          const n2 = new Uint8Array(q.length + 2 + s2 * r2.length);
          n2.set(q, 0), n2.set([e3], q.length), n2.set([t3], q.length + 1);
          for (let e4 = 0; e4 < r2.length; e4++) {
            if (r2[e4].length !== s2) throw new Error(M);
            n2.set(r2[e4], q.length + 2 + e4 * s2);
          }
          return new Uint8Array(y(n2));
        }
        function V({ version: e3, threshold: t3, addrs: r2 }) {
          return F(z({ version: e3, threshold: t3, pks: r2.map(((e4) => N(e4).publicKey)) }));
        }
        function H(e3) {
          const t3 = y(m($, I(e3)));
          return F(new Uint8Array(t3));
        }
        var G = r(406);
        const Y = "The object contains empty or 0 values. First empty or 0 value encountered during encoding: ";
        function J(e3) {
          return G.encode(e3, { sortKeys: true });
        }
        function X(e3) {
          const t3 = (function(e4) {
            for (const t4 in e4) if (Object.prototype.hasOwnProperty.call(e4, t4) && (!e4[t4] || 0 === e4[t4].length)) return { containsEmpty: true, firstEmptyKey: t4 };
            return { containsEmpty: false, firstEmptyKey: void 0 };
          })(e3);
          if (t3.containsEmpty) throw new Error(Y + t3.firstEmptyKey);
          return J(e3);
        }
        function Z(e3) {
          return G.decode(e3);
        }
        var Q, ee;
        !(function(e3) {
          e3.pay = "pay", e3.keyreg = "keyreg", e3.acfg = "acfg", e3.axfer = "axfer", e3.afrz = "afrz", e3.appl = "appl", e3.stpf = "stpf", e3.hb = "hb";
        })(Q || (Q = {})), (function(e3) {
          e3[e3.NoOpOC = 0] = "NoOpOC", e3[e3.OptInOC = 1] = "OptInOC", e3[e3.CloseOutOC = 2] = "CloseOutOC", e3[e3.ClearStateOC = 3] = "ClearStateOC", e3[e3.UpdateApplicationOC = 4] = "UpdateApplicationOC", e3[e3.DeleteApplicationOC = 5] = "DeleteApplicationOC";
        })(ee || (ee = {}));
        const te = 1e3;
        class re {
          constructor(e3, t3, r2, s2, n2) {
            this.s = e3, this.p = t3, this.p2 = r2, this.p1s = s2, this.p2s = n2;
          }
          static from_obj_for_encoding(e3) {
            const t3 = Object.create(this.prototype);
            return t3.s = e3.s, t3.p = e3.p, t3.p2 = e3.p2, t3.p1s = e3.p1s, t3.p2s = e3.p2s, t3;
          }
          get_obj_for_encoding() {
            return { s: this.s, p: this.p, p2: this.p2, p1s: this.p1s, p2s: this.p2s };
          }
        }
        class se {
          constructor(e3, t3, r2, s2, n2) {
            this.a = e3, this.prf = re.from_obj_for_encoding(t3), this.sd = r2, this.vid = s2, this.kd = n2;
          }
          static from_obj_for_encoding(e3) {
            const t3 = Object.create(this.prototype);
            return t3.a = N(F(e3.a)), t3.prf = re.from_obj_for_encoding(e3.prf), t3.sd = o.lW.from(e3.sd), t3.vid = o.lW.from(e3.vid), t3.kd = e3.kd, t3;
          }
          get_obj_for_encoding() {
            return { a: o.lW.from(this.a.publicKey), prf: this.prf.get_obj_for_encoding(), sd: this.sd, vid: this.vid, kd: this.kd };
          }
        }
        function ne(e3, t3, r2) {
          if (null == e3) return;
          let s2;
          if ("string" == typeof e3 ? s2 = o.lW.from(e3, "base64") : e3.constructor === Uint8Array ? s2 = o.lW.from(e3) : o.lW.isBuffer(e3) && (s2 = e3), null == s2 || s2.byteLength !== r2) throw Error(`${t3} must be a ${r2} byte Uint8Array or Buffer or base64 string.`);
          return s2;
        }
        class ie {
          constructor({ ...e3 }) {
            this.name = "Transaction", this.tag = o.lW.from("TX");
            const t3 = { type: Q.pay, flatFee: false, nonParticipation: false };
            if (void 0 === e3.type && (e3.type = t3.type), void 0 === e3.flatFee && (e3.flatFee = t3.flatFee), e3.type === Q.keyreg && void 0 !== e3.voteKey && void 0 === e3.nonParticipation && (e3.nonParticipation = t3.nonParticipation), void 0 !== e3.suggestedParams) {
              const t4 = e3;
              t4.genesisHash = t4.suggestedParams.genesisHash, t4.fee = t4.suggestedParams.fee, void 0 !== t4.suggestedParams.flatFee && (t4.flatFee = t4.suggestedParams.flatFee), t4.firstRound = t4.suggestedParams.firstRound, t4.lastRound = t4.suggestedParams.lastRound, t4.genesisID = t4.suggestedParams.genesisID;
            }
            const r2 = e3;
            if (r2.from = N(r2.from), void 0 !== r2.to && (r2.to = N(r2.to)), void 0 !== r2.closeRemainderTo && (r2.closeRemainderTo = N(r2.closeRemainderTo)), void 0 !== r2.assetManager && (r2.assetManager = N(r2.assetManager)), void 0 !== r2.assetReserve && (r2.assetReserve = N(r2.assetReserve)), void 0 !== r2.assetFreeze && (r2.assetFreeze = N(r2.assetFreeze)), void 0 !== r2.assetClawback && (r2.assetClawback = N(r2.assetClawback)), void 0 !== r2.assetRevocationTarget && (r2.assetRevocationTarget = N(r2.assetRevocationTarget)), void 0 !== r2.freezeAccount && (r2.freezeAccount = N(r2.freezeAccount)), void 0 !== r2.reKeyTo && (r2.reKeyTo = N(r2.reKeyTo)), void 0 === r2.genesisHash) throw Error("genesis hash must be specified and in a base64 string.");
            if (r2.genesisHash = o.lW.from(r2.genesisHash, "base64"), void 0 !== r2.amount && (!(Number.isSafeInteger(r2.amount) || "bigint" == typeof r2.amount && r2.amount <= BigInt("0xffffffffffffffff")) || r2.amount < 0)) throw Error("Amount must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.");
            if (!Number.isSafeInteger(r2.fee) || r2.fee < 0) throw Error("fee must be a positive number and smaller than 2^53-1");
            if (!Number.isSafeInteger(r2.firstRound) || r2.firstRound < 0) throw Error("firstRound must be a positive number");
            if (!Number.isSafeInteger(r2.lastRound) || r2.lastRound < 0) throw Error("lastRound must be a positive number");
            if (void 0 !== r2.extraPages && (!Number.isInteger(r2.extraPages) || r2.extraPages < 0 || r2.extraPages > 3)) throw Error("extraPages must be an Integer between and including 0 to 3");
            if (void 0 !== r2.assetTotal && (!(Number.isSafeInteger(r2.assetTotal) || "bigint" == typeof r2.assetTotal && r2.assetTotal <= BigInt("0xffffffffffffffff")) || r2.assetTotal < 0)) throw Error("Total asset issuance must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.");
            if (void 0 !== r2.assetDecimals && (!Number.isSafeInteger(r2.assetDecimals) || r2.assetDecimals < 0 || r2.assetDecimals > 19)) throw Error(`assetDecimals must be a positive number and smaller than ${19 .toString()}`);
            if (void 0 !== r2.assetIndex && (!Number.isSafeInteger(r2.assetIndex) || r2.assetIndex < 0)) throw Error("Asset index must be a positive number and smaller than 2^53-1");
            if (void 0 !== r2.appIndex && (!Number.isSafeInteger(r2.appIndex) || r2.appIndex < 0)) throw Error("Application index must be a positive number and smaller than 2^53-1");
            if (void 0 !== r2.appLocalInts && (!Number.isSafeInteger(r2.appLocalInts) || r2.appLocalInts < 0)) throw Error("Application local ints count must be a positive number and smaller than 2^53-1");
            if (void 0 !== r2.appLocalByteSlices && (!Number.isSafeInteger(r2.appLocalByteSlices) || r2.appLocalByteSlices < 0)) throw Error("Application local byte slices count must be a positive number and smaller than 2^53-1");
            if (void 0 !== r2.appGlobalInts && (!Number.isSafeInteger(r2.appGlobalInts) || r2.appGlobalInts < 0)) throw Error("Application global ints count must be a positive number and smaller than 2^53-1");
            if (void 0 !== r2.appGlobalByteSlices && (!Number.isSafeInteger(r2.appGlobalByteSlices) || r2.appGlobalByteSlices < 0)) throw Error("Application global byte slices count must be a positive number and smaller than 2^53-1");
            if (void 0 !== r2.appApprovalProgram && r2.appApprovalProgram.constructor !== Uint8Array) throw Error("appApprovalProgram must be a Uint8Array.");
            if (void 0 !== r2.appClearProgram && r2.appClearProgram.constructor !== Uint8Array) throw Error("appClearProgram must be a Uint8Array.");
            if (void 0 !== r2.appArgs) {
              if (!Array.isArray(r2.appArgs)) throw Error("appArgs must be an Array of Uint8Array.");
              r2.appArgs = r2.appArgs.slice(), r2.appArgs.forEach(((e4) => {
                if (e4.constructor !== Uint8Array) throw Error("each element of AppArgs must be a Uint8Array.");
              }));
            } else r2.appArgs = [];
            if (void 0 !== r2.appAccounts) {
              if (!Array.isArray(r2.appAccounts)) throw Error("appAccounts must be an Array of addresses.");
              r2.appAccounts = r2.appAccounts.map(((e4) => N(e4)));
            }
            if (void 0 !== r2.appForeignApps) {
              if (!Array.isArray(r2.appForeignApps)) throw Error("appForeignApps must be an Array of integers.");
              r2.appForeignApps = r2.appForeignApps.slice(), r2.appForeignApps.forEach(((e4) => {
                if (!Number.isSafeInteger(e4) || e4 < 0) throw Error("each foreign application index must be a positive number and smaller than 2^53-1");
              }));
            }
            if (void 0 !== r2.appForeignAssets) {
              if (!Array.isArray(r2.appForeignAssets)) throw Error("appForeignAssets must be an Array of integers.");
              r2.appForeignAssets = r2.appForeignAssets.slice(), r2.appForeignAssets.forEach(((e4) => {
                if (!Number.isSafeInteger(e4) || e4 < 0) throw Error("each foreign asset index must be a positive number and smaller than 2^53-1");
              }));
            }
            if (void 0 !== r2.boxes) {
              if (!Array.isArray(r2.boxes)) throw Error("boxes must be an Array of BoxReference.");
              r2.boxes = r2.boxes.slice(), r2.boxes.forEach(((e4) => {
                if (!Number.isSafeInteger(e4.appIndex) || e4.name.constructor !== Uint8Array) throw Error("box app index must be a number and name must be an Uint8Array.");
              }));
            }
            if (void 0 !== r2.assetMetadataHash && 0 !== r2.assetMetadataHash.length) {
              if ("string" == typeof r2.assetMetadataHash && (r2.assetMetadataHash = new Uint8Array(o.lW.from(r2.assetMetadataHash))), r2.assetMetadataHash.constructor !== Uint8Array || 32 !== r2.assetMetadataHash.byteLength) throw Error("assetMetadataHash must be a 32 byte Uint8Array or string.");
              r2.assetMetadataHash.every(((e4) => 0 === e4)) && (r2.assetMetadataHash = void 0);
            } else r2.assetMetadataHash = void 0;
            if (void 0 !== r2.note) {
              if (r2.note.constructor !== Uint8Array) throw Error("note must be a Uint8Array.");
            } else r2.note = new Uint8Array(0);
            if (void 0 !== r2.lease) {
              if (r2.lease.constructor !== Uint8Array) throw Error("lease must be a Uint8Array.");
              if (32 !== r2.lease.length) throw Error(`lease must be of length ${32 .toString()}.`);
              r2.lease.every(((e4) => 0 === e4)) && (r2.lease = new Uint8Array(0));
            } else r2.lease = new Uint8Array(0);
            if (r2.voteKey = ne(r2.voteKey, "voteKey", 32), r2.selectionKey = ne(r2.selectionKey, "selectionKey", 32), r2.stateProofKey = ne(r2.stateProofKey, "stateProofKey", 64), r2.nonParticipation && (r2.voteKey || r2.selectionKey || r2.voteFirst || r2.stateProofKey || r2.voteLast || r2.voteKeyDilution)) throw new Error("nonParticipation is true but participation params are present.");
            if (!r2.nonParticipation && (r2.voteKey || r2.selectionKey || r2.stateProofKey || r2.voteFirst || r2.voteLast || r2.voteKeyDilution) && !(r2.voteKey && r2.selectionKey && r2.voteFirst && r2.voteLast && r2.voteKeyDilution)) throw new Error("online key registration missing at least one of the following fields: voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution");
            if (delete r2.suggestedParams, Object.assign(this, (function(e4) {
              const t4 = { ...e4 };
              return Object.keys(t4).forEach(((e5) => {
                void 0 === t4[e5] && delete t4[e5];
              })), t4;
            })(r2)), r2.flatFee || (this.fee *= this.estimateSize(), this.fee < te && (this.fee = te)), this.group = void 0, void 0 !== r2.stateProofType && (!Number.isSafeInteger(r2.stateProofType) || r2.stateProofType < 0)) throw Error("State Proof type must be a positive number and smaller than 2^53-1");
            if (void 0 !== r2.stateProofMessage) {
              if (r2.stateProofMessage.constructor !== Uint8Array) throw Error("stateProofMessage must be a Uint8Array.");
            } else r2.stateProofMessage = new Uint8Array(0);
            if (void 0 !== r2.stateProof) {
              if (r2.stateProof.constructor !== Uint8Array) throw Error("stateProof must be a Uint8Array.");
            } else r2.stateProof = new Uint8Array(0);
            if (void 0 !== r2.heartbeatFields && r2.heartbeatFields.constructor !== se) throw Error("heartbeatFields must be a HeartbeatFields.");
          }
          get_obj_for_encoding() {
            if ("pay" === this.type) {
              const e4 = { amt: this.amount, fee: this.fee, fv: this.firstRound, lv: this.lastRound, note: o.lW.from(this.note), snd: o.lW.from(this.from.publicKey), type: "pay", gen: this.genesisID, gh: this.genesisHash, lx: o.lW.from(this.lease), grp: this.group };
              return void 0 !== this.closeRemainderTo && "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ" !== F(this.closeRemainderTo.publicKey) && (e4.close = o.lW.from(this.closeRemainderTo.publicKey)), void 0 !== this.reKeyTo && (e4.rekey = o.lW.from(this.reKeyTo.publicKey)), void 0 !== this.to && (e4.rcv = o.lW.from(this.to.publicKey)), e4.note.length || delete e4.note, e4.amt || delete e4.amt, e4.fee || delete e4.fee, e4.fv || delete e4.fv, e4.gen || delete e4.gen, void 0 === e4.grp && delete e4.grp, e4.lx.length || delete e4.lx, e4.rekey || delete e4.rekey, e4;
            }
            if ("keyreg" === this.type) {
              const e4 = { fee: this.fee, fv: this.firstRound, lv: this.lastRound, note: o.lW.from(this.note), snd: o.lW.from(this.from.publicKey), type: this.type, gen: this.genesisID, gh: this.genesisHash, lx: o.lW.from(this.lease), grp: this.group, votekey: this.voteKey, selkey: this.selectionKey, sprfkey: this.stateProofKey, votefst: this.voteFirst, votelst: this.voteLast, votekd: this.voteKeyDilution };
              return e4.note.length || delete e4.note, e4.lx.length || delete e4.lx, e4.fee || delete e4.fee, e4.fv || delete e4.fv, e4.gen || delete e4.gen, void 0 === e4.grp && delete e4.grp, void 0 !== this.reKeyTo && (e4.rekey = o.lW.from(this.reKeyTo.publicKey)), this.nonParticipation && (e4.nonpart = true), e4.selkey || delete e4.selkey, e4.votekey || delete e4.votekey, e4.sprfkey || delete e4.sprfkey, e4.votefst || delete e4.votefst, e4.votelst || delete e4.votelst, e4.votekd || delete e4.votekd, e4;
            }
            if ("acfg" === this.type) {
              const e4 = { fee: this.fee, fv: this.firstRound, lv: this.lastRound, note: o.lW.from(this.note), snd: o.lW.from(this.from.publicKey), type: this.type, gen: this.genesisID, gh: this.genesisHash, lx: o.lW.from(this.lease), grp: this.group, caid: this.assetIndex, apar: { t: this.assetTotal, df: this.assetDefaultFrozen, dc: this.assetDecimals } };
              return void 0 !== this.assetManager && (e4.apar.m = o.lW.from(this.assetManager.publicKey)), void 0 !== this.assetReserve && (e4.apar.r = o.lW.from(this.assetReserve.publicKey)), void 0 !== this.assetFreeze && (e4.apar.f = o.lW.from(this.assetFreeze.publicKey)), void 0 !== this.assetClawback && (e4.apar.c = o.lW.from(this.assetClawback.publicKey)), void 0 !== this.assetName && (e4.apar.an = this.assetName), void 0 !== this.assetUnitName && (e4.apar.un = this.assetUnitName), void 0 !== this.assetURL && (e4.apar.au = this.assetURL), void 0 !== this.assetMetadataHash && (e4.apar.am = o.lW.from(this.assetMetadataHash)), e4.note.length || delete e4.note, e4.lx.length || delete e4.lx, e4.amt || delete e4.amt, e4.fee || delete e4.fee, e4.fv || delete e4.fv, e4.gen || delete e4.gen, void 0 !== this.reKeyTo && (e4.rekey = o.lW.from(this.reKeyTo.publicKey)), e4.caid || delete e4.caid, e4.apar.t || e4.apar.un || e4.apar.an || e4.apar.df || e4.apar.m || e4.apar.r || e4.apar.f || e4.apar.c || e4.apar.au || e4.apar.am || e4.apar.dc ? (e4.apar.t || delete e4.apar.t, e4.apar.dc || delete e4.apar.dc, e4.apar.un || delete e4.apar.un, e4.apar.an || delete e4.apar.an, e4.apar.df || delete e4.apar.df, e4.apar.m || delete e4.apar.m, e4.apar.r || delete e4.apar.r, e4.apar.f || delete e4.apar.f, e4.apar.c || delete e4.apar.c, e4.apar.au || delete e4.apar.au, e4.apar.am || delete e4.apar.am) : delete e4.apar, void 0 === e4.grp && delete e4.grp, e4;
            }
            if ("axfer" === this.type) {
              const e4 = { aamt: this.amount, fee: this.fee, fv: this.firstRound, lv: this.lastRound, note: o.lW.from(this.note), snd: o.lW.from(this.from.publicKey), arcv: o.lW.from(this.to.publicKey), type: this.type, gen: this.genesisID, gh: this.genesisHash, lx: o.lW.from(this.lease), grp: this.group, xaid: this.assetIndex };
              return void 0 !== this.closeRemainderTo && (e4.aclose = o.lW.from(this.closeRemainderTo.publicKey)), void 0 !== this.assetRevocationTarget && (e4.asnd = o.lW.from(this.assetRevocationTarget.publicKey)), e4.note.length || delete e4.note, e4.lx.length || delete e4.lx, e4.aamt || delete e4.aamt, e4.amt || delete e4.amt, e4.fee || delete e4.fee, e4.fv || delete e4.fv, e4.gen || delete e4.gen, void 0 === e4.grp && delete e4.grp, e4.aclose || delete e4.aclose, e4.asnd || delete e4.asnd, e4.rekey || delete e4.rekey, void 0 !== this.reKeyTo && (e4.rekey = o.lW.from(this.reKeyTo.publicKey)), e4;
            }
            if ("afrz" === this.type) {
              const e4 = { fee: this.fee, fv: this.firstRound, lv: this.lastRound, note: o.lW.from(this.note), snd: o.lW.from(this.from.publicKey), type: this.type, gen: this.genesisID, gh: this.genesisHash, lx: o.lW.from(this.lease), grp: this.group, faid: this.assetIndex, afrz: this.freezeState };
              return void 0 !== this.freezeAccount && (e4.fadd = o.lW.from(this.freezeAccount.publicKey)), e4.note.length || delete e4.note, e4.lx.length || delete e4.lx, e4.amt || delete e4.amt, e4.fee || delete e4.fee, e4.fv || delete e4.fv, e4.gen || delete e4.gen, e4.afrz || delete e4.afrz, void 0 === e4.grp && delete e4.grp, void 0 !== this.reKeyTo && (e4.rekey = o.lW.from(this.reKeyTo.publicKey)), e4;
            }
            if ("appl" === this.type) {
              const s2 = { fee: this.fee, fv: this.firstRound, lv: this.lastRound, note: o.lW.from(this.note), snd: o.lW.from(this.from.publicKey), type: this.type, gen: this.genesisID, gh: this.genesisHash, lx: o.lW.from(this.lease), grp: this.group, apid: this.appIndex, apan: this.appOnComplete, apls: { nui: this.appLocalInts, nbs: this.appLocalByteSlices }, apgs: { nui: this.appGlobalInts, nbs: this.appGlobalByteSlices }, apfa: this.appForeignApps, apas: this.appForeignAssets, apep: this.extraPages, apbx: (e3 = this.boxes, t3 = this.appForeignApps, r2 = this.appIndex, null == e3 ? [] : e3.map(((e4) => (function(e5, t4, r3) {
                const s3 = e5.appIndex, n2 = e5.name, i2 = 0 === s3 || s3 === r3;
                let o2 = 0;
                if (null != t4 && (o2 = t4.indexOf(s3) + 1), 0 === o2 && !i2) throw new Error(`Box ref with appId ${s3} not in foreign-apps`);
                return { i: o2, n: n2 };
              })(e4, t3, r2)))) };
              void 0 !== this.reKeyTo && (s2.rekey = o.lW.from(this.reKeyTo.publicKey)), void 0 !== this.appApprovalProgram && (s2.apap = o.lW.from(this.appApprovalProgram)), void 0 !== this.appClearProgram && (s2.apsu = o.lW.from(this.appClearProgram)), void 0 !== this.appArgs && (s2.apaa = this.appArgs.map(((e4) => o.lW.from(e4)))), void 0 !== this.appAccounts && (s2.apat = this.appAccounts.map(((e4) => o.lW.from(e4.publicKey)))), s2.note.length || delete s2.note, s2.lx.length || delete s2.lx, s2.amt || delete s2.amt, s2.fee || delete s2.fee, s2.fv || delete s2.fv, s2.gen || delete s2.gen, s2.apid || delete s2.apid, s2.apls.nui || delete s2.apls.nui, s2.apls.nbs || delete s2.apls.nbs, s2.apls.nui || s2.apls.nbs || delete s2.apls, s2.apgs.nui || delete s2.apgs.nui, s2.apgs.nbs || delete s2.apgs.nbs, s2.apaa && s2.apaa.length || delete s2.apaa, s2.apgs.nui || s2.apgs.nbs || delete s2.apgs, s2.apap || delete s2.apap, s2.apsu || delete s2.apsu, s2.apan || delete s2.apan, s2.apfa && s2.apfa.length || delete s2.apfa, s2.apas && s2.apas.length || delete s2.apas;
              for (const e4 of s2.apbx) e4.i || delete e4.i, e4.n && e4.n.length || delete e4.n;
              return s2.apbx && s2.apbx.length || delete s2.apbx, s2.apat && s2.apat.length || delete s2.apat, s2.apep || delete s2.apep, void 0 === s2.grp && delete s2.grp, s2;
            }
            var e3, t3, r2;
            if ("stpf" === this.type) {
              const e4 = { fee: this.fee, fv: this.firstRound, lv: this.lastRound, note: o.lW.from(this.note), snd: o.lW.from(this.from.publicKey), type: this.type, gen: this.genesisID, gh: this.genesisHash, lx: o.lW.from(this.lease), sptype: this.stateProofType, spmsg: o.lW.from(this.stateProofMessage), sp: o.lW.from(this.stateProof) };
              return e4.sptype || delete e4.sptype, e4.note.length || delete e4.note, e4.lx.length || delete e4.lx, e4.amt || delete e4.amt, e4.fee || delete e4.fee, e4.fv || delete e4.fv, e4.gen || delete e4.gen, e4.apid || delete e4.apid, e4.apaa && e4.apaa.length || delete e4.apaa, e4.apap || delete e4.apap, e4.apsu || delete e4.apsu, e4.apan || delete e4.apan, e4.apfa && e4.apfa.length || delete e4.apfa, e4.apas && e4.apas.length || delete e4.apas, e4.apat && e4.apat.length || delete e4.apat, e4.apep || delete e4.apep, void 0 === e4.grp && delete e4.grp, e4;
            }
            if ("hb" === this.type) {
              const e4 = { fee: this.fee, fv: this.firstRound, lv: this.lastRound, note: o.lW.from(this.note), snd: o.lW.from(this.from.publicKey), type: this.type, gen: this.genesisID, gh: this.genesisHash, lx: o.lW.from(this.lease), hb: this.heartbeatFields.get_obj_for_encoding() };
              return e4.note.length || delete e4.note, e4.lx.length || delete e4.lx, e4.fee || delete e4.fee, e4.gen || delete e4.gen, void 0 === e4.grp && delete e4.grp, e4;
            }
          }
          static from_obj_for_encoding(e3) {
            const t3 = Object.create(this.prototype);
            if (t3.name = "Transaction", t3.tag = o.lW.from("TX"), t3.genesisID = e3.gen, t3.genesisHash = o.lW.from(e3.gh), (r2 = e3.type) !== Q.pay && r2 !== Q.keyreg && r2 !== Q.acfg && r2 !== Q.axfer && r2 !== Q.afrz && r2 !== Q.appl && r2 !== Q.stpf && r2 !== Q.hb) throw new Error(`Unrecognized transaction type: ${e3.type}`);
            var r2;
            return t3.type = e3.type, t3.fee = e3.fee, t3.firstRound = e3.fv, t3.lastRound = e3.lv, t3.note = new Uint8Array(e3.note), t3.lease = new Uint8Array(e3.lx), t3.from = N(F(new Uint8Array(e3.snd))), void 0 !== e3.grp && (t3.group = o.lW.from(e3.grp)), void 0 !== e3.rekey && (t3.reKeyTo = N(F(new Uint8Array(e3.rekey)))), "pay" === e3.type ? (t3.amount = e3.amt, t3.to = N(F(new Uint8Array(e3.rcv))), void 0 !== e3.close && (t3.closeRemainderTo = N(F(e3.close)))) : "keyreg" === e3.type ? (void 0 !== e3.votekey && (t3.voteKey = o.lW.from(e3.votekey)), void 0 !== e3.selkey && (t3.selectionKey = o.lW.from(e3.selkey)), void 0 !== e3.sprfkey && (t3.stateProofKey = o.lW.from(e3.sprfkey)), void 0 !== e3.votekd && (t3.voteKeyDilution = e3.votekd), void 0 !== e3.votefst && (t3.voteFirst = e3.votefst), void 0 !== e3.votelst && (t3.voteLast = e3.votelst), void 0 !== e3.nonpart && (t3.nonParticipation = e3.nonpart)) : "acfg" === e3.type ? (void 0 !== e3.caid && (t3.assetIndex = e3.caid), void 0 !== e3.apar && (t3.assetTotal = e3.apar.t, t3.assetDefaultFrozen = e3.apar.df, void 0 !== e3.apar.dc && (t3.assetDecimals = e3.apar.dc), void 0 !== e3.apar.m && (t3.assetManager = N(F(new Uint8Array(e3.apar.m)))), void 0 !== e3.apar.r && (t3.assetReserve = N(F(new Uint8Array(e3.apar.r)))), void 0 !== e3.apar.f && (t3.assetFreeze = N(F(new Uint8Array(e3.apar.f)))), void 0 !== e3.apar.c && (t3.assetClawback = N(F(new Uint8Array(e3.apar.c)))), void 0 !== e3.apar.un && (t3.assetUnitName = e3.apar.un), void 0 !== e3.apar.an && (t3.assetName = e3.apar.an), void 0 !== e3.apar.au && (t3.assetURL = e3.apar.au), void 0 !== e3.apar.am && (t3.assetMetadataHash = e3.apar.am))) : "axfer" === e3.type ? (void 0 !== e3.xaid && (t3.assetIndex = e3.xaid), void 0 !== e3.aamt && (t3.amount = e3.aamt), void 0 !== e3.aclose && (t3.closeRemainderTo = N(F(new Uint8Array(e3.aclose)))), void 0 !== e3.asnd && (t3.assetRevocationTarget = N(F(new Uint8Array(e3.asnd)))), t3.to = N(F(new Uint8Array(e3.arcv)))) : "afrz" === e3.type ? (void 0 !== e3.afrz && (t3.freezeState = e3.afrz), void 0 !== e3.faid && (t3.assetIndex = e3.faid), t3.freezeAccount = N(F(new Uint8Array(e3.fadd)))) : "appl" === e3.type ? (void 0 !== e3.apid && (t3.appIndex = e3.apid), void 0 !== e3.apan && (t3.appOnComplete = e3.apan), void 0 !== e3.apls && (void 0 !== e3.apls.nui && (t3.appLocalInts = e3.apls.nui), void 0 !== e3.apls.nbs && (t3.appLocalByteSlices = e3.apls.nbs)), void 0 !== e3.apgs && (void 0 !== e3.apgs.nui && (t3.appGlobalInts = e3.apgs.nui), void 0 !== e3.apgs.nbs && (t3.appGlobalByteSlices = e3.apgs.nbs)), void 0 !== e3.apep && (t3.extraPages = e3.apep), void 0 !== e3.apap && (t3.appApprovalProgram = new Uint8Array(e3.apap)), void 0 !== e3.apsu && (t3.appClearProgram = new Uint8Array(e3.apsu)), void 0 !== e3.apaa && (t3.appArgs = e3.apaa.map(((e4) => new Uint8Array(e4)))), void 0 !== e3.apat && (t3.appAccounts = e3.apat.map(((e4) => N(F(new Uint8Array(e4)))))), void 0 !== e3.apfa && (t3.appForeignApps = e3.apfa), void 0 !== e3.apas && (t3.appForeignAssets = e3.apas), void 0 !== e3.apbx && (t3.boxes = e3.apbx.map(((e4) => ({ appIndex: e4.i ? t3.appForeignApps[e4.i - 1] : 0, name: e4.n }))))) : "stpf" === e3.type ? (void 0 !== e3.sptype && (t3.stateProofType = e3.sptype), void 0 !== e3.sp && (t3.stateProof = e3.sp), void 0 !== e3.spmsg && (t3.stateProofMessage = e3.spmsg)) : "hb" === e3.type && void 0 !== e3.hb && (t3.heartbeatFields = se.from_obj_for_encoding(e3.hb)), t3;
          }
          estimateSize() {
            return this.toByte().length + 75;
          }
          bytesToSign() {
            const e3 = this.toByte();
            return o.lW.from(m(this.tag, e3));
          }
          toByte() {
            return X(this.get_obj_for_encoding());
          }
          rawSignTxn(e3) {
            const t3 = x(this.bytesToSign(), e3);
            return o.lW.from(t3);
          }
          signTxn(e3) {
            const t3 = { sig: this.rawSignTxn(e3), txn: this.get_obj_for_encoding() }, r2 = v(e3).publicKey;
            return F(r2) !== F(this.from.publicKey) && (t3.sgnr = o.lW.from(r2)), new Uint8Array(X(t3));
          }
          attachSignature(e3, t3) {
            if (!b(t3.length)) throw new Error("Invalid signature length");
            const r2 = { sig: o.lW.from(t3), txn: this.get_obj_for_encoding() };
            if (e3 !== F(this.from.publicKey)) {
              const t4 = N(e3).publicKey;
              r2.sgnr = o.lW.from(t4);
            }
            return new Uint8Array(X(r2));
          }
          rawTxID() {
            const e3 = this.toByte(), t3 = o.lW.from(m(this.tag, e3));
            return o.lW.from(y(t3));
          }
          txID() {
            const e3 = this.rawTxID();
            return T().encode(e3).slice(0, 52);
          }
          addLease(e3, t3 = 0) {
            let r2;
            if (void 0 !== e3) {
              if (e3.constructor !== Uint8Array) throw Error("lease must be a Uint8Array.");
              if (32 !== e3.length) throw Error(`lease must be of length ${32 .toString()}.`);
              r2 = new Uint8Array(e3);
            } else r2 = new Uint8Array(0);
            this.lease = r2, 0 !== t3 && (this.fee += 37 * t3);
          }
          addRekey(e3, t3 = 0) {
            void 0 !== e3 && (this.reKeyTo = N(e3)), 0 !== t3 && (this.fee += 37 * t3);
          }
          _getDictForDisplay() {
            const e3 = { ...this };
            return e3.tag = e3.tag.toString(), e3.from = F(e3.from.publicKey), void 0 !== e3.to && (e3.to = F(e3.to.publicKey)), void 0 !== e3.freezeAccount && (e3.freezeAccount = F(e3.freezeAccount.publicKey)), void 0 !== e3.closeRemainderTo && (e3.closeRemainderTo = F(e3.closeRemainderTo.publicKey)), void 0 !== e3.assetManager && (e3.assetManager = F(e3.assetManager.publicKey)), void 0 !== e3.assetReserve && (e3.assetReserve = F(e3.assetReserve.publicKey)), void 0 !== e3.assetFreeze && (e3.assetFreeze = F(e3.assetFreeze.publicKey)), void 0 !== e3.assetClawback && (e3.assetClawback = F(e3.assetClawback.publicKey)), void 0 !== e3.assetRevocationTarget && (e3.assetRevocationTarget = F(e3.assetRevocationTarget.publicKey)), void 0 !== e3.reKeyTo && (e3.reKeyTo = F(e3.reKeyTo.publicKey)), e3.genesisHash = e3.genesisHash.toString("base64"), e3;
          }
          prettyPrint() {
            console.log(this._getDictForDisplay());
          }
          toString() {
            return JSON.stringify(this._getDictForDisplay());
          }
        }
        function oe(e3) {
          return X({ txn: e3.get_obj_for_encoding() });
        }
        function ae(e3) {
          return X(e3.get_obj_for_encoding());
        }
        function ce(e3) {
          const t3 = Z(e3);
          return ie.from_obj_for_encoding(t3);
        }
        function ue(e3) {
          const t3 = Z(e3);
          return { ...t3, txn: ie.from_obj_for_encoding(t3.txn) };
        }
        function le(e3) {
          return e3 instanceof ie ? e3 : new ie(e3);
        }
        class de {
          constructor({ bidderKey: e3, bidAmount: t3, bidID: r2, auctionKey: s2, auctionID: n2, maxPrice: i2 }) {
            this.name = "Bid", this.tag = o.lW.from([97, 66]);
            const a2 = N(e3), c2 = N(s2);
            if (!Number.isSafeInteger(t3) || t3 < 0) throw Error("Bid amount must be positive and 2^53-1");
            if (!Number.isSafeInteger(r2) || r2 < 0) throw Error("BidID must be positive and 2^53-1");
            if (!Number.isSafeInteger(n2) || n2 < 0) throw Error("auctionID must be positive");
            Object.assign(this, { bidderKey: a2, bidAmount: t3, bidID: r2, auctionKey: c2, auctionID: n2, maxPrice: i2 });
          }
          get_obj_for_encoding() {
            return { bidder: o.lW.from(this.bidderKey.publicKey), cur: this.bidAmount, price: this.maxPrice, id: this.bidID, auc: o.lW.from(this.auctionKey.publicKey), aid: this.auctionID };
          }
          signBid(e3) {
            const t3 = X(this.get_obj_for_encoding()), r2 = x(o.lW.from(m(this.tag, t3)), e3), s2 = { sig: o.lW.from(r2), bid: this.get_obj_for_encoding() };
            return new Uint8Array(X({ t: "b", b: s2 }));
          }
        }
        const he = 1e6, pe = "Microalgos should be positive and less than 2^53 - 1.";
        function fe(e3) {
          if (e3 < 0 || !Number.isSafeInteger(e3)) throw new Error(pe);
          return e3 / he;
        }
        function ge(e3) {
          const t3 = e3 * he;
          return Math.round(t3);
        }
        class me extends Error {
          constructor(e3, t3) {
            super(e3), this.response = t3, this.name = "URLTokenBaseHTTPError", this.response = t3;
          }
        }
        class ye {
          constructor(e3, t3, r2, s2 = {}) {
            this.defaultHeaders = s2;
            const n2 = t3.endsWith("/") ? t3 : `${t3}/`, i2 = new URL(n2);
            if (void 0 !== r2 && (i2.port = r2.toString()), 0 === i2.protocol.length) throw new Error("Invalid base server URL, protocol must be defined.");
            this.baseURL = i2, this.tokenHeader = e3;
          }
          getURL(e3, t3) {
            let r2;
            r2 = e3.startsWith("./") ? e3 : e3.startsWith("/") ? `.${e3}` : `./${e3}`;
            const s2 = new URL(r2, this.baseURL);
            if (t3) for (const [e4, r3] of Object.entries(t3)) s2.searchParams.set(e4, r3);
            return s2.toString();
          }
          static formatFetchResponseHeaders(e3) {
            const t3 = {};
            return e3.forEach(((e4, r2) => {
              t3[e4] = r2;
            })), t3;
          }
          static async checkHttpError(e3) {
            if (e3.ok) return;
            let t3 = null, r2 = null;
            try {
              t3 = new Uint8Array(await e3.arrayBuffer());
              const s3 = JSON.parse(o.lW.from(t3).toString());
              s3.message && (r2 = s3.message);
            } catch (e4) {
            }
            let s2 = `Network request error. Received status ${e3.status} (${e3.statusText})`;
            throw r2 && (s2 += `: ${r2}`), new me(s2, { body: t3, status: e3.status, headers: ye.formatFetchResponseHeaders(e3.headers) });
          }
          static async formatFetchResponse(e3) {
            return await this.checkHttpError(e3), { body: new Uint8Array(await e3.arrayBuffer()), status: e3.status, headers: ye.formatFetchResponseHeaders(e3.headers) };
          }
          async get(e3, t3, r2 = {}) {
            const s2 = { ...this.tokenHeader, ...this.defaultHeaders, ...r2 }, n2 = await fetch(this.getURL(e3, t3), { headers: s2 });
            return ye.formatFetchResponse(n2);
          }
          async post(e3, t3, r2, s2 = {}) {
            const n2 = { ...this.tokenHeader, ...this.defaultHeaders, ...s2 }, i2 = await fetch(this.getURL(e3, r2), { method: "POST", body: t3, headers: n2 });
            return ye.formatFetchResponse(i2);
          }
          async delete(e3, t3, r2, s2 = {}) {
            const n2 = { ...this.tokenHeader, ...this.defaultHeaders, ...s2 }, i2 = await fetch(this.getURL(e3, r2), { method: "DELETE", body: t3, headers: n2 });
            return ye.formatFetchResponse(i2);
          }
        }
        function we(e3) {
          return Object.keys(e3).reduce(((t3, r2) => (t3[r2.toLowerCase()] = e3[r2], t3)), {});
        }
        class be {
          constructor(e3, t3, r2, s2 = {}) {
            this.bc = void 0 !== t3 ? new ye(e3, t3, r2, s2) : e3;
          }
          static parseJSON(e3, t3, r2 = {}) {
            try {
              return 0 === Object.keys(r2).length ? e3 && JSON.parse(e3) : e3 && (function(e4, t4) {
                const r3 = t4 && t4.intDecoding ? t4.intDecoding : p.DEFAULT;
                return f.parse(e4, ((e5, t5) => {
                  if (null != t5 && "object" == typeof t5 && null == Object.getPrototypeOf(t5) && Object.setPrototypeOf(t5, Object.prototype), "bigint" == typeof t5) {
                    if ("safe" === r3 && t5 > Number.MAX_SAFE_INTEGER) throw new Error(`Integer exceeds maximum safe integer: ${t5.toString()}. Try parsing with a different intDecoding option.`);
                    return "bigint" === r3 || "mixed" === r3 && t5 > Number.MAX_SAFE_INTEGER ? t5 : Number(t5);
                  }
                  return "number" == typeof t5 && "bigint" === r3 && Number.isInteger(t5) ? BigInt(t5) : t5;
                }));
              })(e3, r2);
            } catch (r3) {
              const s2 = r3;
              throw s2.rawResponse = e3 || null, s2.statusCode = t3, s2;
            }
          }
          static serializeData(e3, t3) {
            if (!e3) return new Uint8Array(0);
            if ("application/json" === t3["content-type"]) return new Uint8Array(o.lW.from(JSON.stringify(e3)));
            if ("string" == typeof e3) return new Uint8Array(o.lW.from(e3));
            if (e3 instanceof Uint8Array) return e3;
            throw new Error("provided data is neither a string nor a Uint8Array and content-type is not application/json");
          }
          static prepareResponse(e3, t3, r2, s2 = {}) {
            let n2, { body: i2 } = e3;
            return "application/msgpack" !== t3 && (n2 = i2 && o.lW.from(i2).toString() || ""), r2 && "application/json" === t3 && (i2 = be.parseJSON(n2, e3.status, s2)), { ...e3, body: i2, text: n2, ok: 2 === Math.trunc(e3.status / 100) };
          }
          static prepareResponseError(e3) {
            return e3.response && (e3.response = be.prepareResponse(e3.response, "application/json", true), e3.status = e3.response.status), e3;
          }
          async get(e3, t3, r2 = {}, s2 = {}, n2 = true) {
            const i2 = (function(e4) {
              return void 0 !== e4 && Object.prototype.hasOwnProperty.call(e4, "format") && "msgpack" === e4.format ? "application/msgpack" : "application/json";
            })(t3), o2 = { ...r2, accept: i2 };
            try {
              const r3 = await this.bc.get(e3, (function(e4) {
                for (const t4 in e4) Object.prototype.hasOwnProperty.call(e4, t4) && (e4[t4] && 0 !== e4[t4].length || delete e4[t4]);
                return e4;
              })(t3), o2);
              return be.prepareResponse(r3, i2, n2, s2);
            } catch (e4) {
              throw be.prepareResponseError(e4);
            }
          }
          async post(e3, t3, r2 = {}, s2, n2 = true) {
            const i2 = { "content-type": "application/json", ...we(r2) };
            try {
              const r3 = await this.bc.post(e3, be.serializeData(t3, i2), s2, i2);
              return be.prepareResponse(r3, "application/json", n2);
            } catch (e4) {
              throw be.prepareResponseError(e4);
            }
          }
          async delete(e3, t3, r2 = {}, s2 = true) {
            const n2 = { "content-type": "application/json", ...we(r2) }, i2 = await this.bc.delete(e3, be.serializeData(t3, n2), void 0, n2);
            return be.prepareResponse(i2, "application/json", s2);
          }
        }
        class ve {
          constructor(e3, t3, r2, s2, n2 = {}) {
            if ("function" == typeof t3.get) this.c = new be(t3);
            else {
              let i2;
              i2 = "string" == typeof t3 ? (function(e4 = "", t4) {
                const r3 = {};
                return "" === e4 || (r3[t4] = e4), r3;
              })(t3, e3) : t3, this.c = new be(i2, r2, s2, n2);
            }
            this.intDecoding = p.DEFAULT;
          }
          setIntEncoding(e3) {
            this.intDecoding = e3;
          }
          getIntEncoding() {
            return this.intDecoding;
          }
        }
        function xe(e3, t3) {
          let r2;
          if (e3 instanceof Uint8Array) r2 = t3 ? e3 : o.lW.from(e3).toString("base64");
          else if ("function" == typeof e3.get_obj_for_encoding) r2 = e3.get_obj_for_encoding(t3);
          else if (Array.isArray(e3)) {
            r2 = [];
            for (const s2 of e3) r2.push(xe(s2, t3));
          } else if ("object" == typeof e3) {
            const s2 = {};
            for (const r3 of Object.keys(e3)) s2[r3] = xe(e3[r3], t3);
            r2 = s2;
          } else {
            if (!(function(e4) {
              return void 0 === e4 || null == e4 || "object" != typeof e4 && "function" != typeof e4;
            })(e3)) throw new Error(`Unsupported value: ${String(e3)}`);
            r2 = e3;
          }
          return r2;
        }
        class _e {
          get_obj_for_encoding(e3 = false) {
            const t3 = {};
            for (const r2 of Object.keys(this.attribute_map)) {
              const s2 = this.attribute_map[r2], n2 = this[r2];
              void 0 !== n2 && (t3[s2] = null === n2 ? null : xe(n2, e3));
            }
            return t3;
          }
        }
        class Ae extends _e {
          constructor({ address: e3, amount: t3, amountWithoutPendingRewards: r2, minBalance: s2, pendingRewards: n2, rewards: i2, round: o2, status: a2, totalAppsOptedIn: c2, totalAssetsOptedIn: u2, totalCreatedApps: l2, totalCreatedAssets: d2, appsLocalState: h2, appsTotalExtraPages: p2, appsTotalSchema: f2, assets: g2, authAddr: m2, createdApps: y2, createdAssets: w2, incentiveEligible: b2, lastHeartbeat: v2, lastProposed: x2, participation: _2, rewardBase: A2, sigType: E2, totalBoxBytes: k2, totalBoxes: S2 }) {
            super(), this.address = e3, this.amount = t3, this.amountWithoutPendingRewards = r2, this.minBalance = s2, this.pendingRewards = n2, this.rewards = i2, this.round = o2, this.status = a2, this.totalAppsOptedIn = c2, this.totalAssetsOptedIn = u2, this.totalCreatedApps = l2, this.totalCreatedAssets = d2, this.appsLocalState = h2, this.appsTotalExtraPages = p2, this.appsTotalSchema = f2, this.assets = g2, this.authAddr = m2, this.createdApps = y2, this.createdAssets = w2, this.incentiveEligible = b2, this.lastHeartbeat = v2, this.lastProposed = x2, this.participation = _2, this.rewardBase = A2, this.sigType = E2, this.totalBoxBytes = k2, this.totalBoxes = S2, this.attribute_map = { address: "address", amount: "amount", amountWithoutPendingRewards: "amount-without-pending-rewards", minBalance: "min-balance", pendingRewards: "pending-rewards", rewards: "rewards", round: "round", status: "status", totalAppsOptedIn: "total-apps-opted-in", totalAssetsOptedIn: "total-assets-opted-in", totalCreatedApps: "total-created-apps", totalCreatedAssets: "total-created-assets", appsLocalState: "apps-local-state", appsTotalExtraPages: "apps-total-extra-pages", appsTotalSchema: "apps-total-schema", assets: "assets", authAddr: "auth-addr", createdApps: "created-apps", createdAssets: "created-assets", incentiveEligible: "incentive-eligible", lastHeartbeat: "last-heartbeat", lastProposed: "last-proposed", participation: "participation", rewardBase: "reward-base", sigType: "sig-type", totalBoxBytes: "total-box-bytes", totalBoxes: "total-boxes" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.address) throw new Error(`Response is missing required field 'address': ${e3}`);
            if (void 0 === e3.amount) throw new Error(`Response is missing required field 'amount': ${e3}`);
            if (void 0 === e3["amount-without-pending-rewards"]) throw new Error(`Response is missing required field 'amount-without-pending-rewards': ${e3}`);
            if (void 0 === e3["min-balance"]) throw new Error(`Response is missing required field 'min-balance': ${e3}`);
            if (void 0 === e3["pending-rewards"]) throw new Error(`Response is missing required field 'pending-rewards': ${e3}`);
            if (void 0 === e3.rewards) throw new Error(`Response is missing required field 'rewards': ${e3}`);
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            if (void 0 === e3.status) throw new Error(`Response is missing required field 'status': ${e3}`);
            if (void 0 === e3["total-apps-opted-in"]) throw new Error(`Response is missing required field 'total-apps-opted-in': ${e3}`);
            if (void 0 === e3["total-assets-opted-in"]) throw new Error(`Response is missing required field 'total-assets-opted-in': ${e3}`);
            if (void 0 === e3["total-created-apps"]) throw new Error(`Response is missing required field 'total-created-apps': ${e3}`);
            if (void 0 === e3["total-created-assets"]) throw new Error(`Response is missing required field 'total-created-assets': ${e3}`);
            return new Ae({ address: e3.address, amount: e3.amount, amountWithoutPendingRewards: e3["amount-without-pending-rewards"], minBalance: e3["min-balance"], pendingRewards: e3["pending-rewards"], rewards: e3.rewards, round: e3.round, status: e3.status, totalAppsOptedIn: e3["total-apps-opted-in"], totalAssetsOptedIn: e3["total-assets-opted-in"], totalCreatedApps: e3["total-created-apps"], totalCreatedAssets: e3["total-created-assets"], appsLocalState: void 0 !== e3["apps-local-state"] ? e3["apps-local-state"].map($e.from_obj_for_encoding) : void 0, appsTotalExtraPages: e3["apps-total-extra-pages"], appsTotalSchema: void 0 !== e3["apps-total-schema"] ? Oe.from_obj_for_encoding(e3["apps-total-schema"]) : void 0, assets: void 0 !== e3.assets ? e3.assets.map(Me.from_obj_for_encoding) : void 0, authAddr: e3["auth-addr"], createdApps: void 0 !== e3["created-apps"] ? e3["created-apps"].map(Ue.from_obj_for_encoding) : void 0, createdAssets: void 0 !== e3["created-assets"] ? e3["created-assets"].map(Le.from_obj_for_encoding) : void 0, incentiveEligible: e3["incentive-eligible"], lastHeartbeat: e3["last-heartbeat"], lastProposed: e3["last-proposed"], participation: void 0 !== e3.participation ? Te.from_obj_for_encoding(e3.participation) : void 0, rewardBase: e3["reward-base"], sigType: e3["sig-type"], totalBoxBytes: e3["total-box-bytes"], totalBoxes: e3["total-boxes"] });
          }
        }
        class Ee extends _e {
          constructor({ round: e3, appLocalState: t3, createdApp: r2 }) {
            super(), this.round = e3, this.appLocalState = t3, this.createdApp = r2, this.attribute_map = { round: "round", appLocalState: "app-local-state", createdApp: "created-app" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            return new Ee({ round: e3.round, appLocalState: void 0 !== e3["app-local-state"] ? $e.from_obj_for_encoding(e3["app-local-state"]) : void 0, createdApp: void 0 !== e3["created-app"] ? Ce.from_obj_for_encoding(e3["created-app"]) : void 0 });
          }
        }
        class ke extends _e {
          constructor({ assetHolding: e3, assetParams: t3 }) {
            super(), this.assetHolding = e3, this.assetParams = t3, this.attribute_map = { assetHolding: "asset-holding", assetParams: "asset-params" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["asset-holding"]) throw new Error(`Response is missing required field 'asset-holding': ${e3}`);
            return new ke({ assetHolding: Me.from_obj_for_encoding(e3["asset-holding"]), assetParams: void 0 !== e3["asset-params"] ? Ne.from_obj_for_encoding(e3["asset-params"]) : void 0 });
          }
        }
        class Se extends _e {
          constructor({ round: e3, assetHolding: t3, createdAsset: r2 }) {
            super(), this.round = e3, this.assetHolding = t3, this.createdAsset = r2, this.attribute_map = { round: "round", assetHolding: "asset-holding", createdAsset: "created-asset" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            return new Se({ round: e3.round, assetHolding: void 0 !== e3["asset-holding"] ? Me.from_obj_for_encoding(e3["asset-holding"]) : void 0, createdAsset: void 0 !== e3["created-asset"] ? Ne.from_obj_for_encoding(e3["created-asset"]) : void 0 });
          }
        }
        class Re extends _e {
          constructor({ round: e3, assetHoldings: t3, nextToken: r2 }) {
            super(), this.round = e3, this.assetHoldings = t3, this.nextToken = r2, this.attribute_map = { round: "round", assetHoldings: "asset-holdings", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            return new Re({ round: e3.round, assetHoldings: void 0 !== e3["asset-holdings"] ? e3["asset-holdings"].map(ke.from_obj_for_encoding) : void 0, nextToken: e3["next-token"] });
          }
        }
        class Te extends _e {
          constructor({ selectionParticipationKey: e3, voteFirstValid: t3, voteKeyDilution: r2, voteLastValid: s2, voteParticipationKey: n2, stateProofKey: i2 }) {
            super(), this.selectionParticipationKey = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.voteFirstValid = t3, this.voteKeyDilution = r2, this.voteLastValid = s2, this.voteParticipationKey = "string" == typeof n2 ? new Uint8Array(o.lW.from(n2, "base64")) : n2, this.stateProofKey = "string" == typeof i2 ? new Uint8Array(o.lW.from(i2, "base64")) : i2, this.attribute_map = { selectionParticipationKey: "selection-participation-key", voteFirstValid: "vote-first-valid", voteKeyDilution: "vote-key-dilution", voteLastValid: "vote-last-valid", voteParticipationKey: "vote-participation-key", stateProofKey: "state-proof-key" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["selection-participation-key"]) throw new Error(`Response is missing required field 'selection-participation-key': ${e3}`);
            if (void 0 === e3["vote-first-valid"]) throw new Error(`Response is missing required field 'vote-first-valid': ${e3}`);
            if (void 0 === e3["vote-key-dilution"]) throw new Error(`Response is missing required field 'vote-key-dilution': ${e3}`);
            if (void 0 === e3["vote-last-valid"]) throw new Error(`Response is missing required field 'vote-last-valid': ${e3}`);
            if (void 0 === e3["vote-participation-key"]) throw new Error(`Response is missing required field 'vote-participation-key': ${e3}`);
            return new Te({ selectionParticipationKey: e3["selection-participation-key"], voteFirstValid: e3["vote-first-valid"], voteKeyDilution: e3["vote-key-dilution"], voteLastValid: e3["vote-last-valid"], voteParticipationKey: e3["vote-participation-key"], stateProofKey: e3["state-proof-key"] });
          }
        }
        class Ie extends _e {
          constructor({ address: e3, delta: t3 }) {
            super(), this.address = e3, this.delta = t3, this.attribute_map = { address: "address", delta: "delta" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.address) throw new Error(`Response is missing required field 'address': ${e3}`);
            if (!Array.isArray(e3.delta)) throw new Error(`Response is missing required array field 'delta': ${e3}`);
            return new Ie({ address: e3.address, delta: e3.delta.map(ut.from_obj_for_encoding) });
          }
        }
        class Be extends _e {
          constructor({ applicationIndex: e3, logs: t3, txid: r2 }) {
            super(), this.applicationIndex = e3, this.logs = t3, this.txid = r2, this.attribute_map = { applicationIndex: "application-index", logs: "logs", txid: "txId" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["application-index"]) throw new Error(`Response is missing required field 'application-index': ${e3}`);
            if (!Array.isArray(e3.logs)) throw new Error(`Response is missing required array field 'logs': ${e3}`);
            if (void 0 === e3.txId) throw new Error(`Response is missing required field 'txId': ${e3}`);
            return new Be({ applicationIndex: e3["application-index"], logs: e3.logs, txid: e3.txId });
          }
        }
        class Ue extends _e {
          constructor({ id: e3, params: t3 }) {
            super(), this.id = e3, this.params = t3, this.attribute_map = { id: "id", params: "params" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.id) throw new Error(`Response is missing required field 'id': ${e3}`);
            if (void 0 === e3.params) throw new Error(`Response is missing required field 'params': ${e3}`);
            return new Ue({ id: e3.id, params: Ce.from_obj_for_encoding(e3.params) });
          }
        }
        class Pe extends _e {
          constructor({ id: e3, appBoxes: t3, appGlobals: r2, appLocals: s2 }) {
            super(), this.id = e3, this.appBoxes = t3, this.appGlobals = r2, this.appLocals = s2, this.attribute_map = { id: "id", appBoxes: "app-boxes", appGlobals: "app-globals", appLocals: "app-locals" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.id) throw new Error(`Response is missing required field 'id': ${e3}`);
            return new Pe({ id: e3.id, appBoxes: void 0 !== e3["app-boxes"] ? je.from_obj_for_encoding(e3["app-boxes"]) : void 0, appGlobals: void 0 !== e3["app-globals"] ? je.from_obj_for_encoding(e3["app-globals"]) : void 0, appLocals: void 0 !== e3["app-locals"] ? e3["app-locals"].map(je.from_obj_for_encoding) : void 0 });
          }
        }
        class je extends _e {
          constructor({ kvs: e3, account: t3 }) {
            super(), this.kvs = e3, this.account = t3, this.attribute_map = { kvs: "kvs", account: "account" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.kvs)) throw new Error(`Response is missing required array field 'kvs': ${e3}`);
            return new je({ kvs: e3.kvs.map(Ke.from_obj_for_encoding), account: e3.account });
          }
        }
        class qe extends _e {
          constructor({ account: e3, app: t3 }) {
            super(), this.account = e3, this.app = t3, this.attribute_map = { account: "account", app: "app" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.account) throw new Error(`Response is missing required field 'account': ${e3}`);
            if (void 0 === e3.app) throw new Error(`Response is missing required field 'app': ${e3}`);
            return new qe({ account: e3.account, app: e3.app });
          }
        }
        class $e extends _e {
          constructor({ id: e3, schema: t3, keyValue: r2 }) {
            super(), this.id = e3, this.schema = t3, this.keyValue = r2, this.attribute_map = { id: "id", schema: "schema", keyValue: "key-value" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.id) throw new Error(`Response is missing required field 'id': ${e3}`);
            if (void 0 === e3.schema) throw new Error(`Response is missing required field 'schema': ${e3}`);
            return new $e({ id: e3.id, schema: Oe.from_obj_for_encoding(e3.schema), keyValue: void 0 !== e3["key-value"] ? e3["key-value"].map(qt.from_obj_for_encoding) : void 0 });
          }
        }
        class Ce extends _e {
          constructor({ approvalProgram: e3, clearStateProgram: t3, creator: r2, extraProgramPages: s2, globalState: n2, globalStateSchema: i2, localStateSchema: a2 }) {
            super(), this.approvalProgram = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.clearStateProgram = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.creator = r2, this.extraProgramPages = s2, this.globalState = n2, this.globalStateSchema = i2, this.localStateSchema = a2, this.attribute_map = { approvalProgram: "approval-program", clearStateProgram: "clear-state-program", creator: "creator", extraProgramPages: "extra-program-pages", globalState: "global-state", globalStateSchema: "global-state-schema", localStateSchema: "local-state-schema" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["approval-program"]) throw new Error(`Response is missing required field 'approval-program': ${e3}`);
            if (void 0 === e3["clear-state-program"]) throw new Error(`Response is missing required field 'clear-state-program': ${e3}`);
            if (void 0 === e3.creator) throw new Error(`Response is missing required field 'creator': ${e3}`);
            return new Ce({ approvalProgram: e3["approval-program"], clearStateProgram: e3["clear-state-program"], creator: e3.creator, extraProgramPages: e3["extra-program-pages"], globalState: void 0 !== e3["global-state"] ? e3["global-state"].map(qt.from_obj_for_encoding) : void 0, globalStateSchema: void 0 !== e3["global-state-schema"] ? Oe.from_obj_for_encoding(e3["global-state-schema"]) : void 0, localStateSchema: void 0 !== e3["local-state-schema"] ? Oe.from_obj_for_encoding(e3["local-state-schema"]) : void 0 });
          }
        }
        class De extends _e {
          constructor({ appStateType: e3, key: t3, operation: r2, account: s2, newValue: n2 }) {
            super(), this.appStateType = e3, this.key = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.operation = r2, this.account = s2, this.newValue = n2, this.attribute_map = { appStateType: "app-state-type", key: "key", operation: "operation", account: "account", newValue: "new-value" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["app-state-type"]) throw new Error(`Response is missing required field 'app-state-type': ${e3}`);
            if (void 0 === e3.key) throw new Error(`Response is missing required field 'key': ${e3}`);
            if (void 0 === e3.operation) throw new Error(`Response is missing required field 'operation': ${e3}`);
            return new De({ appStateType: e3["app-state-type"], key: e3.key, operation: e3.operation, account: e3.account, newValue: void 0 !== e3["new-value"] ? Fe.from_obj_for_encoding(e3["new-value"]) : void 0 });
          }
        }
        class Oe extends _e {
          constructor({ numUint: e3, numByteSlice: t3 }) {
            super(), this.numUint = e3, this.numByteSlice = t3, this.attribute_map = { numUint: "num-uint", numByteSlice: "num-byte-slice" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["num-uint"]) throw new Error(`Response is missing required field 'num-uint': ${e3}`);
            if (void 0 === e3["num-byte-slice"]) throw new Error(`Response is missing required field 'num-byte-slice': ${e3}`);
            return new Oe({ numUint: e3["num-uint"], numByteSlice: e3["num-byte-slice"] });
          }
        }
        class Le extends _e {
          constructor({ index: e3, params: t3 }) {
            super(), this.index = e3, this.params = t3, this.attribute_map = { index: "index", params: "params" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.index) throw new Error(`Response is missing required field 'index': ${e3}`);
            if (void 0 === e3.params) throw new Error(`Response is missing required field 'params': ${e3}`);
            return new Le({ index: e3.index, params: Ne.from_obj_for_encoding(e3.params) });
          }
        }
        class Me extends _e {
          constructor({ amount: e3, assetId: t3, isFrozen: r2 }) {
            super(), this.amount = e3, this.assetId = t3, this.isFrozen = r2, this.attribute_map = { amount: "amount", assetId: "asset-id", isFrozen: "is-frozen" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.amount) throw new Error(`Response is missing required field 'amount': ${e3}`);
            if (void 0 === e3["asset-id"]) throw new Error(`Response is missing required field 'asset-id': ${e3}`);
            if (void 0 === e3["is-frozen"]) throw new Error(`Response is missing required field 'is-frozen': ${e3}`);
            return new Me({ amount: e3.amount, assetId: e3["asset-id"], isFrozen: e3["is-frozen"] });
          }
        }
        class We extends _e {
          constructor({ account: e3, asset: t3 }) {
            super(), this.account = e3, this.asset = t3, this.attribute_map = { account: "account", asset: "asset" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.account) throw new Error(`Response is missing required field 'account': ${e3}`);
            if (void 0 === e3.asset) throw new Error(`Response is missing required field 'asset': ${e3}`);
            return new We({ account: e3.account, asset: e3.asset });
          }
        }
        class Ne extends _e {
          constructor({ creator: e3, decimals: t3, total: r2, clawback: s2, defaultFrozen: n2, freeze: i2, manager: a2, metadataHash: c2, name: u2, nameB64: l2, reserve: d2, unitName: h2, unitNameB64: p2, url: f2, urlB64: g2 }) {
            super(), this.creator = e3, this.decimals = t3, this.total = r2, this.clawback = s2, this.defaultFrozen = n2, this.freeze = i2, this.manager = a2, this.metadataHash = "string" == typeof c2 ? new Uint8Array(o.lW.from(c2, "base64")) : c2, this.name = u2, this.nameB64 = "string" == typeof l2 ? new Uint8Array(o.lW.from(l2, "base64")) : l2, this.reserve = d2, this.unitName = h2, this.unitNameB64 = "string" == typeof p2 ? new Uint8Array(o.lW.from(p2, "base64")) : p2, this.url = f2, this.urlB64 = "string" == typeof g2 ? new Uint8Array(o.lW.from(g2, "base64")) : g2, this.attribute_map = { creator: "creator", decimals: "decimals", total: "total", clawback: "clawback", defaultFrozen: "default-frozen", freeze: "freeze", manager: "manager", metadataHash: "metadata-hash", name: "name", nameB64: "name-b64", reserve: "reserve", unitName: "unit-name", unitNameB64: "unit-name-b64", url: "url", urlB64: "url-b64" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.creator) throw new Error(`Response is missing required field 'creator': ${e3}`);
            if (void 0 === e3.decimals) throw new Error(`Response is missing required field 'decimals': ${e3}`);
            if (void 0 === e3.total) throw new Error(`Response is missing required field 'total': ${e3}`);
            return new Ne({ creator: e3.creator, decimals: e3.decimals, total: e3.total, clawback: e3.clawback, defaultFrozen: e3["default-frozen"], freeze: e3.freeze, manager: e3.manager, metadataHash: e3["metadata-hash"], name: e3.name, nameB64: e3["name-b64"], reserve: e3.reserve, unitName: e3["unit-name"], unitNameB64: e3["unit-name-b64"], url: e3.url, urlB64: e3["url-b64"] });
          }
        }
        class Ke extends _e {
          constructor({ key: e3, value: t3 }) {
            super(), this.key = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.value = t3, this.attribute_map = { key: "key", value: "value" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.key) throw new Error(`Response is missing required field 'key': ${e3}`);
            if (void 0 === e3.value) throw new Error(`Response is missing required field 'value': ${e3}`);
            return new Ke({ key: e3.key, value: Fe.from_obj_for_encoding(e3.value) });
          }
        }
        class Fe extends _e {
          constructor({ type: e3, bytes: t3, uint: r2 }) {
            super(), this.type = e3, this.bytes = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.uint = r2, this.attribute_map = { type: "type", bytes: "bytes", uint: "uint" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.type) throw new Error(`Response is missing required field 'type': ${e3}`);
            return new Fe({ type: e3.type, bytes: e3.bytes, uint: e3.uint });
          }
        }
        class ze extends _e {
          constructor({ blockhash: e3 }) {
            super(), this.blockhash = e3, this.attribute_map = { blockhash: "blockHash" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.blockHash) throw new Error(`Response is missing required field 'blockHash': ${e3}`);
            return new ze({ blockhash: e3.blockHash });
          }
        }
        class Ve extends _e {
          constructor({ logs: e3 }) {
            super(), this.logs = e3, this.attribute_map = { logs: "logs" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.logs)) throw new Error(`Response is missing required array field 'logs': ${e3}`);
            return new Ve({ logs: e3.logs.map(Be.from_obj_for_encoding) });
          }
        }
        class He extends _e {
          constructor({ block: e3, cert: t3 }) {
            super(), this.block = e3, this.cert = t3, this.attribute_map = { block: "block", cert: "cert" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.block) throw new Error(`Response is missing required field 'block': ${e3}`);
            return new He({ block: e3.block, cert: e3.cert });
          }
        }
        class Ge extends _e {
          constructor({ blocktxids: e3 }) {
            super(), this.blocktxids = e3, this.attribute_map = { blocktxids: "blockTxids" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.blockTxids)) throw new Error(`Response is missing required array field 'blockTxids': ${e3}`);
            return new Ge({ blocktxids: e3.blockTxids });
          }
        }
        class Ye extends _e {
          constructor({ name: e3, round: t3, value: r2 }) {
            super(), this.name = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.round = t3, this.value = "string" == typeof r2 ? new Uint8Array(o.lW.from(r2, "base64")) : r2, this.attribute_map = { name: "name", round: "round", value: "value" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.name) throw new Error(`Response is missing required field 'name': ${e3}`);
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            if (void 0 === e3.value) throw new Error(`Response is missing required field 'value': ${e3}`);
            return new Ye({ name: e3.name, round: e3.round, value: e3.value });
          }
        }
        class Je extends _e {
          constructor({ name: e3 }) {
            super(), this.name = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.attribute_map = { name: "name" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.name) throw new Error(`Response is missing required field 'name': ${e3}`);
            return new Je({ name: e3.name });
          }
        }
        class Xe extends _e {
          constructor({ app: e3, name: t3 }) {
            super(), this.app = e3, this.name = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.attribute_map = { app: "app", name: "name" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.app) throw new Error(`Response is missing required field 'app': ${e3}`);
            if (void 0 === e3.name) throw new Error(`Response is missing required field 'name': ${e3}`);
            return new Xe({ app: e3.app, name: e3.name });
          }
        }
        class Ze extends _e {
          constructor({ boxes: e3 }) {
            super(), this.boxes = e3, this.attribute_map = { boxes: "boxes" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.boxes)) throw new Error(`Response is missing required array field 'boxes': ${e3}`);
            return new Ze({ boxes: e3.boxes.map(Je.from_obj_for_encoding) });
          }
        }
        class Qe extends _e {
          constructor({ branch: e3, buildNumber: t3, channel: r2, commitHash: s2, major: n2, minor: i2 }) {
            super(), this.branch = e3, this.buildNumber = t3, this.channel = r2, this.commitHash = s2, this.major = n2, this.minor = i2, this.attribute_map = { branch: "branch", buildNumber: "build_number", channel: "channel", commitHash: "commit_hash", major: "major", minor: "minor" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.branch) throw new Error(`Response is missing required field 'branch': ${e3}`);
            if (void 0 === e3.build_number) throw new Error(`Response is missing required field 'build_number': ${e3}`);
            if (void 0 === e3.channel) throw new Error(`Response is missing required field 'channel': ${e3}`);
            if (void 0 === e3.commit_hash) throw new Error(`Response is missing required field 'commit_hash': ${e3}`);
            if (void 0 === e3.major) throw new Error(`Response is missing required field 'major': ${e3}`);
            if (void 0 === e3.minor) throw new Error(`Response is missing required field 'minor': ${e3}`);
            return new Qe({ branch: e3.branch, buildNumber: e3.build_number, channel: e3.channel, commitHash: e3.commit_hash, major: e3.major, minor: e3.minor });
          }
        }
        class et extends _e {
          constructor({ hash: e3, result: t3, sourcemap: r2 }) {
            super(), this.hash = e3, this.result = t3, this.sourcemap = r2, this.attribute_map = { hash: "hash", result: "result", sourcemap: "sourcemap" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.hash) throw new Error(`Response is missing required field 'hash': ${e3}`);
            if (void 0 === e3.result) throw new Error(`Response is missing required field 'result': ${e3}`);
            return new et({ hash: e3.hash, result: e3.result, sourcemap: e3.sourcemap });
          }
        }
        class tt extends _e {
          constructor({ result: e3 }) {
            super(), this.result = e3, this.attribute_map = { result: "result" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.result) throw new Error(`Response is missing required field 'result': ${e3}`);
            return new tt({ result: e3.result });
          }
        }
        class rt extends _e {
          constructor({ accounts: e3, apps: t3, latestTimestamp: r2, protocolVersion: s2, round: n2, sources: i2, txns: o2 }) {
            super(), this.accounts = e3, this.apps = t3, this.latestTimestamp = r2, this.protocolVersion = s2, this.round = n2, this.sources = i2, this.txns = o2, this.attribute_map = { accounts: "accounts", apps: "apps", latestTimestamp: "latest-timestamp", protocolVersion: "protocol-version", round: "round", sources: "sources", txns: "txns" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.accounts)) throw new Error(`Response is missing required array field 'accounts': ${e3}`);
            if (!Array.isArray(e3.apps)) throw new Error(`Response is missing required array field 'apps': ${e3}`);
            if (void 0 === e3["latest-timestamp"]) throw new Error(`Response is missing required field 'latest-timestamp': ${e3}`);
            if (void 0 === e3["protocol-version"]) throw new Error(`Response is missing required field 'protocol-version': ${e3}`);
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            if (!Array.isArray(e3.sources)) throw new Error(`Response is missing required array field 'sources': ${e3}`);
            if (!Array.isArray(e3.txns)) throw new Error(`Response is missing required array field 'txns': ${e3}`);
            return new rt({ accounts: e3.accounts.map(Ae.from_obj_for_encoding), apps: e3.apps.map(Ue.from_obj_for_encoding), latestTimestamp: e3["latest-timestamp"], protocolVersion: e3["protocol-version"], round: e3.round, sources: e3.sources.map(nt.from_obj_for_encoding), txns: e3.txns });
          }
        }
        class st extends _e {
          constructor({ error: e3, protocolVersion: t3, txns: r2 }) {
            super(), this.error = e3, this.protocolVersion = t3, this.txns = r2, this.attribute_map = { error: "error", protocolVersion: "protocol-version", txns: "txns" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.error) throw new Error(`Response is missing required field 'error': ${e3}`);
            if (void 0 === e3["protocol-version"]) throw new Error(`Response is missing required field 'protocol-version': ${e3}`);
            if (!Array.isArray(e3.txns)) throw new Error(`Response is missing required array field 'txns': ${e3}`);
            return new st({ error: e3.error, protocolVersion: e3["protocol-version"], txns: e3.txns.map(ot.from_obj_for_encoding) });
          }
        }
        class nt extends _e {
          constructor({ fieldName: e3, source: t3, txnIndex: r2, appIndex: s2 }) {
            super(), this.fieldName = e3, this.source = t3, this.txnIndex = r2, this.appIndex = s2, this.attribute_map = { fieldName: "field-name", source: "source", txnIndex: "txn-index", appIndex: "app-index" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["field-name"]) throw new Error(`Response is missing required field 'field-name': ${e3}`);
            if (void 0 === e3.source) throw new Error(`Response is missing required field 'source': ${e3}`);
            if (void 0 === e3["txn-index"]) throw new Error(`Response is missing required field 'txn-index': ${e3}`);
            if (void 0 === e3["app-index"]) throw new Error(`Response is missing required field 'app-index': ${e3}`);
            return new nt({ fieldName: e3["field-name"], source: e3.source, txnIndex: e3["txn-index"], appIndex: e3["app-index"] });
          }
        }
        class it extends _e {
          constructor({ line: e3, pc: t3, stack: r2, error: s2, scratch: n2 }) {
            super(), this.line = e3, this.pc = t3, this.stack = r2, this.error = s2, this.scratch = n2, this.attribute_map = { line: "line", pc: "pc", stack: "stack", error: "error", scratch: "scratch" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.line) throw new Error(`Response is missing required field 'line': ${e3}`);
            if (void 0 === e3.pc) throw new Error(`Response is missing required field 'pc': ${e3}`);
            if (!Array.isArray(e3.stack)) throw new Error(`Response is missing required array field 'stack': ${e3}`);
            return new it({ line: e3.line, pc: e3.pc, stack: e3.stack.map($t.from_obj_for_encoding), error: e3.error, scratch: void 0 !== e3.scratch ? e3.scratch.map($t.from_obj_for_encoding) : void 0 });
          }
        }
        class ot extends _e {
          constructor({ disassembly: e3, appCallMessages: t3, appCallTrace: r2, budgetAdded: s2, budgetConsumed: n2, globalDelta: i2, localDeltas: o2, logicSigDisassembly: a2, logicSigMessages: c2, logicSigTrace: u2, logs: l2 }) {
            super(), this.disassembly = e3, this.appCallMessages = t3, this.appCallTrace = r2, this.budgetAdded = s2, this.budgetConsumed = n2, this.globalDelta = i2, this.localDeltas = o2, this.logicSigDisassembly = a2, this.logicSigMessages = c2, this.logicSigTrace = u2, this.logs = l2, this.attribute_map = { disassembly: "disassembly", appCallMessages: "app-call-messages", appCallTrace: "app-call-trace", budgetAdded: "budget-added", budgetConsumed: "budget-consumed", globalDelta: "global-delta", localDeltas: "local-deltas", logicSigDisassembly: "logic-sig-disassembly", logicSigMessages: "logic-sig-messages", logicSigTrace: "logic-sig-trace", logs: "logs" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.disassembly)) throw new Error(`Response is missing required array field 'disassembly': ${e3}`);
            return new ot({ disassembly: e3.disassembly, appCallMessages: e3["app-call-messages"], appCallTrace: void 0 !== e3["app-call-trace"] ? e3["app-call-trace"].map(it.from_obj_for_encoding) : void 0, budgetAdded: e3["budget-added"], budgetConsumed: e3["budget-consumed"], globalDelta: void 0 !== e3["global-delta"] ? e3["global-delta"].map(ut.from_obj_for_encoding) : void 0, localDeltas: void 0 !== e3["local-deltas"] ? e3["local-deltas"].map(Ie.from_obj_for_encoding) : void 0, logicSigDisassembly: e3["logic-sig-disassembly"], logicSigMessages: e3["logic-sig-messages"], logicSigTrace: void 0 !== e3["logic-sig-trace"] ? e3["logic-sig-trace"].map(it.from_obj_for_encoding) : void 0, logs: e3.logs });
          }
        }
        class at extends _e {
          constructor({ message: e3, data: t3 }) {
            super(), this.message = e3, this.data = t3, this.attribute_map = { message: "message", data: "data" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.message) throw new Error(`Response is missing required field 'message': ${e3}`);
            return new at({ message: e3.message, data: e3.data });
          }
        }
        class ct extends _e {
          constructor({ action: e3, bytes: t3, uint: r2 }) {
            super(), this.action = e3, this.bytes = t3, this.uint = r2, this.attribute_map = { action: "action", bytes: "bytes", uint: "uint" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.action) throw new Error(`Response is missing required field 'action': ${e3}`);
            return new ct({ action: e3.action, bytes: e3.bytes, uint: e3.uint });
          }
        }
        class ut extends _e {
          constructor({ key: e3, value: t3 }) {
            super(), this.key = e3, this.value = t3, this.attribute_map = { key: "key", value: "value" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.key) throw new Error(`Response is missing required field 'key': ${e3}`);
            if (void 0 === e3.value) throw new Error(`Response is missing required field 'value': ${e3}`);
            return new ut({ key: e3.key, value: ct.from_obj_for_encoding(e3.value) });
          }
        }
        class lt extends _e {
          constructor({ offset: e3 }) {
            super(), this.offset = e3, this.attribute_map = { offset: "offset" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.offset) throw new Error(`Response is missing required field 'offset': ${e3}`);
            return new lt({ offset: e3.offset });
          }
        }
        class dt extends _e {
          constructor({ round: e3 }) {
            super(), this.round = e3, this.attribute_map = { round: "round" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            return new dt({ round: e3.round });
          }
        }
        class ht extends _e {
          constructor({ key: e3, value: t3 }) {
            super(), this.key = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.value = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.attribute_map = { key: "key", value: "value" };
          }
          static from_obj_for_encoding(e3) {
            return new ht({ key: e3.key, value: e3.value });
          }
        }
        class pt extends _e {
          constructor({ delta: e3, ids: t3 }) {
            super(), this.delta = e3, this.ids = t3, this.attribute_map = { delta: "Delta", ids: "Ids" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.Delta) throw new Error(`Response is missing required field 'Delta': ${e3}`);
            if (!Array.isArray(e3.Ids)) throw new Error(`Response is missing required array field 'Ids': ${e3}`);
            return new pt({ delta: e3.Delta, ids: e3.Ids });
          }
        }
        class ft extends _e {
          constructor({ index: e3, proof: t3, treedepth: r2 }) {
            super(), this.index = e3, this.proof = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.treedepth = r2, this.attribute_map = { index: "index", proof: "proof", treedepth: "treedepth" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.index) throw new Error(`Response is missing required field 'index': ${e3}`);
            if (void 0 === e3.proof) throw new Error(`Response is missing required field 'proof': ${e3}`);
            if (void 0 === e3.treedepth) throw new Error(`Response is missing required field 'treedepth': ${e3}`);
            return new ft({ index: e3.index, proof: e3.proof, treedepth: e3.treedepth });
          }
        }
        class gt extends _e {
          constructor({ catchupTime: e3, lastRound: t3, lastVersion: r2, nextVersion: s2, nextVersionRound: n2, nextVersionSupported: i2, stoppedAtUnsupportedRound: o2, timeSinceLastRound: a2, catchpoint: c2, catchpointAcquiredBlocks: u2, catchpointProcessedAccounts: l2, catchpointProcessedKvs: d2, catchpointTotalAccounts: h2, catchpointTotalBlocks: p2, catchpointTotalKvs: f2, catchpointVerifiedAccounts: g2, catchpointVerifiedKvs: m2, lastCatchpoint: y2, upgradeDelay: w2, upgradeNextProtocolVoteBefore: b2, upgradeNoVotes: v2, upgradeNodeVote: x2, upgradeVoteRounds: _2, upgradeVotes: A2, upgradeVotesRequired: E2, upgradeYesVotes: k2 }) {
            super(), this.catchupTime = e3, this.lastRound = t3, this.lastVersion = r2, this.nextVersion = s2, this.nextVersionRound = n2, this.nextVersionSupported = i2, this.stoppedAtUnsupportedRound = o2, this.timeSinceLastRound = a2, this.catchpoint = c2, this.catchpointAcquiredBlocks = u2, this.catchpointProcessedAccounts = l2, this.catchpointProcessedKvs = d2, this.catchpointTotalAccounts = h2, this.catchpointTotalBlocks = p2, this.catchpointTotalKvs = f2, this.catchpointVerifiedAccounts = g2, this.catchpointVerifiedKvs = m2, this.lastCatchpoint = y2, this.upgradeDelay = w2, this.upgradeNextProtocolVoteBefore = b2, this.upgradeNoVotes = v2, this.upgradeNodeVote = x2, this.upgradeVoteRounds = _2, this.upgradeVotes = A2, this.upgradeVotesRequired = E2, this.upgradeYesVotes = k2, this.attribute_map = { catchupTime: "catchup-time", lastRound: "last-round", lastVersion: "last-version", nextVersion: "next-version", nextVersionRound: "next-version-round", nextVersionSupported: "next-version-supported", stoppedAtUnsupportedRound: "stopped-at-unsupported-round", timeSinceLastRound: "time-since-last-round", catchpoint: "catchpoint", catchpointAcquiredBlocks: "catchpoint-acquired-blocks", catchpointProcessedAccounts: "catchpoint-processed-accounts", catchpointProcessedKvs: "catchpoint-processed-kvs", catchpointTotalAccounts: "catchpoint-total-accounts", catchpointTotalBlocks: "catchpoint-total-blocks", catchpointTotalKvs: "catchpoint-total-kvs", catchpointVerifiedAccounts: "catchpoint-verified-accounts", catchpointVerifiedKvs: "catchpoint-verified-kvs", lastCatchpoint: "last-catchpoint", upgradeDelay: "upgrade-delay", upgradeNextProtocolVoteBefore: "upgrade-next-protocol-vote-before", upgradeNoVotes: "upgrade-no-votes", upgradeNodeVote: "upgrade-node-vote", upgradeVoteRounds: "upgrade-vote-rounds", upgradeVotes: "upgrade-votes", upgradeVotesRequired: "upgrade-votes-required", upgradeYesVotes: "upgrade-yes-votes" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["catchup-time"]) throw new Error(`Response is missing required field 'catchup-time': ${e3}`);
            if (void 0 === e3["last-round"]) throw new Error(`Response is missing required field 'last-round': ${e3}`);
            if (void 0 === e3["last-version"]) throw new Error(`Response is missing required field 'last-version': ${e3}`);
            if (void 0 === e3["next-version"]) throw new Error(`Response is missing required field 'next-version': ${e3}`);
            if (void 0 === e3["next-version-round"]) throw new Error(`Response is missing required field 'next-version-round': ${e3}`);
            if (void 0 === e3["next-version-supported"]) throw new Error(`Response is missing required field 'next-version-supported': ${e3}`);
            if (void 0 === e3["stopped-at-unsupported-round"]) throw new Error(`Response is missing required field 'stopped-at-unsupported-round': ${e3}`);
            if (void 0 === e3["time-since-last-round"]) throw new Error(`Response is missing required field 'time-since-last-round': ${e3}`);
            return new gt({ catchupTime: e3["catchup-time"], lastRound: e3["last-round"], lastVersion: e3["last-version"], nextVersion: e3["next-version"], nextVersionRound: e3["next-version-round"], nextVersionSupported: e3["next-version-supported"], stoppedAtUnsupportedRound: e3["stopped-at-unsupported-round"], timeSinceLastRound: e3["time-since-last-round"], catchpoint: e3.catchpoint, catchpointAcquiredBlocks: e3["catchpoint-acquired-blocks"], catchpointProcessedAccounts: e3["catchpoint-processed-accounts"], catchpointProcessedKvs: e3["catchpoint-processed-kvs"], catchpointTotalAccounts: e3["catchpoint-total-accounts"], catchpointTotalBlocks: e3["catchpoint-total-blocks"], catchpointTotalKvs: e3["catchpoint-total-kvs"], catchpointVerifiedAccounts: e3["catchpoint-verified-accounts"], catchpointVerifiedKvs: e3["catchpoint-verified-kvs"], lastCatchpoint: e3["last-catchpoint"], upgradeDelay: e3["upgrade-delay"], upgradeNextProtocolVoteBefore: e3["upgrade-next-protocol-vote-before"], upgradeNoVotes: e3["upgrade-no-votes"], upgradeNodeVote: e3["upgrade-node-vote"], upgradeVoteRounds: e3["upgrade-vote-rounds"], upgradeVotes: e3["upgrade-votes"], upgradeVotesRequired: e3["upgrade-votes-required"], upgradeYesVotes: e3["upgrade-yes-votes"] });
          }
        }
        class mt extends _e {
          constructor({ poolError: e3, txn: t3, applicationIndex: r2, assetClosingAmount: s2, assetIndex: n2, closeRewards: i2, closingAmount: o2, confirmedRound: a2, globalStateDelta: c2, innerTxns: u2, localStateDelta: l2, logs: d2, receiverRewards: h2, senderRewards: p2 }) {
            super(), this.poolError = e3, this.txn = t3, this.applicationIndex = r2, this.assetClosingAmount = s2, this.assetIndex = n2, this.closeRewards = i2, this.closingAmount = o2, this.confirmedRound = a2, this.globalStateDelta = c2, this.innerTxns = u2, this.localStateDelta = l2, this.logs = d2, this.receiverRewards = h2, this.senderRewards = p2, this.attribute_map = { poolError: "pool-error", txn: "txn", applicationIndex: "application-index", assetClosingAmount: "asset-closing-amount", assetIndex: "asset-index", closeRewards: "close-rewards", closingAmount: "closing-amount", confirmedRound: "confirmed-round", globalStateDelta: "global-state-delta", innerTxns: "inner-txns", localStateDelta: "local-state-delta", logs: "logs", receiverRewards: "receiver-rewards", senderRewards: "sender-rewards" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["pool-error"]) throw new Error(`Response is missing required field 'pool-error': ${e3}`);
            if (void 0 === e3.txn) throw new Error(`Response is missing required field 'txn': ${e3}`);
            return new mt({ poolError: e3["pool-error"], txn: e3.txn, applicationIndex: e3["application-index"], assetClosingAmount: e3["asset-closing-amount"], assetIndex: e3["asset-index"], closeRewards: e3["close-rewards"], closingAmount: e3["closing-amount"], confirmedRound: e3["confirmed-round"], globalStateDelta: void 0 !== e3["global-state-delta"] ? e3["global-state-delta"].map(ut.from_obj_for_encoding) : void 0, innerTxns: void 0 !== e3["inner-txns"] ? e3["inner-txns"].map(mt.from_obj_for_encoding) : void 0, localStateDelta: void 0 !== e3["local-state-delta"] ? e3["local-state-delta"].map(Ie.from_obj_for_encoding) : void 0, logs: e3.logs, receiverRewards: e3["receiver-rewards"], senderRewards: e3["sender-rewards"] });
          }
        }
        class yt extends _e {
          constructor({ topTransactions: e3, totalTransactions: t3 }) {
            super(), this.topTransactions = e3, this.totalTransactions = t3, this.attribute_map = { topTransactions: "top-transactions", totalTransactions: "total-transactions" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3["top-transactions"])) throw new Error(`Response is missing required array field 'top-transactions': ${e3}`);
            if (void 0 === e3["total-transactions"]) throw new Error(`Response is missing required field 'total-transactions': ${e3}`);
            return new yt({ topTransactions: e3["top-transactions"], totalTransactions: e3["total-transactions"] });
          }
        }
        class wt extends _e {
          constructor({ txid: e3 }) {
            super(), this.txid = e3, this.attribute_map = { txid: "txId" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.txId) throw new Error(`Response is missing required field 'txId': ${e3}`);
            return new wt({ txid: e3.txId });
          }
        }
        class bt extends _e {
          constructor({ newValue: e3, slot: t3 }) {
            super(), this.newValue = e3, this.slot = t3, this.attribute_map = { newValue: "new-value", slot: "slot" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["new-value"]) throw new Error(`Response is missing required field 'new-value': ${e3}`);
            if (void 0 === e3.slot) throw new Error(`Response is missing required field 'slot': ${e3}`);
            return new bt({ newValue: Fe.from_obj_for_encoding(e3["new-value"]), slot: e3.slot });
          }
        }
        class vt extends _e {
          constructor({ appInitialStates: e3 }) {
            super(), this.appInitialStates = e3, this.attribute_map = { appInitialStates: "app-initial-states" };
          }
          static from_obj_for_encoding(e3) {
            return new vt({ appInitialStates: void 0 !== e3["app-initial-states"] ? e3["app-initial-states"].map(Pe.from_obj_for_encoding) : void 0 });
          }
        }
        class xt extends _e {
          constructor({ txnGroups: e3, allowEmptySignatures: t3, allowMoreLogging: r2, allowUnnamedResources: s2, execTraceConfig: n2, extraOpcodeBudget: i2, fixSigners: o2, round: a2 }) {
            super(), this.txnGroups = e3, this.allowEmptySignatures = t3, this.allowMoreLogging = r2, this.allowUnnamedResources = s2, this.execTraceConfig = n2, this.extraOpcodeBudget = i2, this.fixSigners = o2, this.round = a2, this.attribute_map = { txnGroups: "txn-groups", allowEmptySignatures: "allow-empty-signatures", allowMoreLogging: "allow-more-logging", allowUnnamedResources: "allow-unnamed-resources", execTraceConfig: "exec-trace-config", extraOpcodeBudget: "extra-opcode-budget", fixSigners: "fix-signers", round: "round" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3["txn-groups"])) throw new Error(`Response is missing required array field 'txn-groups': ${e3}`);
            return new xt({ txnGroups: e3["txn-groups"].map(_t.from_obj_for_encoding), allowEmptySignatures: e3["allow-empty-signatures"], allowMoreLogging: e3["allow-more-logging"], allowUnnamedResources: e3["allow-unnamed-resources"], execTraceConfig: void 0 !== e3["exec-trace-config"] ? Et.from_obj_for_encoding(e3["exec-trace-config"]) : void 0, extraOpcodeBudget: e3["extra-opcode-budget"], fixSigners: e3["fix-signers"], round: e3.round });
          }
        }
        class _t extends _e {
          constructor({ txns: e3 }) {
            super(), this.txns = e3, this.attribute_map = { txns: "txns" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.txns)) throw new Error(`Response is missing required array field 'txns': ${e3}`);
            return new _t({ txns: e3.txns });
          }
        }
        class At extends _e {
          constructor({ lastRound: e3, txnGroups: t3, version: r2, evalOverrides: s2, execTraceConfig: n2, initialStates: i2 }) {
            super(), this.lastRound = e3, this.txnGroups = t3, this.version = r2, this.evalOverrides = s2, this.execTraceConfig = n2, this.initialStates = i2, this.attribute_map = { lastRound: "last-round", txnGroups: "txn-groups", version: "version", evalOverrides: "eval-overrides", execTraceConfig: "exec-trace-config", initialStates: "initial-states" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["last-round"]) throw new Error(`Response is missing required field 'last-round': ${e3}`);
            if (!Array.isArray(e3["txn-groups"])) throw new Error(`Response is missing required array field 'txn-groups': ${e3}`);
            if (void 0 === e3.version) throw new Error(`Response is missing required field 'version': ${e3}`);
            return new At({ lastRound: e3["last-round"], txnGroups: e3["txn-groups"].map(kt.from_obj_for_encoding), version: e3.version, evalOverrides: void 0 !== e3["eval-overrides"] ? Tt.from_obj_for_encoding(e3["eval-overrides"]) : void 0, execTraceConfig: void 0 !== e3["exec-trace-config"] ? Et.from_obj_for_encoding(e3["exec-trace-config"]) : void 0, initialStates: void 0 !== e3["initial-states"] ? vt.from_obj_for_encoding(e3["initial-states"]) : void 0 });
          }
        }
        class Et extends _e {
          constructor({ enable: e3, scratchChange: t3, stackChange: r2, stateChange: s2 }) {
            super(), this.enable = e3, this.scratchChange = t3, this.stackChange = r2, this.stateChange = s2, this.attribute_map = { enable: "enable", scratchChange: "scratch-change", stackChange: "stack-change", stateChange: "state-change" };
          }
          static from_obj_for_encoding(e3) {
            return new Et({ enable: e3.enable, scratchChange: e3["scratch-change"], stackChange: e3["stack-change"], stateChange: e3["state-change"] });
          }
        }
        class kt extends _e {
          constructor({ txnResults: e3, appBudgetAdded: t3, appBudgetConsumed: r2, failedAt: s2, failureMessage: n2, unnamedResourcesAccessed: i2 }) {
            super(), this.txnResults = e3, this.appBudgetAdded = t3, this.appBudgetConsumed = r2, this.failedAt = s2, this.failureMessage = n2, this.unnamedResourcesAccessed = i2, this.attribute_map = { txnResults: "txn-results", appBudgetAdded: "app-budget-added", appBudgetConsumed: "app-budget-consumed", failedAt: "failed-at", failureMessage: "failure-message", unnamedResourcesAccessed: "unnamed-resources-accessed" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3["txn-results"])) throw new Error(`Response is missing required array field 'txn-results': ${e3}`);
            return new kt({ txnResults: e3["txn-results"].map(St.from_obj_for_encoding), appBudgetAdded: e3["app-budget-added"], appBudgetConsumed: e3["app-budget-consumed"], failedAt: e3["failed-at"], failureMessage: e3["failure-message"], unnamedResourcesAccessed: void 0 !== e3["unnamed-resources-accessed"] ? Rt.from_obj_for_encoding(e3["unnamed-resources-accessed"]) : void 0 });
          }
        }
        class St extends _e {
          constructor({ txnResult: e3, appBudgetConsumed: t3, execTrace: r2, fixedSigner: s2, logicSigBudgetConsumed: n2, unnamedResourcesAccessed: i2 }) {
            super(), this.txnResult = e3, this.appBudgetConsumed = t3, this.execTrace = r2, this.fixedSigner = s2, this.logicSigBudgetConsumed = n2, this.unnamedResourcesAccessed = i2, this.attribute_map = { txnResult: "txn-result", appBudgetConsumed: "app-budget-consumed", execTrace: "exec-trace", fixedSigner: "fixed-signer", logicSigBudgetConsumed: "logic-sig-budget-consumed", unnamedResourcesAccessed: "unnamed-resources-accessed" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["txn-result"]) throw new Error(`Response is missing required field 'txn-result': ${e3}`);
            return new St({ txnResult: mt.from_obj_for_encoding(e3["txn-result"]), appBudgetConsumed: e3["app-budget-consumed"], execTrace: void 0 !== e3["exec-trace"] ? Bt.from_obj_for_encoding(e3["exec-trace"]) : void 0, fixedSigner: e3["fixed-signer"], logicSigBudgetConsumed: e3["logic-sig-budget-consumed"], unnamedResourcesAccessed: void 0 !== e3["unnamed-resources-accessed"] ? Rt.from_obj_for_encoding(e3["unnamed-resources-accessed"]) : void 0 });
          }
        }
        class Rt extends _e {
          constructor({ accounts: e3, appLocals: t3, apps: r2, assetHoldings: s2, assets: n2, boxes: i2, extraBoxRefs: o2 }) {
            super(), this.accounts = e3, this.appLocals = t3, this.apps = r2, this.assetHoldings = s2, this.assets = n2, this.boxes = i2, this.extraBoxRefs = o2, this.attribute_map = { accounts: "accounts", appLocals: "app-locals", apps: "apps", assetHoldings: "asset-holdings", assets: "assets", boxes: "boxes", extraBoxRefs: "extra-box-refs" };
          }
          static from_obj_for_encoding(e3) {
            return new Rt({ accounts: e3.accounts, appLocals: void 0 !== e3["app-locals"] ? e3["app-locals"].map(qe.from_obj_for_encoding) : void 0, apps: e3.apps, assetHoldings: void 0 !== e3["asset-holdings"] ? e3["asset-holdings"].map(We.from_obj_for_encoding) : void 0, assets: e3.assets, boxes: void 0 !== e3.boxes ? e3.boxes.map(Xe.from_obj_for_encoding) : void 0, extraBoxRefs: e3["extra-box-refs"] });
          }
        }
        class Tt extends _e {
          constructor({ allowEmptySignatures: e3, allowUnnamedResources: t3, extraOpcodeBudget: r2, fixSigners: s2, maxLogCalls: n2, maxLogSize: i2 }) {
            super(), this.allowEmptySignatures = e3, this.allowUnnamedResources = t3, this.extraOpcodeBudget = r2, this.fixSigners = s2, this.maxLogCalls = n2, this.maxLogSize = i2, this.attribute_map = { allowEmptySignatures: "allow-empty-signatures", allowUnnamedResources: "allow-unnamed-resources", extraOpcodeBudget: "extra-opcode-budget", fixSigners: "fix-signers", maxLogCalls: "max-log-calls", maxLogSize: "max-log-size" };
          }
          static from_obj_for_encoding(e3) {
            return new Tt({ allowEmptySignatures: e3["allow-empty-signatures"], allowUnnamedResources: e3["allow-unnamed-resources"], extraOpcodeBudget: e3["extra-opcode-budget"], fixSigners: e3["fix-signers"], maxLogCalls: e3["max-log-calls"], maxLogSize: e3["max-log-size"] });
          }
        }
        class It extends _e {
          constructor({ pc: e3, scratchChanges: t3, spawnedInners: r2, stackAdditions: s2, stackPopCount: n2, stateChanges: i2 }) {
            super(), this.pc = e3, this.scratchChanges = t3, this.spawnedInners = r2, this.stackAdditions = s2, this.stackPopCount = n2, this.stateChanges = i2, this.attribute_map = { pc: "pc", scratchChanges: "scratch-changes", spawnedInners: "spawned-inners", stackAdditions: "stack-additions", stackPopCount: "stack-pop-count", stateChanges: "state-changes" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.pc) throw new Error(`Response is missing required field 'pc': ${e3}`);
            return new It({ pc: e3.pc, scratchChanges: void 0 !== e3["scratch-changes"] ? e3["scratch-changes"].map(bt.from_obj_for_encoding) : void 0, spawnedInners: e3["spawned-inners"], stackAdditions: void 0 !== e3["stack-additions"] ? e3["stack-additions"].map(Fe.from_obj_for_encoding) : void 0, stackPopCount: e3["stack-pop-count"], stateChanges: void 0 !== e3["state-changes"] ? e3["state-changes"].map(De.from_obj_for_encoding) : void 0 });
          }
        }
        class Bt extends _e {
          constructor({ approvalProgramHash: e3, approvalProgramTrace: t3, clearStateProgramHash: r2, clearStateProgramTrace: s2, clearStateRollback: n2, clearStateRollbackError: i2, innerTrace: a2, logicSigHash: c2, logicSigTrace: u2 }) {
            super(), this.approvalProgramHash = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.approvalProgramTrace = t3, this.clearStateProgramHash = "string" == typeof r2 ? new Uint8Array(o.lW.from(r2, "base64")) : r2, this.clearStateProgramTrace = s2, this.clearStateRollback = n2, this.clearStateRollbackError = i2, this.innerTrace = a2, this.logicSigHash = "string" == typeof c2 ? new Uint8Array(o.lW.from(c2, "base64")) : c2, this.logicSigTrace = u2, this.attribute_map = { approvalProgramHash: "approval-program-hash", approvalProgramTrace: "approval-program-trace", clearStateProgramHash: "clear-state-program-hash", clearStateProgramTrace: "clear-state-program-trace", clearStateRollback: "clear-state-rollback", clearStateRollbackError: "clear-state-rollback-error", innerTrace: "inner-trace", logicSigHash: "logic-sig-hash", logicSigTrace: "logic-sig-trace" };
          }
          static from_obj_for_encoding(e3) {
            return new Bt({ approvalProgramHash: e3["approval-program-hash"], approvalProgramTrace: void 0 !== e3["approval-program-trace"] ? e3["approval-program-trace"].map(It.from_obj_for_encoding) : void 0, clearStateProgramHash: e3["clear-state-program-hash"], clearStateProgramTrace: void 0 !== e3["clear-state-program-trace"] ? e3["clear-state-program-trace"].map(It.from_obj_for_encoding) : void 0, clearStateRollback: e3["clear-state-rollback"], clearStateRollbackError: e3["clear-state-rollback-error"], innerTrace: void 0 !== e3["inner-trace"] ? e3["inner-trace"].map(Bt.from_obj_for_encoding) : void 0, logicSigHash: e3["logic-sig-hash"], logicSigTrace: void 0 !== e3["logic-sig-trace"] ? e3["logic-sig-trace"].map(It.from_obj_for_encoding) : void 0 });
          }
        }
        class Ut extends _e {
          constructor({ message: e3, stateproof: t3 }) {
            super(), this.message = e3, this.stateproof = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.attribute_map = { message: "Message", stateproof: "StateProof" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.Message) throw new Error(`Response is missing required field 'Message': ${e3}`);
            if (void 0 === e3.StateProof) throw new Error(`Response is missing required field 'StateProof': ${e3}`);
            return new Ut({ message: Pt.from_obj_for_encoding(e3.Message), stateproof: e3.StateProof });
          }
        }
        class Pt extends _e {
          constructor({ blockheaderscommitment: e3, firstattestedround: t3, lastattestedround: r2, lnprovenweight: s2, voterscommitment: n2 }) {
            super(), this.blockheaderscommitment = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.firstattestedround = t3, this.lastattestedround = r2, this.lnprovenweight = s2, this.voterscommitment = "string" == typeof n2 ? new Uint8Array(o.lW.from(n2, "base64")) : n2, this.attribute_map = { blockheaderscommitment: "BlockHeadersCommitment", firstattestedround: "FirstAttestedRound", lastattestedround: "LastAttestedRound", lnprovenweight: "LnProvenWeight", voterscommitment: "VotersCommitment" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.BlockHeadersCommitment) throw new Error(`Response is missing required field 'BlockHeadersCommitment': ${e3}`);
            if (void 0 === e3.FirstAttestedRound) throw new Error(`Response is missing required field 'FirstAttestedRound': ${e3}`);
            if (void 0 === e3.LastAttestedRound) throw new Error(`Response is missing required field 'LastAttestedRound': ${e3}`);
            if (void 0 === e3.LnProvenWeight) throw new Error(`Response is missing required field 'LnProvenWeight': ${e3}`);
            if (void 0 === e3.VotersCommitment) throw new Error(`Response is missing required field 'VotersCommitment': ${e3}`);
            return new Pt({ blockheaderscommitment: e3.BlockHeadersCommitment, firstattestedround: e3.FirstAttestedRound, lastattestedround: e3.LastAttestedRound, lnprovenweight: e3.LnProvenWeight, voterscommitment: e3.VotersCommitment });
          }
        }
        class jt extends _e {
          constructor({ currentRound: e3, onlineMoney: t3, totalMoney: r2 }) {
            super(), this.currentRound = e3, this.onlineMoney = t3, this.totalMoney = r2, this.attribute_map = { currentRound: "current_round", onlineMoney: "online-money", totalMoney: "total-money" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.current_round) throw new Error(`Response is missing required field 'current_round': ${e3}`);
            if (void 0 === e3["online-money"]) throw new Error(`Response is missing required field 'online-money': ${e3}`);
            if (void 0 === e3["total-money"]) throw new Error(`Response is missing required field 'total-money': ${e3}`);
            return new jt({ currentRound: e3.current_round, onlineMoney: e3["online-money"], totalMoney: e3["total-money"] });
          }
        }
        class qt extends _e {
          constructor({ key: e3, value: t3 }) {
            super(), this.key = e3, this.value = t3, this.attribute_map = { key: "key", value: "value" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.key) throw new Error(`Response is missing required field 'key': ${e3}`);
            if (void 0 === e3.value) throw new Error(`Response is missing required field 'value': ${e3}`);
            return new qt({ key: e3.key, value: $t.from_obj_for_encoding(e3.value) });
          }
        }
        class $t extends _e {
          constructor({ type: e3, bytes: t3, uint: r2 }) {
            super(), this.type = e3, this.bytes = t3, this.uint = r2, this.attribute_map = { type: "type", bytes: "bytes", uint: "uint" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.type) throw new Error(`Response is missing required field 'type': ${e3}`);
            if (void 0 === e3.bytes) throw new Error(`Response is missing required field 'bytes': ${e3}`);
            if (void 0 === e3.uint) throw new Error(`Response is missing required field 'uint': ${e3}`);
            return new $t({ type: e3.type, bytes: e3.bytes, uint: e3.uint });
          }
        }
        class Ct extends _e {
          constructor({ deltas: e3 }) {
            super(), this.deltas = e3, this.attribute_map = { deltas: "Deltas" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.Deltas)) throw new Error(`Response is missing required array field 'Deltas': ${e3}`);
            return new Ct({ deltas: e3.Deltas.map(pt.from_obj_for_encoding) });
          }
        }
        class Dt extends _e {
          constructor({ consensusVersion: e3, fee: t3, genesisHash: r2, genesisId: s2, lastRound: n2, minFee: i2 }) {
            super(), this.consensusVersion = e3, this.fee = t3, this.genesisHash = "string" == typeof r2 ? new Uint8Array(o.lW.from(r2, "base64")) : r2, this.genesisId = s2, this.lastRound = n2, this.minFee = i2, this.attribute_map = { consensusVersion: "consensus-version", fee: "fee", genesisHash: "genesis-hash", genesisId: "genesis-id", lastRound: "last-round", minFee: "min-fee" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["consensus-version"]) throw new Error(`Response is missing required field 'consensus-version': ${e3}`);
            if (void 0 === e3.fee) throw new Error(`Response is missing required field 'fee': ${e3}`);
            if (void 0 === e3["genesis-hash"]) throw new Error(`Response is missing required field 'genesis-hash': ${e3}`);
            if (void 0 === e3["genesis-id"]) throw new Error(`Response is missing required field 'genesis-id': ${e3}`);
            if (void 0 === e3["last-round"]) throw new Error(`Response is missing required field 'last-round': ${e3}`);
            if (void 0 === e3["min-fee"]) throw new Error(`Response is missing required field 'min-fee': ${e3}`);
            return new Dt({ consensusVersion: e3["consensus-version"], fee: e3.fee, genesisHash: e3["genesis-hash"], genesisId: e3["genesis-id"], lastRound: e3["last-round"], minFee: e3["min-fee"] });
          }
        }
        class Ot extends _e {
          constructor({ idx: e3, proof: t3, stibhash: r2, treedepth: s2, hashtype: n2 }) {
            super(), this.idx = e3, this.proof = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.stibhash = "string" == typeof r2 ? new Uint8Array(o.lW.from(r2, "base64")) : r2, this.treedepth = s2, this.hashtype = n2, this.attribute_map = { idx: "idx", proof: "proof", stibhash: "stibhash", treedepth: "treedepth", hashtype: "hashtype" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.idx) throw new Error(`Response is missing required field 'idx': ${e3}`);
            if (void 0 === e3.proof) throw new Error(`Response is missing required field 'proof': ${e3}`);
            if (void 0 === e3.stibhash) throw new Error(`Response is missing required field 'stibhash': ${e3}`);
            if (void 0 === e3.treedepth) throw new Error(`Response is missing required field 'treedepth': ${e3}`);
            return new Ot({ idx: e3.idx, proof: e3.proof, stibhash: e3.stibhash, treedepth: e3.treedepth, hashtype: e3.hashtype });
          }
        }
        class Lt extends _e {
          constructor({ build: e3, genesisHashB64: t3, genesisId: r2, versions: s2 }) {
            super(), this.build = e3, this.genesisHashB64 = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.genesisId = r2, this.versions = s2, this.attribute_map = { build: "build", genesisHashB64: "genesis_hash_b64", genesisId: "genesis_id", versions: "versions" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.build) throw new Error(`Response is missing required field 'build': ${e3}`);
            if (void 0 === e3.genesis_hash_b64) throw new Error(`Response is missing required field 'genesis_hash_b64': ${e3}`);
            if (void 0 === e3.genesis_id) throw new Error(`Response is missing required field 'genesis_id': ${e3}`);
            if (!Array.isArray(e3.versions)) throw new Error(`Response is missing required array field 'versions': ${e3}`);
            return new Lt({ build: Qe.from_obj_for_encoding(e3.build), genesisHashB64: e3.genesis_hash_b64, genesisId: e3.genesis_id, versions: e3.versions });
          }
        }
        class Mt {
          constructor(e3, t3) {
            this.c = e3, this.query = {}, this.intDecoding = t3 || p.DEFAULT;
          }
          prepare(e3) {
            return e3;
          }
          async do(e3 = {}) {
            const t3 = {};
            "default" !== this.intDecoding && (t3.intDecoding = this.intDecoding);
            const r2 = await this.c.get(this.path(), this.query, e3, t3);
            return this.prepare(r2.body);
          }
          async doRaw(e3 = {}) {
            return (await this.c.get(this.path(), this.query, e3, {}, false)).body;
          }
          setIntDecoding(e3) {
            if ("default" !== e3 && "safe" !== e3 && "mixed" !== e3 && "bigint" !== e3) throw new Error(`Invalid method for int decoding: ${e3}`);
            return this.intDecoding = e3, this;
          }
        }
        class Wt extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.account = r2, this.account = r2;
          }
          path() {
            return `/v2/accounts/${this.account}`;
          }
          exclude(e3) {
            return this.query.exclude = e3, this;
          }
        }
        class Nt extends Mt {
          constructor(e3, t3, r2, s2) {
            super(e3, t3), this.account = r2, this.assetID = s2, this.account = r2, this.assetID = s2;
          }
          path() {
            return `/v2/accounts/${this.account}/assets/${this.assetID}`;
          }
        }
        class Kt extends Mt {
          constructor(e3, t3, r2, s2) {
            super(e3, t3), this.account = r2, this.applicationID = s2, this.account = r2, this.applicationID = s2;
          }
          path() {
            return `/v2/accounts/${this.account}/applications/${this.applicationID}`;
          }
        }
        class Ft extends Mt {
          constructor(e3, t3) {
            if (super(e3), !Number.isInteger(t3)) throw Error("roundNumber should be an integer");
            this.round = t3, this.query = { format: "msgpack" };
          }
          path() {
            return `/v2/blocks/${this.round}`;
          }
          headerOnly(e3) {
            return this.query["header-only"] = e3, this;
          }
          prepare(e3) {
            if (e3 && e3.byteLength > 0) return Z(e3);
          }
        }
        function zt(e3 = {}) {
          let t3 = e3;
          return Object.keys(t3).every(((e4) => "content-type" !== e4.toLowerCase())) && (t3 = { ...e3 }, t3["Content-Type"] = "text/plain"), t3;
        }
        class Vt extends Mt {
          constructor(e3, t3) {
            super(e3), this.source = t3, this.source = t3;
          }
          path() {
            return "/v2/teal/compile";
          }
          sourcemap(e3 = true) {
            return this.query.sourcemap = e3, this;
          }
          async do(e3 = {}) {
            const t3 = zt(e3);
            return (await this.c.post(this.path(), o.lW.from(this.source), t3, this.query)).body;
          }
        }
        class Ht extends Mt {
          constructor(e3, t3) {
            super(e3), this.blob = X(t3.get_obj_for_encoding(true));
          }
          path() {
            return "/v2/teal/dryrun";
          }
          async do(e3 = {}) {
            const t3 = zt(e3);
            return (await this.c.post(this.path(), o.lW.from(this.blob), t3)).body;
          }
        }
        class Gt extends Mt {
          path() {
            return "/genesis";
          }
        }
        class Yt extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.index = r2, this.index = r2;
          }
          path() {
            return `/v2/assets/${this.index}`;
          }
        }
        class Jt extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.index = r2, this.index = r2;
          }
          path() {
            return `/v2/applications/${this.index}`;
          }
        }
        class Xt extends Mt {
          constructor(e3, t3, r2) {
            if (super(e3, t3), !Number.isInteger(r2)) throw Error("roundNumber should be an integer");
            this.round = r2;
          }
          path() {
            return `/v2/blocks/${this.round}/hash`;
          }
        }
        class Zt extends Mt {
          constructor(e3, t3, r2) {
            if (super(e3, t3), !Number.isInteger(r2)) throw Error("roundNumber should be an integer");
            this.round = r2;
          }
          path() {
            return `/v2/blocks/${this.round}/txids`;
          }
        }
        class Qt extends Mt {
          constructor(e3, t3, r2, s2) {
            super(e3, t3), this.index = r2, this.index = r2;
            const n2 = o.lW.from(s2).toString("base64");
            this.query.name = encodeURI(`b64:${n2}`);
          }
          path() {
            return `/v2/applications/${this.index}/box`;
          }
          prepare(e3) {
            return Ye.from_obj_for_encoding(e3);
          }
        }
        class er extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.index = r2, this.index = r2, this.query.max = 0;
          }
          path() {
            return `/v2/applications/${this.index}/boxes`;
          }
          max(e3) {
            return this.query.max = e3, this;
          }
          prepare(e3) {
            return Ze.from_obj_for_encoding(e3);
          }
        }
        class tr extends Mt {
          path() {
            return "/health";
          }
          async do(e3 = {}) {
            const t3 = await this.c.get(this.path(), {}, e3);
            if (!t3.ok) throw new Error(`Health response: ${t3.status}`);
            return {};
          }
        }
        class rr extends Mt {
          constructor(e3, t3) {
            super(e3), this.txid = t3, this.txid = t3, this.query.format = "msgpack";
          }
          prepare(e3) {
            if (e3 && e3.byteLength > 0) return Z(e3);
          }
          path() {
            return `/v2/transactions/pending/${this.txid}`;
          }
          max(e3) {
            return this.query.max = e3, this;
          }
        }
        class sr extends Mt {
          constructor(e3) {
            super(e3), this.query.format = "msgpack";
          }
          path() {
            return "/v2/transactions/pending";
          }
          prepare(e3) {
            if (e3 && e3.byteLength > 0) return Z(e3);
          }
          max(e3) {
            return this.query.max = e3, this;
          }
        }
        class nr extends Mt {
          constructor(e3, t3) {
            super(e3), this.address = t3, this.address = t3, this.query.format = "msgpack";
          }
          prepare(e3) {
            if (e3 && e3.byteLength > 0) return Z(e3);
          }
          path() {
            return `/v2/accounts/${this.address}/transactions/pending`;
          }
          max(e3) {
            return this.query.max = e3, this;
          }
        }
        class ir extends Mt {
          constructor(e3, t3, r2, s2) {
            super(e3, t3), this.round = r2, this.txID = s2, this.round = r2, this.txID = s2;
          }
          path() {
            return `/v2/blocks/${this.round}/transactions/${this.txID}/proof`;
          }
          hashType(e3) {
            return this.query.hashtype = e3, this;
          }
        }
        function or(e3) {
          return e3 && void 0 !== e3.byteLength;
        }
        class ar extends Mt {
          constructor(e3, t3) {
            super(e3);
            let r2 = t3;
            if (Array.isArray(t3)) {
              if (!t3.every(or)) throw new TypeError("Array elements must be byte arrays");
              r2 = m(...t3);
            } else if (!or(r2)) throw new TypeError("Argument must be byte array");
            this.txnBytesToPost = r2;
          }
          path() {
            return "/v2/transactions";
          }
          async do(e3 = {}) {
            const t3 = (function(e4 = {}) {
              let t4 = e4;
              return Object.keys(t4).every(((e5) => "content-type" !== e5.toLowerCase())) && (t4 = { ...e4 }, t4["Content-Type"] = "application/x-binary"), t4;
            })(e3);
            return (await this.c.post(this.path(), o.lW.from(this.txnBytesToPost), t3)).body;
          }
        }
        class cr extends Mt {
          path() {
            return "/v2/status";
          }
        }
        class ur extends Mt {
          constructor(e3, t3, r2) {
            if (super(e3, t3), this.round = r2, !Number.isInteger(r2)) throw Error("round should be an integer");
            this.round = r2;
          }
          path() {
            return `/v2/status/wait-for-block-after/${this.round}`;
          }
        }
        class lr extends Mt {
          path() {
            return "/v2/transactions/params";
          }
          prepare(e3) {
            return { flatFee: false, fee: e3.fee, firstRound: e3["last-round"], lastRound: e3["last-round"] + 1e3, genesisID: e3["genesis-id"], genesisHash: e3["genesis-hash"], minFee: e3["min-fee"] };
          }
        }
        class dr extends Mt {
          path() {
            return "/v2/ledger/supply";
          }
        }
        class hr extends Mt {
          path() {
            return "/versions";
          }
        }
        class pr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.round = r2, this.round = r2;
          }
          path() {
            return `/v2/blocks/${this.round}/lightheader/proof`;
          }
        }
        class fr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.round = r2, this.round = r2;
          }
          path() {
            return `/v2/stateproofs/${this.round}`;
          }
        }
        class gr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.round = r2, this.round = r2;
          }
          path() {
            return `/v2/ledger/sync/${this.round}`;
          }
          async do(e3 = {}) {
            return (await this.c.post(this.path(), e3)).body;
          }
        }
        class mr extends Mt {
          path() {
            return "/v2/ledger/sync";
          }
          prepare(e3) {
            return dt.from_obj_for_encoding(e3);
          }
        }
        class yr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.offset = r2, this.offset = r2;
          }
          path() {
            return `/v2/devmode/blocks/offset/${this.offset}`;
          }
          async do(e3 = {}) {
            return (await this.c.post(this.path(), e3)).body;
          }
        }
        class wr extends Mt {
          path() {
            return "/v2/devmode/blocks/offset";
          }
          prepare(e3) {
            return lt.from_obj_for_encoding(e3);
          }
        }
        class br extends Mt {
          constructor(e3, t3) {
            super(e3), this.source = t3, this.source = t3;
          }
          path() {
            return "/v2/teal/disassemble";
          }
          async do(e3 = {}) {
            const t3 = (function(e4 = {}) {
              let t4 = e4;
              return Object.keys(t4).every(((e5) => "content-type" !== e5.toLowerCase())) && (t4 = { ...e4 }, t4["Content-Type"] = "text/plain"), t4;
            })(e3);
            return (await this.c.post(this.path(), o.lW.from(this.source), t3, this.query)).body;
          }
        }
        class vr extends Mt {
          constructor(e3, t3) {
            super(e3), this.query.format = "msgpack", this.requestBytes = J(t3.get_obj_for_encoding(true));
          }
          path() {
            return "/v2/transactions/simulate";
          }
          async do(e3 = {}) {
            const t3 = (function(e4 = {}) {
              let t4 = e4;
              return Object.keys(t4).every(((e5) => "content-type" !== e5.toLowerCase())) && (t4 = { ...e4 }, t4["Content-Type"] = "application/msgpack"), t4;
            })(e3), r2 = await this.c.post(this.path(), o.lW.from(this.requestBytes), t3, this.query, false);
            return this.prepare(r2.body);
          }
          prepare(e3) {
            const t3 = Z(e3);
            return At.from_obj_for_encoding(t3);
          }
        }
        class xr extends Mt {
          path() {
            return "/ready";
          }
        }
        class _r extends Mt {
          path() {
            return "/v2/ledger/sync";
          }
          async do(e3 = {}) {
            return (await this.c.delete(this.path(), e3)).body;
          }
        }
        class Ar extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.id = r2, this.id = r2, this.query = { format: "json" };
          }
          path() {
            return `/v2/deltas/txn/group/${this.id}`;
          }
        }
        class Er extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.round = r2, this.round = r2, this.query = { format: "json" };
          }
          path() {
            return `/v2/deltas/${this.round}`;
          }
        }
        class kr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.round = r2, this.round = r2, this.query = { format: "json" };
          }
          path() {
            return `/v2/deltas/${this.round}/txn/group`;
          }
          prepare(e3) {
            return Ct.from_obj_for_encoding(e3);
          }
        }
        class Sr extends ve {
          constructor(e3, t3, r2, s2 = {}) {
            super("X-Algo-API-Token", e3, t3, r2, s2);
          }
          healthCheck() {
            return new tr(this.c);
          }
          versionsCheck() {
            return new hr(this.c);
          }
          sendRawTransaction(e3) {
            return new ar(this.c, e3);
          }
          accountInformation(e3) {
            return new Wt(this.c, this.intDecoding, e3);
          }
          accountAssetInformation(e3, t3) {
            return new Nt(this.c, this.intDecoding, e3, t3);
          }
          accountApplicationInformation(e3, t3) {
            return new Kt(this.c, this.intDecoding, e3, t3);
          }
          block(e3) {
            return new Ft(this.c, e3);
          }
          getBlockHash(e3) {
            return new Xt(this.c, this.intDecoding, e3);
          }
          getBlockTxids(e3) {
            return new Zt(this.c, this.intDecoding, e3);
          }
          pendingTransactionInformation(e3) {
            return new rr(this.c, e3);
          }
          pendingTransactionsInformation() {
            return new sr(this.c);
          }
          pendingTransactionByAddress(e3) {
            return new nr(this.c, e3);
          }
          status() {
            return new cr(this.c, this.intDecoding);
          }
          statusAfterBlock(e3) {
            return new ur(this.c, this.intDecoding, e3);
          }
          getTransactionParams() {
            return new lr(this.c);
          }
          supply() {
            return new dr(this.c, this.intDecoding);
          }
          compile(e3) {
            return new Vt(this.c, e3);
          }
          disassemble(e3) {
            return new br(this.c, e3);
          }
          dryrun(e3) {
            return new Ht(this.c, e3);
          }
          getAssetByID(e3) {
            return new Yt(this.c, this.intDecoding, e3);
          }
          getApplicationByID(e3) {
            return new Jt(this.c, this.intDecoding, e3);
          }
          getApplicationBoxByName(e3, t3) {
            return new Qt(this.c, this.intDecoding, e3, t3);
          }
          getApplicationBoxes(e3) {
            return new er(this.c, this.intDecoding, e3);
          }
          genesis() {
            return new Gt(this.c, this.intDecoding);
          }
          getTransactionProof(e3, t3) {
            return new ir(this.c, this.intDecoding, e3, t3);
          }
          getLightBlockHeaderProof(e3) {
            return new pr(this.c, this.intDecoding, e3);
          }
          getStateProof(e3) {
            return new fr(this.c, this.intDecoding, e3);
          }
          simulateRawTransactions(e3) {
            const t3 = [];
            if (Array.isArray(e3)) for (const r3 of e3) t3.push(Z(r3));
            else t3.push(Z(e3));
            const r2 = new xt({ txnGroups: [new _t({ txns: t3 })] });
            return this.simulateTransactions(r2);
          }
          simulateTransactions(e3) {
            return new vr(this.c, e3);
          }
          setBlockOffsetTimestamp(e3) {
            return new yr(this.c, this.intDecoding, e3);
          }
          getBlockOffsetTimestamp() {
            return new wr(this.c, this.intDecoding);
          }
          setSyncRound(e3) {
            return new gr(this.c, this.intDecoding, e3);
          }
          unsetSyncRound() {
            return new _r(this.c, this.intDecoding);
          }
          getSyncRound() {
            return new mr(this.c, this.intDecoding);
          }
          ready() {
            return new xr(this.c, this.intDecoding);
          }
          getLedgerStateDeltaForTransactionGroup(e3) {
            return new Ar(this.c, this.intDecoding, e3);
          }
          getLedgerStateDelta(e3) {
            return new Er(this.c, this.intDecoding, e3);
          }
          getTransactionGroupLedgerStateDeltasForRound(e3) {
            return new kr(this.c, this.intDecoding, e3);
          }
        }
        class Rr extends ve {
          constructor(e3, t3 = "http://127.0.0.1", r2 = 7833, s2 = {}) {
            super("X-KMD-API-Token", e3, t3, r2, s2);
          }
          async versions() {
            return (await this.c.get("/versions")).body;
          }
          async listWallets() {
            return (await this.c.get("/v1/wallets")).body;
          }
          async createWallet(e3, t3, r2 = new Uint8Array(), s2 = "sqlite") {
            const n2 = { wallet_name: e3, wallet_driver_name: s2, wallet_password: t3, master_derivation_key: o.lW.from(r2).toString("base64") };
            return (await this.c.post("/v1/wallet", n2)).body;
          }
          async initWalletHandle(e3, t3) {
            const r2 = { wallet_id: e3, wallet_password: t3 };
            return (await this.c.post("/v1/wallet/init", r2)).body;
          }
          async releaseWalletHandle(e3) {
            const t3 = { wallet_handle_token: e3 };
            return (await this.c.post("/v1/wallet/release", t3)).body;
          }
          async renewWalletHandle(e3) {
            const t3 = { wallet_handle_token: e3 };
            return (await this.c.post("/v1/wallet/renew", t3)).body;
          }
          async renameWallet(e3, t3, r2) {
            const s2 = { wallet_id: e3, wallet_password: t3, wallet_name: r2 };
            return (await this.c.post("/v1/wallet/rename", s2)).body;
          }
          async getWallet(e3) {
            const t3 = { wallet_handle_token: e3 };
            return (await this.c.post("/v1/wallet/info", t3)).body;
          }
          async exportMasterDerivationKey(e3, t3) {
            const r2 = { wallet_handle_token: e3, wallet_password: t3 }, s2 = await this.c.post("/v1/master-key/export", r2);
            return { master_derivation_key: o.lW.from(s2.body.master_derivation_key, "base64") };
          }
          async importKey(e3, t3) {
            const r2 = { wallet_handle_token: e3, private_key: o.lW.from(t3).toString("base64") };
            return (await this.c.post("/v1/key/import", r2)).body;
          }
          async exportKey(e3, t3, r2) {
            const s2 = { wallet_handle_token: e3, address: r2, wallet_password: t3 }, n2 = await this.c.post("/v1/key/export", s2);
            return { private_key: o.lW.from(n2.body.private_key, "base64") };
          }
          async generateKey(e3) {
            const t3 = { wallet_handle_token: e3, display_mnemonic: false };
            return (await this.c.post("/v1/key", t3)).body;
          }
          async deleteKey(e3, t3, r2) {
            const s2 = { wallet_handle_token: e3, address: r2, wallet_password: t3 };
            return (await this.c.delete("/v1/key", s2)).body;
          }
          async listKeys(e3) {
            const t3 = { wallet_handle_token: e3 };
            return (await this.c.post("/v1/key/list", t3)).body;
          }
          async signTransaction(e3, t3, r2) {
            const s2 = le(r2), n2 = { wallet_handle_token: e3, wallet_password: t3, transaction: o.lW.from(s2.toByte()).toString("base64") }, i2 = await this.c.post("/v1/transaction/sign", n2);
            return 200 === i2.status ? o.lW.from(i2.body.signed_transaction, "base64") : i2.body;
          }
          async signTransactionWithSpecificPublicKey(e3, t3, r2, s2) {
            const n2 = le(r2), i2 = { wallet_handle_token: e3, wallet_password: t3, transaction: o.lW.from(n2.toByte()).toString("base64"), public_key: o.lW.from(s2).toString("base64") }, a2 = await this.c.post("/v1/transaction/sign", i2);
            return 200 === a2.status ? o.lW.from(a2.body.signed_transaction, "base64") : a2.body;
          }
          async listMultisig(e3) {
            const t3 = { wallet_handle_token: e3 };
            return (await this.c.post("/v1/multisig/list", t3)).body;
          }
          async importMultisig(e3, t3, r2, s2) {
            const n2 = { wallet_handle_token: e3, multisig_version: t3, threshold: r2, pks: s2 };
            return (await this.c.post("/v1/multisig/import", n2)).body;
          }
          async exportMultisig(e3, t3) {
            const r2 = { wallet_handle_token: e3, address: t3 };
            return (await this.c.post("/v1/multisig/export", r2)).body;
          }
          async signMultisigTransaction(e3, t3, r2, s2, n2) {
            const i2 = le(r2), a2 = { wallet_handle_token: e3, transaction: o.lW.from(i2.toByte()).toString("base64"), public_key: o.lW.from(s2).toString("base64"), partial_multisig: n2, wallet_password: t3 };
            return (await this.c.post("/v1/multisig/sign", a2)).body;
          }
          async deleteMultisig(e3, t3, r2) {
            const s2 = { wallet_handle_token: e3, address: r2, wallet_password: t3 };
            return (await this.c.delete("/v1/multisig", s2)).body;
          }
        }
        class Tr extends Mt {
          path() {
            return "/health";
          }
        }
        class Ir extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.index = r2, this.index = r2;
          }
          path() {
            return `/v2/assets/${this.index}/balances`;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          currencyGreaterThan(e3) {
            return this.query["currency-greater-than"] = e3.toString(), this;
          }
          currencyLessThan(e3) {
            return this.query["currency-less-than"] = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
        }
        function Br(e3) {
          return "string" == typeof e3 ? e3 : o.lW.from(e3).toString("base64");
        }
        class Ur extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.account = r2, this.account = r2;
          }
          path() {
            return `/v2/accounts/${this.account}/transactions`;
          }
          notePrefix(e3) {
            return this.query["note-prefix"] = Br(e3), this;
          }
          txType(e3) {
            return this.query["tx-type"] = e3, this;
          }
          sigType(e3) {
            return this.query["sig-type"] = e3, this;
          }
          txid(e3) {
            return this.query.txid = e3, this;
          }
          round(e3) {
            return this.query.round = e3, this;
          }
          minRound(e3) {
            return this.query["min-round"] = e3, this;
          }
          maxRound(e3) {
            return this.query["max-round"] = e3, this;
          }
          assetID(e3) {
            return this.query["asset-id"] = e3, this;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          beforeTime(e3) {
            return this.query["before-time"] = e3, this;
          }
          afterTime(e3) {
            return this.query["after-time"] = e3, this;
          }
          currencyGreaterThan(e3) {
            return this.query["currency-greater-than"] = e3.toString(), this;
          }
          currencyLessThan(e3) {
            return this.query["currency-less-than"] = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          rekeyTo(e3) {
            return this.query["rekey-to"] = e3, this;
          }
        }
        class Pr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.index = r2, this.index = r2;
          }
          path() {
            return `/v2/assets/${this.index}/transactions`;
          }
          notePrefix(e3) {
            return this.query["note-prefix"] = Br(e3), this;
          }
          txType(e3) {
            return this.query["tx-type"] = e3, this;
          }
          sigType(e3) {
            return this.query["sig-type"] = e3, this;
          }
          txid(e3) {
            return this.query.txid = e3, this;
          }
          round(e3) {
            return this.query.round = e3, this;
          }
          minRound(e3) {
            return this.query["min-round"] = e3, this;
          }
          maxRound(e3) {
            return this.query["max-round"] = e3, this;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          beforeTime(e3) {
            return this.query["before-time"] = e3, this;
          }
          afterTime(e3) {
            return this.query["after-time"] = e3, this;
          }
          currencyGreaterThan(e3) {
            return this.query["currency-greater-than"] = e3.toString(), this;
          }
          currencyLessThan(e3) {
            return this.query["currency-less-than"] = e3, this;
          }
          addressRole(e3) {
            return this.query["address-role"] = e3, this;
          }
          address(e3) {
            return this.query.address = e3, this;
          }
          excludeCloseTo(e3) {
            return this.query["exclude-close-to"] = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          rekeyTo(e3) {
            return this.query["rekey-to"] = e3, this;
          }
        }
        class jr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.round = r2, this.round = r2;
          }
          path() {
            return `/v2/blocks/${this.round}`;
          }
          headerOnly(e3) {
            return this.query["header-only"] = e3, this;
          }
        }
        class qr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.txID = r2, this.txID = r2;
          }
          path() {
            return `/v2/transactions/${this.txID}`;
          }
        }
        class $r extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.account = r2, this.account = r2;
          }
          path() {
            return `/v2/accounts/${this.account}`;
          }
          round(e3) {
            return this.query.round = e3, this;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
          exclude(e3) {
            return this.query.exclude = e3, this;
          }
        }
        class Cr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.account = r2, this.account = r2;
          }
          path() {
            return `/v2/accounts/${this.account}/assets`;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          round(e3) {
            return this.query.round = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
          assetId(e3) {
            return this.query["asset-id"] = e3, this;
          }
        }
        class Dr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.account = r2, this.account = r2;
          }
          path() {
            return `/v2/accounts/${this.account}/created-assets`;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          round(e3) {
            return this.query.round = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
          assetID(e3) {
            return this.query["asset-id"] = e3, this;
          }
        }
        class Or extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.account = r2, this.account = r2;
          }
          path() {
            return `/v2/accounts/${this.account}/apps-local-state`;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          round(e3) {
            return this.query.round = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
          applicationID(e3) {
            return this.query["application-id"] = e3, this;
          }
        }
        class Lr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.account = r2, this.account = r2;
          }
          path() {
            return `/v2/accounts/${this.account}/created-applications`;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          round(e3) {
            return this.query.round = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
          applicationID(e3) {
            return this.query["application-id"] = e3, this;
          }
        }
        class Mr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.index = r2, this.index = r2;
          }
          path() {
            return `/v2/assets/${this.index}`;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
        }
        class Wr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.index = r2, this.index = r2;
          }
          path() {
            return `/v2/applications/${this.index}`;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
        }
        class Nr extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.appID = r2, this.appID = r2;
          }
          path() {
            return `/v2/applications/${this.appID}/logs`;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          minRound(e3) {
            return this.query["min-round"] = e3, this;
          }
          maxRound(e3) {
            return this.query["max-round"] = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          sender(e3) {
            return this.query["sender-address"] = e3, this;
          }
          txid(e3) {
            return this.query.txid = e3, this;
          }
        }
        class Kr extends _e {
          constructor({ address: e3, amount: t3, amountWithoutPendingRewards: r2, minBalance: s2, pendingRewards: n2, rewards: i2, round: o2, status: a2, totalAppsOptedIn: c2, totalAssetsOptedIn: u2, totalBoxBytes: l2, totalBoxes: d2, totalCreatedApps: h2, totalCreatedAssets: p2, appsLocalState: f2, appsTotalExtraPages: g2, appsTotalSchema: m2, assets: y2, authAddr: w2, closedAtRound: b2, createdApps: v2, createdAssets: x2, createdAtRound: _2, deleted: A2, incentiveEligible: E2, lastHeartbeat: k2, lastProposed: S2, participation: R2, rewardBase: T2, sigType: I2 }) {
            super(), this.address = e3, this.amount = t3, this.amountWithoutPendingRewards = r2, this.minBalance = s2, this.pendingRewards = n2, this.rewards = i2, this.round = o2, this.status = a2, this.totalAppsOptedIn = c2, this.totalAssetsOptedIn = u2, this.totalBoxBytes = l2, this.totalBoxes = d2, this.totalCreatedApps = h2, this.totalCreatedAssets = p2, this.appsLocalState = f2, this.appsTotalExtraPages = g2, this.appsTotalSchema = m2, this.assets = y2, this.authAddr = w2, this.closedAtRound = b2, this.createdApps = v2, this.createdAssets = x2, this.createdAtRound = _2, this.deleted = A2, this.incentiveEligible = E2, this.lastHeartbeat = k2, this.lastProposed = S2, this.participation = R2, this.rewardBase = T2, this.sigType = I2, this.attribute_map = { address: "address", amount: "amount", amountWithoutPendingRewards: "amount-without-pending-rewards", minBalance: "min-balance", pendingRewards: "pending-rewards", rewards: "rewards", round: "round", status: "status", totalAppsOptedIn: "total-apps-opted-in", totalAssetsOptedIn: "total-assets-opted-in", totalBoxBytes: "total-box-bytes", totalBoxes: "total-boxes", totalCreatedApps: "total-created-apps", totalCreatedAssets: "total-created-assets", appsLocalState: "apps-local-state", appsTotalExtraPages: "apps-total-extra-pages", appsTotalSchema: "apps-total-schema", assets: "assets", authAddr: "auth-addr", closedAtRound: "closed-at-round", createdApps: "created-apps", createdAssets: "created-assets", createdAtRound: "created-at-round", deleted: "deleted", incentiveEligible: "incentive-eligible", lastHeartbeat: "last-heartbeat", lastProposed: "last-proposed", participation: "participation", rewardBase: "reward-base", sigType: "sig-type" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.address) throw new Error(`Response is missing required field 'address': ${e3}`);
            if (void 0 === e3.amount) throw new Error(`Response is missing required field 'amount': ${e3}`);
            if (void 0 === e3["amount-without-pending-rewards"]) throw new Error(`Response is missing required field 'amount-without-pending-rewards': ${e3}`);
            if (void 0 === e3["min-balance"]) throw new Error(`Response is missing required field 'min-balance': ${e3}`);
            if (void 0 === e3["pending-rewards"]) throw new Error(`Response is missing required field 'pending-rewards': ${e3}`);
            if (void 0 === e3.rewards) throw new Error(`Response is missing required field 'rewards': ${e3}`);
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            if (void 0 === e3.status) throw new Error(`Response is missing required field 'status': ${e3}`);
            if (void 0 === e3["total-apps-opted-in"]) throw new Error(`Response is missing required field 'total-apps-opted-in': ${e3}`);
            if (void 0 === e3["total-assets-opted-in"]) throw new Error(`Response is missing required field 'total-assets-opted-in': ${e3}`);
            if (void 0 === e3["total-box-bytes"]) throw new Error(`Response is missing required field 'total-box-bytes': ${e3}`);
            if (void 0 === e3["total-boxes"]) throw new Error(`Response is missing required field 'total-boxes': ${e3}`);
            if (void 0 === e3["total-created-apps"]) throw new Error(`Response is missing required field 'total-created-apps': ${e3}`);
            if (void 0 === e3["total-created-assets"]) throw new Error(`Response is missing required field 'total-created-assets': ${e3}`);
            return new Kr({ address: e3.address, amount: e3.amount, amountWithoutPendingRewards: e3["amount-without-pending-rewards"], minBalance: e3["min-balance"], pendingRewards: e3["pending-rewards"], rewards: e3.rewards, round: e3.round, status: e3.status, totalAppsOptedIn: e3["total-apps-opted-in"], totalAssetsOptedIn: e3["total-assets-opted-in"], totalBoxBytes: e3["total-box-bytes"], totalBoxes: e3["total-boxes"], totalCreatedApps: e3["total-created-apps"], totalCreatedAssets: e3["total-created-assets"], appsLocalState: void 0 !== e3["apps-local-state"] ? e3["apps-local-state"].map(Yr.from_obj_for_encoding) : void 0, appsTotalExtraPages: e3["apps-total-extra-pages"], appsTotalSchema: void 0 !== e3["apps-total-schema"] ? ts.from_obj_for_encoding(e3["apps-total-schema"]) : void 0, assets: void 0 !== e3.assets ? e3.assets.map(is.from_obj_for_encoding) : void 0, authAddr: e3["auth-addr"], closedAtRound: e3["closed-at-round"], createdApps: void 0 !== e3["created-apps"] ? e3["created-apps"].map(Gr.from_obj_for_encoding) : void 0, createdAssets: void 0 !== e3["created-assets"] ? e3["created-assets"].map(ss.from_obj_for_encoding) : void 0, createdAtRound: e3["created-at-round"], deleted: e3.deleted, incentiveEligible: e3["incentive-eligible"], lastHeartbeat: e3["last-heartbeat"], lastProposed: e3["last-proposed"], participation: void 0 !== e3.participation ? Fr.from_obj_for_encoding(e3.participation) : void 0, rewardBase: e3["reward-base"], sigType: e3["sig-type"] });
          }
        }
        class Fr extends _e {
          constructor({ selectionParticipationKey: e3, voteFirstValid: t3, voteKeyDilution: r2, voteLastValid: s2, voteParticipationKey: n2, stateProofKey: i2 }) {
            super(), this.selectionParticipationKey = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.voteFirstValid = t3, this.voteKeyDilution = r2, this.voteLastValid = s2, this.voteParticipationKey = "string" == typeof n2 ? new Uint8Array(o.lW.from(n2, "base64")) : n2, this.stateProofKey = "string" == typeof i2 ? new Uint8Array(o.lW.from(i2, "base64")) : i2, this.attribute_map = { selectionParticipationKey: "selection-participation-key", voteFirstValid: "vote-first-valid", voteKeyDilution: "vote-key-dilution", voteLastValid: "vote-last-valid", voteParticipationKey: "vote-participation-key", stateProofKey: "state-proof-key" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["selection-participation-key"]) throw new Error(`Response is missing required field 'selection-participation-key': ${e3}`);
            if (void 0 === e3["vote-first-valid"]) throw new Error(`Response is missing required field 'vote-first-valid': ${e3}`);
            if (void 0 === e3["vote-key-dilution"]) throw new Error(`Response is missing required field 'vote-key-dilution': ${e3}`);
            if (void 0 === e3["vote-last-valid"]) throw new Error(`Response is missing required field 'vote-last-valid': ${e3}`);
            if (void 0 === e3["vote-participation-key"]) throw new Error(`Response is missing required field 'vote-participation-key': ${e3}`);
            return new Fr({ selectionParticipationKey: e3["selection-participation-key"], voteFirstValid: e3["vote-first-valid"], voteKeyDilution: e3["vote-key-dilution"], voteLastValid: e3["vote-last-valid"], voteParticipationKey: e3["vote-participation-key"], stateProofKey: e3["state-proof-key"] });
          }
        }
        class zr extends _e {
          constructor({ account: e3, currentRound: t3 }) {
            super(), this.account = e3, this.currentRound = t3, this.attribute_map = { account: "account", currentRound: "current-round" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.account) throw new Error(`Response is missing required field 'account': ${e3}`);
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            return new zr({ account: Kr.from_obj_for_encoding(e3.account), currentRound: e3["current-round"] });
          }
        }
        class Vr extends _e {
          constructor({ address: e3, delta: t3 }) {
            super(), this.address = e3, this.delta = t3, this.attribute_map = { address: "address", delta: "delta" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.address) throw new Error(`Response is missing required field 'address': ${e3}`);
            if (!Array.isArray(e3.delta)) throw new Error(`Response is missing required array field 'delta': ${e3}`);
            return new Vr({ address: e3.address, delta: e3.delta.map(vs.from_obj_for_encoding) });
          }
        }
        class Hr extends _e {
          constructor({ accounts: e3, currentRound: t3, nextToken: r2 }) {
            super(), this.accounts = e3, this.currentRound = t3, this.nextToken = r2, this.attribute_map = { accounts: "accounts", currentRound: "current-round", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.accounts)) throw new Error(`Response is missing required array field 'accounts': ${e3}`);
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            return new Hr({ accounts: e3.accounts.map(Kr.from_obj_for_encoding), currentRound: e3["current-round"], nextToken: e3["next-token"] });
          }
        }
        class Gr extends _e {
          constructor({ id: e3, params: t3, createdAtRound: r2, deleted: s2, deletedAtRound: n2 }) {
            super(), this.id = e3, this.params = t3, this.createdAtRound = r2, this.deleted = s2, this.deletedAtRound = n2, this.attribute_map = { id: "id", params: "params", createdAtRound: "created-at-round", deleted: "deleted", deletedAtRound: "deleted-at-round" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.id) throw new Error(`Response is missing required field 'id': ${e3}`);
            if (void 0 === e3.params) throw new Error(`Response is missing required field 'params': ${e3}`);
            return new Gr({ id: e3.id, params: Qr.from_obj_for_encoding(e3.params), createdAtRound: e3["created-at-round"], deleted: e3.deleted, deletedAtRound: e3["deleted-at-round"] });
          }
        }
        class Yr extends _e {
          constructor({ id: e3, schema: t3, closedOutAtRound: r2, deleted: s2, keyValue: n2, optedInAtRound: i2 }) {
            super(), this.id = e3, this.schema = t3, this.closedOutAtRound = r2, this.deleted = s2, this.keyValue = n2, this.optedInAtRound = i2, this.attribute_map = { id: "id", schema: "schema", closedOutAtRound: "closed-out-at-round", deleted: "deleted", keyValue: "key-value", optedInAtRound: "opted-in-at-round" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.id) throw new Error(`Response is missing required field 'id': ${e3}`);
            if (void 0 === e3.schema) throw new Error(`Response is missing required field 'schema': ${e3}`);
            return new Yr({ id: e3.id, schema: ts.from_obj_for_encoding(e3.schema), closedOutAtRound: e3["closed-out-at-round"], deleted: e3.deleted, keyValue: void 0 !== e3["key-value"] ? e3["key-value"].map(Cs.from_obj_for_encoding) : void 0, optedInAtRound: e3["opted-in-at-round"] });
          }
        }
        class Jr extends _e {
          constructor({ appsLocalStates: e3, currentRound: t3, nextToken: r2 }) {
            super(), this.appsLocalStates = e3, this.currentRound = t3, this.nextToken = r2, this.attribute_map = { appsLocalStates: "apps-local-states", currentRound: "current-round", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3["apps-local-states"])) throw new Error(`Response is missing required array field 'apps-local-states': ${e3}`);
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            return new Jr({ appsLocalStates: e3["apps-local-states"].map(Yr.from_obj_for_encoding), currentRound: e3["current-round"], nextToken: e3["next-token"] });
          }
        }
        class Xr extends _e {
          constructor({ logs: e3, txid: t3 }) {
            super(), this.logs = e3, this.txid = t3, this.attribute_map = { logs: "logs", txid: "txid" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.logs)) throw new Error(`Response is missing required array field 'logs': ${e3}`);
            if (void 0 === e3.txid) throw new Error(`Response is missing required field 'txid': ${e3}`);
            return new Xr({ logs: e3.logs, txid: e3.txid });
          }
        }
        class Zr extends _e {
          constructor({ applicationId: e3, currentRound: t3, logData: r2, nextToken: s2 }) {
            super(), this.applicationId = e3, this.currentRound = t3, this.logData = r2, this.nextToken = s2, this.attribute_map = { applicationId: "application-id", currentRound: "current-round", logData: "log-data", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["application-id"]) throw new Error(`Response is missing required field 'application-id': ${e3}`);
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            return new Zr({ applicationId: e3["application-id"], currentRound: e3["current-round"], logData: void 0 !== e3["log-data"] ? e3["log-data"].map(Xr.from_obj_for_encoding) : void 0, nextToken: e3["next-token"] });
          }
        }
        class Qr extends _e {
          constructor({ approvalProgram: e3, clearStateProgram: t3, creator: r2, extraProgramPages: s2, globalState: n2, globalStateSchema: i2, localStateSchema: a2 }) {
            super(), this.approvalProgram = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.clearStateProgram = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.creator = r2, this.extraProgramPages = s2, this.globalState = n2, this.globalStateSchema = i2, this.localStateSchema = a2, this.attribute_map = { approvalProgram: "approval-program", clearStateProgram: "clear-state-program", creator: "creator", extraProgramPages: "extra-program-pages", globalState: "global-state", globalStateSchema: "global-state-schema", localStateSchema: "local-state-schema" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["approval-program"]) throw new Error(`Response is missing required field 'approval-program': ${e3}`);
            if (void 0 === e3["clear-state-program"]) throw new Error(`Response is missing required field 'clear-state-program': ${e3}`);
            return new Qr({ approvalProgram: e3["approval-program"], clearStateProgram: e3["clear-state-program"], creator: e3.creator, extraProgramPages: e3["extra-program-pages"], globalState: void 0 !== e3["global-state"] ? e3["global-state"].map(Cs.from_obj_for_encoding) : void 0, globalStateSchema: void 0 !== e3["global-state-schema"] ? ts.from_obj_for_encoding(e3["global-state-schema"]) : void 0, localStateSchema: void 0 !== e3["local-state-schema"] ? ts.from_obj_for_encoding(e3["local-state-schema"]) : void 0 });
          }
        }
        class es extends _e {
          constructor({ currentRound: e3, application: t3 }) {
            super(), this.currentRound = e3, this.application = t3, this.attribute_map = { currentRound: "current-round", application: "application" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            return new es({ currentRound: e3["current-round"], application: void 0 !== e3.application ? Gr.from_obj_for_encoding(e3.application) : void 0 });
          }
        }
        class ts extends _e {
          constructor({ numByteSlice: e3, numUint: t3 }) {
            super(), this.numByteSlice = e3, this.numUint = t3, this.attribute_map = { numByteSlice: "num-byte-slice", numUint: "num-uint" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["num-byte-slice"]) throw new Error(`Response is missing required field 'num-byte-slice': ${e3}`);
            if (void 0 === e3["num-uint"]) throw new Error(`Response is missing required field 'num-uint': ${e3}`);
            return new ts({ numByteSlice: e3["num-byte-slice"], numUint: e3["num-uint"] });
          }
        }
        class rs extends _e {
          constructor({ applications: e3, currentRound: t3, nextToken: r2 }) {
            super(), this.applications = e3, this.currentRound = t3, this.nextToken = r2, this.attribute_map = { applications: "applications", currentRound: "current-round", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.applications)) throw new Error(`Response is missing required array field 'applications': ${e3}`);
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            return new rs({ applications: e3.applications.map(Gr.from_obj_for_encoding), currentRound: e3["current-round"], nextToken: e3["next-token"] });
          }
        }
        class ss extends _e {
          constructor({ index: e3, params: t3, createdAtRound: r2, deleted: s2, destroyedAtRound: n2 }) {
            super(), this.index = e3, this.params = t3, this.createdAtRound = r2, this.deleted = s2, this.destroyedAtRound = n2, this.attribute_map = { index: "index", params: "params", createdAtRound: "created-at-round", deleted: "deleted", destroyedAtRound: "destroyed-at-round" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.index) throw new Error(`Response is missing required field 'index': ${e3}`);
            if (void 0 === e3.params) throw new Error(`Response is missing required field 'params': ${e3}`);
            return new ss({ index: e3.index, params: as.from_obj_for_encoding(e3.params), createdAtRound: e3["created-at-round"], deleted: e3.deleted, destroyedAtRound: e3["destroyed-at-round"] });
          }
        }
        class ns extends _e {
          constructor({ balances: e3, currentRound: t3, nextToken: r2 }) {
            super(), this.balances = e3, this.currentRound = t3, this.nextToken = r2, this.attribute_map = { balances: "balances", currentRound: "current-round", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.balances)) throw new Error(`Response is missing required array field 'balances': ${e3}`);
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            return new ns({ balances: e3.balances.map(Ss.from_obj_for_encoding), currentRound: e3["current-round"], nextToken: e3["next-token"] });
          }
        }
        class is extends _e {
          constructor({ amount: e3, assetId: t3, isFrozen: r2, deleted: s2, optedInAtRound: n2, optedOutAtRound: i2 }) {
            super(), this.amount = e3, this.assetId = t3, this.isFrozen = r2, this.deleted = s2, this.optedInAtRound = n2, this.optedOutAtRound = i2, this.attribute_map = { amount: "amount", assetId: "asset-id", isFrozen: "is-frozen", deleted: "deleted", optedInAtRound: "opted-in-at-round", optedOutAtRound: "opted-out-at-round" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.amount) throw new Error(`Response is missing required field 'amount': ${e3}`);
            if (void 0 === e3["asset-id"]) throw new Error(`Response is missing required field 'asset-id': ${e3}`);
            if (void 0 === e3["is-frozen"]) throw new Error(`Response is missing required field 'is-frozen': ${e3}`);
            return new is({ amount: e3.amount, assetId: e3["asset-id"], isFrozen: e3["is-frozen"], deleted: e3.deleted, optedInAtRound: e3["opted-in-at-round"], optedOutAtRound: e3["opted-out-at-round"] });
          }
        }
        class os extends _e {
          constructor({ assets: e3, currentRound: t3, nextToken: r2 }) {
            super(), this.assets = e3, this.currentRound = t3, this.nextToken = r2, this.attribute_map = { assets: "assets", currentRound: "current-round", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.assets)) throw new Error(`Response is missing required array field 'assets': ${e3}`);
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            return new os({ assets: e3.assets.map(is.from_obj_for_encoding), currentRound: e3["current-round"], nextToken: e3["next-token"] });
          }
        }
        class as extends _e {
          constructor({ creator: e3, decimals: t3, total: r2, clawback: s2, defaultFrozen: n2, freeze: i2, manager: a2, metadataHash: c2, name: u2, nameB64: l2, reserve: d2, unitName: h2, unitNameB64: p2, url: f2, urlB64: g2 }) {
            super(), this.creator = e3, this.decimals = t3, this.total = r2, this.clawback = s2, this.defaultFrozen = n2, this.freeze = i2, this.manager = a2, this.metadataHash = "string" == typeof c2 ? new Uint8Array(o.lW.from(c2, "base64")) : c2, this.name = u2, this.nameB64 = "string" == typeof l2 ? new Uint8Array(o.lW.from(l2, "base64")) : l2, this.reserve = d2, this.unitName = h2, this.unitNameB64 = "string" == typeof p2 ? new Uint8Array(o.lW.from(p2, "base64")) : p2, this.url = f2, this.urlB64 = "string" == typeof g2 ? new Uint8Array(o.lW.from(g2, "base64")) : g2, this.attribute_map = { creator: "creator", decimals: "decimals", total: "total", clawback: "clawback", defaultFrozen: "default-frozen", freeze: "freeze", manager: "manager", metadataHash: "metadata-hash", name: "name", nameB64: "name-b64", reserve: "reserve", unitName: "unit-name", unitNameB64: "unit-name-b64", url: "url", urlB64: "url-b64" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.creator) throw new Error(`Response is missing required field 'creator': ${e3}`);
            if (void 0 === e3.decimals) throw new Error(`Response is missing required field 'decimals': ${e3}`);
            if (void 0 === e3.total) throw new Error(`Response is missing required field 'total': ${e3}`);
            return new as({ creator: e3.creator, decimals: e3.decimals, total: e3.total, clawback: e3.clawback, defaultFrozen: e3["default-frozen"], freeze: e3.freeze, manager: e3.manager, metadataHash: e3["metadata-hash"], name: e3.name, nameB64: e3["name-b64"], reserve: e3.reserve, unitName: e3["unit-name"], unitNameB64: e3["unit-name-b64"], url: e3.url, urlB64: e3["url-b64"] });
          }
        }
        class cs extends _e {
          constructor({ asset: e3, currentRound: t3 }) {
            super(), this.asset = e3, this.currentRound = t3, this.attribute_map = { asset: "asset", currentRound: "current-round" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.asset) throw new Error(`Response is missing required field 'asset': ${e3}`);
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            return new cs({ asset: ss.from_obj_for_encoding(e3.asset), currentRound: e3["current-round"] });
          }
        }
        class us extends _e {
          constructor({ assets: e3, currentRound: t3, nextToken: r2 }) {
            super(), this.assets = e3, this.currentRound = t3, this.nextToken = r2, this.attribute_map = { assets: "assets", currentRound: "current-round", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            if (!Array.isArray(e3.assets)) throw new Error(`Response is missing required array field 'assets': ${e3}`);
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            return new us({ assets: e3.assets.map(ss.from_obj_for_encoding), currentRound: e3["current-round"], nextToken: e3["next-token"] });
          }
        }
        class ls extends _e {
          constructor({ genesisHash: e3, genesisId: t3, previousBlockHash: r2, round: s2, seed: n2, timestamp: i2, transactionsRoot: a2, transactionsRootSha256: c2, bonus: u2, feesCollected: l2, participationUpdates: d2, proposer: h2, proposerPayout: p2, rewards: f2, stateProofTracking: g2, transactions: m2, txnCounter: y2, upgradeState: w2, upgradeVote: b2 }) {
            super(), this.genesisHash = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.genesisId = t3, this.previousBlockHash = "string" == typeof r2 ? new Uint8Array(o.lW.from(r2, "base64")) : r2, this.round = s2, this.seed = "string" == typeof n2 ? new Uint8Array(o.lW.from(n2, "base64")) : n2, this.timestamp = i2, this.transactionsRoot = "string" == typeof a2 ? new Uint8Array(o.lW.from(a2, "base64")) : a2, this.transactionsRootSha256 = "string" == typeof c2 ? new Uint8Array(o.lW.from(c2, "base64")) : c2, this.bonus = u2, this.feesCollected = l2, this.participationUpdates = d2, this.proposer = h2, this.proposerPayout = p2, this.rewards = f2, this.stateProofTracking = g2, this.transactions = m2, this.txnCounter = y2, this.upgradeState = w2, this.upgradeVote = b2, this.attribute_map = { genesisHash: "genesis-hash", genesisId: "genesis-id", previousBlockHash: "previous-block-hash", round: "round", seed: "seed", timestamp: "timestamp", transactionsRoot: "transactions-root", transactionsRootSha256: "transactions-root-sha256", bonus: "bonus", feesCollected: "fees-collected", participationUpdates: "participation-updates", proposer: "proposer", proposerPayout: "proposer-payout", rewards: "rewards", stateProofTracking: "state-proof-tracking", transactions: "transactions", txnCounter: "txn-counter", upgradeState: "upgrade-state", upgradeVote: "upgrade-vote" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["genesis-hash"]) throw new Error(`Response is missing required field 'genesis-hash': ${e3}`);
            if (void 0 === e3["genesis-id"]) throw new Error(`Response is missing required field 'genesis-id': ${e3}`);
            if (void 0 === e3["previous-block-hash"]) throw new Error(`Response is missing required field 'previous-block-hash': ${e3}`);
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            if (void 0 === e3.seed) throw new Error(`Response is missing required field 'seed': ${e3}`);
            if (void 0 === e3.timestamp) throw new Error(`Response is missing required field 'timestamp': ${e3}`);
            if (void 0 === e3["transactions-root"]) throw new Error(`Response is missing required field 'transactions-root': ${e3}`);
            if (void 0 === e3["transactions-root-sha256"]) throw new Error(`Response is missing required field 'transactions-root-sha256': ${e3}`);
            return new ls({ genesisHash: e3["genesis-hash"], genesisId: e3["genesis-id"], previousBlockHash: e3["previous-block-hash"], round: e3.round, seed: e3.seed, timestamp: e3.timestamp, transactionsRoot: e3["transactions-root"], transactionsRootSha256: e3["transactions-root-sha256"], bonus: e3.bonus, feesCollected: e3["fees-collected"], participationUpdates: void 0 !== e3["participation-updates"] ? Rs.from_obj_for_encoding(e3["participation-updates"]) : void 0, proposer: e3.proposer, proposerPayout: e3["proposer-payout"], rewards: void 0 !== e3.rewards ? hs.from_obj_for_encoding(e3.rewards) : void 0, stateProofTracking: void 0 !== e3["state-proof-tracking"] ? e3["state-proof-tracking"].map(js.from_obj_for_encoding) : void 0, transactions: void 0 !== e3.transactions ? e3.transactions.map(Os.from_obj_for_encoding) : void 0, txnCounter: e3["txn-counter"], upgradeState: void 0 !== e3["upgrade-state"] ? ps.from_obj_for_encoding(e3["upgrade-state"]) : void 0, upgradeVote: void 0 !== e3["upgrade-vote"] ? fs.from_obj_for_encoding(e3["upgrade-vote"]) : void 0 });
          }
        }
        class ds extends _e {
          constructor({ blocks: e3, currentRound: t3, nextToken: r2 }) {
            super(), this.blocks = e3, this.currentRound = t3, this.nextToken = r2, this.attribute_map = { blocks: "blocks", currentRound: "current-round", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            return new ds({ blocks: void 0 !== e3.blocks ? e3.blocks.map(ls.from_obj_for_encoding) : void 0, currentRound: e3["current-round"], nextToken: e3["next-token"] });
          }
        }
        class hs extends _e {
          constructor({ feeSink: e3, rewardsCalculationRound: t3, rewardsLevel: r2, rewardsPool: s2, rewardsRate: n2, rewardsResidue: i2 }) {
            super(), this.feeSink = e3, this.rewardsCalculationRound = t3, this.rewardsLevel = r2, this.rewardsPool = s2, this.rewardsRate = n2, this.rewardsResidue = i2, this.attribute_map = { feeSink: "fee-sink", rewardsCalculationRound: "rewards-calculation-round", rewardsLevel: "rewards-level", rewardsPool: "rewards-pool", rewardsRate: "rewards-rate", rewardsResidue: "rewards-residue" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["fee-sink"]) throw new Error(`Response is missing required field 'fee-sink': ${e3}`);
            if (void 0 === e3["rewards-calculation-round"]) throw new Error(`Response is missing required field 'rewards-calculation-round': ${e3}`);
            if (void 0 === e3["rewards-level"]) throw new Error(`Response is missing required field 'rewards-level': ${e3}`);
            if (void 0 === e3["rewards-pool"]) throw new Error(`Response is missing required field 'rewards-pool': ${e3}`);
            if (void 0 === e3["rewards-rate"]) throw new Error(`Response is missing required field 'rewards-rate': ${e3}`);
            if (void 0 === e3["rewards-residue"]) throw new Error(`Response is missing required field 'rewards-residue': ${e3}`);
            return new hs({ feeSink: e3["fee-sink"], rewardsCalculationRound: e3["rewards-calculation-round"], rewardsLevel: e3["rewards-level"], rewardsPool: e3["rewards-pool"], rewardsRate: e3["rewards-rate"], rewardsResidue: e3["rewards-residue"] });
          }
        }
        class ps extends _e {
          constructor({ currentProtocol: e3, nextProtocol: t3, nextProtocolApprovals: r2, nextProtocolSwitchOn: s2, nextProtocolVoteBefore: n2 }) {
            super(), this.currentProtocol = e3, this.nextProtocol = t3, this.nextProtocolApprovals = r2, this.nextProtocolSwitchOn = s2, this.nextProtocolVoteBefore = n2, this.attribute_map = { currentProtocol: "current-protocol", nextProtocol: "next-protocol", nextProtocolApprovals: "next-protocol-approvals", nextProtocolSwitchOn: "next-protocol-switch-on", nextProtocolVoteBefore: "next-protocol-vote-before" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["current-protocol"]) throw new Error(`Response is missing required field 'current-protocol': ${e3}`);
            return new ps({ currentProtocol: e3["current-protocol"], nextProtocol: e3["next-protocol"], nextProtocolApprovals: e3["next-protocol-approvals"], nextProtocolSwitchOn: e3["next-protocol-switch-on"], nextProtocolVoteBefore: e3["next-protocol-vote-before"] });
          }
        }
        class fs extends _e {
          constructor({ upgradeApprove: e3, upgradeDelay: t3, upgradePropose: r2 }) {
            super(), this.upgradeApprove = e3, this.upgradeDelay = t3, this.upgradePropose = r2, this.attribute_map = { upgradeApprove: "upgrade-approve", upgradeDelay: "upgrade-delay", upgradePropose: "upgrade-propose" };
          }
          static from_obj_for_encoding(e3) {
            return new fs({ upgradeApprove: e3["upgrade-approve"], upgradeDelay: e3["upgrade-delay"], upgradePropose: e3["upgrade-propose"] });
          }
        }
        class gs extends _e {
          constructor({ name: e3, round: t3, value: r2 }) {
            super(), this.name = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.round = t3, this.value = "string" == typeof r2 ? new Uint8Array(o.lW.from(r2, "base64")) : r2, this.attribute_map = { name: "name", round: "round", value: "value" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.name) throw new Error(`Response is missing required field 'name': ${e3}`);
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            if (void 0 === e3.value) throw new Error(`Response is missing required field 'value': ${e3}`);
            return new gs({ name: e3.name, round: e3.round, value: e3.value });
          }
        }
        class ms extends _e {
          constructor({ name: e3 }) {
            super(), this.name = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.attribute_map = { name: "name" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.name) throw new Error(`Response is missing required field 'name': ${e3}`);
            return new ms({ name: e3.name });
          }
        }
        class ys extends _e {
          constructor({ applicationId: e3, boxes: t3, nextToken: r2 }) {
            super(), this.applicationId = e3, this.boxes = t3, this.nextToken = r2, this.attribute_map = { applicationId: "application-id", boxes: "boxes", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["application-id"]) throw new Error(`Response is missing required field 'application-id': ${e3}`);
            if (!Array.isArray(e3.boxes)) throw new Error(`Response is missing required array field 'boxes': ${e3}`);
            return new ys({ applicationId: e3["application-id"], boxes: e3.boxes.map(ms.from_obj_for_encoding), nextToken: e3["next-token"] });
          }
        }
        class ws extends _e {
          constructor({ message: e3, data: t3 }) {
            super(), this.message = e3, this.data = t3, this.attribute_map = { message: "message", data: "data" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.message) throw new Error(`Response is missing required field 'message': ${e3}`);
            return new ws({ message: e3.message, data: e3.data });
          }
        }
        class bs extends _e {
          constructor({ action: e3, bytes: t3, uint: r2 }) {
            super(), this.action = e3, this.bytes = t3, this.uint = r2, this.attribute_map = { action: "action", bytes: "bytes", uint: "uint" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.action) throw new Error(`Response is missing required field 'action': ${e3}`);
            return new bs({ action: e3.action, bytes: e3.bytes, uint: e3.uint });
          }
        }
        class vs extends _e {
          constructor({ key: e3, value: t3 }) {
            super(), this.key = e3, this.value = t3, this.attribute_map = { key: "key", value: "value" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.key) throw new Error(`Response is missing required field 'key': ${e3}`);
            if (void 0 === e3.value) throw new Error(`Response is missing required field 'value': ${e3}`);
            return new vs({ key: e3.key, value: bs.from_obj_for_encoding(e3.value) });
          }
        }
        class xs extends _e {
          constructor({ hashType: e3 }) {
            super(), this.hashType = e3, this.attribute_map = { hashType: "hash-type" };
          }
          static from_obj_for_encoding(e3) {
            return new xs({ hashType: e3["hash-type"] });
          }
        }
        class _s extends _e {
          constructor({ hbPk: e3, hbPk1sig: t3, hbPk2: r2, hbPk2sig: s2, hbSig: n2 }) {
            super(), this.hbPk = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.hbPk1sig = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.hbPk2 = "string" == typeof r2 ? new Uint8Array(o.lW.from(r2, "base64")) : r2, this.hbPk2sig = "string" == typeof s2 ? new Uint8Array(o.lW.from(s2, "base64")) : s2, this.hbSig = "string" == typeof n2 ? new Uint8Array(o.lW.from(n2, "base64")) : n2, this.attribute_map = { hbPk: "hb-pk", hbPk1sig: "hb-pk1sig", hbPk2: "hb-pk2", hbPk2sig: "hb-pk2sig", hbSig: "hb-sig" };
          }
          static from_obj_for_encoding(e3) {
            return new _s({ hbPk: e3["hb-pk"], hbPk1sig: e3["hb-pk1sig"], hbPk2: e3["hb-pk2"], hbPk2sig: e3["hb-pk2sig"], hbSig: e3["hb-sig"] });
          }
        }
        class As extends _e {
          constructor({ dbAvailable: e3, isMigrating: t3, message: r2, round: s2, version: n2, data: i2, errors: o2 }) {
            super(), this.dbAvailable = e3, this.isMigrating = t3, this.message = r2, this.round = s2, this.version = n2, this.data = i2, this.errors = o2, this.attribute_map = { dbAvailable: "db-available", isMigrating: "is-migrating", message: "message", round: "round", version: "version", data: "data", errors: "errors" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["db-available"]) throw new Error(`Response is missing required field 'db-available': ${e3}`);
            if (void 0 === e3["is-migrating"]) throw new Error(`Response is missing required field 'is-migrating': ${e3}`);
            if (void 0 === e3.message) throw new Error(`Response is missing required field 'message': ${e3}`);
            if (void 0 === e3.round) throw new Error(`Response is missing required field 'round': ${e3}`);
            if (void 0 === e3.version) throw new Error(`Response is missing required field 'version': ${e3}`);
            return new As({ dbAvailable: e3["db-available"], isMigrating: e3["is-migrating"], message: e3.message, round: e3.round, version: e3.version, data: e3.data, errors: e3.errors });
          }
        }
        class Es extends _e {
          constructor({ blockHeadersCommitment: e3, firstAttestedRound: t3, latestAttestedRound: r2, lnProvenWeight: s2, votersCommitment: n2 }) {
            super(), this.blockHeadersCommitment = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.firstAttestedRound = t3, this.latestAttestedRound = r2, this.lnProvenWeight = s2, this.votersCommitment = "string" == typeof n2 ? new Uint8Array(o.lW.from(n2, "base64")) : n2, this.attribute_map = { blockHeadersCommitment: "block-headers-commitment", firstAttestedRound: "first-attested-round", latestAttestedRound: "latest-attested-round", lnProvenWeight: "ln-proven-weight", votersCommitment: "voters-commitment" };
          }
          static from_obj_for_encoding(e3) {
            return new Es({ blockHeadersCommitment: e3["block-headers-commitment"], firstAttestedRound: e3["first-attested-round"], latestAttestedRound: e3["latest-attested-round"], lnProvenWeight: e3["ln-proven-weight"], votersCommitment: e3["voters-commitment"] });
          }
        }
        class ks extends _e {
          constructor({ hashFactory: e3, path: t3, treeDepth: r2 }) {
            super(), this.hashFactory = e3, this.path = t3, this.treeDepth = r2, this.attribute_map = { hashFactory: "hash-factory", path: "path", treeDepth: "tree-depth" };
          }
          static from_obj_for_encoding(e3) {
            return new ks({ hashFactory: void 0 !== e3["hash-factory"] ? xs.from_obj_for_encoding(e3["hash-factory"]) : void 0, path: e3.path, treeDepth: e3["tree-depth"] });
          }
        }
        class Ss extends _e {
          constructor({ address: e3, amount: t3, isFrozen: r2, deleted: s2, optedInAtRound: n2, optedOutAtRound: i2 }) {
            super(), this.address = e3, this.amount = t3, this.isFrozen = r2, this.deleted = s2, this.optedInAtRound = n2, this.optedOutAtRound = i2, this.attribute_map = { address: "address", amount: "amount", isFrozen: "is-frozen", deleted: "deleted", optedInAtRound: "opted-in-at-round", optedOutAtRound: "opted-out-at-round" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.address) throw new Error(`Response is missing required field 'address': ${e3}`);
            if (void 0 === e3.amount) throw new Error(`Response is missing required field 'amount': ${e3}`);
            if (void 0 === e3["is-frozen"]) throw new Error(`Response is missing required field 'is-frozen': ${e3}`);
            return new Ss({ address: e3.address, amount: e3.amount, isFrozen: e3["is-frozen"], deleted: e3.deleted, optedInAtRound: e3["opted-in-at-round"], optedOutAtRound: e3["opted-out-at-round"] });
          }
        }
        class Rs extends _e {
          constructor({ absentParticipationAccounts: e3, expiredParticipationAccounts: t3 }) {
            super(), this.absentParticipationAccounts = e3, this.expiredParticipationAccounts = t3, this.attribute_map = { absentParticipationAccounts: "absent-participation-accounts", expiredParticipationAccounts: "expired-participation-accounts" };
          }
          static from_obj_for_encoding(e3) {
            return new Rs({ absentParticipationAccounts: e3["absent-participation-accounts"], expiredParticipationAccounts: e3["expired-participation-accounts"] });
          }
        }
        class Ts extends _e {
          constructor({ partProofs: e3, positionsToReveal: t3, reveals: r2, saltVersion: s2, sigCommit: n2, sigProofs: i2, signedWeight: a2 }) {
            super(), this.partProofs = e3, this.positionsToReveal = t3, this.reveals = r2, this.saltVersion = s2, this.sigCommit = "string" == typeof n2 ? new Uint8Array(o.lW.from(n2, "base64")) : n2, this.sigProofs = i2, this.signedWeight = a2, this.attribute_map = { partProofs: "part-proofs", positionsToReveal: "positions-to-reveal", reveals: "reveals", saltVersion: "salt-version", sigCommit: "sig-commit", sigProofs: "sig-proofs", signedWeight: "signed-weight" };
          }
          static from_obj_for_encoding(e3) {
            return new Ts({ partProofs: void 0 !== e3["part-proofs"] ? ks.from_obj_for_encoding(e3["part-proofs"]) : void 0, positionsToReveal: e3["positions-to-reveal"], reveals: void 0 !== e3.reveals ? e3.reveals.map(Bs.from_obj_for_encoding) : void 0, saltVersion: e3["salt-version"], sigCommit: e3["sig-commit"], sigProofs: void 0 !== e3["sig-proofs"] ? ks.from_obj_for_encoding(e3["sig-proofs"]) : void 0, signedWeight: e3["signed-weight"] });
          }
        }
        class Is extends _e {
          constructor({ verifier: e3, weight: t3 }) {
            super(), this.verifier = e3, this.weight = t3, this.attribute_map = { verifier: "verifier", weight: "weight" };
          }
          static from_obj_for_encoding(e3) {
            return new Is({ verifier: void 0 !== e3.verifier ? qs.from_obj_for_encoding(e3.verifier) : void 0, weight: e3.weight });
          }
        }
        class Bs extends _e {
          constructor({ participant: e3, position: t3, sigSlot: r2 }) {
            super(), this.participant = e3, this.position = t3, this.sigSlot = r2, this.attribute_map = { participant: "participant", position: "position", sigSlot: "sig-slot" };
          }
          static from_obj_for_encoding(e3) {
            return new Bs({ participant: void 0 !== e3.participant ? Is.from_obj_for_encoding(e3.participant) : void 0, position: e3.position, sigSlot: void 0 !== e3["sig-slot"] ? Us.from_obj_for_encoding(e3["sig-slot"]) : void 0 });
          }
        }
        class Us extends _e {
          constructor({ lowerSigWeight: e3, signature: t3 }) {
            super(), this.lowerSigWeight = e3, this.signature = t3, this.attribute_map = { lowerSigWeight: "lower-sig-weight", signature: "signature" };
          }
          static from_obj_for_encoding(e3) {
            return new Us({ lowerSigWeight: e3["lower-sig-weight"], signature: void 0 !== e3.signature ? Ps.from_obj_for_encoding(e3.signature) : void 0 });
          }
        }
        class Ps extends _e {
          constructor({ falconSignature: e3, merkleArrayIndex: t3, proof: r2, verifyingKey: s2 }) {
            super(), this.falconSignature = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.merkleArrayIndex = t3, this.proof = r2, this.verifyingKey = "string" == typeof s2 ? new Uint8Array(o.lW.from(s2, "base64")) : s2, this.attribute_map = { falconSignature: "falcon-signature", merkleArrayIndex: "merkle-array-index", proof: "proof", verifyingKey: "verifying-key" };
          }
          static from_obj_for_encoding(e3) {
            return new Ps({ falconSignature: e3["falcon-signature"], merkleArrayIndex: e3["merkle-array-index"], proof: void 0 !== e3.proof ? ks.from_obj_for_encoding(e3.proof) : void 0, verifyingKey: e3["verifying-key"] });
          }
        }
        class js extends _e {
          constructor({ nextRound: e3, onlineTotalWeight: t3, type: r2, votersCommitment: s2 }) {
            super(), this.nextRound = e3, this.onlineTotalWeight = t3, this.type = r2, this.votersCommitment = "string" == typeof s2 ? new Uint8Array(o.lW.from(s2, "base64")) : s2, this.attribute_map = { nextRound: "next-round", onlineTotalWeight: "online-total-weight", type: "type", votersCommitment: "voters-commitment" };
          }
          static from_obj_for_encoding(e3) {
            return new js({ nextRound: e3["next-round"], onlineTotalWeight: e3["online-total-weight"], type: e3.type, votersCommitment: e3["voters-commitment"] });
          }
        }
        class qs extends _e {
          constructor({ commitment: e3, keyLifetime: t3 }) {
            super(), this.commitment = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.keyLifetime = t3, this.attribute_map = { commitment: "commitment", keyLifetime: "key-lifetime" };
          }
          static from_obj_for_encoding(e3) {
            return new qs({ commitment: e3.commitment, keyLifetime: e3["key-lifetime"] });
          }
        }
        class $s extends _e {
          constructor({ numByteSlice: e3, numUint: t3 }) {
            super(), this.numByteSlice = e3, this.numUint = t3, this.attribute_map = { numByteSlice: "num-byte-slice", numUint: "num-uint" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["num-byte-slice"]) throw new Error(`Response is missing required field 'num-byte-slice': ${e3}`);
            if (void 0 === e3["num-uint"]) throw new Error(`Response is missing required field 'num-uint': ${e3}`);
            return new $s({ numByteSlice: e3["num-byte-slice"], numUint: e3["num-uint"] });
          }
        }
        class Cs extends _e {
          constructor({ key: e3, value: t3 }) {
            super(), this.key = e3, this.value = t3, this.attribute_map = { key: "key", value: "value" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.key) throw new Error(`Response is missing required field 'key': ${e3}`);
            if (void 0 === e3.value) throw new Error(`Response is missing required field 'value': ${e3}`);
            return new Cs({ key: e3.key, value: Ds.from_obj_for_encoding(e3.value) });
          }
        }
        class Ds extends _e {
          constructor({ bytes: e3, type: t3, uint: r2 }) {
            super(), this.bytes = e3, this.type = t3, this.uint = r2, this.attribute_map = { bytes: "bytes", type: "type", uint: "uint" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.bytes) throw new Error(`Response is missing required field 'bytes': ${e3}`);
            if (void 0 === e3.type) throw new Error(`Response is missing required field 'type': ${e3}`);
            if (void 0 === e3.uint) throw new Error(`Response is missing required field 'uint': ${e3}`);
            return new Ds({ bytes: e3.bytes, type: e3.type, uint: e3.uint });
          }
        }
        class Os extends _e {
          constructor({ fee: e3, firstValid: t3, lastValid: r2, sender: s2, applicationTransaction: n2, assetConfigTransaction: i2, assetFreezeTransaction: a2, assetTransferTransaction: c2, authAddr: u2, closeRewards: l2, closingAmount: d2, confirmedRound: h2, createdApplicationIndex: p2, createdAssetIndex: f2, genesisHash: g2, genesisId: m2, globalStateDelta: y2, group: w2, heartbeatTransaction: b2, id: v2, innerTxns: x2, intraRoundOffset: _2, keyregTransaction: A2, lease: E2, localStateDelta: k2, logs: S2, note: R2, paymentTransaction: T2, receiverRewards: I2, rekeyTo: B2, roundTime: U2, senderRewards: P2, signature: j2, stateProofTransaction: q2, txType: $2 }) {
            super(), this.fee = e3, this.firstValid = t3, this.lastValid = r2, this.sender = s2, this.applicationTransaction = n2, this.assetConfigTransaction = i2, this.assetFreezeTransaction = a2, this.assetTransferTransaction = c2, this.authAddr = u2, this.closeRewards = l2, this.closingAmount = d2, this.confirmedRound = h2, this.createdApplicationIndex = p2, this.createdAssetIndex = f2, this.genesisHash = "string" == typeof g2 ? new Uint8Array(o.lW.from(g2, "base64")) : g2, this.genesisId = m2, this.globalStateDelta = y2, this.group = "string" == typeof w2 ? new Uint8Array(o.lW.from(w2, "base64")) : w2, this.heartbeatTransaction = b2, this.id = v2, this.innerTxns = x2, this.intraRoundOffset = _2, this.keyregTransaction = A2, this.lease = "string" == typeof E2 ? new Uint8Array(o.lW.from(E2, "base64")) : E2, this.localStateDelta = k2, this.logs = S2, this.note = "string" == typeof R2 ? new Uint8Array(o.lW.from(R2, "base64")) : R2, this.paymentTransaction = T2, this.receiverRewards = I2, this.rekeyTo = B2, this.roundTime = U2, this.senderRewards = P2, this.signature = j2, this.stateProofTransaction = q2, this.txType = $2, this.attribute_map = { fee: "fee", firstValid: "first-valid", lastValid: "last-valid", sender: "sender", applicationTransaction: "application-transaction", assetConfigTransaction: "asset-config-transaction", assetFreezeTransaction: "asset-freeze-transaction", assetTransferTransaction: "asset-transfer-transaction", authAddr: "auth-addr", closeRewards: "close-rewards", closingAmount: "closing-amount", confirmedRound: "confirmed-round", createdApplicationIndex: "created-application-index", createdAssetIndex: "created-asset-index", genesisHash: "genesis-hash", genesisId: "genesis-id", globalStateDelta: "global-state-delta", group: "group", heartbeatTransaction: "heartbeat-transaction", id: "id", innerTxns: "inner-txns", intraRoundOffset: "intra-round-offset", keyregTransaction: "keyreg-transaction", lease: "lease", localStateDelta: "local-state-delta", logs: "logs", note: "note", paymentTransaction: "payment-transaction", receiverRewards: "receiver-rewards", rekeyTo: "rekey-to", roundTime: "round-time", senderRewards: "sender-rewards", signature: "signature", stateProofTransaction: "state-proof-transaction", txType: "tx-type" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.fee) throw new Error(`Response is missing required field 'fee': ${e3}`);
            if (void 0 === e3["first-valid"]) throw new Error(`Response is missing required field 'first-valid': ${e3}`);
            if (void 0 === e3["last-valid"]) throw new Error(`Response is missing required field 'last-valid': ${e3}`);
            if (void 0 === e3.sender) throw new Error(`Response is missing required field 'sender': ${e3}`);
            return new Os({ fee: e3.fee, firstValid: e3["first-valid"], lastValid: e3["last-valid"], sender: e3.sender, applicationTransaction: void 0 !== e3["application-transaction"] ? Ls.from_obj_for_encoding(e3["application-transaction"]) : void 0, assetConfigTransaction: void 0 !== e3["asset-config-transaction"] ? Ms.from_obj_for_encoding(e3["asset-config-transaction"]) : void 0, assetFreezeTransaction: void 0 !== e3["asset-freeze-transaction"] ? Ws.from_obj_for_encoding(e3["asset-freeze-transaction"]) : void 0, assetTransferTransaction: void 0 !== e3["asset-transfer-transaction"] ? Ns.from_obj_for_encoding(e3["asset-transfer-transaction"]) : void 0, authAddr: e3["auth-addr"], closeRewards: e3["close-rewards"], closingAmount: e3["closing-amount"], confirmedRound: e3["confirmed-round"], createdApplicationIndex: e3["created-application-index"], createdAssetIndex: e3["created-asset-index"], genesisHash: e3["genesis-hash"], genesisId: e3["genesis-id"], globalStateDelta: void 0 !== e3["global-state-delta"] ? e3["global-state-delta"].map(vs.from_obj_for_encoding) : void 0, group: e3.group, heartbeatTransaction: void 0 !== e3["heartbeat-transaction"] ? Ks.from_obj_for_encoding(e3["heartbeat-transaction"]) : void 0, id: e3.id, innerTxns: void 0 !== e3["inner-txns"] ? e3["inner-txns"].map(Os.from_obj_for_encoding) : void 0, intraRoundOffset: e3["intra-round-offset"], keyregTransaction: void 0 !== e3["keyreg-transaction"] ? Fs.from_obj_for_encoding(e3["keyreg-transaction"]) : void 0, lease: e3.lease, localStateDelta: void 0 !== e3["local-state-delta"] ? e3["local-state-delta"].map(Vr.from_obj_for_encoding) : void 0, logs: e3.logs, note: e3.note, paymentTransaction: void 0 !== e3["payment-transaction"] ? zs.from_obj_for_encoding(e3["payment-transaction"]) : void 0, receiverRewards: e3["receiver-rewards"], rekeyTo: e3["rekey-to"], roundTime: e3["round-time"], senderRewards: e3["sender-rewards"], signature: void 0 !== e3.signature ? Hs.from_obj_for_encoding(e3.signature) : void 0, stateProofTransaction: void 0 !== e3["state-proof-transaction"] ? Xs.from_obj_for_encoding(e3["state-proof-transaction"]) : void 0, txType: e3["tx-type"] });
          }
        }
        class Ls extends _e {
          constructor({ applicationId: e3, accounts: t3, applicationArgs: r2, approvalProgram: s2, clearStateProgram: n2, extraProgramPages: i2, foreignApps: a2, foreignAssets: c2, globalStateSchema: u2, localStateSchema: l2, onCompletion: d2 }) {
            super(), this.applicationId = e3, this.accounts = t3, this.applicationArgs = r2, this.approvalProgram = "string" == typeof s2 ? new Uint8Array(o.lW.from(s2, "base64")) : s2, this.clearStateProgram = "string" == typeof n2 ? new Uint8Array(o.lW.from(n2, "base64")) : n2, this.extraProgramPages = i2, this.foreignApps = a2, this.foreignAssets = c2, this.globalStateSchema = u2, this.localStateSchema = l2, this.onCompletion = d2, this.attribute_map = { applicationId: "application-id", accounts: "accounts", applicationArgs: "application-args", approvalProgram: "approval-program", clearStateProgram: "clear-state-program", extraProgramPages: "extra-program-pages", foreignApps: "foreign-apps", foreignAssets: "foreign-assets", globalStateSchema: "global-state-schema", localStateSchema: "local-state-schema", onCompletion: "on-completion" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["application-id"]) throw new Error(`Response is missing required field 'application-id': ${e3}`);
            return new Ls({ applicationId: e3["application-id"], accounts: e3.accounts, applicationArgs: e3["application-args"], approvalProgram: e3["approval-program"], clearStateProgram: e3["clear-state-program"], extraProgramPages: e3["extra-program-pages"], foreignApps: e3["foreign-apps"], foreignAssets: e3["foreign-assets"], globalStateSchema: void 0 !== e3["global-state-schema"] ? $s.from_obj_for_encoding(e3["global-state-schema"]) : void 0, localStateSchema: void 0 !== e3["local-state-schema"] ? $s.from_obj_for_encoding(e3["local-state-schema"]) : void 0, onCompletion: e3["on-completion"] });
          }
        }
        class Ms extends _e {
          constructor({ assetId: e3, params: t3 }) {
            super(), this.assetId = e3, this.params = t3, this.attribute_map = { assetId: "asset-id", params: "params" };
          }
          static from_obj_for_encoding(e3) {
            return new Ms({ assetId: e3["asset-id"], params: void 0 !== e3.params ? as.from_obj_for_encoding(e3.params) : void 0 });
          }
        }
        class Ws extends _e {
          constructor({ address: e3, assetId: t3, newFreezeStatus: r2 }) {
            super(), this.address = e3, this.assetId = t3, this.newFreezeStatus = r2, this.attribute_map = { address: "address", assetId: "asset-id", newFreezeStatus: "new-freeze-status" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.address) throw new Error(`Response is missing required field 'address': ${e3}`);
            if (void 0 === e3["asset-id"]) throw new Error(`Response is missing required field 'asset-id': ${e3}`);
            if (void 0 === e3["new-freeze-status"]) throw new Error(`Response is missing required field 'new-freeze-status': ${e3}`);
            return new Ws({ address: e3.address, assetId: e3["asset-id"], newFreezeStatus: e3["new-freeze-status"] });
          }
        }
        class Ns extends _e {
          constructor({ amount: e3, assetId: t3, receiver: r2, closeAmount: s2, closeTo: n2, sender: i2 }) {
            super(), this.amount = e3, this.assetId = t3, this.receiver = r2, this.closeAmount = s2, this.closeTo = n2, this.sender = i2, this.attribute_map = { amount: "amount", assetId: "asset-id", receiver: "receiver", closeAmount: "close-amount", closeTo: "close-to", sender: "sender" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.amount) throw new Error(`Response is missing required field 'amount': ${e3}`);
            if (void 0 === e3["asset-id"]) throw new Error(`Response is missing required field 'asset-id': ${e3}`);
            if (void 0 === e3.receiver) throw new Error(`Response is missing required field 'receiver': ${e3}`);
            return new Ns({ amount: e3.amount, assetId: e3["asset-id"], receiver: e3.receiver, closeAmount: e3["close-amount"], closeTo: e3["close-to"], sender: e3.sender });
          }
        }
        class Ks extends _e {
          constructor({ hbAddress: e3, hbKeyDilution: t3, hbProof: r2, hbSeed: s2, hbVoteId: n2 }) {
            super(), this.hbAddress = e3, this.hbKeyDilution = t3, this.hbProof = r2, this.hbSeed = "string" == typeof s2 ? new Uint8Array(o.lW.from(s2, "base64")) : s2, this.hbVoteId = "string" == typeof n2 ? new Uint8Array(o.lW.from(n2, "base64")) : n2, this.attribute_map = { hbAddress: "hb-address", hbKeyDilution: "hb-key-dilution", hbProof: "hb-proof", hbSeed: "hb-seed", hbVoteId: "hb-vote-id" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["hb-address"]) throw new Error(`Response is missing required field 'hb-address': ${e3}`);
            if (void 0 === e3["hb-key-dilution"]) throw new Error(`Response is missing required field 'hb-key-dilution': ${e3}`);
            if (void 0 === e3["hb-proof"]) throw new Error(`Response is missing required field 'hb-proof': ${e3}`);
            if (void 0 === e3["hb-seed"]) throw new Error(`Response is missing required field 'hb-seed': ${e3}`);
            if (void 0 === e3["hb-vote-id"]) throw new Error(`Response is missing required field 'hb-vote-id': ${e3}`);
            return new Ks({ hbAddress: e3["hb-address"], hbKeyDilution: e3["hb-key-dilution"], hbProof: _s.from_obj_for_encoding(e3["hb-proof"]), hbSeed: e3["hb-seed"], hbVoteId: e3["hb-vote-id"] });
          }
        }
        class Fs extends _e {
          constructor({ nonParticipation: e3, selectionParticipationKey: t3, stateProofKey: r2, voteFirstValid: s2, voteKeyDilution: n2, voteLastValid: i2, voteParticipationKey: a2 }) {
            super(), this.nonParticipation = e3, this.selectionParticipationKey = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.stateProofKey = "string" == typeof r2 ? new Uint8Array(o.lW.from(r2, "base64")) : r2, this.voteFirstValid = s2, this.voteKeyDilution = n2, this.voteLastValid = i2, this.voteParticipationKey = "string" == typeof a2 ? new Uint8Array(o.lW.from(a2, "base64")) : a2, this.attribute_map = { nonParticipation: "non-participation", selectionParticipationKey: "selection-participation-key", stateProofKey: "state-proof-key", voteFirstValid: "vote-first-valid", voteKeyDilution: "vote-key-dilution", voteLastValid: "vote-last-valid", voteParticipationKey: "vote-participation-key" };
          }
          static from_obj_for_encoding(e3) {
            return new Fs({ nonParticipation: e3["non-participation"], selectionParticipationKey: e3["selection-participation-key"], stateProofKey: e3["state-proof-key"], voteFirstValid: e3["vote-first-valid"], voteKeyDilution: e3["vote-key-dilution"], voteLastValid: e3["vote-last-valid"], voteParticipationKey: e3["vote-participation-key"] });
          }
        }
        class zs extends _e {
          constructor({ amount: e3, receiver: t3, closeAmount: r2, closeRemainderTo: s2 }) {
            super(), this.amount = e3, this.receiver = t3, this.closeAmount = r2, this.closeRemainderTo = s2, this.attribute_map = { amount: "amount", receiver: "receiver", closeAmount: "close-amount", closeRemainderTo: "close-remainder-to" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.amount) throw new Error(`Response is missing required field 'amount': ${e3}`);
            if (void 0 === e3.receiver) throw new Error(`Response is missing required field 'receiver': ${e3}`);
            return new zs({ amount: e3.amount, receiver: e3.receiver, closeAmount: e3["close-amount"], closeRemainderTo: e3["close-remainder-to"] });
          }
        }
        class Vs extends _e {
          constructor({ currentRound: e3, transaction: t3 }) {
            super(), this.currentRound = e3, this.transaction = t3, this.attribute_map = { currentRound: "current-round", transaction: "transaction" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            if (void 0 === e3.transaction) throw new Error(`Response is missing required field 'transaction': ${e3}`);
            return new Vs({ currentRound: e3["current-round"], transaction: Os.from_obj_for_encoding(e3.transaction) });
          }
        }
        class Hs extends _e {
          constructor({ logicsig: e3, multisig: t3, sig: r2 }) {
            super(), this.logicsig = e3, this.multisig = t3, this.sig = "string" == typeof r2 ? new Uint8Array(o.lW.from(r2, "base64")) : r2, this.attribute_map = { logicsig: "logicsig", multisig: "multisig", sig: "sig" };
          }
          static from_obj_for_encoding(e3) {
            return new Hs({ logicsig: void 0 !== e3.logicsig ? Gs.from_obj_for_encoding(e3.logicsig) : void 0, multisig: void 0 !== e3.multisig ? Ys.from_obj_for_encoding(e3.multisig) : void 0, sig: e3.sig });
          }
        }
        class Gs extends _e {
          constructor({ logic: e3, args: t3, multisigSignature: r2, signature: s2 }) {
            super(), this.logic = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.args = t3, this.multisigSignature = r2, this.signature = "string" == typeof s2 ? new Uint8Array(o.lW.from(s2, "base64")) : s2, this.attribute_map = { logic: "logic", args: "args", multisigSignature: "multisig-signature", signature: "signature" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3.logic) throw new Error(`Response is missing required field 'logic': ${e3}`);
            return new Gs({ logic: e3.logic, args: e3.args, multisigSignature: void 0 !== e3["multisig-signature"] ? Ys.from_obj_for_encoding(e3["multisig-signature"]) : void 0, signature: e3.signature });
          }
        }
        class Ys extends _e {
          constructor({ subsignature: e3, threshold: t3, version: r2 }) {
            super(), this.subsignature = e3, this.threshold = t3, this.version = r2, this.attribute_map = { subsignature: "subsignature", threshold: "threshold", version: "version" };
          }
          static from_obj_for_encoding(e3) {
            return new Ys({ subsignature: void 0 !== e3.subsignature ? e3.subsignature.map(Js.from_obj_for_encoding) : void 0, threshold: e3.threshold, version: e3.version });
          }
        }
        class Js extends _e {
          constructor({ publicKey: e3, signature: t3 }) {
            super(), this.publicKey = "string" == typeof e3 ? new Uint8Array(o.lW.from(e3, "base64")) : e3, this.signature = "string" == typeof t3 ? new Uint8Array(o.lW.from(t3, "base64")) : t3, this.attribute_map = { publicKey: "public-key", signature: "signature" };
          }
          static from_obj_for_encoding(e3) {
            return new Js({ publicKey: e3["public-key"], signature: e3.signature });
          }
        }
        class Xs extends _e {
          constructor({ message: e3, stateProof: t3, stateProofType: r2 }) {
            super(), this.message = e3, this.stateProof = t3, this.stateProofType = r2, this.attribute_map = { message: "message", stateProof: "state-proof", stateProofType: "state-proof-type" };
          }
          static from_obj_for_encoding(e3) {
            return new Xs({ message: void 0 !== e3.message ? Es.from_obj_for_encoding(e3.message) : void 0, stateProof: void 0 !== e3["state-proof"] ? Ts.from_obj_for_encoding(e3["state-proof"]) : void 0, stateProofType: e3["state-proof-type"] });
          }
        }
        class Zs extends _e {
          constructor({ currentRound: e3, transactions: t3, nextToken: r2 }) {
            super(), this.currentRound = e3, this.transactions = t3, this.nextToken = r2, this.attribute_map = { currentRound: "current-round", transactions: "transactions", nextToken: "next-token" };
          }
          static from_obj_for_encoding(e3) {
            if (void 0 === e3["current-round"]) throw new Error(`Response is missing required field 'current-round': ${e3}`);
            if (!Array.isArray(e3.transactions)) throw new Error(`Response is missing required array field 'transactions': ${e3}`);
            return new Zs({ currentRound: e3["current-round"], transactions: e3.transactions.map(Os.from_obj_for_encoding), nextToken: e3["next-token"] });
          }
        }
        class Qs extends Mt {
          constructor(e3, t3, r2, s2) {
            super(e3, t3), this.index = r2, this.index = r2;
            const n2 = o.lW.from(s2).toString("base64");
            this.query.name = encodeURI(`b64:${n2}`);
          }
          path() {
            return `/v2/applications/${this.index}/box`;
          }
          prepare(e3) {
            return gs.from_obj_for_encoding(e3);
          }
        }
        class en extends Mt {
          path() {
            return "/v2/accounts";
          }
          currencyGreaterThan(e3) {
            return this.query["currency-greater-than"] = e3.toString(), this;
          }
          currencyLessThan(e3) {
            return this.query["currency-less-than"] = e3, this;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          assetID(e3) {
            return this.query["asset-id"] = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          round(e3) {
            return this.query.round = e3, this;
          }
          authAddr(e3) {
            return this.query["auth-addr"] = e3, this;
          }
          applicationID(e3) {
            return this.query["application-id"] = e3, this;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
          exclude(e3) {
            return this.query.exclude = e3, this;
          }
        }
        class tn extends Mt {
          path() {
            return "/v2/block-headers";
          }
          absent(e3) {
            return this.query.absent = e3, this;
          }
          afterTime(e3) {
            return this.query["after-time"] = e3, this;
          }
          beforeTime(e3) {
            return this.query["before-time"] = e3, this;
          }
          expired(e3) {
            return this.query.expired = e3, this;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          maxRound(e3) {
            return this.query["max-round"] = e3, this;
          }
          minRound(e3) {
            return this.query["min-round"] = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          proposers(e3) {
            return this.query.proposers = e3, this;
          }
        }
        class rn extends Mt {
          path() {
            return "/v2/transactions";
          }
          notePrefix(e3) {
            return this.query["note-prefix"] = Br(e3), this;
          }
          txType(e3) {
            return this.query["tx-type"] = e3, this;
          }
          sigType(e3) {
            return this.query["sig-type"] = e3, this;
          }
          txid(e3) {
            return this.query.txid = e3, this;
          }
          round(e3) {
            return this.query.round = e3, this;
          }
          minRound(e3) {
            return this.query["min-round"] = e3, this;
          }
          maxRound(e3) {
            return this.query["max-round"] = e3, this;
          }
          assetID(e3) {
            return this.query["asset-id"] = e3, this;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          beforeTime(e3) {
            return this.query["before-time"] = e3, this;
          }
          afterTime(e3) {
            return this.query["after-time"] = e3, this;
          }
          addressRole(e3) {
            return this.query["address-role"] = e3, this;
          }
          address(e3) {
            return this.query.address = e3, this;
          }
          excludeCloseTo(e3) {
            return this.query["exclude-close-to"] = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          rekeyTo(e3) {
            return this.query["rekey-to"] = e3, this;
          }
          applicationID(e3) {
            return this.query["application-id"] = e3, this;
          }
          currencyGreaterThan(e3) {
            return this.query["currency-greater-than"] = e3.toString(), this;
          }
          currencyLessThan(e3) {
            return this.query["currency-less-than"] = e3, this;
          }
        }
        class sn extends Mt {
          path() {
            return "/v2/assets";
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          creator(e3) {
            return this.query.creator = e3, this;
          }
          name(e3) {
            return this.query.name = e3, this;
          }
          unit(e3) {
            return this.query.unit = e3, this;
          }
          index(e3) {
            return this.query["asset-id"] = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
        }
        class nn extends Mt {
          path() {
            return "/v2/applications";
          }
          index(e3) {
            return this.query["application-id"] = e3, this;
          }
          creator(e3) {
            return this.query.creator = e3, this;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          includeAll(e3 = true) {
            return this.query["include-all"] = e3, this;
          }
        }
        class on extends Mt {
          constructor(e3, t3, r2) {
            super(e3, t3), this.index = r2, this.index = r2;
          }
          path() {
            return `/v2/applications/${this.index}/boxes`;
          }
          nextToken(e3) {
            return this.query.next = e3, this;
          }
          limit(e3) {
            return this.query.limit = e3, this;
          }
          prepare(e3) {
            return ys.from_obj_for_encoding(e3);
          }
        }
        class an extends ve {
          constructor(e3, t3 = "http://127.0.0.1", r2 = 8080, s2 = {}) {
            super("X-Indexer-API-Token", e3, t3, r2, s2);
          }
          makeHealthCheck() {
            return new Tr(this.c, this.intDecoding);
          }
          lookupAssetBalances(e3) {
            return new Ir(this.c, this.intDecoding, e3);
          }
          lookupAssetTransactions(e3) {
            return new Pr(this.c, this.intDecoding, e3);
          }
          lookupAccountTransactions(e3) {
            return new Ur(this.c, this.intDecoding, e3);
          }
          lookupBlock(e3) {
            return new jr(this.c, this.intDecoding, e3);
          }
          lookupTransactionByID(e3) {
            return new qr(this.c, this.intDecoding, e3);
          }
          lookupAccountByID(e3) {
            return new $r(this.c, this.intDecoding, e3);
          }
          lookupAccountAssets(e3) {
            return new Cr(this.c, this.intDecoding, e3);
          }
          lookupAccountCreatedAssets(e3) {
            return new Dr(this.c, this.intDecoding, e3);
          }
          lookupAccountAppLocalStates(e3) {
            return new Or(this.c, this.intDecoding, e3);
          }
          lookupAccountCreatedApplications(e3) {
            return new Lr(this.c, this.intDecoding, e3);
          }
          lookupAssetByID(e3) {
            return new Mr(this.c, this.intDecoding, e3);
          }
          lookupApplications(e3) {
            return new Wr(this.c, this.intDecoding, e3);
          }
          lookupApplicationLogs(e3) {
            return new Nr(this.c, this.intDecoding, e3);
          }
          searchAccounts() {
            return new en(this.c, this.intDecoding);
          }
          searchForTransactions() {
            return new rn(this.c, this.intDecoding);
          }
          searchForBlockHeaders() {
            return new tn(this.c, this.intDecoding);
          }
          searchForAssets() {
            return new sn(this.c, this.intDecoding);
          }
          searchForApplications() {
            return new nn(this.c, this.intDecoding);
          }
          searchForApplicationBoxes(e3) {
            return new on(this.c, this.intDecoding, e3);
          }
          lookupApplicationBoxByIDandName(e3, t3) {
            return new Qs(this.c, this.intDecoding, e3, t3);
          }
        }
        async function cn(e3, t3, r2) {
          const s2 = await e3.status().do();
          if (void 0 === s2) throw new Error("Unable to get node status");
          const n2 = s2["last-round"] + 1;
          let i2 = n2;
          for (; i2 < n2 + r2; ) {
            let r3 = false;
            try {
              const s3 = await e3.pendingTransactionInformation(t3).do();
              if (s3["confirmed-round"]) return s3;
              if (s3["pool-error"]) throw r3 = true, new Error(`Transaction Rejected: ${s3["pool-error"]}`);
            } catch (e4) {
              if (r3) throw e4;
            }
            await e3.statusAfterBlock(i2).do(), i2 += 1;
          }
          throw new Error(`Transaction not confirmed after ${r2} rounds`);
        }
        function un(e3, t3) {
          let r2 = e3.toString(16);
          r2.length !== 2 * t3 && (r2 = r2.padStart(2 * t3, "0"));
          const s2 = new Uint8Array(r2.length / 2);
          for (let e4 = 0, t4 = 0; e4 < r2.length / 2; e4++, t4 += 2) s2[e4] = parseInt(r2.slice(t4, t4 + 2), 16);
          return s2;
        }
        function ln(e3) {
          let t3 = BigInt(0);
          const r2 = o.lW.from(e3);
          for (let s2 = 0; s2 < e3.length; s2++) t3 = BigInt(Number(r2.readUIntBE(s2, 1))) + t3 * BigInt(256);
          return t3;
        }
        function dn() {
          const e3 = w((t3 = c().box.secretKeyLength, (function() {
            const { navigator: e4 } = globalThis;
            return "object" == typeof e4 && "ReactNative" === e4.product;
          })() && console.warn("It looks like you're running in react-native. In order to perform common crypto operations you will need to polyfill common operations such as crypto.getRandomValues"), c().randomBytes(t3)));
          var t3;
          return { addr: F(e3.publicKey), sk: e3.secretKey };
        }
        const hn = ["abandon", "ability", "able", "about", "above", "absent", "absorb", "abstract", "absurd", "abuse", "access", "accident", "account", "accuse", "achieve", "acid", "acoustic", "acquire", "across", "act", "action", "actor", "actress", "actual", "adapt", "add", "addict", "address", "adjust", "admit", "adult", "advance", "advice", "aerobic", "affair", "afford", "afraid", "again", "age", "agent", "agree", "ahead", "aim", "air", "airport", "aisle", "alarm", "album", "alcohol", "alert", "alien", "all", "alley", "allow", "almost", "alone", "alpha", "already", "also", "alter", "always", "amateur", "amazing", "among", "amount", "amused", "analyst", "anchor", "ancient", "anger", "angle", "angry", "animal", "ankle", "announce", "annual", "another", "answer", "antenna", "antique", "anxiety", "any", "apart", "apology", "appear", "apple", "approve", "april", "arch", "arctic", "area", "arena", "argue", "arm", "armed", "armor", "army", "around", "arrange", "arrest", "arrive", "arrow", "art", "artefact", "artist", "artwork", "ask", "aspect", "assault", "asset", "assist", "assume", "asthma", "athlete", "atom", "attack", "attend", "attitude", "attract", "auction", "audit", "august", "aunt", "author", "auto", "autumn", "average", "avocado", "avoid", "awake", "aware", "away", "awesome", "awful", "awkward", "axis", "baby", "bachelor", "bacon", "badge", "bag", "balance", "balcony", "ball", "bamboo", "banana", "banner", "bar", "barely", "bargain", "barrel", "base", "basic", "basket", "battle", "beach", "bean", "beauty", "because", "become", "beef", "before", "begin", "behave", "behind", "believe", "below", "belt", "bench", "benefit", "best", "betray", "better", "between", "beyond", "bicycle", "bid", "bike", "bind", "biology", "bird", "birth", "bitter", "black", "blade", "blame", "blanket", "blast", "bleak", "bless", "blind", "blood", "blossom", "blouse", "blue", "blur", "blush", "board", "boat", "body", "boil", "bomb", "bone", "bonus", "book", "boost", "border", "boring", "borrow", "boss", "bottom", "bounce", "box", "boy", "bracket", "brain", "brand", "brass", "brave", "bread", "breeze", "brick", "bridge", "brief", "bright", "bring", "brisk", "broccoli", "broken", "bronze", "broom", "brother", "brown", "brush", "bubble", "buddy", "budget", "buffalo", "build", "bulb", "bulk", "bullet", "bundle", "bunker", "burden", "burger", "burst", "bus", "business", "busy", "butter", "buyer", "buzz", "cabbage", "cabin", "cable", "cactus", "cage", "cake", "call", "calm", "camera", "camp", "can", "canal", "cancel", "candy", "cannon", "canoe", "canvas", "canyon", "capable", "capital", "captain", "car", "carbon", "card", "cargo", "carpet", "carry", "cart", "case", "cash", "casino", "castle", "casual", "cat", "catalog", "catch", "category", "cattle", "caught", "cause", "caution", "cave", "ceiling", "celery", "cement", "census", "century", "cereal", "certain", "chair", "chalk", "champion", "change", "chaos", "chapter", "charge", "chase", "chat", "cheap", "check", "cheese", "chef", "cherry", "chest", "chicken", "chief", "child", "chimney", "choice", "choose", "chronic", "chuckle", "chunk", "churn", "cigar", "cinnamon", "circle", "citizen", "city", "civil", "claim", "clap", "clarify", "claw", "clay", "clean", "clerk", "clever", "click", "client", "cliff", "climb", "clinic", "clip", "clock", "clog", "close", "cloth", "cloud", "clown", "club", "clump", "cluster", "clutch", "coach", "coast", "coconut", "code", "coffee", "coil", "coin", "collect", "color", "column", "combine", "come", "comfort", "comic", "common", "company", "concert", "conduct", "confirm", "congress", "connect", "consider", "control", "convince", "cook", "cool", "copper", "copy", "coral", "core", "corn", "correct", "cost", "cotton", "couch", "country", "couple", "course", "cousin", "cover", "coyote", "crack", "cradle", "craft", "cram", "crane", "crash", "crater", "crawl", "crazy", "cream", "credit", "creek", "crew", "cricket", "crime", "crisp", "critic", "crop", "cross", "crouch", "crowd", "crucial", "cruel", "cruise", "crumble", "crunch", "crush", "cry", "crystal", "cube", "culture", "cup", "cupboard", "curious", "current", "curtain", "curve", "cushion", "custom", "cute", "cycle", "dad", "damage", "damp", "dance", "danger", "daring", "dash", "daughter", "dawn", "day", "deal", "debate", "debris", "decade", "december", "decide", "decline", "decorate", "decrease", "deer", "defense", "define", "defy", "degree", "delay", "deliver", "demand", "demise", "denial", "dentist", "deny", "depart", "depend", "deposit", "depth", "deputy", "derive", "describe", "desert", "design", "desk", "despair", "destroy", "detail", "detect", "develop", "device", "devote", "diagram", "dial", "diamond", "diary", "dice", "diesel", "diet", "differ", "digital", "dignity", "dilemma", "dinner", "dinosaur", "direct", "dirt", "disagree", "discover", "disease", "dish", "dismiss", "disorder", "display", "distance", "divert", "divide", "divorce", "dizzy", "doctor", "document", "dog", "doll", "dolphin", "domain", "donate", "donkey", "donor", "door", "dose", "double", "dove", "draft", "dragon", "drama", "drastic", "draw", "dream", "dress", "drift", "drill", "drink", "drip", "drive", "drop", "drum", "dry", "duck", "dumb", "dune", "during", "dust", "dutch", "duty", "dwarf", "dynamic", "eager", "eagle", "early", "earn", "earth", "easily", "east", "easy", "echo", "ecology", "economy", "edge", "edit", "educate", "effort", "egg", "eight", "either", "elbow", "elder", "electric", "elegant", "element", "elephant", "elevator", "elite", "else", "embark", "embody", "embrace", "emerge", "emotion", "employ", "empower", "empty", "enable", "enact", "end", "endless", "endorse", "enemy", "energy", "enforce", "engage", "engine", "enhance", "enjoy", "enlist", "enough", "enrich", "enroll", "ensure", "enter", "entire", "entry", "envelope", "episode", "equal", "equip", "era", "erase", "erode", "erosion", "error", "erupt", "escape", "essay", "essence", "estate", "eternal", "ethics", "evidence", "evil", "evoke", "evolve", "exact", "example", "excess", "exchange", "excite", "exclude", "excuse", "execute", "exercise", "exhaust", "exhibit", "exile", "exist", "exit", "exotic", "expand", "expect", "expire", "explain", "expose", "express", "extend", "extra", "eye", "eyebrow", "fabric", "face", "faculty", "fade", "faint", "faith", "fall", "false", "fame", "family", "famous", "fan", "fancy", "fantasy", "farm", "fashion", "fat", "fatal", "father", "fatigue", "fault", "favorite", "feature", "february", "federal", "fee", "feed", "feel", "female", "fence", "festival", "fetch", "fever", "few", "fiber", "fiction", "field", "figure", "file", "film", "filter", "final", "find", "fine", "finger", "finish", "fire", "firm", "first", "fiscal", "fish", "fit", "fitness", "fix", "flag", "flame", "flash", "flat", "flavor", "flee", "flight", "flip", "float", "flock", "floor", "flower", "fluid", "flush", "fly", "foam", "focus", "fog", "foil", "fold", "follow", "food", "foot", "force", "forest", "forget", "fork", "fortune", "forum", "forward", "fossil", "foster", "found", "fox", "fragile", "frame", "frequent", "fresh", "friend", "fringe", "frog", "front", "frost", "frown", "frozen", "fruit", "fuel", "fun", "funny", "furnace", "fury", "future", "gadget", "gain", "galaxy", "gallery", "game", "gap", "garage", "garbage", "garden", "garlic", "garment", "gas", "gasp", "gate", "gather", "gauge", "gaze", "general", "genius", "genre", "gentle", "genuine", "gesture", "ghost", "giant", "gift", "giggle", "ginger", "giraffe", "girl", "give", "glad", "glance", "glare", "glass", "glide", "glimpse", "globe", "gloom", "glory", "glove", "glow", "glue", "goat", "goddess", "gold", "good", "goose", "gorilla", "gospel", "gossip", "govern", "gown", "grab", "grace", "grain", "grant", "grape", "grass", "gravity", "great", "green", "grid", "grief", "grit", "grocery", "group", "grow", "grunt", "guard", "guess", "guide", "guilt", "guitar", "gun", "gym", "habit", "hair", "half", "hammer", "hamster", "hand", "happy", "harbor", "hard", "harsh", "harvest", "hat", "have", "hawk", "hazard", "head", "health", "heart", "heavy", "hedgehog", "height", "hello", "helmet", "help", "hen", "hero", "hidden", "high", "hill", "hint", "hip", "hire", "history", "hobby", "hockey", "hold", "hole", "holiday", "hollow", "home", "honey", "hood", "hope", "horn", "horror", "horse", "hospital", "host", "hotel", "hour", "hover", "hub", "huge", "human", "humble", "humor", "hundred", "hungry", "hunt", "hurdle", "hurry", "hurt", "husband", "hybrid", "ice", "icon", "idea", "identify", "idle", "ignore", "ill", "illegal", "illness", "image", "imitate", "immense", "immune", "impact", "impose", "improve", "impulse", "inch", "include", "income", "increase", "index", "indicate", "indoor", "industry", "infant", "inflict", "inform", "inhale", "inherit", "initial", "inject", "injury", "inmate", "inner", "innocent", "input", "inquiry", "insane", "insect", "inside", "inspire", "install", "intact", "interest", "into", "invest", "invite", "involve", "iron", "island", "isolate", "issue", "item", "ivory", "jacket", "jaguar", "jar", "jazz", "jealous", "jeans", "jelly", "jewel", "job", "join", "joke", "journey", "joy", "judge", "juice", "jump", "jungle", "junior", "junk", "just", "kangaroo", "keen", "keep", "ketchup", "key", "kick", "kid", "kidney", "kind", "kingdom", "kiss", "kit", "kitchen", "kite", "kitten", "kiwi", "knee", "knife", "knock", "know", "lab", "label", "labor", "ladder", "lady", "lake", "lamp", "language", "laptop", "large", "later", "latin", "laugh", "laundry", "lava", "law", "lawn", "lawsuit", "layer", "lazy", "leader", "leaf", "learn", "leave", "lecture", "left", "leg", "legal", "legend", "leisure", "lemon", "lend", "length", "lens", "leopard", "lesson", "letter", "level", "liar", "liberty", "library", "license", "life", "lift", "light", "like", "limb", "limit", "link", "lion", "liquid", "list", "little", "live", "lizard", "load", "loan", "lobster", "local", "lock", "logic", "lonely", "long", "loop", "lottery", "loud", "lounge", "love", "loyal", "lucky", "luggage", "lumber", "lunar", "lunch", "luxury", "lyrics", "machine", "mad", "magic", "magnet", "maid", "mail", "main", "major", "make", "mammal", "man", "manage", "mandate", "mango", "mansion", "manual", "maple", "marble", "march", "margin", "marine", "market", "marriage", "mask", "mass", "master", "match", "material", "math", "matrix", "matter", "maximum", "maze", "meadow", "mean", "measure", "meat", "mechanic", "medal", "media", "melody", "melt", "member", "memory", "mention", "menu", "mercy", "merge", "merit", "merry", "mesh", "message", "metal", "method", "middle", "midnight", "milk", "million", "mimic", "mind", "minimum", "minor", "minute", "miracle", "mirror", "misery", "miss", "mistake", "mix", "mixed", "mixture", "mobile", "model", "modify", "mom", "moment", "monitor", "monkey", "monster", "month", "moon", "moral", "more", "morning", "mosquito", "mother", "motion", "motor", "mountain", "mouse", "move", "movie", "much", "muffin", "mule", "multiply", "muscle", "museum", "mushroom", "music", "must", "mutual", "myself", "mystery", "myth", "naive", "name", "napkin", "narrow", "nasty", "nation", "nature", "near", "neck", "need", "negative", "neglect", "neither", "nephew", "nerve", "nest", "net", "network", "neutral", "never", "news", "next", "nice", "night", "noble", "noise", "nominee", "noodle", "normal", "north", "nose", "notable", "note", "nothing", "notice", "novel", "now", "nuclear", "number", "nurse", "nut", "oak", "obey", "object", "oblige", "obscure", "observe", "obtain", "obvious", "occur", "ocean", "october", "odor", "off", "offer", "office", "often", "oil", "okay", "old", "olive", "olympic", "omit", "once", "one", "onion", "online", "only", "open", "opera", "opinion", "oppose", "option", "orange", "orbit", "orchard", "order", "ordinary", "organ", "orient", "original", "orphan", "ostrich", "other", "outdoor", "outer", "output", "outside", "oval", "oven", "over", "own", "owner", "oxygen", "oyster", "ozone", "pact", "paddle", "page", "pair", "palace", "palm", "panda", "panel", "panic", "panther", "paper", "parade", "parent", "park", "parrot", "party", "pass", "patch", "path", "patient", "patrol", "pattern", "pause", "pave", "payment", "peace", "peanut", "pear", "peasant", "pelican", "pen", "penalty", "pencil", "people", "pepper", "perfect", "permit", "person", "pet", "phone", "photo", "phrase", "physical", "piano", "picnic", "picture", "piece", "pig", "pigeon", "pill", "pilot", "pink", "pioneer", "pipe", "pistol", "pitch", "pizza", "place", "planet", "plastic", "plate", "play", "please", "pledge", "pluck", "plug", "plunge", "poem", "poet", "point", "polar", "pole", "police", "pond", "pony", "pool", "popular", "portion", "position", "possible", "post", "potato", "pottery", "poverty", "powder", "power", "practice", "praise", "predict", "prefer", "prepare", "present", "pretty", "prevent", "price", "pride", "primary", "print", "priority", "prison", "private", "prize", "problem", "process", "produce", "profit", "program", "project", "promote", "proof", "property", "prosper", "protect", "proud", "provide", "public", "pudding", "pull", "pulp", "pulse", "pumpkin", "punch", "pupil", "puppy", "purchase", "purity", "purpose", "purse", "push", "put", "puzzle", "pyramid", "quality", "quantum", "quarter", "question", "quick", "quit", "quiz", "quote", "rabbit", "raccoon", "race", "rack", "radar", "radio", "rail", "rain", "raise", "rally", "ramp", "ranch", "random", "range", "rapid", "rare", "rate", "rather", "raven", "raw", "razor", "ready", "real", "reason", "rebel", "rebuild", "recall", "receive", "recipe", "record", "recycle", "reduce", "reflect", "reform", "refuse", "region", "regret", "regular", "reject", "relax", "release", "relief", "rely", "remain", "remember", "remind", "remove", "render", "renew", "rent", "reopen", "repair", "repeat", "replace", "report", "require", "rescue", "resemble", "resist", "resource", "response", "result", "retire", "retreat", "return", "reunion", "reveal", "review", "reward", "rhythm", "rib", "ribbon", "rice", "rich", "ride", "ridge", "rifle", "right", "rigid", "ring", "riot", "ripple", "risk", "ritual", "rival", "river", "road", "roast", "robot", "robust", "rocket", "romance", "roof", "rookie", "room", "rose", "rotate", "rough", "round", "route", "royal", "rubber", "rude", "rug", "rule", "run", "runway", "rural", "sad", "saddle", "sadness", "safe", "sail", "salad", "salmon", "salon", "salt", "salute", "same", "sample", "sand", "satisfy", "satoshi", "sauce", "sausage", "save", "say", "scale", "scan", "scare", "scatter", "scene", "scheme", "school", "science", "scissors", "scorpion", "scout", "scrap", "screen", "script", "scrub", "sea", "search", "season", "seat", "second", "secret", "section", "security", "seed", "seek", "segment", "select", "sell", "seminar", "senior", "sense", "sentence", "series", "service", "session", "settle", "setup", "seven", "shadow", "shaft", "shallow", "share", "shed", "shell", "sheriff", "shield", "shift", "shine", "ship", "shiver", "shock", "shoe", "shoot", "shop", "short", "shoulder", "shove", "shrimp", "shrug", "shuffle", "shy", "sibling", "sick", "side", "siege", "sight", "sign", "silent", "silk", "silly", "silver", "similar", "simple", "since", "sing", "siren", "sister", "situate", "six", "size", "skate", "sketch", "ski", "skill", "skin", "skirt", "skull", "slab", "slam", "sleep", "slender", "slice", "slide", "slight", "slim", "slogan", "slot", "slow", "slush", "small", "smart", "smile", "smoke", "smooth", "snack", "snake", "snap", "sniff", "snow", "soap", "soccer", "social", "sock", "soda", "soft", "solar", "soldier", "solid", "solution", "solve", "someone", "song", "soon", "sorry", "sort", "soul", "sound", "soup", "source", "south", "space", "spare", "spatial", "spawn", "speak", "special", "speed", "spell", "spend", "sphere", "spice", "spider", "spike", "spin", "spirit", "split", "spoil", "sponsor", "spoon", "sport", "spot", "spray", "spread", "spring", "spy", "square", "squeeze", "squirrel", "stable", "stadium", "staff", "stage", "stairs", "stamp", "stand", "start", "state", "stay", "steak", "steel", "stem", "step", "stereo", "stick", "still", "sting", "stock", "stomach", "stone", "stool", "story", "stove", "strategy", "street", "strike", "strong", "struggle", "student", "stuff", "stumble", "style", "subject", "submit", "subway", "success", "such", "sudden", "suffer", "sugar", "suggest", "suit", "summer", "sun", "sunny", "sunset", "super", "supply", "supreme", "sure", "surface", "surge", "surprise", "surround", "survey", "suspect", "sustain", "swallow", "swamp", "swap", "swarm", "swear", "sweet", "swift", "swim", "swing", "switch", "sword", "symbol", "symptom", "syrup", "system", "table", "tackle", "tag", "tail", "talent", "talk", "tank", "tape", "target", "task", "taste", "tattoo", "taxi", "teach", "team", "tell", "ten", "tenant", "tennis", "tent", "term", "test", "text", "thank", "that", "theme", "then", "theory", "there", "they", "thing", "this", "thought", "three", "thrive", "throw", "thumb", "thunder", "ticket", "tide", "tiger", "tilt", "timber", "time", "tiny", "tip", "tired", "tissue", "title", "toast", "tobacco", "today", "toddler", "toe", "together", "toilet", "token", "tomato", "tomorrow", "tone", "tongue", "tonight", "tool", "tooth", "top", "topic", "topple", "torch", "tornado", "tortoise", "toss", "total", "tourist", "toward", "tower", "town", "toy", "track", "trade", "traffic", "tragic", "train", "transfer", "trap", "trash", "travel", "tray", "treat", "tree", "trend", "trial", "tribe", "trick", "trigger", "trim", "trip", "trophy", "trouble", "truck", "true", "truly", "trumpet", "trust", "truth", "try", "tube", "tuition", "tumble", "tuna", "tunnel", "turkey", "turn", "turtle", "twelve", "twenty", "twice", "twin", "twist", "two", "type", "typical", "ugly", "umbrella", "unable", "unaware", "uncle", "uncover", "under", "undo", "unfair", "unfold", "unhappy", "uniform", "unique", "unit", "universe", "unknown", "unlock", "until", "unusual", "unveil", "update", "upgrade", "uphold", "upon", "upper", "upset", "urban", "urge", "usage", "use", "used", "useful", "useless", "usual", "utility", "vacant", "vacuum", "vague", "valid", "valley", "valve", "van", "vanish", "vapor", "various", "vast", "vault", "vehicle", "velvet", "vendor", "venture", "venue", "verb", "verify", "version", "very", "vessel", "veteran", "viable", "vibrant", "vicious", "victory", "video", "view", "village", "vintage", "violin", "virtual", "virus", "visa", "visit", "visual", "vital", "vivid", "vocal", "voice", "void", "volcano", "volume", "vote", "voyage", "wage", "wagon", "wait", "walk", "wall", "walnut", "want", "warfare", "warm", "warrior", "wash", "wasp", "waste", "water", "wave", "way", "wealth", "weapon", "wear", "weasel", "weather", "web", "wedding", "weekend", "weird", "welcome", "west", "wet", "whale", "what", "wheat", "wheel", "when", "where", "whip", "whisper", "wide", "width", "wife", "wild", "will", "win", "window", "wine", "wing", "wink", "winner", "winter", "wire", "wisdom", "wise", "wish", "witness", "wolf", "woman", "wonder", "wood", "wool", "word", "work", "world", "worry", "worth", "wrap", "wreck", "wrestle", "wrist", "write", "wrong", "yard", "year", "yellow", "you", "young", "youth", "zebra", "zero", "zone", "zoo"], pn = "failed to decode mnemonic", fn = "the mnemonic contains a word that is not in the wordlist";
        function gn(e3) {
          const t3 = [];
          let r2 = 0, s2 = 0;
          return e3.forEach((function(e4) {
            r2 |= e4 << s2, s2 += 8, s2 >= 11 && (t3.push(2047 & r2), r2 >>= 11, s2 -= 11);
          })), s2 && t3.push(r2), t3;
        }
        function mn(e3) {
          return e3.map(((e4) => hn[e4]));
        }
        function yn(e3) {
          return mn(gn(y(e3)))[0];
        }
        function wn(e3) {
          if (e3.length !== S) throw new RangeError(`Seed length must be ${S}`);
          const t3 = mn(gn(e3)), r2 = yn(e3);
          return `${t3.join(" ")} ${r2}`;
        }
        function bn(e3) {
          const t3 = e3.split(" "), r2 = t3.slice(0, 24);
          for (const e4 of r2) if (-1 === hn.indexOf(e4)) throw new Error(fn);
          const s2 = t3[t3.length - 1];
          let n2 = (function(e4) {
            const t4 = [];
            let r3 = 0, s3 = 0;
            return e4.forEach((function(e5) {
              for (r3 |= e5 << s3, s3 += 11; s3 >= 8; ) t4.push(255 & r3), r3 >>= 8, s3 -= 8;
            })), s3 && t4.push(r3), new Uint8Array(t4);
          })(r2.map(((e4) => hn.indexOf(e4))));
          if (33 !== n2.length) throw new Error(pn);
          if (0 !== n2[n2.length - 1]) throw new Error(pn);
          if (n2 = n2.slice(0, n2.length - 1), yn(n2) === s2) return n2;
          throw new Error(pn);
        }
        function vn(e3) {
          const t3 = w(bn(e3));
          return { addr: F(t3.publicKey), sk: t3.secretKey };
        }
        function xn(e3) {
          return wn(e3.slice(0, S));
        }
        function _n(e3) {
          return bn(e3);
        }
        function An(e3) {
          return wn(e3);
        }
        class En {
          constructor(e3) {
            if (this.name = "Transaction group", this.tag = o.lW.from("TG"), e3.length > 16) {
              const t3 = `${e3.length.toString()} transactions grouped together but max group size is ${16 .toString()}`;
              throw Error(t3);
            }
            this.txGroupHashes = e3;
          }
          get_obj_for_encoding() {
            return { txlist: this.txGroupHashes };
          }
          static from_obj_for_encoding(e3) {
            const t3 = Object.create(this.prototype);
            t3.name = "Transaction group", t3.tag = o.lW.from("TG"), t3.txGroupHashes = [];
            for (const r2 of e3.txlist) t3.txGroupHashes.push(o.lW.from(r2));
            return t3;
          }
          toByte() {
            return X(this.get_obj_for_encoding());
          }
        }
        function kn(e3) {
          const t3 = [];
          for (const r3 of e3) {
            const e4 = le(r3);
            t3.push(e4.rawTxID());
          }
          const r2 = new En(t3), s2 = r2.toByte(), n2 = y(o.lW.from(m(r2.tag, s2)));
          return o.lW.from(n2);
        }
        function Sn(e3, t3) {
          const r2 = kn(e3), s2 = [];
          for (const n2 of e3) {
            const e4 = le(n2);
            t3 && F(e4.from.publicKey) !== t3 || (e4.group = r2, s2.push(e4));
          }
          return s2;
        }
        const Rn = "Not enough multisig transactions to merge. Need at least two", Tn = "Cannot merge txs. txIDs differ", In = "Cannot merge txs. Auth addrs differ", Bn = "Cannot merge txs. Multisig preimages differ", Un = "Cannot merge txs. subsigs are mismatched.", Pn = "Cannot mutate a multisig field as it would invalidate all existing signatures.";
        function jn(e3, { version: t3, threshold: r2, addrs: s2 }) {
          const n2 = s2.map(((e4) => N(e4).publicKey)), i2 = { v: t3, thr: r2, subsig: n2.map(((e4) => ({ pk: o.lW.from(e4) }))) }, a2 = e3.get_obj_for_encoding(), c2 = { msig: i2, txn: a2 }, u2 = z({ version: t3, threshold: r2, pks: n2 });
          return F(a2.snd) !== F(u2) && (c2.sgnr = o.lW.from(u2)), new Uint8Array(X(c2));
        }
        function qn(e3, { rawSig: t3, myPk: r2 }, { version: s2, threshold: n2, pks: i2 }) {
          const a2 = Z(jn(e3, { version: s2, threshold: n2, addrs: i2.map(((e4) => F(e4))) }));
          let c2 = false;
          if (a2.msig.subsig.forEach(((e4, s3) => {
            _(e4.pk, r2) && (c2 = true, a2.msig.subsig[s3].s = t3);
          })), false === c2) throw new Error("Key does not exist");
          const u2 = z({ version: s2, threshold: n2, pks: i2 });
          return F(a2.txn.snd) !== F(u2) && (a2.sgnr = o.lW.from(u2)), new Uint8Array(X(a2));
        }
        class $n extends ie {
          addLease() {
            throw new Error(Pn);
          }
          addRekey() {
            throw new Error(Pn);
          }
          signTxn(e3) {
            throw new Error("Cannot sign a multisig transaction using `signTxn`. Use `partialSignTxn` instead.");
          }
          partialSignTxn({ version: e3, threshold: t3, pks: r2 }, s2) {
            const n2 = v(s2).publicKey;
            return qn(this, { rawSig: this.rawSignTxn(s2), myPk: n2 }, { version: e3, threshold: t3, pks: r2 });
          }
          partialSignWithMultisigSignature(e3, t3, r2) {
            if (!b(r2.length)) throw new Error("Cannot add multisig signature. Signature is not of the correct length.");
            return qn(this, { rawSig: r2, myPk: N(t3).publicKey }, e3);
          }
          static from_obj_for_encoding(e3) {
            return super.from_obj_for_encoding(e3);
          }
        }
        function Cn(e3) {
          if (e3.length < 2) throw new Error(Rn);
          const t3 = Z(e3[0]), r2 = $n.from_obj_for_encoding(t3.txn).txID(), s2 = t3.sgnr ? F(t3.sgnr) : void 0, n2 = F(z({ version: t3.msig.v, threshold: t3.msig.thr, pks: t3.msig.subsig.map(((e4) => e4.pk)) })), i2 = t3.msig.subsig.map(((e4) => ({ ...e4 })));
          for (let a3 = 1; a3 < e3.length; a3++) {
            const c2 = Z(e3[a3]);
            if ($n.from_obj_for_encoding(c2.txn).txID() !== r2) throw new Error(Tn);
            if (s2 !== (c2.sgnr ? F(c2.sgnr) : void 0)) throw new Error(In);
            if (c2.msig.subsig.length !== t3.msig.subsig.length) throw new Error(Bn);
            if (n2 !== F(z({ version: c2.msig.v, threshold: c2.msig.thr, pks: c2.msig.subsig.map(((e4) => e4.pk)) }))) throw new Error(Bn);
            c2.msig.subsig.forEach(((e4, t4) => {
              if (!e4.s) return;
              const r3 = i2[t4];
              if (r3.s && 0 !== o.lW.compare(o.lW.from(e4.s), o.lW.from(r3.s))) throw new Error(Un);
              r3.s = e4.s;
            }));
          }
          const a2 = { msig: { v: t3.msig.v, thr: t3.msig.thr, subsig: i2 }, txn: t3.txn };
          return void 0 !== s2 && (a2.sgnr = o.lW.from(N(s2).publicKey)), new Uint8Array(X(a2));
        }
        function Dn(e3, t3, r2) {
          const s2 = t3.v, n2 = t3.thr, i2 = t3.subsig, o2 = i2.map(((e4) => e4.pk));
          if (t3.subsig.length < n2) return false;
          let a2;
          try {
            a2 = z({ version: s2, threshold: n2, pks: o2 });
          } catch (e4) {
            return false;
          }
          if (!g(a2, r2)) return false;
          let c2 = 0;
          for (const e4 of i2) void 0 !== e4.s && (c2 += 1);
          if (c2 < n2) return false;
          let u2 = 0;
          for (const t4 of i2) void 0 !== t4.s && A(e3, t4.s, t4.pk) && (u2 += 1);
          return !(u2 < n2);
        }
        function On(e3, { version: t3, threshold: r2, addrs: s2 }, n2) {
          const i2 = V({ version: t3, threshold: r2, addrs: s2 });
          Object.prototype.hasOwnProperty.call(e3, "from") || (e3.from = i2);
          const o2 = s2.map(((e4) => N(e4).publicKey));
          let a2, c2;
          return e3 instanceof ie ? (a2 = e3, c2 = $n.prototype.partialSignTxn.call(a2, { version: t3, threshold: r2, pks: o2 }, n2)) : (a2 = new $n(e3), c2 = a2.partialSignTxn({ version: t3, threshold: r2, pks: o2 }, n2)), { txID: a2.txID().toString(), blob: c2 };
        }
        function Ln(e3, { version: t3, threshold: r2, addrs: s2 }, n2) {
          const i2 = s2.map(((e4) => N(e4).publicKey)), o2 = Z(e3), a2 = $n.from_obj_for_encoding(o2.txn), c2 = a2.partialSignTxn({ version: t3, threshold: r2, pks: i2 }, n2);
          return { txID: a2.txID().toString(), blob: Cn([e3, c2]) };
        }
        function Mn(e3, { version: t3, threshold: r2, addrs: s2 }, n2, i2) {
          const o2 = s2.map(((e4) => N(e4).publicKey)), a2 = Z(e3), c2 = $n.from_obj_for_encoding(a2.txn), u2 = c2.partialSignWithMultisigSignature({ version: t3, threshold: r2, pks: o2 }, n2, i2);
          return { txID: c2.txID().toString(), blob: Cn([e3, u2]) };
        }
        function Wn({ version: e3, threshold: t3, addrs: r2 }) {
          return V({ version: e3, threshold: t3, addrs: r2 });
        }
        function Nn(e3) {
          if (!e3 || 0 === e3.length) throw new Error("empty program");
          const t3 = "\n".charCodeAt(0), r2 = " ".charCodeAt(0), s2 = "~".charCodeAt(0);
          if (e3.every(((e4) => e4 === t3 || ((e5) => r2 <= e5 && e5 <= s2)(e4)))) {
            const t4 = o.lW.from(e3).toString();
            if (K(t4)) throw new Error("requesting program bytes, get Algorand address");
            if (o.lW.from(t4, "base64").toString("base64") === t4) throw new Error("program should not be b64 encoded");
            throw new Error("program bytes are all ASCII printable characters, not looking like Teal byte code");
          }
        }
        class Kn {
          constructor(e3, t3) {
            if (this.tag = o.lW.from("Program"), t3 && (!Array.isArray(t3) || !t3.every(((e4) => e4.constructor === Uint8Array || o.lW.isBuffer(e4))))) throw new TypeError("Invalid arguments");
            let r2;
            null != t3 && (r2 = t3.map(((e4) => new Uint8Array(e4)))), Nn(e3), this.logic = e3, this.args = r2, this.sig = void 0, this.msig = void 0;
          }
          get_obj_for_encoding() {
            const e3 = { l: this.logic };
            return this.args && (e3.arg = this.args), this.sig ? e3.sig = this.sig : this.msig && (e3.msig = this.msig), e3;
          }
          static from_obj_for_encoding(e3) {
            const t3 = new Kn(e3.l, e3.arg);
            return t3.sig = e3.sig, t3.msig = e3.msig, t3;
          }
          verify(e3) {
            if (this.sig && this.msig) return false;
            try {
              Nn(this.logic);
            } catch (e4) {
              return false;
            }
            const t3 = m(this.tag, this.logic);
            return this.sig || this.msig ? this.sig ? A(t3, this.sig, e3) : Dn(t3, this.msig, e3) : g(y(t3), e3);
          }
          address() {
            const e3 = y(m(this.tag, this.logic));
            return F(new Uint8Array(e3));
          }
          sign(e3, t3) {
            if (null == t3) this.sig = this.signProgram(e3);
            else {
              const r2 = t3.addrs.map(((e4) => ({ pk: N(e4).publicKey })));
              this.msig = { v: t3.version, thr: t3.threshold, subsig: r2 };
              const [s2, n2] = this.singleSignMultisig(e3, this.msig);
              this.msig.subsig[n2].s = s2;
            }
          }
          appendToMultisig(e3) {
            if (void 0 === this.msig) throw new Error("no multisig present");
            const [t3, r2] = this.singleSignMultisig(e3, this.msig);
            this.msig.subsig[r2].s = t3;
          }
          signProgram(e3) {
            return x(m(this.tag, this.logic), e3);
          }
          singleSignMultisig(e3, t3) {
            let r2 = -1;
            const s2 = v(e3).publicKey;
            for (let e4 = 0; e4 < t3.subsig.length; e4++) {
              const { pk: n2 } = t3.subsig[e4];
              if (g(n2, s2)) {
                r2 = e4;
                break;
              }
            }
            if (-1 === r2) throw new Error("invalid secret key");
            return [this.signProgram(e3), r2];
          }
          toByte() {
            return X(this.get_obj_for_encoding());
          }
          static fromByte(e3) {
            const t3 = Z(e3);
            return Kn.from_obj_for_encoding(t3);
          }
        }
        class Fn {
          constructor(e3, t3) {
            this.lsig = new Kn(e3, t3), this.sigkey = void 0;
          }
          get_obj_for_encoding() {
            const e3 = { lsig: this.lsig.get_obj_for_encoding() };
            return this.sigkey && (e3.sigkey = this.sigkey), e3;
          }
          static from_obj_for_encoding(e3) {
            const t3 = new Fn(e3.lsig.l, e3.lsig.arg);
            return t3.lsig = Kn.from_obj_for_encoding(e3.lsig), t3.sigkey = e3.sigkey, t3;
          }
          toByte() {
            return X(this.get_obj_for_encoding());
          }
          static fromByte(e3) {
            const t3 = Z(e3);
            return Fn.from_obj_for_encoding(t3);
          }
          isDelegated() {
            return !(!this.lsig.sig && !this.lsig.msig);
          }
          verify() {
            const e3 = this.address();
            return this.lsig.verify(N(e3).publicKey);
          }
          address() {
            if (this.lsig.sig && this.lsig.msig) throw new Error("LogicSig has too many signatures. At most one of sig or msig may be present");
            if (this.lsig.sig) {
              if (!this.sigkey) throw new Error("Signing key for delegated account is missing");
              return F(this.sigkey);
            }
            return this.lsig.msig ? F(z({ version: this.lsig.msig.v, threshold: this.lsig.msig.thr, pks: this.lsig.msig.subsig.map(((e3) => e3.pk)) })) : this.lsig.address();
          }
          signMultisig(e3, t3) {
            this.lsig.sign(t3, e3);
          }
          appendToMultisig(e3) {
            this.lsig.appendToMultisig(e3);
          }
          sign(e3) {
            this.lsig.sign(e3), this.sigkey = v(e3).publicKey;
          }
        }
        function zn(e3, t3) {
          let r2, s2;
          return t3 instanceof Fn ? (r2 = t3.lsig, s2 = N(t3.address()).publicKey) : (r2 = t3, s2 = r2.sig ? e3.from.publicKey : r2.msig ? z({ version: r2.msig.v, threshold: r2.msig.thr, pks: r2.msig.subsig.map(((e4) => e4.pk)) }) : N(r2.address()).publicKey), (function(e4, t4, r3) {
            if (!t4.verify(r3)) throw new Error("Logic signature verification failed. Ensure the program and signature are valid.");
            const s3 = { lsig: t4.get_obj_for_encoding(), txn: e4.get_obj_for_encoding() };
            return _(r3, e4.from.publicKey) || (s3.sgnr = o.lW.from(r3)), { txID: e4.txID().toString(), blob: X(s3) };
          })(e3, r2, s2);
        }
        function Vn(e3, t3) {
          return zn(le(e3), t3);
        }
        function Hn(e3) {
          return Kn.fromByte(e3);
        }
        const Gn = o.lW.from("ProgData");
        function Yn(e3, t3, r2) {
          const s2 = m(N(r2).publicKey, t3);
          return x(o.lW.from(m(Gn, s2)), e3);
        }
        function Jn(e3, t3, r2, s2) {
          const n2 = m(N(t3).publicKey, e3);
          return A(o.lW.from(m(Gn, n2)), r2, s2);
        }
        function Xn(e3, t3, r2) {
          return Yn(e3, t3, new Kn(r2).address());
        }
        let Zn = {}, Qn = {};
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".split("").forEach((function(e3, t3) {
          Zn[e3] = t3, Qn[t3] = e3;
        }));
        class ei {
          constructor({ version: e3, sources: t3, names: r2, mappings: s2 }) {
            if (this.version = e3, this.sources = t3, this.names = r2, this.mappings = s2, 3 !== this.version) throw new Error(`Only version 3 is supported, got ${this.version}`);
            if (void 0 === this.mappings) throw new Error("mapping undefined, cannot build source map without `mapping`");
            const n2 = this.mappings.split(";").map(((e4) => {
              const t4 = (function(e5) {
                let t5 = [], r3 = 0, s3 = 0;
                for (let n3 = 0; n3 < e5.length; n3 += 1) {
                  let i3 = Zn[e5[n3]];
                  if (void 0 === i3) throw new Error("Invalid character (" + e5[n3] + ")");
                  const o2 = 32 & i3;
                  if (i3 &= 31, s3 += i3 << r3, o2) r3 += 5;
                  else {
                    const e6 = 1 & s3;
                    s3 >>>= 1, e6 ? t5.push(0 === s3 ? -2147483648 : -s3) : t5.push(s3), s3 = r3 = 0;
                  }
                }
                return t5;
              })(e4);
              if (t4.length > 2) return t4[2];
            }));
            this.pcToLine = {}, this.lineToPc = {};
            let i2 = 0;
            for (const [e4, t4] of n2.entries()) void 0 !== t4 && (i2 += t4), i2 in this.lineToPc || (this.lineToPc[i2] = []), this.lineToPc[i2].push(e4), this.pcToLine[e4] = i2;
          }
          getLineForPc(e3) {
            return this.pcToLine[e3];
          }
          getPcsForLine(e3) {
            return this.lineToPc[e3];
          }
        }
        const ti = 1380011588;
        function ri(e3) {
          return e3.params["approval-program"] = o.lW.from(e3.params["approval-program"].toString(), "base64"), e3.params["clear-state-program"] = o.lW.from(e3.params["clear-state-program"].toString(), "base64"), e3;
        }
        async function si({ client: e3, txns: t3, protocolVersion: r2, latestTimestamp: s2, round: n2, sources: i2 }) {
          const o2 = [], a2 = [], c2 = [], u2 = [], l2 = [];
          for (const e4 of t3) e4.txn.type === Q.appl && (l2.push(F(e4.txn.from.publicKey)), e4.txn.appAccounts && l2.push(...e4.txn.appAccounts.map(((e5) => F(e5.publicKey)))), e4.txn.appForeignApps && (c2.push(...e4.txn.appForeignApps), l2.push(...e4.txn.appForeignApps.map(((e5) => H(e5))))), e4.txn.appForeignAssets && u2.push(...e4.txn.appForeignAssets), void 0 === e4.txn.appIndex || 0 === e4.txn.appIndex ? o2.push(new Ue({ id: ti, params: new Ce({ creator: F(e4.txn.from.publicKey), approvalProgram: e4.txn.appApprovalProgram, clearStateProgram: e4.txn.appClearProgram, localStateSchema: new Oe({ numUint: e4.txn.appLocalInts, numByteSlice: e4.txn.appLocalByteSlices }), globalStateSchema: new Oe({ numUint: e4.txn.appGlobalInts, numByteSlice: e4.txn.appGlobalByteSlices }) }) })) : (c2.push(e4.txn.appIndex), l2.push(H(e4.txn.appIndex))));
          const d2 = [];
          for (const t4 of [...new Set(u2)]) d2.push(e3.getAssetByID(t4).do().then(((e4) => {
            l2.push(e4.params.creator);
          })));
          await Promise.all(d2);
          const h2 = [];
          for (const t4 of [...new Set(c2)]) h2.push(e3.getApplicationByID(t4).do().then(((e4) => {
            const t5 = ri(e4);
            o2.push(t5), l2.push(t5.params.creator);
          })));
          await Promise.all(h2);
          const p2 = [];
          for (const t4 of [...new Set(l2)]) p2.push(e3.accountInformation(t4).do().then(((e4) => {
            "created-apps" in e4 && (e4["created-apps"] = e4["created-apps"].map(((e5) => ri(e5)))), a2.push(e4);
          })));
          return await Promise.all(p2), new rt({ txns: t3.map(((e4) => ({ ...e4, txn: e4.txn.get_obj_for_encoding() }))), accounts: a2, apps: o2, latestTimestamp: s2, round: n2, protocolVersion: r2, sources: i2 });
        }
        class ni {
          constructor(e3) {
            this.type = 0, this.bytes = "", this.uint = 0, this.type = e3.type, this.bytes = e3.bytes, this.uint = e3.uint;
          }
          toString() {
            return 1 === this.type ? `0x${o.lW.from(this.bytes, "base64").toString("hex")}` : this.uint.toString();
          }
        }
        class ii {
          constructor(e3) {
            this.error = "", this.line = 0, this.pc = 0, this.scratch = [], this.stack = [], this.error = void 0 === e3.error ? "" : e3.error, this.line = e3.line, this.pc = e3.pc, this.scratch = e3.scratch, this.stack = e3.stack.map(((e4) => new ni(e4)));
          }
        }
        class oi {
          constructor(e3) {
            this.trace = [], null != e3 && (this.trace = e3.map(((e4) => new ii(e4))));
          }
        }
        function ai(e3, t3) {
          return e3.length > t3 && t3 > 0 ? `${e3.slice(0, t3)}...` : e3;
        }
        function ci(e3, t3) {
          if (0 === t3.length) return "";
          let r2 = null;
          for (let s3 = 0; s3 < t3.length; s3++) (s3 > e3.length || JSON.stringify(e3[s3]) !== JSON.stringify(t3[s3])) && (r2 = s3);
          if (null == r2) return "";
          const s2 = t3[r2];
          return s2.bytes.length > 0 ? `${r2} = 0x${o.lW.from(s2.bytes, "base64").toString("hex")}` : `${r2} = ${s2.uint.toString()}`;
        }
        function ui(e3, t3) {
          return `[${(t3 ? e3.reverse() : e3).map(((e4) => {
            switch (e4.type) {
              case 1:
                return `0x${o.lW.from(e4.bytes, "base64").toString("hex")}`;
              case 2:
                return `${e4.uint.toString()}`;
              default:
                return "";
            }
          })).join(", ")}]`;
        }
        class li {
          constructor(e3) {
            this.disassembly = [], this.appCallMessages = [], this.localDeltas = [], this.globalDelta = [], this.cost = 0, this.logicSigMessages = [], this.logicSigDisassembly = [], this.logs = [], this.appCallTrace = void 0, this.logicSigTrace = void 0, this.required = ["disassembly"], this.optionals = ["app-call-messages", "local-deltas", "global-delta", "cost", "logic-sig-messages", "logic-sig-disassembly", "logs"], this.traces = ["app-call-trace", "logic-sig-trace"], this.disassembly = e3.disassembly, this.appCallMessages = e3["app-call-messages"], this.localDeltas = e3["local-deltas"], this.globalDelta = e3["global-delta"], this.cost = e3.cost, this.logicSigMessages = e3["logic-sig-messages"], this.logicSigDisassembly = e3["logic-sig-disassembly"], this.logs = e3.logs, this.appCallTrace = new oi(e3["app-call-trace"]), this.logicSigTrace = new oi(e3["logic-sig-trace"]);
          }
          appCallRejected() {
            return void 0 !== this.appCallMessages && this.appCallMessages.includes("REJECT");
          }
          logicSigRejected() {
            return void 0 !== this.logicSigMessages && this.logicSigMessages.includes("REJECT");
          }
          static trace(e3, t3, r2) {
            const s2 = r2.maxValueWidth || 30, n2 = [["pc#", "ln#", "source", "scratch", "stack"]];
            for (let i3 = 0; i3 < e3.trace.length; i3++) {
              const { line: o2, error: a2, pc: c2, scratch: u2, stack: l2 } = e3.trace[i3], d2 = void 0 !== u2 ? u2 : [], h2 = i3 > 0 && void 0 !== e3.trace[i3 - 1].scratch ? e3.trace[i3 - 1].scratch : [], p2 = "" === a2 ? t3[o2] : `!! ${a2} !!`;
              n2.push([c2.toString().padEnd(3, " "), o2.toString().padEnd(3, " "), ai(p2, s2), ai(ci(h2, d2), s2), ai(ui(l2, r2.topOfStackFirst), s2)]);
            }
            const i2 = n2.reduce(((e4, t4) => {
              const r3 = new Array(n2[0].length).fill(0);
              for (let s3 = 0; s3 < e4.length; s3++) r3[s3] = t4[s3].length > e4[s3] ? t4[s3].length : e4[s3];
              return r3;
            }), new Array(n2[0].length).fill(0));
            return `${n2.map(((e4) => e4.map(((e5, t4) => e5.padEnd(i2[t4] + 1, " "))).join("|").trim())).join("\n")}
`;
          }
          appTrace(e3) {
            if (void 0 === this.appCallTrace || !this.disassembly) return "";
            let t3 = e3;
            return void 0 === e3 && (t3 = { maxValueWidth: 30, topOfStackFirst: false }), li.trace(this.appCallTrace, this.disassembly, t3);
          }
          lsigTrace(e3) {
            if (void 0 === this.logicSigTrace || void 0 === this.logicSigDisassembly) return "";
            let t3 = e3;
            return void 0 === e3 && (t3 = { maxValueWidth: 30, topOfStackFirst: true }), li.trace(this.logicSigTrace, this.logicSigDisassembly, t3);
          }
        }
        class di {
          constructor(e3) {
            this.error = "", this.protocolVersion = "", this.txns = [], this.error = e3.error, this.protocolVersion = e3["protocol-version"], this.txns = e3.txns.map(((e4) => new li(e4)));
          }
        }
        function hi(e3, t3, r2, s2, n2, i2, o2) {
          const a2 = { from: e3, to: t3, amount: r2, closeRemainderTo: s2, note: n2, suggestedParams: i2, type: Q.pay, reKeyTo: o2 };
          return new ie(a2);
        }
        function pi(e3) {
          return hi(e3.from, e3.to, e3.amount, e3.closeRemainderTo, e3.note, e3.suggestedParams, e3.rekeyTo);
        }
        function fi(e3, t3, r2, s2, n2, i2, o2, a2, c2, u2 = false, l2 = void 0) {
          const d2 = { from: e3, note: t3, voteKey: r2, selectionKey: s2, voteFirst: n2, voteLast: i2, voteKeyDilution: o2, suggestedParams: a2, type: Q.keyreg, reKeyTo: c2, nonParticipation: u2, stateProofKey: l2 };
          return new ie(d2);
        }
        function gi(e3) {
          return fi(e3.from, e3.note, e3.voteKey, e3.selectionKey, e3.voteFirst, e3.voteLast, e3.voteKeyDilution, e3.suggestedParams, e3.rekeyTo, e3.nonParticipation, e3.stateProofKey);
        }
        function mi(e3, t3, r2, s2, n2, i2, o2, a2, c2, u2, l2, d2, h2, p2, f2) {
          const g2 = { from: e3, note: t3, suggestedParams: p2, assetTotal: r2, assetDecimals: s2, assetDefaultFrozen: n2, assetUnitName: u2, assetName: l2, assetURL: d2, assetMetadataHash: h2, assetManager: i2, assetReserve: o2, assetFreeze: a2, assetClawback: c2, type: Q.acfg, reKeyTo: f2 };
          return new ie(g2);
        }
        function yi(e3) {
          return mi(e3.from, e3.note, e3.total, e3.decimals, e3.defaultFrozen, e3.manager, e3.reserve, e3.freeze, e3.clawback, e3.unitName, e3.assetName, e3.assetURL, e3.assetMetadataHash, e3.suggestedParams, e3.rekeyTo);
        }
        function wi(e3, t3, r2, s2, n2, i2, o2, a2, c2 = true, u2) {
          if (c2 && (void 0 === s2 || void 0 === n2 || void 0 === i2 || void 0 === o2)) throw Error("strict empty address checking was turned on, but at least one empty address was provided");
          const l2 = { from: e3, suggestedParams: a2, assetIndex: r2, assetManager: s2, assetReserve: n2, assetFreeze: i2, assetClawback: o2, type: Q.acfg, note: t3, reKeyTo: u2 };
          return new ie(l2);
        }
        function bi(e3) {
          return wi(e3.from, e3.note, e3.assetIndex, e3.manager, e3.reserve, e3.freeze, e3.clawback, e3.suggestedParams, e3.strictEmptyAddressChecking, e3.rekeyTo);
        }
        function vi(e3, t3, r2, s2, n2) {
          const i2 = { from: e3, suggestedParams: s2, assetIndex: r2, type: Q.acfg, note: t3, reKeyTo: n2 };
          return new ie(i2);
        }
        function xi(e3) {
          return vi(e3.from, e3.note, e3.assetIndex, e3.suggestedParams, e3.rekeyTo);
        }
        function _i(e3, t3, r2, s2, n2, i2, o2) {
          const a2 = { from: e3, type: Q.afrz, freezeAccount: s2, assetIndex: r2, freezeState: n2, note: t3, suggestedParams: i2, reKeyTo: o2 };
          return new ie(a2);
        }
        function Ai(e3) {
          return _i(e3.from, e3.note, e3.assetIndex, e3.freezeTarget, e3.freezeState, e3.suggestedParams, e3.rekeyTo);
        }
        function Ei(e3, t3, r2, s2, n2, i2, o2, a2, c2) {
          const u2 = { type: Q.axfer, from: e3, to: t3, amount: n2, suggestedParams: a2, assetIndex: o2, note: i2, assetRevocationTarget: s2, closeRemainderTo: r2, reKeyTo: c2 };
          return new ie(u2);
        }
        function ki(e3) {
          return Ei(e3.from, e3.to, e3.closeRemainderTo, e3.revocationTarget, e3.amount, e3.note, e3.assetIndex, e3.suggestedParams, e3.rekeyTo);
        }
        function Si(e3, t3, r2, s2, n2, i2, o2, a2, c2, u2, l2, d2, h2, p2, f2, g2, m2, y2) {
          const w2 = { type: Q.appl, from: e3, suggestedParams: t3, appIndex: 0, appOnComplete: r2, appLocalInts: i2, appLocalByteSlices: o2, appGlobalInts: a2, appGlobalByteSlices: c2, appApprovalProgram: s2, appClearProgram: n2, appArgs: u2, appAccounts: l2, appForeignApps: d2, appForeignAssets: h2, boxes: y2, note: p2, lease: f2, reKeyTo: g2, extraPages: m2 };
          return new ie(w2);
        }
        function Ri(e3) {
          return Si(e3.from, e3.suggestedParams, e3.onComplete, e3.approvalProgram, e3.clearProgram, e3.numLocalInts, e3.numLocalByteSlices, e3.numGlobalInts, e3.numGlobalByteSlices, e3.appArgs, e3.accounts, e3.foreignApps, e3.foreignAssets, e3.note, e3.lease, e3.rekeyTo, e3.extraPages, e3.boxes);
        }
        function Ti(e3, t3, r2, s2, n2, i2, o2, a2, c2, u2, l2, d2, h2) {
          const p2 = { type: Q.appl, from: e3, suggestedParams: t3, appIndex: r2, appApprovalProgram: s2, appOnComplete: ee.UpdateApplicationOC, appClearProgram: n2, appArgs: i2, appAccounts: o2, appForeignApps: a2, appForeignAssets: c2, boxes: h2, note: u2, lease: l2, reKeyTo: d2 };
          return new ie(p2);
        }
        function Ii(e3) {
          return Ti(e3.from, e3.suggestedParams, e3.appIndex, e3.approvalProgram, e3.clearProgram, e3.appArgs, e3.accounts, e3.foreignApps, e3.foreignAssets, e3.note, e3.lease, e3.rekeyTo, e3.boxes);
        }
        function Bi(e3, t3, r2, s2, n2, i2, o2, a2, c2, u2, l2) {
          const d2 = { type: Q.appl, from: e3, suggestedParams: t3, appIndex: r2, appOnComplete: ee.DeleteApplicationOC, appArgs: s2, appAccounts: n2, appForeignApps: i2, appForeignAssets: o2, boxes: l2, note: a2, lease: c2, reKeyTo: u2 };
          return new ie(d2);
        }
        function Ui(e3) {
          return Bi(e3.from, e3.suggestedParams, e3.appIndex, e3.appArgs, e3.accounts, e3.foreignApps, e3.foreignAssets, e3.note, e3.lease, e3.rekeyTo, e3.boxes);
        }
        function Pi(e3, t3, r2, s2, n2, i2, o2, a2, c2, u2, l2) {
          const d2 = { type: Q.appl, from: e3, suggestedParams: t3, appIndex: r2, appOnComplete: ee.OptInOC, appArgs: s2, appAccounts: n2, appForeignApps: i2, appForeignAssets: o2, boxes: l2, note: a2, lease: c2, reKeyTo: u2 };
          return new ie(d2);
        }
        function ji(e3) {
          return Pi(e3.from, e3.suggestedParams, e3.appIndex, e3.appArgs, e3.accounts, e3.foreignApps, e3.foreignAssets, e3.note, e3.lease, e3.rekeyTo, e3.boxes);
        }
        function qi(e3, t3, r2, s2, n2, i2, o2, a2, c2, u2, l2) {
          const d2 = { type: Q.appl, from: e3, suggestedParams: t3, appIndex: r2, appOnComplete: ee.CloseOutOC, appArgs: s2, appAccounts: n2, appForeignApps: i2, appForeignAssets: o2, boxes: l2, note: a2, lease: c2, reKeyTo: u2 };
          return new ie(d2);
        }
        function $i(e3) {
          return qi(e3.from, e3.suggestedParams, e3.appIndex, e3.appArgs, e3.accounts, e3.foreignApps, e3.foreignAssets, e3.note, e3.lease, e3.rekeyTo, e3.boxes);
        }
        function Ci(e3, t3, r2, s2, n2, i2, o2, a2, c2, u2, l2) {
          const d2 = { type: Q.appl, from: e3, suggestedParams: t3, appIndex: r2, appOnComplete: ee.ClearStateOC, appArgs: s2, appAccounts: n2, appForeignApps: i2, appForeignAssets: o2, boxes: l2, note: a2, lease: c2, reKeyTo: u2 };
          return new ie(d2);
        }
        function Di(e3) {
          return Ci(e3.from, e3.suggestedParams, e3.appIndex, e3.appArgs, e3.accounts, e3.foreignApps, e3.foreignAssets, e3.note, e3.lease, e3.rekeyTo, e3.boxes);
        }
        function Oi(e3, t3, r2, s2, n2, i2, o2, a2, c2, u2, l2) {
          const d2 = { type: Q.appl, from: e3, suggestedParams: t3, appIndex: r2, appOnComplete: ee.NoOpOC, appArgs: s2, appAccounts: n2, appForeignApps: i2, appForeignAssets: o2, boxes: l2, note: a2, lease: c2, reKeyTo: u2 };
          return new ie(d2);
        }
        function Li(e3) {
          return Oi(e3.from, e3.suggestedParams, e3.appIndex, e3.appArgs, e3.accounts, e3.foreignApps, e3.foreignAssets, e3.note, e3.lease, e3.rekeyTo, e3.boxes);
        }
        function Mi(e3) {
          const t3 = { type: Q.appl, from: e3.from, suggestedParams: e3.suggestedParams, appIndex: e3.appIndex, appOnComplete: e3.onComplete, appLocalInts: e3.numLocalInts, appLocalByteSlices: e3.numLocalByteSlices, appGlobalInts: e3.numGlobalInts, appGlobalByteSlices: e3.numGlobalByteSlices, appApprovalProgram: e3.approvalProgram, appClearProgram: e3.clearProgram, appArgs: e3.appArgs, appAccounts: e3.accounts, appForeignApps: e3.foreignApps, appForeignAssets: e3.foreignAssets, boxes: e3.boxes, note: e3.note, lease: e3.lease, reKeyTo: e3.rekeyTo, extraPages: e3.extraPages };
          return new ie(t3);
        }
        function Wi(e3) {
          return (t3, r2) => {
            const s2 = [];
            for (const n2 of r2) s2.push(t3[n2].signTxn(e3.sk));
            return Promise.resolve(s2);
          };
        }
        function Ni(e3) {
          return (t3, r2) => {
            const s2 = [];
            for (const n2 of r2) {
              const { blob: r3 } = zn(t3[n2], e3);
              s2.push(r3);
            }
            return Promise.resolve(s2);
          };
        }
        function Ki(e3, t3) {
          return (r2, s2) => {
            const n2 = [];
            for (const i2 of s2) {
              const s3 = r2[i2], o2 = [];
              for (const r3 of t3) {
                const { blob: t4 } = On(s3, e3, r3);
                o2.push(t4);
              }
              o2.length > 1 ? n2.push(Cn(o2)) : n2.push(o2[0]);
            }
            return Promise.resolve(n2);
          };
        }
        function Fi() {
          return (e3, t3) => {
            const r2 = [];
            for (const s2 of t3) r2.push(oe(e3[s2]));
            return Promise.resolve(r2);
          };
        }
        function zi(e3) {
          return "object" == typeof e3 && 2 === Object.keys(e3).length && "object" == typeof e3.txn && "function" == typeof e3.signer;
        }
        const Vi = 65535, Hi = 32, Gi = 1, Yi = 1, Ji = 2, Xi = /^([a-z\d[\](),]+)\[(0|[1-9][\d]*)]$/, Zi = /^ufixed([1-9][\d]*)x([1-9][\d]*)$/;
        class Qi {
          static from(e3) {
            if (e3.endsWith("[]")) {
              const t3 = Qi.from(e3.slice(0, e3.length - 2));
              return new ao(t3);
            }
            if (e3.endsWith("]")) {
              const t3 = e3.match(Xi);
              if (3 !== t3.length) throw new Error(`malformed static array string: ${e3}`);
              const r2 = t3[2], s2 = parseInt(r2, 10);
              if (s2 > Vi) throw new Error(`array length exceeds limit ${Vi}`);
              const n2 = Qi.from(t3[1]);
              return new oo(n2, s2);
            }
            if (e3.startsWith("uint")) {
              const t3 = (e4) => [...e4].every(((e5) => "0123456789".includes(e5))), r2 = e3.slice(4, e3.length);
              if (!t3(r2)) throw new Error(`malformed uint string: ${r2}`);
              const s2 = parseInt(r2, 10);
              if (s2 > Vi) throw new Error(`malformed uint string: ${s2}`);
              return new eo(s2);
            }
            if ("byte" === e3) return new no();
            if (e3.startsWith("ufixed")) {
              const t3 = e3.match(Zi);
              if (3 !== t3.length) throw new Error(`malformed ufixed type: ${e3}`);
              const r2 = parseInt(t3[1], 10), s2 = parseInt(t3[2], 10);
              return new to(r2, s2);
            }
            if ("bool" === e3) return new so();
            if ("address" === e3) return new ro();
            if ("string" === e3) return new io();
            if (e3.length >= 2 && "(" === e3[0] && ")" === e3[e3.length - 1]) {
              const t3 = co.parseTupleContent(e3.slice(1, e3.length - 1)), r2 = [];
              for (let e4 = 0; e4 < t3.length; e4++) {
                const s2 = Qi.from(t3[e4]);
                r2.push(s2);
              }
              return new co(r2);
            }
            throw new Error(`cannot convert a string ${e3} to an ABI type`);
          }
        }
        class eo extends Qi {
          constructor(e3) {
            if (super(), e3 % 8 != 0 || e3 < 8 || e3 > 512) throw new Error(`unsupported uint type bitSize: ${e3}`);
            this.bitSize = e3;
          }
          toString() {
            return `uint${this.bitSize}`;
          }
          equals(e3) {
            return e3 instanceof eo && this.bitSize === e3.bitSize;
          }
          isDynamic() {
            return false;
          }
          byteLen() {
            return this.bitSize / 8;
          }
          encode(e3) {
            if ("bigint" != typeof e3 && "number" != typeof e3) throw new Error(`Cannot encode value as uint${this.bitSize}: ${e3}`);
            if (e3 >= BigInt(2 ** this.bitSize) || e3 < BigInt(0)) throw new Error(`${e3} is not a non-negative int or too big to fit in size uint${this.bitSize}`);
            if ("number" == typeof e3 && !Number.isSafeInteger(e3)) throw new Error(`${e3} should be converted into a BigInt before it is encoded`);
            return un(e3, this.bitSize / 8);
          }
          decode(e3) {
            if (e3.length !== this.bitSize / 8) throw new Error(`byte string must correspond to a uint${this.bitSize}`);
            return ln(e3);
          }
        }
        class to extends Qi {
          constructor(e3, t3) {
            if (super(), e3 % 8 != 0 || e3 < 8 || e3 > 512) throw new Error(`unsupported ufixed type bitSize: ${e3}`);
            if (t3 > 160 || t3 < 1) throw new Error(`unsupported ufixed type precision: ${t3}`);
            this.bitSize = e3, this.precision = t3;
          }
          toString() {
            return `ufixed${this.bitSize}x${this.precision}`;
          }
          equals(e3) {
            return e3 instanceof to && this.bitSize === e3.bitSize && this.precision === e3.precision;
          }
          isDynamic() {
            return false;
          }
          byteLen() {
            return this.bitSize / 8;
          }
          encode(e3) {
            if ("bigint" != typeof e3 && "number" != typeof e3) throw new Error(`Cannot encode value as ${this.toString()}: ${e3}`);
            if (e3 >= BigInt(2 ** this.bitSize) || e3 < BigInt(0)) throw new Error(`${e3} is not a non-negative int or too big to fit in size ${this.toString()}`);
            if ("number" == typeof e3 && !Number.isSafeInteger(e3)) throw new Error(`${e3} should be converted into a BigInt before it is encoded`);
            return un(e3, this.bitSize / 8);
          }
          decode(e3) {
            if (e3.length !== this.bitSize / 8) throw new Error(`byte string must correspond to a ${this.toString()}`);
            return ln(e3);
          }
        }
        class ro extends Qi {
          toString() {
            return "address";
          }
          equals(e3) {
            return e3 instanceof ro;
          }
          isDynamic() {
            return false;
          }
          byteLen() {
            return Hi;
          }
          encode(e3) {
            if ("string" != typeof e3 && !(e3 instanceof Uint8Array)) throw new Error(`Cannot encode value as ${this.toString()}: ${e3}`);
            if ("string" == typeof e3) return N(e3).publicKey;
            if (32 !== e3.byteLength) throw new Error("byte string must be 32 bytes long for an address");
            return e3;
          }
          decode(e3) {
            if (32 !== e3.byteLength) throw new Error("byte string must be 32 bytes long for an address");
            return F(e3);
          }
        }
        class so extends Qi {
          toString() {
            return "bool";
          }
          equals(e3) {
            return e3 instanceof so;
          }
          isDynamic() {
            return false;
          }
          byteLen() {
            return Yi;
          }
          encode(e3) {
            if ("boolean" != typeof e3) throw new Error(`Cannot encode value as bool: ${e3}`);
            return e3 ? new Uint8Array([128]) : new Uint8Array([0]);
          }
          decode(e3) {
            if (1 !== e3.byteLength) throw new Error("bool string must be 1 byte long");
            const t3 = e3[0];
            if (128 === t3) return true;
            if (0 === t3) return false;
            throw new Error("boolean could not be decoded from the byte string");
          }
        }
        class no extends Qi {
          toString() {
            return "byte";
          }
          equals(e3) {
            return e3 instanceof no;
          }
          isDynamic() {
            return false;
          }
          byteLen() {
            return Gi;
          }
          encode(e3) {
            if ("number" != typeof e3 && "bigint" != typeof e3) throw new Error(`Cannot encode value as byte: ${e3}`);
            if ("bigint" == typeof e3 && (e3 = Number(e3)), e3 < 0 || e3 > 255) throw new Error(`${e3} cannot be encoded into a byte`);
            return new Uint8Array([e3]);
          }
          decode(e3) {
            if (1 !== e3.byteLength) throw new Error("byte string must be 1 byte long");
            return e3[0];
          }
        }
        class io extends Qi {
          toString() {
            return "string";
          }
          equals(e3) {
            return e3 instanceof io;
          }
          isDynamic() {
            return true;
          }
          byteLen() {
            throw new Error(`${this.toString()} is a dynamic type`);
          }
          encode(e3) {
            if ("string" != typeof e3 && !(e3 instanceof Uint8Array)) throw new Error(`Cannot encode value as string: ${e3}`);
            const t3 = o.lW.from(e3), r2 = un(t3.length, Ji), s2 = new Uint8Array(t3.length + Ji);
            return s2.set(r2), s2.set(t3, Ji), s2;
          }
          decode(e3) {
            if (e3.length < Ji) throw new Error(`byte string is too short to be decoded. Actual length is ${e3.length}, but expected at least ${Ji}`);
            const t3 = o.lW.from(e3).readUIntBE(0, Ji), r2 = e3.slice(Ji, e3.length);
            if (t3 !== r2.length) throw new Error(`string length bytes do not match the actual length of string. Expected ${t3}, got ${r2.length}`);
            return o.lW.from(r2).toString("utf-8");
          }
        }
        class oo extends Qi {
          constructor(e3, t3) {
            if (super(), t3 < 0) throw new Error(`static array must have a non negative length: ${t3}`);
            this.childType = e3, this.staticLength = t3;
          }
          toString() {
            return `${this.childType.toString()}[${this.staticLength}]`;
          }
          equals(e3) {
            return e3 instanceof oo && this.staticLength === e3.staticLength && this.childType.equals(e3.childType);
          }
          isDynamic() {
            return this.childType.isDynamic();
          }
          byteLen() {
            return this.childType.constructor === so ? Math.ceil(this.staticLength / 8) : this.staticLength * this.childType.byteLen();
          }
          encode(e3) {
            if (!(Array.isArray(e3) || e3 instanceof Uint8Array)) throw new Error(`Cannot encode value as ${this.toString()}: ${e3}`);
            if (e3.length !== this.staticLength) throw new Error(`Value array does not match static array length. Expected ${this.staticLength}, got ${e3.length}`);
            return this.toABITupleType().encode(e3);
          }
          decode(e3) {
            return this.toABITupleType().decode(e3);
          }
          toABITupleType() {
            return new co(Array(this.staticLength).fill(this.childType));
          }
        }
        class ao extends Qi {
          constructor(e3) {
            super(), this.childType = e3;
          }
          toString() {
            return `${this.childType.toString()}[]`;
          }
          equals(e3) {
            return e3 instanceof ao && this.childType.equals(e3.childType);
          }
          isDynamic() {
            return true;
          }
          byteLen() {
            throw new Error(`${this.toString()} is a dynamic type`);
          }
          encode(e3) {
            if (!(Array.isArray(e3) || e3 instanceof Uint8Array)) throw new Error(`Cannot encode value as ${this.toString()}: ${e3}`);
            const t3 = this.toABITupleType(e3.length), r2 = t3.encode(e3);
            return m(un(t3.childTypes.length, Ji), r2);
          }
          decode(e3) {
            const t3 = o.lW.from(e3).readUIntBE(0, Ji);
            return this.toABITupleType(t3).decode(e3.slice(Ji, e3.length));
          }
          toABITupleType(e3) {
            return new co(Array(e3).fill(this.childType));
          }
        }
        class co extends Qi {
          constructor(e3) {
            if (super(), e3.length >= Vi) throw new Error("tuple type child type number larger than maximum uint16 error");
            this.childTypes = e3;
          }
          toString() {
            const e3 = [];
            for (let t3 = 0; t3 < this.childTypes.length; t3++) e3[t3] = this.childTypes[t3].toString();
            return `(${e3.join(",")})`;
          }
          equals(e3) {
            return e3 instanceof co && this.childTypes.length === e3.childTypes.length && this.childTypes.every(((t3, r2) => t3.equals(e3.childTypes[r2])));
          }
          isDynamic() {
            return this.childTypes.some(((e3) => e3.isDynamic()));
          }
          byteLen() {
            let e3 = 0;
            for (let t3 = 0; t3 < this.childTypes.length; t3++) if (this.childTypes[t3].constructor === so) {
              const r2 = lo(this.childTypes, t3, 1), s2 = r2 + 1;
              t3 += r2, e3 += Math.trunc((s2 + 7) / 8);
            } else e3 += this.childTypes[t3].byteLen();
            return e3;
          }
          encode(e3) {
            if (!(Array.isArray(e3) || e3 instanceof Uint8Array)) throw new Error(`Cannot encode value as ${this.toString()}: ${e3}`);
            const t3 = Array.from(e3);
            if (e3.length > Vi) throw new Error("length of tuple array should not exceed a uint16");
            const r2 = this.childTypes, s2 = [], n2 = [], i2 = /* @__PURE__ */ new Map();
            let o2 = 0;
            for (; o2 < r2.length; ) {
              const e4 = r2[o2];
              if (e4.isDynamic()) i2.set(s2.length, true), s2.push(new Uint8Array([0, 0])), n2.push(e4.encode(t3[o2]));
              else {
                if (e4.constructor === so) {
                  const e5 = lo(r2, o2, -1);
                  let n3 = lo(r2, o2, 1);
                  if (e5 % 8 != 0) throw new Error("expected before index should have number of bool mod 8 equal 0");
                  n3 = Math.min(7, n3);
                  const i3 = uo(t3.slice(o2, o2 + n3 + 1));
                  s2.push(un(i3, 1)), o2 += n3;
                } else {
                  const r3 = e4.encode(t3[o2]);
                  s2.push(r3);
                }
                i2.set(o2, false), n2.push(new Uint8Array());
              }
              o2 += 1;
            }
            let a2 = 0;
            for (const e4 of s2) a2 += e4.length;
            let c2 = 0;
            for (let e4 = 0; e4 < s2.length; e4++) {
              if (i2.get(e4)) {
                const t4 = a2 + c2;
                if (t4 > Vi) throw new Error(`byte length of ${t4} should not exceed a uint16`);
                s2[e4] = un(t4, Ji);
              }
              c2 += n2[e4].length;
            }
            return m(...s2, ...n2);
          }
          decode(e3) {
            const t3 = this.childTypes, r2 = [], s2 = [];
            let n2 = 0, i2 = 0;
            const a2 = o.lW.from(e3);
            for (; n2 < t3.length; ) {
              const o2 = t3[n2];
              if (o2.isDynamic()) {
                if (e3.slice(i2, e3.length).length < Ji) throw new Error("dynamic type in tuple is too short to be decoded");
                const t4 = a2.readUIntBE(i2, Ji);
                if (r2.length > 0 && (r2[r2.length - 1].right = t4, t4 < r2[r2.length - 1].left)) throw new Error("dynamic index segment miscalculation: left is greater than right index");
                const n3 = { left: t4, right: -1 };
                r2.push(n3), s2.push(null), i2 += Ji;
              } else if (o2.constructor === so) {
                const t4 = lo(this.childTypes, n2, -1);
                let r3 = lo(this.childTypes, n2, 1);
                if (t4 % 8 != 0) throw new Error("expected before bool number mod 8 === 0");
                r3 = Math.min(7, r3);
                for (let t5 = 0; t5 <= r3; t5++) {
                  const r4 = 128 >> t5;
                  (e3[i2] & r4) > 0 ? s2.push(new Uint8Array([128])) : s2.push(new Uint8Array([0]));
                }
                n2 += r3, i2 += 1;
              } else {
                const t4 = o2.byteLen();
                s2.push(e3.slice(i2, i2 + t4)), i2 += t4;
              }
              if (n2 !== t3.length - 1 && i2 >= e3.length) throw new Error("input byte not enough to decode");
              n2 += 1;
            }
            if (r2.length > 0 && (r2[r2.length - 1].right = e3.length, i2 = e3.length), i2 < e3.length) throw new Error("input byte not fully consumed");
            for (let e4 = 0; e4 < r2.length; e4++) {
              const t4 = r2[e4];
              if (t4.left > t4.right) throw new Error("dynamic segment should display a [l, r] space with l <= r");
              if (e4 !== r2.length - 1 && t4.right !== r2[e4 + 1].left) throw new Error("dynamic segment should be consecutive");
            }
            let c2 = 0;
            for (let n3 = 0; n3 < t3.length; n3++) t3[n3].isDynamic() && (s2[n3] = e3.slice(r2[c2].left, r2[c2].right), c2 += 1);
            const u2 = [];
            for (let e4 = 0; e4 < t3.length; e4++) {
              const r3 = t3[e4].decode(s2[e4]);
              u2.push(r3);
            }
            return u2;
          }
          static parseTupleContent(e3) {
            if (0 === e3.length) return [];
            if (e3.endsWith(",") || e3.startsWith(",")) throw new Error("tuple string should not start with comma");
            if (e3.includes(",,")) throw new Error("tuple string should not have consecutive commas");
            const t3 = [];
            let r2 = 0, s2 = "";
            for (const n2 of e3) s2 += n2, "(" === n2 ? r2 += 1 : ")" === n2 ? r2 -= 1 : "," === n2 && 0 === r2 && (t3.push(s2.slice(0, s2.length - 1)), s2 = "");
            if (0 !== s2.length && t3.push(s2), 0 !== r2) throw new Error("tuple string has mismatched parentheses");
            return t3;
          }
        }
        function uo(e3) {
          let t3 = 0;
          if (e3.length > 8) throw new Error("value list passed in should be no greater than length 8");
          for (let r2 = 0; r2 < e3.length; r2++) {
            const s2 = e3[r2];
            if ("boolean" != typeof s2) throw new Error("non-boolean values cannot be compressed into a byte");
            s2 && (t3 |= 1 << 7 - r2);
          }
          return t3;
        }
        function lo(e3, t3, r2) {
          let s2 = 0;
          for (; ; ) {
            const n2 = t3 + r2 * s2;
            if (e3[n2].constructor !== so) {
              s2 -= 1;
              break;
            }
            if (n2 !== e3.length - 1 && 1 === r2) s2 += 1;
            else {
              if (!(n2 > 0 && -1 === r2)) break;
              s2 += 1;
            }
          }
          return s2;
        }
        var ho, po;
        function fo(e3) {
          return e3 === ho.any || e3 === ho.pay || e3 === ho.keyreg || e3 === ho.acfg || e3 === ho.axfer || e3 === ho.afrz || e3 === ho.appl;
        }
        function go(e3, t3) {
          return e3 === ho.any || t3.type && t3.type.toString() === e3.toString();
        }
        function mo(e3) {
          return e3 === po.account || e3 === po.application || e3 === po.asset;
        }
        !(function(e3) {
          e3.any = "txn", e3.pay = "pay", e3.keyreg = "keyreg", e3.acfg = "acfg", e3.axfer = "axfer", e3.afrz = "afrz", e3.appl = "appl";
        })(ho || (ho = {})), (function(e3) {
          e3.account = "account", e3.application = "application", e3.asset = "asset";
        })(po || (po = {}));
        class yo {
          constructor(e3) {
            if ("string" != typeof e3.name || "object" != typeof e3.returns || !Array.isArray(e3.args)) throw new Error("Invalid ABIMethod parameters");
            this.name = e3.name, this.description = e3.desc, this.args = e3.args.map((({ type: e4, name: t3, desc: r2 }) => fo(e4) || mo(e4) ? { type: e4, name: t3, description: r2 } : { type: Qi.from(e4), name: t3, description: r2 })), this.returns = { type: "void" === e3.returns.type ? e3.returns.type : Qi.from(e3.returns.type), description: e3.returns.desc }, this.events = e3.events, this.readonly = e3.readonly;
          }
          getSignature() {
            const e3 = this.args.map(((e4) => e4.type.toString())).join(","), t3 = this.returns.type.toString();
            return `${this.name}(${e3})${t3}`;
          }
          getSelector() {
            const e3 = y(this.getSignature());
            return new Uint8Array(e3.slice(0, 4));
          }
          txnCount() {
            let e3 = 1;
            for (const t3 of this.args) "string" == typeof t3.type && fo(t3.type) && (e3 += 1);
            return e3;
          }
          toJSON() {
            return { name: this.name, desc: this.description, args: this.args.map((({ type: e3, name: t3, description: r2 }) => ({ type: e3.toString(), name: t3, desc: r2 }))), returns: { type: this.returns.type.toString(), desc: this.returns.description }, events: this.events, readonly: this.readonly };
          }
          static fromSignature(e3) {
            const { name: t3, args: r2, returns: s2 } = (function(e4) {
              const t4 = e4.indexOf("(");
              if (-1 === t4) throw new Error(`Invalid method signature: ${e4}`);
              let r3 = -1, s3 = 0;
              for (let n2 = t4; n2 < e4.length; n2++) {
                const t5 = e4[n2];
                if ("(" === t5) s3 += 1;
                else if (")" === t5) {
                  if (0 === s3) break;
                  if (s3 -= 1, 0 === s3) {
                    r3 = n2;
                    break;
                  }
                }
              }
              if (-1 === r3) throw new Error(`Invalid method signature: ${e4}`);
              return { name: e4.slice(0, t4), args: co.parseTupleContent(e4.slice(t4 + 1, r3)), returns: e4.slice(r3 + 1) };
            })(e3);
            return new yo({ name: t3, args: r2.map(((e4) => ({ type: e4 }))), returns: { type: s2 } });
          }
        }
        function wo(e3, t3) {
          if (null === e3 || !Array.isArray(e3) || !e3.every(((e4) => e4 instanceof yo))) throw new Error("Methods list provided is null or not the correct type");
          const r2 = e3.filter(((e4) => e4.name === t3));
          if (r2.length > 1) throw new Error(`found ${r2.length} methods with the same name ${r2.map(((e4) => e4.getSignature())).join(",")}`);
          if (0 === r2.length) throw new Error(`found 0 methods with the name ${t3}`);
          return r2[0];
        }
        class bo {
          constructor(e3) {
            if ("string" != typeof e3.name || !Array.isArray(e3.methods) || e3.networks && "object" != typeof e3.networks) throw new Error("Invalid ABIContract parameters");
            this.name = e3.name, this.description = e3.desc, this.networks = e3.networks ? { ...e3.networks } : {}, this.methods = e3.methods.map(((e4) => new yo(e4))), this.events = e3.events;
          }
          toJSON() {
            return { name: this.name, desc: this.description, networks: this.networks, methods: this.methods.map(((e3) => e3.toJSON())), events: this.events };
          }
          getMethodByName(e3) {
            return wo(this.methods, e3);
          }
        }
        class vo {
          constructor(e3) {
            if ("string" != typeof e3.name || !Array.isArray(e3.methods)) throw new Error("Invalid ABIInterface parameters");
            this.name = e3.name, this.description = e3.desc, this.methods = e3.methods.map(((e4) => new yo(e4)));
          }
          toJSON() {
            return { name: this.name, desc: this.description, methods: this.methods.map(((e3) => e3.toJSON())) };
          }
          getMethodByName(e3) {
            return wo(this.methods, e3);
          }
        }
        const xo = o.lW.from([21, 31, 124, 117]);
        var _o;
        function Ao(e3, t3, r2) {
          if (null != r2 && e3 === r2) return 0;
          const s2 = null == r2 ? 0 : 1;
          for (let r3 = 0; r3 < t3.length; r3++) if (e3 === t3[r3]) return r3 + s2;
          return t3.push(e3), t3.length - 1 + s2;
        }
        !(function(e3) {
          e3[e3.BUILDING = 0] = "BUILDING", e3[e3.BUILT = 1] = "BUILT", e3[e3.SIGNED = 2] = "SIGNED", e3[e3.SUBMITTED = 3] = "SUBMITTED", e3[e3.COMMITTED = 4] = "COMMITTED";
        })(_o || (_o = {}));
        class Eo {
          constructor() {
            this.status = _o.BUILDING, this.transactions = [], this.methodCalls = /* @__PURE__ */ new Map(), this.signedTxns = [], this.txIDs = [];
          }
          getStatus() {
            return this.status;
          }
          count() {
            return this.transactions.length;
          }
          clone() {
            const e3 = new Eo();
            return e3.transactions = this.transactions.map((({ txn: e4, signer: t3 }) => ({ txn: ie.from_obj_for_encoding({ ...e4.get_obj_for_encoding(), grp: void 0 }), signer: t3 }))), e3.methodCalls = new Map(this.methodCalls), e3;
          }
          addTransaction(e3) {
            if (this.status !== _o.BUILDING) throw new Error("Cannot add transactions when composer status is not BUILDING");
            if (this.transactions.length === Eo.MAX_GROUP_SIZE) throw new Error(`Adding an additional transaction exceeds the maximum atomic group size of ${Eo.MAX_GROUP_SIZE}`);
            if (e3.txn.group && e3.txn.group.some(((e4) => 0 !== e4))) throw new Error("Cannot add a transaction with nonzero group ID");
            this.transactions.push(e3);
          }
          addMethodCall({ appID: e3, method: t3, methodArgs: r2, sender: s2, suggestedParams: n2, onComplete: i2, approvalProgram: o2, clearProgram: a2, numGlobalInts: c2, numGlobalByteSlices: u2, numLocalInts: l2, numLocalByteSlices: d2, extraPages: h2, appAccounts: p2, appForeignApps: f2, appForeignAssets: g2, boxes: m2, note: y2, lease: w2, rekeyTo: b2, signer: v2 }) {
            if (this.status !== _o.BUILDING) throw new Error("Cannot add transactions when composer status is not BUILDING");
            if (this.transactions.length + t3.txnCount() > Eo.MAX_GROUP_SIZE) throw new Error(`Adding additional transactions exceeds the maximum atomic group size of ${Eo.MAX_GROUP_SIZE}`);
            if (0 === e3) {
              if (null == o2 || null == a2 || null == c2 || null == u2 || null == l2 || null == d2) throw new Error("One of the following required parameters for application creation is missing: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices");
            } else if (i2 === ee.UpdateApplicationOC) {
              if (null == o2 || null == a2) throw new Error("One of the following required parameters for OnApplicationComplete.UpdateApplicationOC is missing: approvalProgram, clearProgram");
              if (null != c2 || null != u2 || null != l2 || null != d2 || null != h2) throw new Error("One of the following application creation parameters were set on a non-creation call: numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages");
            } else if (null != o2 || null != a2 || null != c2 || null != u2 || null != l2 || null != d2 || null != h2) throw new Error("One of the following application creation parameters were set on a non-creation call: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages");
            if (null == r2 && (r2 = []), r2.length !== t3.args.length) throw new Error(`Incorrect number of method arguments. Expected ${t3.args.length}, got ${r2.length}`);
            let x2 = [], _2 = [];
            const A2 = [], E2 = [], k2 = [], S2 = /* @__PURE__ */ new Map(), R2 = m2 || [];
            for (let e4 = 0; e4 < r2.length; e4++) {
              let s3 = t3.args[e4].type;
              const n3 = r2[e4];
              if (fo(s3)) {
                if (!zi(n3) || !go(s3, n3.txn)) throw new Error(`Expected ${s3} TransactionWithSigner for argument at index ${e4}`);
                if (n3.txn.group && n3.txn.group.some(((e5) => 0 !== e5))) throw new Error("Cannot add a transaction with nonzero group ID");
                A2.push(n3);
              } else {
                if (zi(n3)) throw new Error(`Expected non-transaction value for argument at index ${e4}`);
                if (mo(s3) && (S2.set(E2.length, x2.length), E2.push(s3), k2.push(n3), s3 = new eo(8)), "string" == typeof s3) throw new Error(`Unknown ABI type: ${s3}`);
                x2.push(s3), _2.push(n3);
              }
            }
            const T2 = [], I2 = null == p2 ? [] : p2.slice(), B2 = null == f2 ? [] : f2.slice(), U2 = null == g2 ? [] : g2.slice();
            for (let t4 = 0; t4 < E2.length; t4++) {
              const r3 = E2[t4], n3 = k2[t4];
              let i3 = 0;
              switch (r3) {
                case po.account: {
                  const e4 = new ro();
                  i3 = Ao(e4.decode(e4.encode(n3)), I2, s2);
                  break;
                }
                case po.application: {
                  const t5 = new eo(64), r4 = t5.decode(t5.encode(n3));
                  if (r4 > Number.MAX_SAFE_INTEGER) throw new Error(`Expected safe integer for application value, got ${r4}`);
                  i3 = Ao(Number(r4), B2, e3);
                  break;
                }
                case po.asset: {
                  const e4 = new eo(64), t5 = e4.decode(e4.encode(n3));
                  if (t5 > Number.MAX_SAFE_INTEGER) throw new Error(`Expected safe integer for asset value, got ${t5}`);
                  i3 = Ao(Number(t5), U2);
                  break;
                }
                default:
                  throw new Error(`Unknown reference type: ${r3}`);
              }
              T2.push(i3);
            }
            for (let e4 = 0; e4 < T2.length; e4++) _2[S2.get(e4)] = T2[e4];
            if (x2.length > 15) {
              const e4 = x2.slice(14), t4 = _2.slice(14);
              x2 = x2.slice(0, 14), _2 = _2.slice(0, 14), x2.push(new co(e4)), _2.push(t4);
            }
            const P2 = [t3.getSelector()];
            for (let e4 = 0; e4 < x2.length; e4++) P2.push(x2[e4].encode(_2[e4]));
            const j2 = { txn: Mi({ from: s2, appIndex: e3, appArgs: P2, accounts: I2, foreignApps: B2, foreignAssets: U2, boxes: R2, onComplete: null == i2 ? ee.NoOpOC : i2, approvalProgram: o2, clearProgram: a2, numGlobalInts: c2, numGlobalByteSlices: u2, numLocalInts: l2, numLocalByteSlices: d2, extraPages: h2, lease: w2, note: y2, rekeyTo: b2, suggestedParams: n2 }), signer: v2 };
            this.transactions.push(...A2, j2), this.methodCalls.set(this.transactions.length - 1, t3);
          }
          buildGroup() {
            if (this.status === _o.BUILDING) {
              if (0 === this.transactions.length) throw new Error("Cannot build a group with 0 transactions");
              this.transactions.length > 1 && Sn(this.transactions.map(((e3) => e3.txn))), this.status = _o.BUILT;
            }
            return this.transactions;
          }
          async gatherSignatures() {
            if (this.status >= _o.SIGNED) return this.signedTxns;
            const e3 = this.buildGroup(), t3 = e3.map(((e4) => e4.txn)), r2 = /* @__PURE__ */ new Map();
            for (let t4 = 0; t4 < e3.length; t4++) {
              const { signer: s3 } = e3[t4];
              r2.has(s3) || r2.set(s3, []), r2.get(s3).push(t4);
            }
            const s2 = Array.from(r2), n2 = await Promise.all(s2.map((([e4, r3]) => e4(t3, r3)))), i2 = e3.map((() => null));
            for (let e4 = 0; e4 < s2.length; e4++) {
              const t4 = s2[e4][1], r3 = n2[e4];
              for (let e5 = 0; e5 < t4.length; e5++) i2[t4[e5]] = r3[e5];
            }
            if (!i2.every(((e4) => null != e4))) throw new Error(`Missing signatures. Got ${i2}`);
            const o2 = i2.map(((e4, t4) => {
              try {
                return ue(e4).txn.txID();
              } catch (e5) {
                throw new Error(`Cannot decode signed transaction at index ${t4}. ${e5}`);
              }
            }));
            return this.signedTxns = i2, this.txIDs = o2, this.status = _o.SIGNED, i2;
          }
          async submit(e3) {
            if (this.status > _o.SUBMITTED) throw new Error("Transaction group cannot be resubmitted");
            const t3 = await this.gatherSignatures();
            return await e3.sendRawTransaction(t3).do(), this.status = _o.SUBMITTED, this.txIDs;
          }
          async simulate(e3, t3) {
            if (this.status > _o.SUBMITTED) throw new Error("Simulated Transaction group has already been submitted to the network");
            const r2 = (await this.gatherSignatures()).map(((e4) => Z(e4))), s2 = null == t3 ? new xt({ txnGroups: [] }) : t3;
            s2.txnGroups = [new _t({ txns: r2 })];
            const n2 = await e3.simulateTransactions(s2).do(), i2 = [];
            for (const [e4, t4] of this.methodCalls) {
              const r3 = this.txIDs[e4], s3 = n2.txnGroups[0].txnResults[e4].txnResult, o2 = { txID: r3, rawReturnValue: new Uint8Array(), method: t4 };
              i2.push(Eo.parseMethodResponse(t4, o2, s3.get_obj_for_encoding()));
            }
            return { methodResults: i2, simulateResponse: n2 };
          }
          async execute(e3, t3) {
            if (this.status === _o.COMMITTED) throw new Error("Transaction group has already been executed successfully");
            const r2 = await this.submit(e3);
            this.status = _o.SUBMITTED;
            const s2 = this.transactions.findIndex(((e4, t4) => this.methodCalls.has(t4))), n2 = -1 === s2 ? 0 : s2, i2 = await cn(e3, r2[n2], t3);
            this.status = _o.COMMITTED;
            const o2 = i2["confirmed-round"], a2 = [];
            for (const [t4, n3] of this.methodCalls) {
              const o3 = r2[t4];
              let c2 = { txID: o3, rawReturnValue: new Uint8Array(), method: n3 };
              try {
                const r3 = t4 === s2 ? i2 : await e3.pendingTransactionInformation(o3).do();
                c2 = Eo.parseMethodResponse(n3, c2, r3);
              } catch (e4) {
                c2.decodeError = e4;
              }
              a2.push(c2);
            }
            return { confirmedRound: o2, txIDs: r2, methodResults: a2 };
          }
          static parseMethodResponse(e3, t3, r2) {
            const s2 = t3;
            try {
              if (s2.txInfo = r2, "void" !== e3.returns.type) {
                const n2 = r2.logs || [];
                if (0 === n2.length) throw new Error("App call transaction did not log a return value");
                const i2 = o.lW.from(n2[n2.length - 1], "base64");
                if (i2.byteLength < 4 || !i2.slice(0, 4).equals(xo)) throw new Error("App call transaction did not log a return value");
                s2.rawReturnValue = new Uint8Array(i2.slice(4)), s2.returnValue = e3.returns.type.decode(t3.rawReturnValue);
              }
            } catch (e4) {
              s2.decodeError = e4;
            }
            return s2;
          }
        }
        Eo.MAX_GROUP_SIZE = 16;
        const ko = o.lW.from([77, 88]), So = "The transaction sender address and multisig preimage do not match.";
        function Ro(e3, t3) {
          if (void 0 === e3.from) {
            const r3 = v(t3);
            e3.from = F(r3.publicKey);
          }
          const r2 = le(e3);
          return { txID: r2.txID().toString(), blob: r2.signTxn(t3) };
        }
        function To(e3, t3) {
          return new de(e3).signBid(t3);
        }
        function Io(e3, t3) {
          return x(o.lW.from(m(ko, e3)), t3);
        }
        function Bo(e3, t3, r2) {
          return A(o.lW.from(m(ko, e3)), t3, N(r2).publicKey);
        }
        function Uo(e3) {
          return new Uint8Array(X(e3));
        }
        function Po(e3) {
          return Z(e3);
        }
        const jo = new Error(So), qo = new Error(pe), $o = n;
      })(), s;
    })()));
  }
});

// node_modules/@perawallet/connect/node_modules/bowser/es5.js
var require_es5 = __commonJS({
  "node_modules/@perawallet/connect/node_modules/bowser/es5.js"(exports, module) {
    !(function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.bowser = t() : e.bowser = t();
    })(exports, (function() {
      return (function(e) {
        var t = {};
        function r(n) {
          if (t[n]) return t[n].exports;
          var i = t[n] = { i: n, l: false, exports: {} };
          return e[n].call(i.exports, i, i.exports, r), i.l = true, i.exports;
        }
        return r.m = e, r.c = t, r.d = function(e2, t2, n) {
          r.o(e2, t2) || Object.defineProperty(e2, t2, { enumerable: true, get: n });
        }, r.r = function(e2) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
        }, r.t = function(e2, t2) {
          if (1 & t2 && (e2 = r(e2)), 8 & t2) return e2;
          if (4 & t2 && "object" == typeof e2 && e2 && e2.__esModule) return e2;
          var n = /* @__PURE__ */ Object.create(null);
          if (r.r(n), Object.defineProperty(n, "default", { enumerable: true, value: e2 }), 2 & t2 && "string" != typeof e2) for (var i in e2) r.d(n, i, (function(t3) {
            return e2[t3];
          }).bind(null, i));
          return n;
        }, r.n = function(e2) {
          var t2 = e2 && e2.__esModule ? function() {
            return e2.default;
          } : function() {
            return e2;
          };
          return r.d(t2, "a", t2), t2;
        }, r.o = function(e2, t2) {
          return Object.prototype.hasOwnProperty.call(e2, t2);
        }, r.p = "", r(r.s = 90);
      })({ 17: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n = r(18), i = (function() {
          function e2() {
          }
          return e2.getFirstMatch = function(e3, t2) {
            var r2 = t2.match(e3);
            return r2 && r2.length > 0 && r2[1] || "";
          }, e2.getSecondMatch = function(e3, t2) {
            var r2 = t2.match(e3);
            return r2 && r2.length > 1 && r2[2] || "";
          }, e2.matchAndReturnConst = function(e3, t2, r2) {
            if (e3.test(t2)) return r2;
          }, e2.getWindowsVersionName = function(e3) {
            switch (e3) {
              case "NT":
                return "NT";
              case "XP":
                return "XP";
              case "NT 5.0":
                return "2000";
              case "NT 5.1":
                return "XP";
              case "NT 5.2":
                return "2003";
              case "NT 6.0":
                return "Vista";
              case "NT 6.1":
                return "7";
              case "NT 6.2":
                return "8";
              case "NT 6.3":
                return "8.1";
              case "NT 10.0":
                return "10";
              default:
                return;
            }
          }, e2.getMacOSVersionName = function(e3) {
            var t2 = e3.split(".").splice(0, 2).map((function(e4) {
              return parseInt(e4, 10) || 0;
            }));
            if (t2.push(0), 10 === t2[0]) switch (t2[1]) {
              case 5:
                return "Leopard";
              case 6:
                return "Snow Leopard";
              case 7:
                return "Lion";
              case 8:
                return "Mountain Lion";
              case 9:
                return "Mavericks";
              case 10:
                return "Yosemite";
              case 11:
                return "El Capitan";
              case 12:
                return "Sierra";
              case 13:
                return "High Sierra";
              case 14:
                return "Mojave";
              case 15:
                return "Catalina";
              default:
                return;
            }
          }, e2.getAndroidVersionName = function(e3) {
            var t2 = e3.split(".").splice(0, 2).map((function(e4) {
              return parseInt(e4, 10) || 0;
            }));
            if (t2.push(0), !(1 === t2[0] && t2[1] < 5)) return 1 === t2[0] && t2[1] < 6 ? "Cupcake" : 1 === t2[0] && t2[1] >= 6 ? "Donut" : 2 === t2[0] && t2[1] < 2 ? "Eclair" : 2 === t2[0] && 2 === t2[1] ? "Froyo" : 2 === t2[0] && t2[1] > 2 ? "Gingerbread" : 3 === t2[0] ? "Honeycomb" : 4 === t2[0] && t2[1] < 1 ? "Ice Cream Sandwich" : 4 === t2[0] && t2[1] < 4 ? "Jelly Bean" : 4 === t2[0] && t2[1] >= 4 ? "KitKat" : 5 === t2[0] ? "Lollipop" : 6 === t2[0] ? "Marshmallow" : 7 === t2[0] ? "Nougat" : 8 === t2[0] ? "Oreo" : 9 === t2[0] ? "Pie" : void 0;
          }, e2.getVersionPrecision = function(e3) {
            return e3.split(".").length;
          }, e2.compareVersions = function(t2, r2, n2) {
            void 0 === n2 && (n2 = false);
            var i2 = e2.getVersionPrecision(t2), s = e2.getVersionPrecision(r2), a = Math.max(i2, s), o = 0, u = e2.map([t2, r2], (function(t3) {
              var r3 = a - e2.getVersionPrecision(t3), n3 = t3 + new Array(r3 + 1).join(".0");
              return e2.map(n3.split("."), (function(e3) {
                return new Array(20 - e3.length).join("0") + e3;
              })).reverse();
            }));
            for (n2 && (o = a - Math.min(i2, s)), a -= 1; a >= o; ) {
              if (u[0][a] > u[1][a]) return 1;
              if (u[0][a] === u[1][a]) {
                if (a === o) return 0;
                a -= 1;
              } else if (u[0][a] < u[1][a]) return -1;
            }
          }, e2.map = function(e3, t2) {
            var r2, n2 = [];
            if (Array.prototype.map) return Array.prototype.map.call(e3, t2);
            for (r2 = 0; r2 < e3.length; r2 += 1) n2.push(t2(e3[r2]));
            return n2;
          }, e2.find = function(e3, t2) {
            var r2, n2;
            if (Array.prototype.find) return Array.prototype.find.call(e3, t2);
            for (r2 = 0, n2 = e3.length; r2 < n2; r2 += 1) {
              var i2 = e3[r2];
              if (t2(i2, r2)) return i2;
            }
          }, e2.assign = function(e3) {
            for (var t2, r2, n2 = e3, i2 = arguments.length, s = new Array(i2 > 1 ? i2 - 1 : 0), a = 1; a < i2; a++) s[a - 1] = arguments[a];
            if (Object.assign) return Object.assign.apply(Object, [e3].concat(s));
            var o = function() {
              var e4 = s[t2];
              "object" == typeof e4 && null !== e4 && Object.keys(e4).forEach((function(t3) {
                n2[t3] = e4[t3];
              }));
            };
            for (t2 = 0, r2 = s.length; t2 < r2; t2 += 1) o();
            return e3;
          }, e2.getBrowserAlias = function(e3) {
            return n.BROWSER_ALIASES_MAP[e3];
          }, e2.getBrowserTypeByAlias = function(e3) {
            return n.BROWSER_MAP[e3] || "";
          }, e2;
        })();
        t.default = i, e.exports = t.default;
      }, 18: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.ENGINE_MAP = t.OS_MAP = t.PLATFORMS_MAP = t.BROWSER_MAP = t.BROWSER_ALIASES_MAP = void 0;
        t.BROWSER_ALIASES_MAP = { "Amazon Silk": "amazon_silk", "Android Browser": "android", Bada: "bada", BlackBerry: "blackberry", Chrome: "chrome", Chromium: "chromium", Electron: "electron", Epiphany: "epiphany", Firefox: "firefox", Focus: "focus", Generic: "generic", "Google Search": "google_search", Googlebot: "googlebot", "Internet Explorer": "ie", "K-Meleon": "k_meleon", Maxthon: "maxthon", "Microsoft Edge": "edge", "MZ Browser": "mz", "NAVER Whale Browser": "naver", Opera: "opera", "Opera Coast": "opera_coast", PhantomJS: "phantomjs", Puffin: "puffin", QupZilla: "qupzilla", QQ: "qq", QQLite: "qqlite", Safari: "safari", Sailfish: "sailfish", "Samsung Internet for Android": "samsung_internet", SeaMonkey: "seamonkey", Sleipnir: "sleipnir", Swing: "swing", Tizen: "tizen", "UC Browser": "uc", Vivaldi: "vivaldi", "WebOS Browser": "webos", WeChat: "wechat", "Yandex Browser": "yandex", Roku: "roku" };
        t.BROWSER_MAP = { amazon_silk: "Amazon Silk", android: "Android Browser", bada: "Bada", blackberry: "BlackBerry", chrome: "Chrome", chromium: "Chromium", electron: "Electron", epiphany: "Epiphany", firefox: "Firefox", focus: "Focus", generic: "Generic", googlebot: "Googlebot", google_search: "Google Search", ie: "Internet Explorer", k_meleon: "K-Meleon", maxthon: "Maxthon", edge: "Microsoft Edge", mz: "MZ Browser", naver: "NAVER Whale Browser", opera: "Opera", opera_coast: "Opera Coast", phantomjs: "PhantomJS", puffin: "Puffin", qupzilla: "QupZilla", qq: "QQ Browser", qqlite: "QQ Browser Lite", safari: "Safari", sailfish: "Sailfish", samsung_internet: "Samsung Internet for Android", seamonkey: "SeaMonkey", sleipnir: "Sleipnir", swing: "Swing", tizen: "Tizen", uc: "UC Browser", vivaldi: "Vivaldi", webos: "WebOS Browser", wechat: "WeChat", yandex: "Yandex Browser" };
        t.PLATFORMS_MAP = { tablet: "tablet", mobile: "mobile", desktop: "desktop", tv: "tv" };
        t.OS_MAP = { WindowsPhone: "Windows Phone", Windows: "Windows", MacOS: "macOS", iOS: "iOS", Android: "Android", WebOS: "WebOS", BlackBerry: "BlackBerry", Bada: "Bada", Tizen: "Tizen", Linux: "Linux", ChromeOS: "Chrome OS", PlayStation4: "PlayStation 4", Roku: "Roku" };
        t.ENGINE_MAP = { EdgeHTML: "EdgeHTML", Blink: "Blink", Trident: "Trident", Presto: "Presto", Gecko: "Gecko", WebKit: "WebKit" };
      }, 90: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n, i = (n = r(91)) && n.__esModule ? n : { default: n }, s = r(18);
        function a(e2, t2) {
          for (var r2 = 0; r2 < t2.length; r2++) {
            var n2 = t2[r2];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
          }
        }
        var o = (function() {
          function e2() {
          }
          var t2, r2, n2;
          return e2.getParser = function(e3, t3) {
            if (void 0 === t3 && (t3 = false), "string" != typeof e3) throw new Error("UserAgent should be a string");
            return new i.default(e3, t3);
          }, e2.parse = function(e3) {
            return new i.default(e3).getResult();
          }, t2 = e2, n2 = [{ key: "BROWSER_MAP", get: function() {
            return s.BROWSER_MAP;
          } }, { key: "ENGINE_MAP", get: function() {
            return s.ENGINE_MAP;
          } }, { key: "OS_MAP", get: function() {
            return s.OS_MAP;
          } }, { key: "PLATFORMS_MAP", get: function() {
            return s.PLATFORMS_MAP;
          } }], (r2 = null) && a(t2.prototype, r2), n2 && a(t2, n2), e2;
        })();
        t.default = o, e.exports = t.default;
      }, 91: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n = u(r(92)), i = u(r(93)), s = u(r(94)), a = u(r(95)), o = u(r(17));
        function u(e2) {
          return e2 && e2.__esModule ? e2 : { default: e2 };
        }
        var d = (function() {
          function e2(e3, t3) {
            if (void 0 === t3 && (t3 = false), null == e3 || "" === e3) throw new Error("UserAgent parameter can't be empty");
            this._ua = e3, this.parsedResult = {}, true !== t3 && this.parse();
          }
          var t2 = e2.prototype;
          return t2.getUA = function() {
            return this._ua;
          }, t2.test = function(e3) {
            return e3.test(this._ua);
          }, t2.parseBrowser = function() {
            var e3 = this;
            this.parsedResult.browser = {};
            var t3 = o.default.find(n.default, (function(t4) {
              if ("function" == typeof t4.test) return t4.test(e3);
              if (t4.test instanceof Array) return t4.test.some((function(t5) {
                return e3.test(t5);
              }));
              throw new Error("Browser's test function is not valid");
            }));
            return t3 && (this.parsedResult.browser = t3.describe(this.getUA())), this.parsedResult.browser;
          }, t2.getBrowser = function() {
            return this.parsedResult.browser ? this.parsedResult.browser : this.parseBrowser();
          }, t2.getBrowserName = function(e3) {
            return e3 ? String(this.getBrowser().name).toLowerCase() || "" : this.getBrowser().name || "";
          }, t2.getBrowserVersion = function() {
            return this.getBrowser().version;
          }, t2.getOS = function() {
            return this.parsedResult.os ? this.parsedResult.os : this.parseOS();
          }, t2.parseOS = function() {
            var e3 = this;
            this.parsedResult.os = {};
            var t3 = o.default.find(i.default, (function(t4) {
              if ("function" == typeof t4.test) return t4.test(e3);
              if (t4.test instanceof Array) return t4.test.some((function(t5) {
                return e3.test(t5);
              }));
              throw new Error("Browser's test function is not valid");
            }));
            return t3 && (this.parsedResult.os = t3.describe(this.getUA())), this.parsedResult.os;
          }, t2.getOSName = function(e3) {
            var t3 = this.getOS().name;
            return e3 ? String(t3).toLowerCase() || "" : t3 || "";
          }, t2.getOSVersion = function() {
            return this.getOS().version;
          }, t2.getPlatform = function() {
            return this.parsedResult.platform ? this.parsedResult.platform : this.parsePlatform();
          }, t2.getPlatformType = function(e3) {
            void 0 === e3 && (e3 = false);
            var t3 = this.getPlatform().type;
            return e3 ? String(t3).toLowerCase() || "" : t3 || "";
          }, t2.parsePlatform = function() {
            var e3 = this;
            this.parsedResult.platform = {};
            var t3 = o.default.find(s.default, (function(t4) {
              if ("function" == typeof t4.test) return t4.test(e3);
              if (t4.test instanceof Array) return t4.test.some((function(t5) {
                return e3.test(t5);
              }));
              throw new Error("Browser's test function is not valid");
            }));
            return t3 && (this.parsedResult.platform = t3.describe(this.getUA())), this.parsedResult.platform;
          }, t2.getEngine = function() {
            return this.parsedResult.engine ? this.parsedResult.engine : this.parseEngine();
          }, t2.getEngineName = function(e3) {
            return e3 ? String(this.getEngine().name).toLowerCase() || "" : this.getEngine().name || "";
          }, t2.parseEngine = function() {
            var e3 = this;
            this.parsedResult.engine = {};
            var t3 = o.default.find(a.default, (function(t4) {
              if ("function" == typeof t4.test) return t4.test(e3);
              if (t4.test instanceof Array) return t4.test.some((function(t5) {
                return e3.test(t5);
              }));
              throw new Error("Browser's test function is not valid");
            }));
            return t3 && (this.parsedResult.engine = t3.describe(this.getUA())), this.parsedResult.engine;
          }, t2.parse = function() {
            return this.parseBrowser(), this.parseOS(), this.parsePlatform(), this.parseEngine(), this;
          }, t2.getResult = function() {
            return o.default.assign({}, this.parsedResult);
          }, t2.satisfies = function(e3) {
            var t3 = this, r2 = {}, n2 = 0, i2 = {}, s2 = 0;
            if (Object.keys(e3).forEach((function(t4) {
              var a3 = e3[t4];
              "string" == typeof a3 ? (i2[t4] = a3, s2 += 1) : "object" == typeof a3 && (r2[t4] = a3, n2 += 1);
            })), n2 > 0) {
              var a2 = Object.keys(r2), u2 = o.default.find(a2, (function(e4) {
                return t3.isOS(e4);
              }));
              if (u2) {
                var d2 = this.satisfies(r2[u2]);
                if (void 0 !== d2) return d2;
              }
              var c = o.default.find(a2, (function(e4) {
                return t3.isPlatform(e4);
              }));
              if (c) {
                var f = this.satisfies(r2[c]);
                if (void 0 !== f) return f;
              }
            }
            if (s2 > 0) {
              var l = Object.keys(i2), h = o.default.find(l, (function(e4) {
                return t3.isBrowser(e4, true);
              }));
              if (void 0 !== h) return this.compareVersion(i2[h]);
            }
          }, t2.isBrowser = function(e3, t3) {
            void 0 === t3 && (t3 = false);
            var r2 = this.getBrowserName().toLowerCase(), n2 = e3.toLowerCase(), i2 = o.default.getBrowserTypeByAlias(n2);
            return t3 && i2 && (n2 = i2.toLowerCase()), n2 === r2;
          }, t2.compareVersion = function(e3) {
            var t3 = [0], r2 = e3, n2 = false, i2 = this.getBrowserVersion();
            if ("string" == typeof i2) return ">" === e3[0] || "<" === e3[0] ? (r2 = e3.substr(1), "=" === e3[1] ? (n2 = true, r2 = e3.substr(2)) : t3 = [], ">" === e3[0] ? t3.push(1) : t3.push(-1)) : "=" === e3[0] ? r2 = e3.substr(1) : "~" === e3[0] && (n2 = true, r2 = e3.substr(1)), t3.indexOf(o.default.compareVersions(i2, r2, n2)) > -1;
          }, t2.isOS = function(e3) {
            return this.getOSName(true) === String(e3).toLowerCase();
          }, t2.isPlatform = function(e3) {
            return this.getPlatformType(true) === String(e3).toLowerCase();
          }, t2.isEngine = function(e3) {
            return this.getEngineName(true) === String(e3).toLowerCase();
          }, t2.is = function(e3, t3) {
            return void 0 === t3 && (t3 = false), this.isBrowser(e3, t3) || this.isOS(e3) || this.isPlatform(e3);
          }, t2.some = function(e3) {
            var t3 = this;
            return void 0 === e3 && (e3 = []), e3.some((function(e4) {
              return t3.is(e4);
            }));
          }, e2;
        })();
        t.default = d, e.exports = t.default;
      }, 92: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n, i = (n = r(17)) && n.__esModule ? n : { default: n };
        var s = /version\/(\d+(\.?_?\d+)+)/i, a = [{ test: [/googlebot/i], describe: function(e2) {
          var t2 = { name: "Googlebot" }, r2 = i.default.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/opera/i], describe: function(e2) {
          var t2 = { name: "Opera" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/opr\/|opios/i], describe: function(e2) {
          var t2 = { name: "Opera" }, r2 = i.default.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/SamsungBrowser/i], describe: function(e2) {
          var t2 = { name: "Samsung Internet for Android" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/Whale/i], describe: function(e2) {
          var t2 = { name: "NAVER Whale Browser" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/MZBrowser/i], describe: function(e2) {
          var t2 = { name: "MZ Browser" }, r2 = i.default.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/focus/i], describe: function(e2) {
          var t2 = { name: "Focus" }, r2 = i.default.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/swing/i], describe: function(e2) {
          var t2 = { name: "Swing" }, r2 = i.default.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/coast/i], describe: function(e2) {
          var t2 = { name: "Opera Coast" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/opt\/\d+(?:.?_?\d+)+/i], describe: function(e2) {
          var t2 = { name: "Opera Touch" }, r2 = i.default.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/yabrowser/i], describe: function(e2) {
          var t2 = { name: "Yandex Browser" }, r2 = i.default.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/ucbrowser/i], describe: function(e2) {
          var t2 = { name: "UC Browser" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/Maxthon|mxios/i], describe: function(e2) {
          var t2 = { name: "Maxthon" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/epiphany/i], describe: function(e2) {
          var t2 = { name: "Epiphany" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/puffin/i], describe: function(e2) {
          var t2 = { name: "Puffin" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/sleipnir/i], describe: function(e2) {
          var t2 = { name: "Sleipnir" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/k-meleon/i], describe: function(e2) {
          var t2 = { name: "K-Meleon" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/micromessenger/i], describe: function(e2) {
          var t2 = { name: "WeChat" }, r2 = i.default.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/qqbrowser/i], describe: function(e2) {
          var t2 = { name: /qqbrowserlite/i.test(e2) ? "QQ Browser Lite" : "QQ Browser" }, r2 = i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/msie|trident/i], describe: function(e2) {
          var t2 = { name: "Internet Explorer" }, r2 = i.default.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/\sedg\//i], describe: function(e2) {
          var t2 = { name: "Microsoft Edge" }, r2 = i.default.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/edg([ea]|ios)/i], describe: function(e2) {
          var t2 = { name: "Microsoft Edge" }, r2 = i.default.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/vivaldi/i], describe: function(e2) {
          var t2 = { name: "Vivaldi" }, r2 = i.default.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/seamonkey/i], describe: function(e2) {
          var t2 = { name: "SeaMonkey" }, r2 = i.default.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/sailfish/i], describe: function(e2) {
          var t2 = { name: "Sailfish" }, r2 = i.default.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/silk/i], describe: function(e2) {
          var t2 = { name: "Amazon Silk" }, r2 = i.default.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/phantom/i], describe: function(e2) {
          var t2 = { name: "PhantomJS" }, r2 = i.default.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/slimerjs/i], describe: function(e2) {
          var t2 = { name: "SlimerJS" }, r2 = i.default.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/blackberry|\bbb\d+/i, /rim\stablet/i], describe: function(e2) {
          var t2 = { name: "BlackBerry" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/(web|hpw)[o0]s/i], describe: function(e2) {
          var t2 = { name: "WebOS Browser" }, r2 = i.default.getFirstMatch(s, e2) || i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/bada/i], describe: function(e2) {
          var t2 = { name: "Bada" }, r2 = i.default.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/tizen/i], describe: function(e2) {
          var t2 = { name: "Tizen" }, r2 = i.default.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/qupzilla/i], describe: function(e2) {
          var t2 = { name: "QupZilla" }, r2 = i.default.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/firefox|iceweasel|fxios/i], describe: function(e2) {
          var t2 = { name: "Firefox" }, r2 = i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/electron/i], describe: function(e2) {
          var t2 = { name: "Electron" }, r2 = i.default.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/MiuiBrowser/i], describe: function(e2) {
          var t2 = { name: "Miui" }, r2 = i.default.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/chromium/i], describe: function(e2) {
          var t2 = { name: "Chromium" }, r2 = i.default.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, e2) || i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/chrome|crios|crmo/i], describe: function(e2) {
          var t2 = { name: "Chrome" }, r2 = i.default.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/GSA/i], describe: function(e2) {
          var t2 = { name: "Google Search" }, r2 = i.default.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: function(e2) {
          var t2 = !e2.test(/like android/i), r2 = e2.test(/android/i);
          return t2 && r2;
        }, describe: function(e2) {
          var t2 = { name: "Android Browser" }, r2 = i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/playstation 4/i], describe: function(e2) {
          var t2 = { name: "PlayStation 4" }, r2 = i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/safari|applewebkit/i], describe: function(e2) {
          var t2 = { name: "Safari" }, r2 = i.default.getFirstMatch(s, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/.*/i], describe: function(e2) {
          var t2 = -1 !== e2.search("\\(") ? /^(.*)\/(.*)[ \t]\((.*)/ : /^(.*)\/(.*) /;
          return { name: i.default.getFirstMatch(t2, e2), version: i.default.getSecondMatch(t2, e2) };
        } }];
        t.default = a, e.exports = t.default;
      }, 93: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n, i = (n = r(17)) && n.__esModule ? n : { default: n }, s = r(18);
        var a = [{ test: [/Roku\/DVP/], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, e2);
          return { name: s.OS_MAP.Roku, version: t2 };
        } }, { test: [/windows phone/i], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i, e2);
          return { name: s.OS_MAP.WindowsPhone, version: t2 };
        } }, { test: [/windows /i], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, e2), r2 = i.default.getWindowsVersionName(t2);
          return { name: s.OS_MAP.Windows, version: t2, versionName: r2 };
        } }, { test: [/Macintosh(.*?) FxiOS(.*?)\//], describe: function(e2) {
          var t2 = { name: s.OS_MAP.iOS }, r2 = i.default.getSecondMatch(/(Version\/)(\d[\d.]+)/, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/macintosh/i], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, e2).replace(/[_\s]/g, "."), r2 = i.default.getMacOSVersionName(t2), n2 = { name: s.OS_MAP.MacOS, version: t2 };
          return r2 && (n2.versionName = r2), n2;
        } }, { test: [/(ipod|iphone|ipad)/i], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, e2).replace(/[_\s]/g, ".");
          return { name: s.OS_MAP.iOS, version: t2 };
        } }, { test: function(e2) {
          var t2 = !e2.test(/like android/i), r2 = e2.test(/android/i);
          return t2 && r2;
        }, describe: function(e2) {
          var t2 = i.default.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, e2), r2 = i.default.getAndroidVersionName(t2), n2 = { name: s.OS_MAP.Android, version: t2 };
          return r2 && (n2.versionName = r2), n2;
        } }, { test: [/(web|hpw)[o0]s/i], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, e2), r2 = { name: s.OS_MAP.WebOS };
          return t2 && t2.length && (r2.version = t2), r2;
        } }, { test: [/blackberry|\bbb\d+/i, /rim\stablet/i], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, e2) || i.default.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, e2) || i.default.getFirstMatch(/\bbb(\d+)/i, e2);
          return { name: s.OS_MAP.BlackBerry, version: t2 };
        } }, { test: [/bada/i], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, e2);
          return { name: s.OS_MAP.Bada, version: t2 };
        } }, { test: [/tizen/i], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, e2);
          return { name: s.OS_MAP.Tizen, version: t2 };
        } }, { test: [/linux/i], describe: function() {
          return { name: s.OS_MAP.Linux };
        } }, { test: [/CrOS/], describe: function() {
          return { name: s.OS_MAP.ChromeOS };
        } }, { test: [/PlayStation 4/], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, e2);
          return { name: s.OS_MAP.PlayStation4, version: t2 };
        } }];
        t.default = a, e.exports = t.default;
      }, 94: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n, i = (n = r(17)) && n.__esModule ? n : { default: n }, s = r(18);
        var a = [{ test: [/googlebot/i], describe: function() {
          return { type: "bot", vendor: "Google" };
        } }, { test: [/huawei/i], describe: function(e2) {
          var t2 = i.default.getFirstMatch(/(can-l01)/i, e2) && "Nova", r2 = { type: s.PLATFORMS_MAP.mobile, vendor: "Huawei" };
          return t2 && (r2.model = t2), r2;
        } }, { test: [/nexus\s*(?:7|8|9|10).*/i], describe: function() {
          return { type: s.PLATFORMS_MAP.tablet, vendor: "Nexus" };
        } }, { test: [/ipad/i], describe: function() {
          return { type: s.PLATFORMS_MAP.tablet, vendor: "Apple", model: "iPad" };
        } }, { test: [/Macintosh(.*?) FxiOS(.*?)\//], describe: function() {
          return { type: s.PLATFORMS_MAP.tablet, vendor: "Apple", model: "iPad" };
        } }, { test: [/kftt build/i], describe: function() {
          return { type: s.PLATFORMS_MAP.tablet, vendor: "Amazon", model: "Kindle Fire HD 7" };
        } }, { test: [/silk/i], describe: function() {
          return { type: s.PLATFORMS_MAP.tablet, vendor: "Amazon" };
        } }, { test: [/tablet(?! pc)/i], describe: function() {
          return { type: s.PLATFORMS_MAP.tablet };
        } }, { test: function(e2) {
          var t2 = e2.test(/ipod|iphone/i), r2 = e2.test(/like (ipod|iphone)/i);
          return t2 && !r2;
        }, describe: function(e2) {
          var t2 = i.default.getFirstMatch(/(ipod|iphone)/i, e2);
          return { type: s.PLATFORMS_MAP.mobile, vendor: "Apple", model: t2 };
        } }, { test: [/nexus\s*[0-6].*/i, /galaxy nexus/i], describe: function() {
          return { type: s.PLATFORMS_MAP.mobile, vendor: "Nexus" };
        } }, { test: [/[^-]mobi/i], describe: function() {
          return { type: s.PLATFORMS_MAP.mobile };
        } }, { test: function(e2) {
          return "blackberry" === e2.getBrowserName(true);
        }, describe: function() {
          return { type: s.PLATFORMS_MAP.mobile, vendor: "BlackBerry" };
        } }, { test: function(e2) {
          return "bada" === e2.getBrowserName(true);
        }, describe: function() {
          return { type: s.PLATFORMS_MAP.mobile };
        } }, { test: function(e2) {
          return "windows phone" === e2.getBrowserName();
        }, describe: function() {
          return { type: s.PLATFORMS_MAP.mobile, vendor: "Microsoft" };
        } }, { test: function(e2) {
          var t2 = Number(String(e2.getOSVersion()).split(".")[0]);
          return "android" === e2.getOSName(true) && t2 >= 3;
        }, describe: function() {
          return { type: s.PLATFORMS_MAP.tablet };
        } }, { test: function(e2) {
          return "android" === e2.getOSName(true);
        }, describe: function() {
          return { type: s.PLATFORMS_MAP.mobile };
        } }, { test: function(e2) {
          return "macos" === e2.getOSName(true);
        }, describe: function() {
          return { type: s.PLATFORMS_MAP.desktop, vendor: "Apple" };
        } }, { test: function(e2) {
          return "windows" === e2.getOSName(true);
        }, describe: function() {
          return { type: s.PLATFORMS_MAP.desktop };
        } }, { test: function(e2) {
          return "linux" === e2.getOSName(true);
        }, describe: function() {
          return { type: s.PLATFORMS_MAP.desktop };
        } }, { test: function(e2) {
          return "playstation 4" === e2.getOSName(true);
        }, describe: function() {
          return { type: s.PLATFORMS_MAP.tv };
        } }, { test: function(e2) {
          return "roku" === e2.getOSName(true);
        }, describe: function() {
          return { type: s.PLATFORMS_MAP.tv };
        } }];
        t.default = a, e.exports = t.default;
      }, 95: function(e, t, r) {
        "use strict";
        t.__esModule = true, t.default = void 0;
        var n, i = (n = r(17)) && n.__esModule ? n : { default: n }, s = r(18);
        var a = [{ test: function(e2) {
          return "microsoft edge" === e2.getBrowserName(true);
        }, describe: function(e2) {
          if (/\sedg\//i.test(e2)) return { name: s.ENGINE_MAP.Blink };
          var t2 = i.default.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, e2);
          return { name: s.ENGINE_MAP.EdgeHTML, version: t2 };
        } }, { test: [/trident/i], describe: function(e2) {
          var t2 = { name: s.ENGINE_MAP.Trident }, r2 = i.default.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: function(e2) {
          return e2.test(/presto/i);
        }, describe: function(e2) {
          var t2 = { name: s.ENGINE_MAP.Presto }, r2 = i.default.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: function(e2) {
          var t2 = e2.test(/gecko/i), r2 = e2.test(/like gecko/i);
          return t2 && !r2;
        }, describe: function(e2) {
          var t2 = { name: s.ENGINE_MAP.Gecko }, r2 = i.default.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }, { test: [/(apple)?webkit\/537\.36/i], describe: function() {
          return { name: s.ENGINE_MAP.Blink };
        } }, { test: [/(apple)?webkit/i], describe: function(e2) {
          var t2 = { name: s.ENGINE_MAP.WebKit }, r2 = i.default.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, e2);
          return r2 && (t2.version = r2), t2;
        } }];
        t.default = a, e.exports = t.default;
      } });
    }));
  }
});

// node_modules/qr-code-styling/lib/qr-code-styling.js
var require_qr_code_styling = __commonJS({
  "node_modules/qr-code-styling/lib/qr-code-styling.js"(exports, module) {
    !(function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.QRCodeStyling = e() : t.QRCodeStyling = e();
    })(self, (function() {
      return (() => {
        var t = { 192: (t2, e2) => {
          var r2, n, o = (function() {
            var t3 = function(t4, e4) {
              var r4 = t4, n3 = a[e4], o3 = null, i2 = 0, u2 = null, v2 = [], w2 = {}, m = function(t5, e5) {
                o3 = (function(t6) {
                  for (var e6 = new Array(t6), r5 = 0; r5 < t6; r5 += 1) {
                    e6[r5] = new Array(t6);
                    for (var n4 = 0; n4 < t6; n4 += 1) e6[r5][n4] = null;
                  }
                  return e6;
                })(i2 = 4 * r4 + 17), b(0, 0), b(i2 - 7, 0), b(0, i2 - 7), x(), _(), M(t5, e5), r4 >= 7 && S(t5), null == u2 && (u2 = A(r4, n3, v2)), C(u2, e5);
              }, b = function(t5, e5) {
                for (var r5 = -1; r5 <= 7; r5 += 1) if (!(t5 + r5 <= -1 || i2 <= t5 + r5)) for (var n4 = -1; n4 <= 7; n4 += 1) e5 + n4 <= -1 || i2 <= e5 + n4 || (o3[t5 + r5][e5 + n4] = 0 <= r5 && r5 <= 6 && (0 == n4 || 6 == n4) || 0 <= n4 && n4 <= 6 && (0 == r5 || 6 == r5) || 2 <= r5 && r5 <= 4 && 2 <= n4 && n4 <= 4);
              }, _ = function() {
                for (var t5 = 8; t5 < i2 - 8; t5 += 1) null == o3[t5][6] && (o3[t5][6] = t5 % 2 == 0);
                for (var e5 = 8; e5 < i2 - 8; e5 += 1) null == o3[6][e5] && (o3[6][e5] = e5 % 2 == 0);
              }, x = function() {
                for (var t5 = s.getPatternPosition(r4), e5 = 0; e5 < t5.length; e5 += 1) for (var n4 = 0; n4 < t5.length; n4 += 1) {
                  var i3 = t5[e5], a2 = t5[n4];
                  if (null == o3[i3][a2]) for (var u3 = -2; u3 <= 2; u3 += 1) for (var h2 = -2; h2 <= 2; h2 += 1) o3[i3 + u3][a2 + h2] = -2 == u3 || 2 == u3 || -2 == h2 || 2 == h2 || 0 == u3 && 0 == h2;
                }
              }, S = function(t5) {
                for (var e5 = s.getBCHTypeNumber(r4), n4 = 0; n4 < 18; n4 += 1) {
                  var a2 = !t5 && 1 == (e5 >> n4 & 1);
                  o3[Math.floor(n4 / 3)][n4 % 3 + i2 - 8 - 3] = a2;
                }
                for (n4 = 0; n4 < 18; n4 += 1) a2 = !t5 && 1 == (e5 >> n4 & 1), o3[n4 % 3 + i2 - 8 - 3][Math.floor(n4 / 3)] = a2;
              }, M = function(t5, e5) {
                for (var r5 = n3 << 3 | e5, a2 = s.getBCHTypeInfo(r5), u3 = 0; u3 < 15; u3 += 1) {
                  var h2 = !t5 && 1 == (a2 >> u3 & 1);
                  u3 < 6 ? o3[u3][8] = h2 : u3 < 8 ? o3[u3 + 1][8] = h2 : o3[i2 - 15 + u3][8] = h2;
                }
                for (u3 = 0; u3 < 15; u3 += 1) h2 = !t5 && 1 == (a2 >> u3 & 1), u3 < 8 ? o3[8][i2 - u3 - 1] = h2 : u3 < 9 ? o3[8][15 - u3 - 1 + 1] = h2 : o3[8][15 - u3 - 1] = h2;
                o3[i2 - 8][8] = !t5;
              }, C = function(t5, e5) {
                for (var r5 = -1, n4 = i2 - 1, a2 = 7, u3 = 0, h2 = s.getMaskFunction(e5), c2 = i2 - 1; c2 > 0; c2 -= 2) for (6 == c2 && (c2 -= 1); ; ) {
                  for (var l2 = 0; l2 < 2; l2 += 1) if (null == o3[n4][c2 - l2]) {
                    var d2 = false;
                    u3 < t5.length && (d2 = 1 == (t5[u3] >>> a2 & 1)), h2(n4, c2 - l2) && (d2 = !d2), o3[n4][c2 - l2] = d2, -1 == (a2 -= 1) && (u3 += 1, a2 = 7);
                  }
                  if ((n4 += r5) < 0 || i2 <= n4) {
                    n4 -= r5, r5 = -r5;
                    break;
                  }
                }
              }, A = function(t5, e5, r5) {
                for (var n4 = c.getRSBlocks(t5, e5), o4 = l(), i3 = 0; i3 < r5.length; i3 += 1) {
                  var a2 = r5[i3];
                  o4.put(a2.getMode(), 4), o4.put(a2.getLength(), s.getLengthInBits(a2.getMode(), t5)), a2.write(o4);
                }
                var u3 = 0;
                for (i3 = 0; i3 < n4.length; i3 += 1) u3 += n4[i3].dataCount;
                if (o4.getLengthInBits() > 8 * u3) throw "code length overflow. (" + o4.getLengthInBits() + ">" + 8 * u3 + ")";
                for (o4.getLengthInBits() + 4 <= 8 * u3 && o4.put(0, 4); o4.getLengthInBits() % 8 != 0; ) o4.putBit(false);
                for (; !(o4.getLengthInBits() >= 8 * u3 || (o4.put(236, 8), o4.getLengthInBits() >= 8 * u3)); ) o4.put(17, 8);
                return (function(t6, e6) {
                  for (var r6 = 0, n5 = 0, o5 = 0, i4 = new Array(e6.length), a3 = new Array(e6.length), u4 = 0; u4 < e6.length; u4 += 1) {
                    var c2 = e6[u4].dataCount, l2 = e6[u4].totalCount - c2;
                    n5 = Math.max(n5, c2), o5 = Math.max(o5, l2), i4[u4] = new Array(c2);
                    for (var d2 = 0; d2 < i4[u4].length; d2 += 1) i4[u4][d2] = 255 & t6.getBuffer()[d2 + r6];
                    r6 += c2;
                    var f2 = s.getErrorCorrectPolynomial(l2), g2 = h(i4[u4], f2.getLength() - 1).mod(f2);
                    for (a3[u4] = new Array(f2.getLength() - 1), d2 = 0; d2 < a3[u4].length; d2 += 1) {
                      var p2 = d2 + g2.getLength() - a3[u4].length;
                      a3[u4][d2] = p2 >= 0 ? g2.getAt(p2) : 0;
                    }
                  }
                  var v3 = 0;
                  for (d2 = 0; d2 < e6.length; d2 += 1) v3 += e6[d2].totalCount;
                  var w3 = new Array(v3), y2 = 0;
                  for (d2 = 0; d2 < n5; d2 += 1) for (u4 = 0; u4 < e6.length; u4 += 1) d2 < i4[u4].length && (w3[y2] = i4[u4][d2], y2 += 1);
                  for (d2 = 0; d2 < o5; d2 += 1) for (u4 = 0; u4 < e6.length; u4 += 1) d2 < a3[u4].length && (w3[y2] = a3[u4][d2], y2 += 1);
                  return w3;
                })(o4, n4);
              };
              w2.addData = function(t5, e5) {
                var r5 = null;
                switch (e5 = e5 || "Byte") {
                  case "Numeric":
                    r5 = d(t5);
                    break;
                  case "Alphanumeric":
                    r5 = f(t5);
                    break;
                  case "Byte":
                    r5 = g(t5);
                    break;
                  case "Kanji":
                    r5 = p(t5);
                    break;
                  default:
                    throw "mode:" + e5;
                }
                v2.push(r5), u2 = null;
              }, w2.isDark = function(t5, e5) {
                if (t5 < 0 || i2 <= t5 || e5 < 0 || i2 <= e5) throw t5 + "," + e5;
                return o3[t5][e5];
              }, w2.getModuleCount = function() {
                return i2;
              }, w2.make = function() {
                if (r4 < 1) {
                  for (var t5 = 1; t5 < 40; t5++) {
                    for (var e5 = c.getRSBlocks(t5, n3), o4 = l(), i3 = 0; i3 < v2.length; i3++) {
                      var a2 = v2[i3];
                      o4.put(a2.getMode(), 4), o4.put(a2.getLength(), s.getLengthInBits(a2.getMode(), t5)), a2.write(o4);
                    }
                    var u3 = 0;
                    for (i3 = 0; i3 < e5.length; i3++) u3 += e5[i3].dataCount;
                    if (o4.getLengthInBits() <= 8 * u3) break;
                  }
                  r4 = t5;
                }
                m(false, (function() {
                  for (var t6 = 0, e6 = 0, r5 = 0; r5 < 8; r5 += 1) {
                    m(true, r5);
                    var n4 = s.getLostPoint(w2);
                    (0 == r5 || t6 > n4) && (t6 = n4, e6 = r5);
                  }
                  return e6;
                })());
              }, w2.createTableTag = function(t5, e5) {
                t5 = t5 || 2;
                var r5 = "";
                r5 += '<table style="', r5 += " border-width: 0px; border-style: none;", r5 += " border-collapse: collapse;", r5 += " padding: 0px; margin: " + (e5 = void 0 === e5 ? 4 * t5 : e5) + "px;", r5 += '">', r5 += "<tbody>";
                for (var n4 = 0; n4 < w2.getModuleCount(); n4 += 1) {
                  r5 += "<tr>";
                  for (var o4 = 0; o4 < w2.getModuleCount(); o4 += 1) r5 += '<td style="', r5 += " border-width: 0px; border-style: none;", r5 += " border-collapse: collapse;", r5 += " padding: 0px; margin: 0px;", r5 += " width: " + t5 + "px;", r5 += " height: " + t5 + "px;", r5 += " background-color: ", r5 += w2.isDark(n4, o4) ? "#000000" : "#ffffff", r5 += ";", r5 += '"/>';
                  r5 += "</tr>";
                }
                return (r5 += "</tbody>") + "</table>";
              }, w2.createSvgTag = function(t5, e5, r5, n4) {
                var o4 = {};
                "object" == typeof arguments[0] && (t5 = (o4 = arguments[0]).cellSize, e5 = o4.margin, r5 = o4.alt, n4 = o4.title), t5 = t5 || 2, e5 = void 0 === e5 ? 4 * t5 : e5, (r5 = "string" == typeof r5 ? { text: r5 } : r5 || {}).text = r5.text || null, r5.id = r5.text ? r5.id || "qrcode-description" : null, (n4 = "string" == typeof n4 ? { text: n4 } : n4 || {}).text = n4.text || null, n4.id = n4.text ? n4.id || "qrcode-title" : null;
                var i3, a2, s2, u3, h2 = w2.getModuleCount() * t5 + 2 * e5, c2 = "";
                for (u3 = "l" + t5 + ",0 0," + t5 + " -" + t5 + ",0 0,-" + t5 + "z ", c2 += '<svg version="1.1" xmlns="http://www.w3.org/2000/svg"', c2 += o4.scalable ? "" : ' width="' + h2 + 'px" height="' + h2 + 'px"', c2 += ' viewBox="0 0 ' + h2 + " " + h2 + '" ', c2 += ' preserveAspectRatio="xMinYMin meet"', c2 += n4.text || r5.text ? ' role="img" aria-labelledby="' + k([n4.id, r5.id].join(" ").trim()) + '"' : "", c2 += ">", c2 += n4.text ? '<title id="' + k(n4.id) + '">' + k(n4.text) + "</title>" : "", c2 += r5.text ? '<description id="' + k(r5.id) + '">' + k(r5.text) + "</description>" : "", c2 += '<rect width="100%" height="100%" fill="white" cx="0" cy="0"/>', c2 += '<path d="', a2 = 0; a2 < w2.getModuleCount(); a2 += 1) for (s2 = a2 * t5 + e5, i3 = 0; i3 < w2.getModuleCount(); i3 += 1) w2.isDark(a2, i3) && (c2 += "M" + (i3 * t5 + e5) + "," + s2 + u3);
                return (c2 += '" stroke="transparent" fill="black"/>') + "</svg>";
              }, w2.createDataURL = function(t5, e5) {
                t5 = t5 || 2, e5 = void 0 === e5 ? 4 * t5 : e5;
                var r5 = w2.getModuleCount() * t5 + 2 * e5, n4 = e5, o4 = r5 - e5;
                return y(r5, r5, (function(e6, r6) {
                  if (n4 <= e6 && e6 < o4 && n4 <= r6 && r6 < o4) {
                    var i3 = Math.floor((e6 - n4) / t5), a2 = Math.floor((r6 - n4) / t5);
                    return w2.isDark(a2, i3) ? 0 : 1;
                  }
                  return 1;
                }));
              }, w2.createImgTag = function(t5, e5, r5) {
                t5 = t5 || 2, e5 = void 0 === e5 ? 4 * t5 : e5;
                var n4 = w2.getModuleCount() * t5 + 2 * e5, o4 = "";
                return o4 += "<img", o4 += ' src="', o4 += w2.createDataURL(t5, e5), o4 += '"', o4 += ' width="', o4 += n4, o4 += '"', o4 += ' height="', o4 += n4, o4 += '"', r5 && (o4 += ' alt="', o4 += k(r5), o4 += '"'), o4 + "/>";
              };
              var k = function(t5) {
                for (var e5 = "", r5 = 0; r5 < t5.length; r5 += 1) {
                  var n4 = t5.charAt(r5);
                  switch (n4) {
                    case "<":
                      e5 += "&lt;";
                      break;
                    case ">":
                      e5 += "&gt;";
                      break;
                    case "&":
                      e5 += "&amp;";
                      break;
                    case '"':
                      e5 += "&quot;";
                      break;
                    default:
                      e5 += n4;
                  }
                }
                return e5;
              };
              return w2.createASCII = function(t5, e5) {
                if ((t5 = t5 || 1) < 2) return (function(t6) {
                  t6 = void 0 === t6 ? 2 : t6;
                  var e6, r6, n5, o5, i4, a3 = 1 * w2.getModuleCount() + 2 * t6, s3 = t6, u4 = a3 - t6, h3 = { "██": "█", "█ ": "▀", " █": "▄", "  ": " " }, c3 = { "██": "▀", "█ ": "▀", " █": " ", "  ": " " }, l3 = "";
                  for (e6 = 0; e6 < a3; e6 += 2) {
                    for (n5 = Math.floor((e6 - s3) / 1), o5 = Math.floor((e6 + 1 - s3) / 1), r6 = 0; r6 < a3; r6 += 1) i4 = "█", s3 <= r6 && r6 < u4 && s3 <= e6 && e6 < u4 && w2.isDark(n5, Math.floor((r6 - s3) / 1)) && (i4 = " "), s3 <= r6 && r6 < u4 && s3 <= e6 + 1 && e6 + 1 < u4 && w2.isDark(o5, Math.floor((r6 - s3) / 1)) ? i4 += " " : i4 += "█", l3 += t6 < 1 && e6 + 1 >= u4 ? c3[i4] : h3[i4];
                    l3 += "\n";
                  }
                  return a3 % 2 && t6 > 0 ? l3.substring(0, l3.length - a3 - 1) + Array(a3 + 1).join("▀") : l3.substring(0, l3.length - 1);
                })(e5);
                t5 -= 1, e5 = void 0 === e5 ? 2 * t5 : e5;
                var r5, n4, o4, i3, a2 = w2.getModuleCount() * t5 + 2 * e5, s2 = e5, u3 = a2 - e5, h2 = Array(t5 + 1).join("██"), c2 = Array(t5 + 1).join("  "), l2 = "", d2 = "";
                for (r5 = 0; r5 < a2; r5 += 1) {
                  for (o4 = Math.floor((r5 - s2) / t5), d2 = "", n4 = 0; n4 < a2; n4 += 1) i3 = 1, s2 <= n4 && n4 < u3 && s2 <= r5 && r5 < u3 && w2.isDark(o4, Math.floor((n4 - s2) / t5)) && (i3 = 0), d2 += i3 ? h2 : c2;
                  for (o4 = 0; o4 < t5; o4 += 1) l2 += d2 + "\n";
                }
                return l2.substring(0, l2.length - 1);
              }, w2.renderTo2dContext = function(t5, e5) {
                e5 = e5 || 2;
                for (var r5 = w2.getModuleCount(), n4 = 0; n4 < r5; n4++) for (var o4 = 0; o4 < r5; o4++) t5.fillStyle = w2.isDark(n4, o4) ? "black" : "white", t5.fillRect(n4 * e5, o4 * e5, e5, e5);
              }, w2;
            };
            t3.stringToBytes = (t3.stringToBytesFuncs = { default: function(t4) {
              for (var e4 = [], r4 = 0; r4 < t4.length; r4 += 1) {
                var n3 = t4.charCodeAt(r4);
                e4.push(255 & n3);
              }
              return e4;
            } }).default, t3.createStringToBytes = function(t4, e4) {
              var r4 = (function() {
                for (var r5 = w(t4), n4 = function() {
                  var t5 = r5.read();
                  if (-1 == t5) throw "eof";
                  return t5;
                }, o3 = 0, i2 = {}; ; ) {
                  var a2 = r5.read();
                  if (-1 == a2) break;
                  var s2 = n4(), u2 = n4() << 8 | n4();
                  i2[String.fromCharCode(a2 << 8 | s2)] = u2, o3 += 1;
                }
                if (o3 != e4) throw o3 + " != " + e4;
                return i2;
              })(), n3 = "?".charCodeAt(0);
              return function(t5) {
                for (var e5 = [], o3 = 0; o3 < t5.length; o3 += 1) {
                  var i2 = t5.charCodeAt(o3);
                  if (i2 < 128) e5.push(i2);
                  else {
                    var a2 = r4[t5.charAt(o3)];
                    "number" == typeof a2 ? (255 & a2) == a2 ? e5.push(a2) : (e5.push(a2 >>> 8), e5.push(255 & a2)) : e5.push(n3);
                  }
                }
                return e5;
              };
            };
            var e3, r3, n2, o2, i, a = { L: 1, M: 0, Q: 3, H: 2 }, s = (e3 = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]], r3 = 1335, n2 = 7973, i = function(t4) {
              for (var e4 = 0; 0 != t4; ) e4 += 1, t4 >>>= 1;
              return e4;
            }, (o2 = {}).getBCHTypeInfo = function(t4) {
              for (var e4 = t4 << 10; i(e4) - i(r3) >= 0; ) e4 ^= r3 << i(e4) - i(r3);
              return 21522 ^ (t4 << 10 | e4);
            }, o2.getBCHTypeNumber = function(t4) {
              for (var e4 = t4 << 12; i(e4) - i(n2) >= 0; ) e4 ^= n2 << i(e4) - i(n2);
              return t4 << 12 | e4;
            }, o2.getPatternPosition = function(t4) {
              return e3[t4 - 1];
            }, o2.getMaskFunction = function(t4) {
              switch (t4) {
                case 0:
                  return function(t5, e4) {
                    return (t5 + e4) % 2 == 0;
                  };
                case 1:
                  return function(t5, e4) {
                    return t5 % 2 == 0;
                  };
                case 2:
                  return function(t5, e4) {
                    return e4 % 3 == 0;
                  };
                case 3:
                  return function(t5, e4) {
                    return (t5 + e4) % 3 == 0;
                  };
                case 4:
                  return function(t5, e4) {
                    return (Math.floor(t5 / 2) + Math.floor(e4 / 3)) % 2 == 0;
                  };
                case 5:
                  return function(t5, e4) {
                    return t5 * e4 % 2 + t5 * e4 % 3 == 0;
                  };
                case 6:
                  return function(t5, e4) {
                    return (t5 * e4 % 2 + t5 * e4 % 3) % 2 == 0;
                  };
                case 7:
                  return function(t5, e4) {
                    return (t5 * e4 % 3 + (t5 + e4) % 2) % 2 == 0;
                  };
                default:
                  throw "bad maskPattern:" + t4;
              }
            }, o2.getErrorCorrectPolynomial = function(t4) {
              for (var e4 = h([1], 0), r4 = 0; r4 < t4; r4 += 1) e4 = e4.multiply(h([1, u.gexp(r4)], 0));
              return e4;
            }, o2.getLengthInBits = function(t4, e4) {
              if (1 <= e4 && e4 < 10) switch (t4) {
                case 1:
                  return 10;
                case 2:
                  return 9;
                case 4:
                case 8:
                  return 8;
                default:
                  throw "mode:" + t4;
              }
              else if (e4 < 27) switch (t4) {
                case 1:
                  return 12;
                case 2:
                  return 11;
                case 4:
                  return 16;
                case 8:
                  return 10;
                default:
                  throw "mode:" + t4;
              }
              else {
                if (!(e4 < 41)) throw "type:" + e4;
                switch (t4) {
                  case 1:
                    return 14;
                  case 2:
                    return 13;
                  case 4:
                    return 16;
                  case 8:
                    return 12;
                  default:
                    throw "mode:" + t4;
                }
              }
            }, o2.getLostPoint = function(t4) {
              for (var e4 = t4.getModuleCount(), r4 = 0, n3 = 0; n3 < e4; n3 += 1) for (var o3 = 0; o3 < e4; o3 += 1) {
                for (var i2 = 0, a2 = t4.isDark(n3, o3), s2 = -1; s2 <= 1; s2 += 1) if (!(n3 + s2 < 0 || e4 <= n3 + s2)) for (var u2 = -1; u2 <= 1; u2 += 1) o3 + u2 < 0 || e4 <= o3 + u2 || 0 == s2 && 0 == u2 || a2 == t4.isDark(n3 + s2, o3 + u2) && (i2 += 1);
                i2 > 5 && (r4 += 3 + i2 - 5);
              }
              for (n3 = 0; n3 < e4 - 1; n3 += 1) for (o3 = 0; o3 < e4 - 1; o3 += 1) {
                var h2 = 0;
                t4.isDark(n3, o3) && (h2 += 1), t4.isDark(n3 + 1, o3) && (h2 += 1), t4.isDark(n3, o3 + 1) && (h2 += 1), t4.isDark(n3 + 1, o3 + 1) && (h2 += 1), 0 != h2 && 4 != h2 || (r4 += 3);
              }
              for (n3 = 0; n3 < e4; n3 += 1) for (o3 = 0; o3 < e4 - 6; o3 += 1) t4.isDark(n3, o3) && !t4.isDark(n3, o3 + 1) && t4.isDark(n3, o3 + 2) && t4.isDark(n3, o3 + 3) && t4.isDark(n3, o3 + 4) && !t4.isDark(n3, o3 + 5) && t4.isDark(n3, o3 + 6) && (r4 += 40);
              for (o3 = 0; o3 < e4; o3 += 1) for (n3 = 0; n3 < e4 - 6; n3 += 1) t4.isDark(n3, o3) && !t4.isDark(n3 + 1, o3) && t4.isDark(n3 + 2, o3) && t4.isDark(n3 + 3, o3) && t4.isDark(n3 + 4, o3) && !t4.isDark(n3 + 5, o3) && t4.isDark(n3 + 6, o3) && (r4 += 40);
              var c2 = 0;
              for (o3 = 0; o3 < e4; o3 += 1) for (n3 = 0; n3 < e4; n3 += 1) t4.isDark(n3, o3) && (c2 += 1);
              return r4 + Math.abs(100 * c2 / e4 / e4 - 50) / 5 * 10;
            }, o2), u = (function() {
              for (var t4 = new Array(256), e4 = new Array(256), r4 = 0; r4 < 8; r4 += 1) t4[r4] = 1 << r4;
              for (r4 = 8; r4 < 256; r4 += 1) t4[r4] = t4[r4 - 4] ^ t4[r4 - 5] ^ t4[r4 - 6] ^ t4[r4 - 8];
              for (r4 = 0; r4 < 255; r4 += 1) e4[t4[r4]] = r4;
              return { glog: function(t5) {
                if (t5 < 1) throw "glog(" + t5 + ")";
                return e4[t5];
              }, gexp: function(e5) {
                for (; e5 < 0; ) e5 += 255;
                for (; e5 >= 256; ) e5 -= 255;
                return t4[e5];
              } };
            })();
            function h(t4, e4) {
              if (void 0 === t4.length) throw t4.length + "/" + e4;
              var r4 = (function() {
                for (var r5 = 0; r5 < t4.length && 0 == t4[r5]; ) r5 += 1;
                for (var n4 = new Array(t4.length - r5 + e4), o3 = 0; o3 < t4.length - r5; o3 += 1) n4[o3] = t4[o3 + r5];
                return n4;
              })(), n3 = { getAt: function(t5) {
                return r4[t5];
              }, getLength: function() {
                return r4.length;
              }, multiply: function(t5) {
                for (var e5 = new Array(n3.getLength() + t5.getLength() - 1), r5 = 0; r5 < n3.getLength(); r5 += 1) for (var o3 = 0; o3 < t5.getLength(); o3 += 1) e5[r5 + o3] ^= u.gexp(u.glog(n3.getAt(r5)) + u.glog(t5.getAt(o3)));
                return h(e5, 0);
              }, mod: function(t5) {
                if (n3.getLength() - t5.getLength() < 0) return n3;
                for (var e5 = u.glog(n3.getAt(0)) - u.glog(t5.getAt(0)), r5 = new Array(n3.getLength()), o3 = 0; o3 < n3.getLength(); o3 += 1) r5[o3] = n3.getAt(o3);
                for (o3 = 0; o3 < t5.getLength(); o3 += 1) r5[o3] ^= u.gexp(u.glog(t5.getAt(o3)) + e5);
                return h(r5, 0).mod(t5);
              } };
              return n3;
            }
            var c = /* @__PURE__ */ (function() {
              var t4 = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12, 7, 37, 13], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]], e4 = function(t5, e5) {
                var r5 = {};
                return r5.totalCount = t5, r5.dataCount = e5, r5;
              }, r4 = { getRSBlocks: function(r5, n3) {
                var o3 = (function(e5, r6) {
                  switch (r6) {
                    case a.L:
                      return t4[4 * (e5 - 1) + 0];
                    case a.M:
                      return t4[4 * (e5 - 1) + 1];
                    case a.Q:
                      return t4[4 * (e5 - 1) + 2];
                    case a.H:
                      return t4[4 * (e5 - 1) + 3];
                    default:
                      return;
                  }
                })(r5, n3);
                if (void 0 === o3) throw "bad rs block @ typeNumber:" + r5 + "/errorCorrectionLevel:" + n3;
                for (var i2 = o3.length / 3, s2 = [], u2 = 0; u2 < i2; u2 += 1) for (var h2 = o3[3 * u2 + 0], c2 = o3[3 * u2 + 1], l2 = o3[3 * u2 + 2], d2 = 0; d2 < h2; d2 += 1) s2.push(e4(c2, l2));
                return s2;
              } };
              return r4;
            })(), l = function() {
              var t4 = [], e4 = 0, r4 = { getBuffer: function() {
                return t4;
              }, getAt: function(e5) {
                var r5 = Math.floor(e5 / 8);
                return 1 == (t4[r5] >>> 7 - e5 % 8 & 1);
              }, put: function(t5, e5) {
                for (var n3 = 0; n3 < e5; n3 += 1) r4.putBit(1 == (t5 >>> e5 - n3 - 1 & 1));
              }, getLengthInBits: function() {
                return e4;
              }, putBit: function(r5) {
                var n3 = Math.floor(e4 / 8);
                t4.length <= n3 && t4.push(0), r5 && (t4[n3] |= 128 >>> e4 % 8), e4 += 1;
              } };
              return r4;
            }, d = function(t4) {
              var e4 = t4, r4 = { getMode: function() {
                return 1;
              }, getLength: function(t5) {
                return e4.length;
              }, write: function(t5) {
                for (var r5 = e4, o4 = 0; o4 + 2 < r5.length; ) t5.put(n3(r5.substring(o4, o4 + 3)), 10), o4 += 3;
                o4 < r5.length && (r5.length - o4 == 1 ? t5.put(n3(r5.substring(o4, o4 + 1)), 4) : r5.length - o4 == 2 && t5.put(n3(r5.substring(o4, o4 + 2)), 7));
              } }, n3 = function(t5) {
                for (var e5 = 0, r5 = 0; r5 < t5.length; r5 += 1) e5 = 10 * e5 + o3(t5.charAt(r5));
                return e5;
              }, o3 = function(t5) {
                if ("0" <= t5 && t5 <= "9") return t5.charCodeAt(0) - "0".charCodeAt(0);
                throw "illegal char :" + t5;
              };
              return r4;
            }, f = function(t4) {
              var e4 = t4, r4 = { getMode: function() {
                return 2;
              }, getLength: function(t5) {
                return e4.length;
              }, write: function(t5) {
                for (var r5 = e4, o3 = 0; o3 + 1 < r5.length; ) t5.put(45 * n3(r5.charAt(o3)) + n3(r5.charAt(o3 + 1)), 11), o3 += 2;
                o3 < r5.length && t5.put(n3(r5.charAt(o3)), 6);
              } }, n3 = function(t5) {
                if ("0" <= t5 && t5 <= "9") return t5.charCodeAt(0) - "0".charCodeAt(0);
                if ("A" <= t5 && t5 <= "Z") return t5.charCodeAt(0) - "A".charCodeAt(0) + 10;
                switch (t5) {
                  case " ":
                    return 36;
                  case "$":
                    return 37;
                  case "%":
                    return 38;
                  case "*":
                    return 39;
                  case "+":
                    return 40;
                  case "-":
                    return 41;
                  case ".":
                    return 42;
                  case "/":
                    return 43;
                  case ":":
                    return 44;
                  default:
                    throw "illegal char :" + t5;
                }
              };
              return r4;
            }, g = function(e4) {
              var r4 = t3.stringToBytes(e4);
              return { getMode: function() {
                return 4;
              }, getLength: function(t4) {
                return r4.length;
              }, write: function(t4) {
                for (var e5 = 0; e5 < r4.length; e5 += 1) t4.put(r4[e5], 8);
              } };
            }, p = function(e4) {
              var r4 = t3.stringToBytesFuncs.SJIS;
              if (!r4) throw "sjis not supported.";
              !(function(t4, e5) {
                var n4 = r4("友");
                if (2 != n4.length || 38726 != (n4[0] << 8 | n4[1])) throw "sjis not supported.";
              })();
              var n3 = r4(e4);
              return { getMode: function() {
                return 8;
              }, getLength: function(t4) {
                return ~~(n3.length / 2);
              }, write: function(t4) {
                for (var e5 = n3, r5 = 0; r5 + 1 < e5.length; ) {
                  var o3 = (255 & e5[r5]) << 8 | 255 & e5[r5 + 1];
                  if (33088 <= o3 && o3 <= 40956) o3 -= 33088;
                  else {
                    if (!(57408 <= o3 && o3 <= 60351)) throw "illegal char at " + (r5 + 1) + "/" + o3;
                    o3 -= 49472;
                  }
                  o3 = 192 * (o3 >>> 8 & 255) + (255 & o3), t4.put(o3, 13), r5 += 2;
                }
                if (r5 < e5.length) throw "illegal char at " + (r5 + 1);
              } };
            }, v = function() {
              var t4 = [], e4 = { writeByte: function(e5) {
                t4.push(255 & e5);
              }, writeShort: function(t5) {
                e4.writeByte(t5), e4.writeByte(t5 >>> 8);
              }, writeBytes: function(t5, r4, n3) {
                r4 = r4 || 0, n3 = n3 || t5.length;
                for (var o3 = 0; o3 < n3; o3 += 1) e4.writeByte(t5[o3 + r4]);
              }, writeString: function(t5) {
                for (var r4 = 0; r4 < t5.length; r4 += 1) e4.writeByte(t5.charCodeAt(r4));
              }, toByteArray: function() {
                return t4;
              }, toString: function() {
                var e5 = "";
                e5 += "[";
                for (var r4 = 0; r4 < t4.length; r4 += 1) r4 > 0 && (e5 += ","), e5 += t4[r4];
                return e5 + "]";
              } };
              return e4;
            }, w = function(t4) {
              var e4 = t4, r4 = 0, n3 = 0, o3 = 0, i2 = { read: function() {
                for (; o3 < 8; ) {
                  if (r4 >= e4.length) {
                    if (0 == o3) return -1;
                    throw "unexpected end of file./" + o3;
                  }
                  var t5 = e4.charAt(r4);
                  if (r4 += 1, "=" == t5) return o3 = 0, -1;
                  t5.match(/^\s$/) || (n3 = n3 << 6 | a2(t5.charCodeAt(0)), o3 += 6);
                }
                var i3 = n3 >>> o3 - 8 & 255;
                return o3 -= 8, i3;
              } }, a2 = function(t5) {
                if (65 <= t5 && t5 <= 90) return t5 - 65;
                if (97 <= t5 && t5 <= 122) return t5 - 97 + 26;
                if (48 <= t5 && t5 <= 57) return t5 - 48 + 52;
                if (43 == t5) return 62;
                if (47 == t5) return 63;
                throw "c:" + t5;
              };
              return i2;
            }, y = function(t4, e4, r4) {
              for (var n3 = (function(t5, e5) {
                var r5 = t5, n4 = e5, o4 = new Array(t5 * e5), i3 = { setPixel: function(t6, e6, n5) {
                  o4[e6 * r5 + t6] = n5;
                }, write: function(t6) {
                  t6.writeString("GIF87a"), t6.writeShort(r5), t6.writeShort(n4), t6.writeByte(128), t6.writeByte(0), t6.writeByte(0), t6.writeByte(0), t6.writeByte(0), t6.writeByte(0), t6.writeByte(255), t6.writeByte(255), t6.writeByte(255), t6.writeString(","), t6.writeShort(0), t6.writeShort(0), t6.writeShort(r5), t6.writeShort(n4), t6.writeByte(0);
                  var e6 = a3(2);
                  t6.writeByte(2);
                  for (var o5 = 0; e6.length - o5 > 255; ) t6.writeByte(255), t6.writeBytes(e6, o5, 255), o5 += 255;
                  t6.writeByte(e6.length - o5), t6.writeBytes(e6, o5, e6.length - o5), t6.writeByte(0), t6.writeString(";");
                } }, a3 = function(t6) {
                  for (var e6 = 1 << t6, r6 = 1 + (1 << t6), n5 = t6 + 1, i4 = s3(), a4 = 0; a4 < e6; a4 += 1) i4.add(String.fromCharCode(a4));
                  i4.add(String.fromCharCode(e6)), i4.add(String.fromCharCode(r6));
                  var u3, h3, c2, l2 = v(), d2 = (u3 = l2, h3 = 0, c2 = 0, { write: function(t7, e7) {
                    if (t7 >>> e7 != 0) throw "length over";
                    for (; h3 + e7 >= 8; ) u3.writeByte(255 & (t7 << h3 | c2)), e7 -= 8 - h3, t7 >>>= 8 - h3, c2 = 0, h3 = 0;
                    c2 |= t7 << h3, h3 += e7;
                  }, flush: function() {
                    h3 > 0 && u3.writeByte(c2);
                  } });
                  d2.write(e6, n5);
                  var f2 = 0, g2 = String.fromCharCode(o4[f2]);
                  for (f2 += 1; f2 < o4.length; ) {
                    var p2 = String.fromCharCode(o4[f2]);
                    f2 += 1, i4.contains(g2 + p2) ? g2 += p2 : (d2.write(i4.indexOf(g2), n5), i4.size() < 4095 && (i4.size() == 1 << n5 && (n5 += 1), i4.add(g2 + p2)), g2 = p2);
                  }
                  return d2.write(i4.indexOf(g2), n5), d2.write(r6, n5), d2.flush(), l2.toByteArray();
                }, s3 = function() {
                  var t6 = {}, e6 = 0, r6 = { add: function(n5) {
                    if (r6.contains(n5)) throw "dup key:" + n5;
                    t6[n5] = e6, e6 += 1;
                  }, size: function() {
                    return e6;
                  }, indexOf: function(e7) {
                    return t6[e7];
                  }, contains: function(e7) {
                    return void 0 !== t6[e7];
                  } };
                  return r6;
                };
                return i3;
              })(t4, e4), o3 = 0; o3 < e4; o3 += 1) for (var i2 = 0; i2 < t4; i2 += 1) n3.setPixel(i2, o3, r4(i2, o3));
              var a2 = v();
              n3.write(a2);
              for (var s2 = (function() {
                var t5 = 0, e5 = 0, r5 = 0, n4 = "", o4 = {}, i3 = function(t6) {
                  n4 += String.fromCharCode(a3(63 & t6));
                }, a3 = function(t6) {
                  if (t6 < 0) ;
                  else {
                    if (t6 < 26) return 65 + t6;
                    if (t6 < 52) return t6 - 26 + 97;
                    if (t6 < 62) return t6 - 52 + 48;
                    if (62 == t6) return 43;
                    if (63 == t6) return 47;
                  }
                  throw "n:" + t6;
                };
                return o4.writeByte = function(n5) {
                  for (t5 = t5 << 8 | 255 & n5, e5 += 8, r5 += 1; e5 >= 6; ) i3(t5 >>> e5 - 6), e5 -= 6;
                }, o4.flush = function() {
                  if (e5 > 0 && (i3(t5 << 6 - e5), t5 = 0, e5 = 0), r5 % 3 != 0) for (var o5 = 3 - r5 % 3, a4 = 0; a4 < o5; a4 += 1) n4 += "=";
                }, o4.toString = function() {
                  return n4;
                }, o4;
              })(), u2 = a2.toByteArray(), h2 = 0; h2 < u2.length; h2 += 1) s2.writeByte(u2[h2]);
              return s2.flush(), "data:image/gif;base64," + s2;
            };
            return t3;
          })();
          o.stringToBytesFuncs["UTF-8"] = function(t3) {
            return (function(t4) {
              for (var e3 = [], r3 = 0; r3 < t4.length; r3++) {
                var n2 = t4.charCodeAt(r3);
                n2 < 128 ? e3.push(n2) : n2 < 2048 ? e3.push(192 | n2 >> 6, 128 | 63 & n2) : n2 < 55296 || n2 >= 57344 ? e3.push(224 | n2 >> 12, 128 | n2 >> 6 & 63, 128 | 63 & n2) : (r3++, n2 = 65536 + ((1023 & n2) << 10 | 1023 & t4.charCodeAt(r3)), e3.push(240 | n2 >> 18, 128 | n2 >> 12 & 63, 128 | n2 >> 6 & 63, 128 | 63 & n2));
              }
              return e3;
            })(t3);
          }, void 0 === (n = "function" == typeof (r2 = function() {
            return o;
          }) ? r2.apply(e2, []) : r2) || (t2.exports = n);
        }, 676: (t2, e2, r2) => {
          "use strict";
          r2.d(e2, { default: () => q });
          var n = function() {
            return (n = Object.assign || function(t3) {
              for (var e3, r3 = 1, n2 = arguments.length; r3 < n2; r3++) for (var o2 in e3 = arguments[r3]) Object.prototype.hasOwnProperty.call(e3, o2) && (t3[o2] = e3[o2]);
              return t3;
            }).apply(this, arguments);
          }, o = function() {
            for (var t3 = 0, e3 = 0, r3 = arguments.length; e3 < r3; e3++) t3 += arguments[e3].length;
            var n2 = Array(t3), o2 = 0;
            for (e3 = 0; e3 < r3; e3++) for (var i2 = arguments[e3], a2 = 0, s2 = i2.length; a2 < s2; a2++, o2++) n2[o2] = i2[a2];
            return n2;
          }, i = function(t3) {
            return !!t3 && "object" == typeof t3 && !Array.isArray(t3);
          };
          function a(t3) {
            for (var e3 = [], r3 = 1; r3 < arguments.length; r3++) e3[r3 - 1] = arguments[r3];
            if (!e3.length) return t3;
            var s2 = e3.shift();
            return void 0 !== s2 && i(t3) && i(s2) ? (t3 = n({}, t3), Object.keys(s2).forEach((function(e4) {
              var r4 = t3[e4], n2 = s2[e4];
              Array.isArray(r4) && Array.isArray(n2) ? t3[e4] = n2 : i(r4) && i(n2) ? t3[e4] = a(Object.assign({}, r4), n2) : t3[e4] = n2;
            })), a.apply(void 0, o([t3], e3))) : t3;
          }
          function s(t3, e3) {
            var r3 = document.createElement("a");
            r3.download = e3, r3.href = t3, document.body.appendChild(r3), r3.click(), document.body.removeChild(r3);
          }
          function u(t3) {
            return e3 = this, r3 = void 0, o2 = function() {
              return (function(t4, e4) {
                var r4, n3, o3, i2, a2 = { label: 0, sent: function() {
                  if (1 & o3[0]) throw o3[1];
                  return o3[1];
                }, trys: [], ops: [] };
                return i2 = { next: s2(0), throw: s2(1), return: s2(2) }, "function" == typeof Symbol && (i2[Symbol.iterator] = function() {
                  return this;
                }), i2;
                function s2(i3) {
                  return function(s3) {
                    return (function(i4) {
                      if (r4) throw new TypeError("Generator is already executing.");
                      for (; a2; ) try {
                        if (r4 = 1, n3 && (o3 = 2 & i4[0] ? n3.return : i4[0] ? n3.throw || ((o3 = n3.return) && o3.call(n3), 0) : n3.next) && !(o3 = o3.call(n3, i4[1])).done) return o3;
                        switch (n3 = 0, o3 && (i4 = [2 & i4[0], o3.value]), i4[0]) {
                          case 0:
                          case 1:
                            o3 = i4;
                            break;
                          case 4:
                            return a2.label++, { value: i4[1], done: false };
                          case 5:
                            a2.label++, n3 = i4[1], i4 = [0];
                            continue;
                          case 7:
                            i4 = a2.ops.pop(), a2.trys.pop();
                            continue;
                          default:
                            if (!((o3 = (o3 = a2.trys).length > 0 && o3[o3.length - 1]) || 6 !== i4[0] && 2 !== i4[0])) {
                              a2 = 0;
                              continue;
                            }
                            if (3 === i4[0] && (!o3 || i4[1] > o3[0] && i4[1] < o3[3])) {
                              a2.label = i4[1];
                              break;
                            }
                            if (6 === i4[0] && a2.label < o3[1]) {
                              a2.label = o3[1], o3 = i4;
                              break;
                            }
                            if (o3 && a2.label < o3[2]) {
                              a2.label = o3[2], a2.ops.push(i4);
                              break;
                            }
                            o3[2] && a2.ops.pop(), a2.trys.pop();
                            continue;
                        }
                        i4 = e4.call(t4, a2);
                      } catch (t5) {
                        i4 = [6, t5], n3 = 0;
                      } finally {
                        r4 = o3 = 0;
                      }
                      if (5 & i4[0]) throw i4[1];
                      return { value: i4[0] ? i4[1] : void 0, done: true };
                    })([i3, s3]);
                  };
                }
              })(this, (function(e4) {
                return [2, new Promise((function(e5) {
                  var r4 = new XMLHttpRequest();
                  r4.onload = function() {
                    var t4 = new FileReader();
                    t4.onloadend = function() {
                      e5(t4.result);
                    }, t4.readAsDataURL(r4.response);
                  }, r4.open("GET", t3), r4.responseType = "blob", r4.send();
                }))];
              }));
            }, new ((n2 = void 0) || (n2 = Promise))((function(t4, i2) {
              function a2(t5) {
                try {
                  u2(o2.next(t5));
                } catch (t6) {
                  i2(t6);
                }
              }
              function s2(t5) {
                try {
                  u2(o2.throw(t5));
                } catch (t6) {
                  i2(t6);
                }
              }
              function u2(e4) {
                var r4;
                e4.done ? t4(e4.value) : (r4 = e4.value, r4 instanceof n2 ? r4 : new n2((function(t5) {
                  t5(r4);
                }))).then(a2, s2);
              }
              u2((o2 = o2.apply(e3, r3 || [])).next());
            }));
            var e3, r3, n2, o2;
          }
          const h = { L: 0.07, M: 0.15, Q: 0.25, H: 0.3 };
          var c = function() {
            return (c = Object.assign || function(t3) {
              for (var e3, r3 = 1, n2 = arguments.length; r3 < n2; r3++) for (var o2 in e3 = arguments[r3]) Object.prototype.hasOwnProperty.call(e3, o2) && (t3[o2] = e3[o2]);
              return t3;
            }).apply(this, arguments);
          };
          const l = (function() {
            function t3(t4) {
              var e3 = t4.svg, r3 = t4.type;
              this._svg = e3, this._type = r3;
            }
            return t3.prototype.draw = function(t4, e3, r3, n2) {
              var o2;
              switch (this._type) {
                case "dots":
                  o2 = this._drawDot;
                  break;
                case "classy":
                  o2 = this._drawClassy;
                  break;
                case "classy-rounded":
                  o2 = this._drawClassyRounded;
                  break;
                case "rounded":
                  o2 = this._drawRounded;
                  break;
                case "extra-rounded":
                  o2 = this._drawExtraRounded;
                  break;
                case "square":
                default:
                  o2 = this._drawSquare;
              }
              o2.call(this, { x: t4, y: e3, size: r3, getNeighbor: n2 });
            }, t3.prototype._rotateFigure = function(t4) {
              var e3, r3 = t4.x, n2 = t4.y, o2 = t4.size, i2 = t4.rotation, a2 = void 0 === i2 ? 0 : i2, s2 = r3 + o2 / 2, u2 = n2 + o2 / 2;
              (0, t4.draw)(), null === (e3 = this._element) || void 0 === e3 || e3.setAttribute("transform", "rotate(" + 180 * a2 / Math.PI + "," + s2 + "," + u2 + ")");
            }, t3.prototype._basicDot = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y;
              this._rotateFigure(c(c({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "circle"), e3._element.setAttribute("cx", String(n2 + r3 / 2)), e3._element.setAttribute("cy", String(o2 + r3 / 2)), e3._element.setAttribute("r", String(r3 / 2));
              } }));
            }, t3.prototype._basicSquare = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y;
              this._rotateFigure(c(c({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "rect"), e3._element.setAttribute("x", String(n2)), e3._element.setAttribute("y", String(o2)), e3._element.setAttribute("width", String(r3)), e3._element.setAttribute("height", String(r3));
              } }));
            }, t3.prototype._basicSideRounded = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y;
              this._rotateFigure(c(c({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "path"), e3._element.setAttribute("d", "M " + n2 + " " + o2 + "v " + r3 + "h " + r3 / 2 + "a " + r3 / 2 + " " + r3 / 2 + ", 0, 0, 0, 0 " + -r3);
              } }));
            }, t3.prototype._basicCornerRounded = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y;
              this._rotateFigure(c(c({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "path"), e3._element.setAttribute("d", "M " + n2 + " " + o2 + "v " + r3 + "h " + r3 + "v " + -r3 / 2 + "a " + r3 / 2 + " " + r3 / 2 + ", 0, 0, 0, " + -r3 / 2 + " " + -r3 / 2);
              } }));
            }, t3.prototype._basicCornerExtraRounded = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y;
              this._rotateFigure(c(c({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "path"), e3._element.setAttribute("d", "M " + n2 + " " + o2 + "v " + r3 + "h " + r3 + "a " + r3 + " " + r3 + ", 0, 0, 0, " + -r3 + " " + -r3);
              } }));
            }, t3.prototype._basicCornersRounded = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y;
              this._rotateFigure(c(c({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "path"), e3._element.setAttribute("d", "M " + n2 + " " + o2 + "v " + r3 / 2 + "a " + r3 / 2 + " " + r3 / 2 + ", 0, 0, 0, " + r3 / 2 + " " + r3 / 2 + "h " + r3 / 2 + "v " + -r3 / 2 + "a " + r3 / 2 + " " + r3 / 2 + ", 0, 0, 0, " + -r3 / 2 + " " + -r3 / 2);
              } }));
            }, t3.prototype._drawDot = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size;
              this._basicDot({ x: e3, y: r3, size: n2, rotation: 0 });
            }, t3.prototype._drawSquare = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size;
              this._basicSquare({ x: e3, y: r3, size: n2, rotation: 0 });
            }, t3.prototype._drawRounded = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size, o2 = t4.getNeighbor, i2 = o2 ? +o2(-1, 0) : 0, a2 = o2 ? +o2(1, 0) : 0, s2 = o2 ? +o2(0, -1) : 0, u2 = o2 ? +o2(0, 1) : 0, h2 = i2 + a2 + s2 + u2;
              if (0 !== h2) if (h2 > 2 || i2 && a2 || s2 && u2) this._basicSquare({ x: e3, y: r3, size: n2, rotation: 0 });
              else {
                if (2 === h2) {
                  var c2 = 0;
                  return i2 && s2 ? c2 = Math.PI / 2 : s2 && a2 ? c2 = Math.PI : a2 && u2 && (c2 = -Math.PI / 2), void this._basicCornerRounded({ x: e3, y: r3, size: n2, rotation: c2 });
                }
                if (1 === h2) return c2 = 0, s2 ? c2 = Math.PI / 2 : a2 ? c2 = Math.PI : u2 && (c2 = -Math.PI / 2), void this._basicSideRounded({ x: e3, y: r3, size: n2, rotation: c2 });
              }
              else this._basicDot({ x: e3, y: r3, size: n2, rotation: 0 });
            }, t3.prototype._drawExtraRounded = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size, o2 = t4.getNeighbor, i2 = o2 ? +o2(-1, 0) : 0, a2 = o2 ? +o2(1, 0) : 0, s2 = o2 ? +o2(0, -1) : 0, u2 = o2 ? +o2(0, 1) : 0, h2 = i2 + a2 + s2 + u2;
              if (0 !== h2) if (h2 > 2 || i2 && a2 || s2 && u2) this._basicSquare({ x: e3, y: r3, size: n2, rotation: 0 });
              else {
                if (2 === h2) {
                  var c2 = 0;
                  return i2 && s2 ? c2 = Math.PI / 2 : s2 && a2 ? c2 = Math.PI : a2 && u2 && (c2 = -Math.PI / 2), void this._basicCornerExtraRounded({ x: e3, y: r3, size: n2, rotation: c2 });
                }
                if (1 === h2) return c2 = 0, s2 ? c2 = Math.PI / 2 : a2 ? c2 = Math.PI : u2 && (c2 = -Math.PI / 2), void this._basicSideRounded({ x: e3, y: r3, size: n2, rotation: c2 });
              }
              else this._basicDot({ x: e3, y: r3, size: n2, rotation: 0 });
            }, t3.prototype._drawClassy = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size, o2 = t4.getNeighbor, i2 = o2 ? +o2(-1, 0) : 0, a2 = o2 ? +o2(1, 0) : 0, s2 = o2 ? +o2(0, -1) : 0, u2 = o2 ? +o2(0, 1) : 0;
              0 !== i2 + a2 + s2 + u2 ? i2 || s2 ? a2 || u2 ? this._basicSquare({ x: e3, y: r3, size: n2, rotation: 0 }) : this._basicCornerRounded({ x: e3, y: r3, size: n2, rotation: Math.PI / 2 }) : this._basicCornerRounded({ x: e3, y: r3, size: n2, rotation: -Math.PI / 2 }) : this._basicCornersRounded({ x: e3, y: r3, size: n2, rotation: Math.PI / 2 });
            }, t3.prototype._drawClassyRounded = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size, o2 = t4.getNeighbor, i2 = o2 ? +o2(-1, 0) : 0, a2 = o2 ? +o2(1, 0) : 0, s2 = o2 ? +o2(0, -1) : 0, u2 = o2 ? +o2(0, 1) : 0;
              0 !== i2 + a2 + s2 + u2 ? i2 || s2 ? a2 || u2 ? this._basicSquare({ x: e3, y: r3, size: n2, rotation: 0 }) : this._basicCornerExtraRounded({ x: e3, y: r3, size: n2, rotation: Math.PI / 2 }) : this._basicCornerExtraRounded({ x: e3, y: r3, size: n2, rotation: -Math.PI / 2 }) : this._basicCornersRounded({ x: e3, y: r3, size: n2, rotation: Math.PI / 2 });
            }, t3;
          })();
          var d = function() {
            return (d = Object.assign || function(t3) {
              for (var e3, r3 = 1, n2 = arguments.length; r3 < n2; r3++) for (var o2 in e3 = arguments[r3]) Object.prototype.hasOwnProperty.call(e3, o2) && (t3[o2] = e3[o2]);
              return t3;
            }).apply(this, arguments);
          };
          const f = (function() {
            function t3(t4) {
              var e3 = t4.svg, r3 = t4.type;
              this._svg = e3, this._type = r3;
            }
            return t3.prototype.draw = function(t4, e3, r3, n2) {
              var o2;
              switch (this._type) {
                case "square":
                  o2 = this._drawSquare;
                  break;
                case "extra-rounded":
                  o2 = this._drawExtraRounded;
                  break;
                case "dot":
                default:
                  o2 = this._drawDot;
              }
              o2.call(this, { x: t4, y: e3, size: r3, rotation: n2 });
            }, t3.prototype._rotateFigure = function(t4) {
              var e3, r3 = t4.x, n2 = t4.y, o2 = t4.size, i2 = t4.rotation, a2 = void 0 === i2 ? 0 : i2, s2 = r3 + o2 / 2, u2 = n2 + o2 / 2;
              (0, t4.draw)(), null === (e3 = this._element) || void 0 === e3 || e3.setAttribute("transform", "rotate(" + 180 * a2 / Math.PI + "," + s2 + "," + u2 + ")");
            }, t3.prototype._basicDot = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y, i2 = r3 / 7;
              this._rotateFigure(d(d({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "path"), e3._element.setAttribute("clip-rule", "evenodd"), e3._element.setAttribute("d", "M " + (n2 + r3 / 2) + " " + o2 + "a " + r3 / 2 + " " + r3 / 2 + " 0 1 0 0.1 0zm 0 " + i2 + "a " + (r3 / 2 - i2) + " " + (r3 / 2 - i2) + " 0 1 1 -0.1 0Z");
              } }));
            }, t3.prototype._basicSquare = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y, i2 = r3 / 7;
              this._rotateFigure(d(d({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "path"), e3._element.setAttribute("clip-rule", "evenodd"), e3._element.setAttribute("d", "M " + n2 + " " + o2 + "v " + r3 + "h " + r3 + "v " + -r3 + "zM " + (n2 + i2) + " " + (o2 + i2) + "h " + (r3 - 2 * i2) + "v " + (r3 - 2 * i2) + "h " + (2 * i2 - r3) + "z");
              } }));
            }, t3.prototype._basicExtraRounded = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y, i2 = r3 / 7;
              this._rotateFigure(d(d({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "path"), e3._element.setAttribute("clip-rule", "evenodd"), e3._element.setAttribute("d", "M " + n2 + " " + (o2 + 2.5 * i2) + "v " + 2 * i2 + "a " + 2.5 * i2 + " " + 2.5 * i2 + ", 0, 0, 0, " + 2.5 * i2 + " " + 2.5 * i2 + "h " + 2 * i2 + "a " + 2.5 * i2 + " " + 2.5 * i2 + ", 0, 0, 0, " + 2.5 * i2 + " " + 2.5 * -i2 + "v " + -2 * i2 + "a " + 2.5 * i2 + " " + 2.5 * i2 + ", 0, 0, 0, " + 2.5 * -i2 + " " + 2.5 * -i2 + "h " + -2 * i2 + "a " + 2.5 * i2 + " " + 2.5 * i2 + ", 0, 0, 0, " + 2.5 * -i2 + " " + 2.5 * i2 + "M " + (n2 + 2.5 * i2) + " " + (o2 + i2) + "h " + 2 * i2 + "a " + 1.5 * i2 + " " + 1.5 * i2 + ", 0, 0, 1, " + 1.5 * i2 + " " + 1.5 * i2 + "v " + 2 * i2 + "a " + 1.5 * i2 + " " + 1.5 * i2 + ", 0, 0, 1, " + 1.5 * -i2 + " " + 1.5 * i2 + "h " + -2 * i2 + "a " + 1.5 * i2 + " " + 1.5 * i2 + ", 0, 0, 1, " + 1.5 * -i2 + " " + 1.5 * -i2 + "v " + -2 * i2 + "a " + 1.5 * i2 + " " + 1.5 * i2 + ", 0, 0, 1, " + 1.5 * i2 + " " + 1.5 * -i2);
              } }));
            }, t3.prototype._drawDot = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size, o2 = t4.rotation;
              this._basicDot({ x: e3, y: r3, size: n2, rotation: o2 });
            }, t3.prototype._drawSquare = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size, o2 = t4.rotation;
              this._basicSquare({ x: e3, y: r3, size: n2, rotation: o2 });
            }, t3.prototype._drawExtraRounded = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size, o2 = t4.rotation;
              this._basicExtraRounded({ x: e3, y: r3, size: n2, rotation: o2 });
            }, t3;
          })();
          var g = function() {
            return (g = Object.assign || function(t3) {
              for (var e3, r3 = 1, n2 = arguments.length; r3 < n2; r3++) for (var o2 in e3 = arguments[r3]) Object.prototype.hasOwnProperty.call(e3, o2) && (t3[o2] = e3[o2]);
              return t3;
            }).apply(this, arguments);
          };
          const p = (function() {
            function t3(t4) {
              var e3 = t4.svg, r3 = t4.type;
              this._svg = e3, this._type = r3;
            }
            return t3.prototype.draw = function(t4, e3, r3, n2) {
              var o2;
              switch (this._type) {
                case "square":
                  o2 = this._drawSquare;
                  break;
                case "dot":
                default:
                  o2 = this._drawDot;
              }
              o2.call(this, { x: t4, y: e3, size: r3, rotation: n2 });
            }, t3.prototype._rotateFigure = function(t4) {
              var e3, r3 = t4.x, n2 = t4.y, o2 = t4.size, i2 = t4.rotation, a2 = void 0 === i2 ? 0 : i2, s2 = r3 + o2 / 2, u2 = n2 + o2 / 2;
              (0, t4.draw)(), null === (e3 = this._element) || void 0 === e3 || e3.setAttribute("transform", "rotate(" + 180 * a2 / Math.PI + "," + s2 + "," + u2 + ")");
            }, t3.prototype._basicDot = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y;
              this._rotateFigure(g(g({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "circle"), e3._element.setAttribute("cx", String(n2 + r3 / 2)), e3._element.setAttribute("cy", String(o2 + r3 / 2)), e3._element.setAttribute("r", String(r3 / 2));
              } }));
            }, t3.prototype._basicSquare = function(t4) {
              var e3 = this, r3 = t4.size, n2 = t4.x, o2 = t4.y;
              this._rotateFigure(g(g({}, t4), { draw: function() {
                e3._element = document.createElementNS("http://www.w3.org/2000/svg", "rect"), e3._element.setAttribute("x", String(n2)), e3._element.setAttribute("y", String(o2)), e3._element.setAttribute("width", String(r3)), e3._element.setAttribute("height", String(r3));
              } }));
            }, t3.prototype._drawDot = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size, o2 = t4.rotation;
              this._basicDot({ x: e3, y: r3, size: n2, rotation: o2 });
            }, t3.prototype._drawSquare = function(t4) {
              var e3 = t4.x, r3 = t4.y, n2 = t4.size, o2 = t4.rotation;
              this._basicSquare({ x: e3, y: r3, size: n2, rotation: o2 });
            }, t3;
          })(), v = "circle";
          var w = function(t3, e3, r3, n2) {
            return new (r3 || (r3 = Promise))((function(o2, i2) {
              function a2(t4) {
                try {
                  u2(n2.next(t4));
                } catch (t5) {
                  i2(t5);
                }
              }
              function s2(t4) {
                try {
                  u2(n2.throw(t4));
                } catch (t5) {
                  i2(t5);
                }
              }
              function u2(t4) {
                var e4;
                t4.done ? o2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3((function(t5) {
                  t5(e4);
                }))).then(a2, s2);
              }
              u2((n2 = n2.apply(t3, e3 || [])).next());
            }));
          }, y = function(t3, e3) {
            var r3, n2, o2, i2, a2 = { label: 0, sent: function() {
              if (1 & o2[0]) throw o2[1];
              return o2[1];
            }, trys: [], ops: [] };
            return i2 = { next: s2(0), throw: s2(1), return: s2(2) }, "function" == typeof Symbol && (i2[Symbol.iterator] = function() {
              return this;
            }), i2;
            function s2(i3) {
              return function(s3) {
                return (function(i4) {
                  if (r3) throw new TypeError("Generator is already executing.");
                  for (; a2; ) try {
                    if (r3 = 1, n2 && (o2 = 2 & i4[0] ? n2.return : i4[0] ? n2.throw || ((o2 = n2.return) && o2.call(n2), 0) : n2.next) && !(o2 = o2.call(n2, i4[1])).done) return o2;
                    switch (n2 = 0, o2 && (i4 = [2 & i4[0], o2.value]), i4[0]) {
                      case 0:
                      case 1:
                        o2 = i4;
                        break;
                      case 4:
                        return a2.label++, { value: i4[1], done: false };
                      case 5:
                        a2.label++, n2 = i4[1], i4 = [0];
                        continue;
                      case 7:
                        i4 = a2.ops.pop(), a2.trys.pop();
                        continue;
                      default:
                        if (!((o2 = (o2 = a2.trys).length > 0 && o2[o2.length - 1]) || 6 !== i4[0] && 2 !== i4[0])) {
                          a2 = 0;
                          continue;
                        }
                        if (3 === i4[0] && (!o2 || i4[1] > o2[0] && i4[1] < o2[3])) {
                          a2.label = i4[1];
                          break;
                        }
                        if (6 === i4[0] && a2.label < o2[1]) {
                          a2.label = o2[1], o2 = i4;
                          break;
                        }
                        if (o2 && a2.label < o2[2]) {
                          a2.label = o2[2], a2.ops.push(i4);
                          break;
                        }
                        o2[2] && a2.ops.pop(), a2.trys.pop();
                        continue;
                    }
                    i4 = e3.call(t3, a2);
                  } catch (t4) {
                    i4 = [6, t4], n2 = 0;
                  } finally {
                    r3 = o2 = 0;
                  }
                  if (5 & i4[0]) throw i4[1];
                  return { value: i4[0] ? i4[1] : void 0, done: true };
                })([i3, s3]);
              };
            }
          }, m = [[1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1]], b = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]];
          const _ = (function() {
            function t3(t4) {
              this._element = document.createElementNS("http://www.w3.org/2000/svg", "svg"), this._element.setAttribute("width", String(t4.width)), this._element.setAttribute("height", String(t4.height)), this._defs = document.createElementNS("http://www.w3.org/2000/svg", "defs"), this._element.appendChild(this._defs), this._options = t4;
            }
            return Object.defineProperty(t3.prototype, "width", { get: function() {
              return this._options.width;
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "height", { get: function() {
              return this._options.height;
            }, enumerable: false, configurable: true }), t3.prototype.getElement = function() {
              return this._element;
            }, t3.prototype.drawQR = function(t4) {
              return w(this, void 0, void 0, (function() {
                var e3, r3, n2, o2, i2, a2, s2, u2, c2, l2, d2 = this;
                return y(this, (function(f2) {
                  switch (f2.label) {
                    case 0:
                      return e3 = t4.getModuleCount(), r3 = Math.min(this._options.width, this._options.height) - 2 * this._options.margin, n2 = this._options.shape === v ? r3 / Math.sqrt(2) : r3, o2 = Math.floor(n2 / e3), i2 = { hideXDots: 0, hideYDots: 0, width: 0, height: 0 }, this._qr = t4, this._options.image ? [4, this.loadImage()] : [3, 2];
                    case 1:
                      if (f2.sent(), !this._image) return [2];
                      a2 = this._options, s2 = a2.imageOptions, u2 = a2.qrOptions, c2 = s2.imageSize * h[u2.errorCorrectionLevel], l2 = Math.floor(c2 * e3 * e3), i2 = (function(t5) {
                        var e4 = t5.originalHeight, r4 = t5.originalWidth, n3 = t5.maxHiddenDots, o3 = t5.maxHiddenAxisDots, i3 = t5.dotSize, a3 = { x: 0, y: 0 }, s3 = { x: 0, y: 0 };
                        if (e4 <= 0 || r4 <= 0 || n3 <= 0 || i3 <= 0) return { height: 0, width: 0, hideYDots: 0, hideXDots: 0 };
                        var u3 = e4 / r4;
                        return a3.x = Math.floor(Math.sqrt(n3 / u3)), a3.x <= 0 && (a3.x = 1), o3 && o3 < a3.x && (a3.x = o3), a3.x % 2 == 0 && a3.x--, s3.x = a3.x * i3, a3.y = 1 + 2 * Math.ceil((a3.x * u3 - 1) / 2), s3.y = Math.round(s3.x * u3), (a3.y * a3.x > n3 || o3 && o3 < a3.y) && (o3 && o3 < a3.y ? (a3.y = o3, a3.y % 2 == 0 && a3.x--) : a3.y -= 2, s3.y = a3.y * i3, a3.x = 1 + 2 * Math.ceil((a3.y / u3 - 1) / 2), s3.x = Math.round(s3.y / u3)), { height: s3.y, width: s3.x, hideYDots: a3.y, hideXDots: a3.x };
                      })({ originalWidth: this._image.width, originalHeight: this._image.height, maxHiddenDots: l2, maxHiddenAxisDots: e3 - 14, dotSize: o2 }), f2.label = 2;
                    case 2:
                      return this.drawBackground(), this.drawDots((function(t5, r4) {
                        var n3, o3, a3, s3, u3, h2;
                        return !(d2._options.imageOptions.hideBackgroundDots && t5 >= (e3 - i2.hideXDots) / 2 && t5 < (e3 + i2.hideXDots) / 2 && r4 >= (e3 - i2.hideYDots) / 2 && r4 < (e3 + i2.hideYDots) / 2 || (null === (n3 = m[t5]) || void 0 === n3 ? void 0 : n3[r4]) || (null === (o3 = m[t5 - e3 + 7]) || void 0 === o3 ? void 0 : o3[r4]) || (null === (a3 = m[t5]) || void 0 === a3 ? void 0 : a3[r4 - e3 + 7]) || (null === (s3 = b[t5]) || void 0 === s3 ? void 0 : s3[r4]) || (null === (u3 = b[t5 - e3 + 7]) || void 0 === u3 ? void 0 : u3[r4]) || (null === (h2 = b[t5]) || void 0 === h2 ? void 0 : h2[r4 - e3 + 7]));
                      })), this.drawCorners(), this._options.image ? [4, this.drawImage({ width: i2.width, height: i2.height, count: e3, dotSize: o2 })] : [3, 4];
                    case 3:
                      f2.sent(), f2.label = 4;
                    case 4:
                      return [2];
                  }
                }));
              }));
            }, t3.prototype.drawBackground = function() {
              var t4, e3, r3, n2 = this._element, o2 = this._options;
              if (n2) {
                var i2 = null === (t4 = o2.backgroundOptions) || void 0 === t4 ? void 0 : t4.gradient, a2 = null === (e3 = o2.backgroundOptions) || void 0 === e3 ? void 0 : e3.color;
                if ((i2 || a2) && this._createColor({ options: i2, color: a2, additionalRotation: 0, x: 0, y: 0, height: o2.height, width: o2.width, name: "background-color" }), null === (r3 = o2.backgroundOptions) || void 0 === r3 ? void 0 : r3.round) {
                  var s2 = Math.min(o2.width, o2.height), u2 = document.createElementNS("http://www.w3.org/2000/svg", "rect");
                  this._backgroundClipPath = document.createElementNS("http://www.w3.org/2000/svg", "clipPath"), this._backgroundClipPath.setAttribute("id", "clip-path-background-color"), this._defs.appendChild(this._backgroundClipPath), u2.setAttribute("x", String((o2.width - s2) / 2)), u2.setAttribute("y", String((o2.height - s2) / 2)), u2.setAttribute("width", String(s2)), u2.setAttribute("height", String(s2)), u2.setAttribute("rx", String(s2 / 2 * o2.backgroundOptions.round)), this._backgroundClipPath.appendChild(u2);
                }
              }
            }, t3.prototype.drawDots = function(t4) {
              var e3, r3, n2 = this;
              if (!this._qr) throw "QR code is not defined";
              var o2 = this._options, i2 = this._qr.getModuleCount();
              if (i2 > o2.width || i2 > o2.height) throw "The canvas is too small.";
              var a2 = Math.min(o2.width, o2.height) - 2 * o2.margin, s2 = o2.shape === v ? a2 / Math.sqrt(2) : a2, u2 = Math.floor(s2 / i2), h2 = Math.floor((o2.width - i2 * u2) / 2), c2 = Math.floor((o2.height - i2 * u2) / 2), d2 = new l({ svg: this._element, type: o2.dotsOptions.type });
              this._dotsClipPath = document.createElementNS("http://www.w3.org/2000/svg", "clipPath"), this._dotsClipPath.setAttribute("id", "clip-path-dot-color"), this._defs.appendChild(this._dotsClipPath), this._createColor({ options: null === (e3 = o2.dotsOptions) || void 0 === e3 ? void 0 : e3.gradient, color: o2.dotsOptions.color, additionalRotation: 0, x: 0, y: 0, height: o2.height, width: o2.width, name: "dot-color" });
              for (var f2 = function(e4) {
                for (var o3 = function(o4) {
                  return t4 && !t4(e4, o4) ? "continue" : (null === (r3 = g2._qr) || void 0 === r3 ? void 0 : r3.isDark(e4, o4)) ? (d2.draw(h2 + e4 * u2, c2 + o4 * u2, u2, (function(r4, a4) {
                    return !(e4 + r4 < 0 || o4 + a4 < 0 || e4 + r4 >= i2 || o4 + a4 >= i2) && !(t4 && !t4(e4 + r4, o4 + a4)) && !!n2._qr && n2._qr.isDark(e4 + r4, o4 + a4);
                  })), void (d2._element && g2._dotsClipPath && g2._dotsClipPath.appendChild(d2._element))) : "continue";
                }, a3 = 0; a3 < i2; a3++) o3(a3);
              }, g2 = this, p2 = 0; p2 < i2; p2++) f2(p2);
              if (o2.shape === v) {
                var w2 = Math.floor((a2 / u2 - i2) / 2), y2 = i2 + 2 * w2, m2 = h2 - w2 * u2, b2 = c2 - w2 * u2, _2 = [], x2 = Math.floor(y2 / 2);
                for (p2 = 0; p2 < y2; p2++) {
                  _2[p2] = [];
                  for (var S2 = 0; S2 < y2; S2++) p2 >= w2 - 1 && p2 <= y2 - w2 && S2 >= w2 - 1 && S2 <= y2 - w2 || Math.sqrt((p2 - x2) * (p2 - x2) + (S2 - x2) * (S2 - x2)) > x2 ? _2[p2][S2] = 0 : _2[p2][S2] = this._qr.isDark(S2 - 2 * w2 < 0 ? S2 : S2 >= i2 ? S2 - 2 * w2 : S2 - w2, p2 - 2 * w2 < 0 ? p2 : p2 >= i2 ? p2 - 2 * w2 : p2 - w2) ? 1 : 0;
                }
                var M2 = function(t5) {
                  for (var e4 = function(e5) {
                    if (!_2[t5][e5]) return "continue";
                    d2.draw(m2 + t5 * u2, b2 + e5 * u2, u2, (function(r5, n3) {
                      var o3;
                      return !!(null === (o3 = _2[t5 + r5]) || void 0 === o3 ? void 0 : o3[e5 + n3]);
                    })), d2._element && C2._dotsClipPath && C2._dotsClipPath.appendChild(d2._element);
                  }, r4 = 0; r4 < y2; r4++) e4(r4);
                }, C2 = this;
                for (p2 = 0; p2 < y2; p2++) M2(p2);
              }
            }, t3.prototype.drawCorners = function() {
              var t4 = this;
              if (!this._qr) throw "QR code is not defined";
              var e3 = this._element, r3 = this._options;
              if (!e3) throw "Element code is not defined";
              var n2 = this._qr.getModuleCount(), o2 = Math.min(r3.width, r3.height) - 2 * r3.margin, i2 = r3.shape === v ? o2 / Math.sqrt(2) : o2, a2 = Math.floor(i2 / n2), s2 = 7 * a2, u2 = 3 * a2, h2 = Math.floor((r3.width - n2 * a2) / 2), c2 = Math.floor((r3.height - n2 * a2) / 2);
              [[0, 0, 0], [1, 0, Math.PI / 2], [0, 1, -Math.PI / 2]].forEach((function(e4) {
                var o3, i3, d2, g2, v2, w2, y2, _2, x2, S2, M2, C2, A2 = e4[0], k2 = e4[1], O2 = e4[2], D2 = h2 + A2 * a2 * (n2 - 7), P2 = c2 + k2 * a2 * (n2 - 7), z2 = t4._dotsClipPath, B2 = t4._dotsClipPath;
                if (((null === (o3 = r3.cornersSquareOptions) || void 0 === o3 ? void 0 : o3.gradient) || (null === (i3 = r3.cornersSquareOptions) || void 0 === i3 ? void 0 : i3.color)) && ((z2 = document.createElementNS("http://www.w3.org/2000/svg", "clipPath")).setAttribute("id", "clip-path-corners-square-color-" + A2 + "-" + k2), t4._defs.appendChild(z2), t4._cornersSquareClipPath = t4._cornersDotClipPath = B2 = z2, t4._createColor({ options: null === (d2 = r3.cornersSquareOptions) || void 0 === d2 ? void 0 : d2.gradient, color: null === (g2 = r3.cornersSquareOptions) || void 0 === g2 ? void 0 : g2.color, additionalRotation: O2, x: D2, y: P2, height: s2, width: s2, name: "corners-square-color-" + A2 + "-" + k2 })), null === (v2 = r3.cornersSquareOptions) || void 0 === v2 ? void 0 : v2.type) {
                  var q2 = new f({ svg: t4._element, type: r3.cornersSquareOptions.type });
                  q2.draw(D2, P2, s2, O2), q2._element && z2 && z2.appendChild(q2._element);
                } else for (var I = new l({ svg: t4._element, type: r3.dotsOptions.type }), E = function(t5) {
                  for (var e5 = function(e6) {
                    if (!(null === (w2 = m[t5]) || void 0 === w2 ? void 0 : w2[e6])) return "continue";
                    I.draw(D2 + t5 * a2, P2 + e6 * a2, a2, (function(r5, n3) {
                      var o4;
                      return !!(null === (o4 = m[t5 + r5]) || void 0 === o4 ? void 0 : o4[e6 + n3]);
                    })), I._element && z2 && z2.appendChild(I._element);
                  }, r4 = 0; r4 < m[t5].length; r4++) e5(r4);
                }, L = 0; L < m.length; L++) E(L);
                if (((null === (y2 = r3.cornersDotOptions) || void 0 === y2 ? void 0 : y2.gradient) || (null === (_2 = r3.cornersDotOptions) || void 0 === _2 ? void 0 : _2.color)) && ((B2 = document.createElementNS("http://www.w3.org/2000/svg", "clipPath")).setAttribute("id", "clip-path-corners-dot-color-" + A2 + "-" + k2), t4._defs.appendChild(B2), t4._cornersDotClipPath = B2, t4._createColor({ options: null === (x2 = r3.cornersDotOptions) || void 0 === x2 ? void 0 : x2.gradient, color: null === (S2 = r3.cornersDotOptions) || void 0 === S2 ? void 0 : S2.color, additionalRotation: O2, x: D2 + 2 * a2, y: P2 + 2 * a2, height: u2, width: u2, name: "corners-dot-color-" + A2 + "-" + k2 })), null === (M2 = r3.cornersDotOptions) || void 0 === M2 ? void 0 : M2.type) {
                  var R = new p({ svg: t4._element, type: r3.cornersDotOptions.type });
                  R.draw(D2 + 2 * a2, P2 + 2 * a2, u2, O2), R._element && B2 && B2.appendChild(R._element);
                } else {
                  I = new l({ svg: t4._element, type: r3.dotsOptions.type });
                  var N = function(t5) {
                    for (var e5 = function(e6) {
                      if (!(null === (C2 = b[t5]) || void 0 === C2 ? void 0 : C2[e6])) return "continue";
                      I.draw(D2 + t5 * a2, P2 + e6 * a2, a2, (function(r5, n3) {
                        var o4;
                        return !!(null === (o4 = b[t5 + r5]) || void 0 === o4 ? void 0 : o4[e6 + n3]);
                      })), I._element && B2 && B2.appendChild(I._element);
                    }, r4 = 0; r4 < b[t5].length; r4++) e5(r4);
                  };
                  for (L = 0; L < b.length; L++) N(L);
                }
              }));
            }, t3.prototype.loadImage = function() {
              var t4 = this;
              return new Promise((function(e3, r3) {
                var n2 = t4._options, o2 = new Image();
                if (!n2.image) return r3("Image is not defined");
                "string" == typeof n2.imageOptions.crossOrigin && (o2.crossOrigin = n2.imageOptions.crossOrigin), t4._image = o2, o2.onload = function() {
                  e3();
                }, o2.src = n2.image;
              }));
            }, t3.prototype.drawImage = function(t4) {
              var e3 = t4.width, r3 = t4.height, n2 = t4.count, o2 = t4.dotSize;
              return w(this, void 0, void 0, (function() {
                var t5, i2, a2, s2, h2, c2, l2, d2, f2;
                return y(this, (function(g2) {
                  switch (g2.label) {
                    case 0:
                      return t5 = this._options, i2 = Math.floor((t5.width - n2 * o2) / 2), a2 = Math.floor((t5.height - n2 * o2) / 2), s2 = i2 + t5.imageOptions.margin + (n2 * o2 - e3) / 2, h2 = a2 + t5.imageOptions.margin + (n2 * o2 - r3) / 2, c2 = e3 - 2 * t5.imageOptions.margin, l2 = r3 - 2 * t5.imageOptions.margin, (d2 = document.createElementNS("http://www.w3.org/2000/svg", "image")).setAttribute("x", String(s2)), d2.setAttribute("y", String(h2)), d2.setAttribute("width", c2 + "px"), d2.setAttribute("height", l2 + "px"), [4, u(t5.image || "")];
                    case 1:
                      return f2 = g2.sent(), d2.setAttribute("href", f2 || ""), this._element.appendChild(d2), [2];
                  }
                }));
              }));
            }, t3.prototype._createColor = function(t4) {
              var e3 = t4.options, r3 = t4.color, n2 = t4.additionalRotation, o2 = t4.x, i2 = t4.y, a2 = t4.height, s2 = t4.width, u2 = t4.name, h2 = s2 > a2 ? s2 : a2, c2 = document.createElementNS("http://www.w3.org/2000/svg", "rect");
              if (c2.setAttribute("x", String(o2)), c2.setAttribute("y", String(i2)), c2.setAttribute("height", String(a2)), c2.setAttribute("width", String(s2)), c2.setAttribute("clip-path", "url('#clip-path-" + u2 + "')"), e3) {
                var l2;
                if ("radial" === e3.type) (l2 = document.createElementNS("http://www.w3.org/2000/svg", "radialGradient")).setAttribute("id", u2), l2.setAttribute("gradientUnits", "userSpaceOnUse"), l2.setAttribute("fx", String(o2 + s2 / 2)), l2.setAttribute("fy", String(i2 + a2 / 2)), l2.setAttribute("cx", String(o2 + s2 / 2)), l2.setAttribute("cy", String(i2 + a2 / 2)), l2.setAttribute("r", String(h2 / 2));
                else {
                  var d2 = ((e3.rotation || 0) + n2) % (2 * Math.PI), f2 = (d2 + 2 * Math.PI) % (2 * Math.PI), g2 = o2 + s2 / 2, p2 = i2 + a2 / 2, v2 = o2 + s2 / 2, w2 = i2 + a2 / 2;
                  f2 >= 0 && f2 <= 0.25 * Math.PI || f2 > 1.75 * Math.PI && f2 <= 2 * Math.PI ? (g2 -= s2 / 2, p2 -= a2 / 2 * Math.tan(d2), v2 += s2 / 2, w2 += a2 / 2 * Math.tan(d2)) : f2 > 0.25 * Math.PI && f2 <= 0.75 * Math.PI ? (p2 -= a2 / 2, g2 -= s2 / 2 / Math.tan(d2), w2 += a2 / 2, v2 += s2 / 2 / Math.tan(d2)) : f2 > 0.75 * Math.PI && f2 <= 1.25 * Math.PI ? (g2 += s2 / 2, p2 += a2 / 2 * Math.tan(d2), v2 -= s2 / 2, w2 -= a2 / 2 * Math.tan(d2)) : f2 > 1.25 * Math.PI && f2 <= 1.75 * Math.PI && (p2 += a2 / 2, g2 += s2 / 2 / Math.tan(d2), w2 -= a2 / 2, v2 -= s2 / 2 / Math.tan(d2)), (l2 = document.createElementNS("http://www.w3.org/2000/svg", "linearGradient")).setAttribute("id", u2), l2.setAttribute("gradientUnits", "userSpaceOnUse"), l2.setAttribute("x1", String(Math.round(g2))), l2.setAttribute("y1", String(Math.round(p2))), l2.setAttribute("x2", String(Math.round(v2))), l2.setAttribute("y2", String(Math.round(w2)));
                }
                e3.colorStops.forEach((function(t5) {
                  var e4 = t5.offset, r4 = t5.color, n3 = document.createElementNS("http://www.w3.org/2000/svg", "stop");
                  n3.setAttribute("offset", 100 * e4 + "%"), n3.setAttribute("stop-color", r4), l2.appendChild(n3);
                })), c2.setAttribute("fill", "url('#" + u2 + "')"), this._defs.appendChild(l2);
              } else r3 && c2.setAttribute("fill", r3);
              this._element.appendChild(c2);
            }, t3;
          })(), x = "canvas";
          for (var S = {}, M = 0; M <= 40; M++) S[M] = M;
          const C = { type: x, shape: "square", width: 300, height: 300, data: "", margin: 0, qrOptions: { typeNumber: S[0], mode: void 0, errorCorrectionLevel: "Q" }, imageOptions: { hideBackgroundDots: true, imageSize: 0.4, crossOrigin: void 0, margin: 0 }, dotsOptions: { type: "square", color: "#000" }, backgroundOptions: { round: 0, color: "#fff" } };
          var A = function() {
            return (A = Object.assign || function(t3) {
              for (var e3, r3 = 1, n2 = arguments.length; r3 < n2; r3++) for (var o2 in e3 = arguments[r3]) Object.prototype.hasOwnProperty.call(e3, o2) && (t3[o2] = e3[o2]);
              return t3;
            }).apply(this, arguments);
          };
          function k(t3) {
            var e3 = A({}, t3);
            if (!e3.colorStops || !e3.colorStops.length) throw "Field 'colorStops' is required in gradient";
            return e3.rotation ? e3.rotation = Number(e3.rotation) : e3.rotation = 0, e3.colorStops = e3.colorStops.map((function(t4) {
              return A(A({}, t4), { offset: Number(t4.offset) });
            })), e3;
          }
          function O(t3) {
            var e3 = A({}, t3);
            return e3.width = Number(e3.width), e3.height = Number(e3.height), e3.margin = Number(e3.margin), e3.imageOptions = A(A({}, e3.imageOptions), { hideBackgroundDots: Boolean(e3.imageOptions.hideBackgroundDots), imageSize: Number(e3.imageOptions.imageSize), margin: Number(e3.imageOptions.margin) }), e3.margin > Math.min(e3.width, e3.height) && (e3.margin = Math.min(e3.width, e3.height)), e3.dotsOptions = A({}, e3.dotsOptions), e3.dotsOptions.gradient && (e3.dotsOptions.gradient = k(e3.dotsOptions.gradient)), e3.cornersSquareOptions && (e3.cornersSquareOptions = A({}, e3.cornersSquareOptions), e3.cornersSquareOptions.gradient && (e3.cornersSquareOptions.gradient = k(e3.cornersSquareOptions.gradient))), e3.cornersDotOptions && (e3.cornersDotOptions = A({}, e3.cornersDotOptions), e3.cornersDotOptions.gradient && (e3.cornersDotOptions.gradient = k(e3.cornersDotOptions.gradient))), e3.backgroundOptions && (e3.backgroundOptions = A({}, e3.backgroundOptions), e3.backgroundOptions.gradient && (e3.backgroundOptions.gradient = k(e3.backgroundOptions.gradient))), e3;
          }
          var D = r2(192), P = r2.n(D), z = function(t3, e3, r3, n2) {
            return new (r3 || (r3 = Promise))((function(o2, i2) {
              function a2(t4) {
                try {
                  u2(n2.next(t4));
                } catch (t5) {
                  i2(t5);
                }
              }
              function s2(t4) {
                try {
                  u2(n2.throw(t4));
                } catch (t5) {
                  i2(t5);
                }
              }
              function u2(t4) {
                var e4;
                t4.done ? o2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3((function(t5) {
                  t5(e4);
                }))).then(a2, s2);
              }
              u2((n2 = n2.apply(t3, e3 || [])).next());
            }));
          }, B = function(t3, e3) {
            var r3, n2, o2, i2, a2 = { label: 0, sent: function() {
              if (1 & o2[0]) throw o2[1];
              return o2[1];
            }, trys: [], ops: [] };
            return i2 = { next: s2(0), throw: s2(1), return: s2(2) }, "function" == typeof Symbol && (i2[Symbol.iterator] = function() {
              return this;
            }), i2;
            function s2(i3) {
              return function(s3) {
                return (function(i4) {
                  if (r3) throw new TypeError("Generator is already executing.");
                  for (; a2; ) try {
                    if (r3 = 1, n2 && (o2 = 2 & i4[0] ? n2.return : i4[0] ? n2.throw || ((o2 = n2.return) && o2.call(n2), 0) : n2.next) && !(o2 = o2.call(n2, i4[1])).done) return o2;
                    switch (n2 = 0, o2 && (i4 = [2 & i4[0], o2.value]), i4[0]) {
                      case 0:
                      case 1:
                        o2 = i4;
                        break;
                      case 4:
                        return a2.label++, { value: i4[1], done: false };
                      case 5:
                        a2.label++, n2 = i4[1], i4 = [0];
                        continue;
                      case 7:
                        i4 = a2.ops.pop(), a2.trys.pop();
                        continue;
                      default:
                        if (!((o2 = (o2 = a2.trys).length > 0 && o2[o2.length - 1]) || 6 !== i4[0] && 2 !== i4[0])) {
                          a2 = 0;
                          continue;
                        }
                        if (3 === i4[0] && (!o2 || i4[1] > o2[0] && i4[1] < o2[3])) {
                          a2.label = i4[1];
                          break;
                        }
                        if (6 === i4[0] && a2.label < o2[1]) {
                          a2.label = o2[1], o2 = i4;
                          break;
                        }
                        if (o2 && a2.label < o2[2]) {
                          a2.label = o2[2], a2.ops.push(i4);
                          break;
                        }
                        o2[2] && a2.ops.pop(), a2.trys.pop();
                        continue;
                    }
                    i4 = e3.call(t3, a2);
                  } catch (t4) {
                    i4 = [6, t4], n2 = 0;
                  } finally {
                    r3 = o2 = 0;
                  }
                  if (5 & i4[0]) throw i4[1];
                  return { value: i4[0] ? i4[1] : void 0, done: true };
                })([i3, s3]);
              };
            }
          };
          const q = (function() {
            function t3(t4) {
              this._options = t4 ? O(a(C, t4)) : C, this.update();
            }
            return t3._clearContainer = function(t4) {
              t4 && (t4.innerHTML = "");
            }, t3.prototype._setupSvg = function() {
              var t4 = this;
              if (this._qr) {
                var e3 = new _(this._options);
                this._svg = e3.getElement(), this._svgDrawingPromise = e3.drawQR(this._qr).then((function() {
                  var r3;
                  t4._svg && (null === (r3 = t4._extension) || void 0 === r3 || r3.call(t4, e3.getElement(), t4._options));
                }));
              }
            }, t3.prototype._setupCanvas = function() {
              var t4, e3 = this;
              this._qr && (this._canvas = document.createElement("canvas"), this._canvas.width = this._options.width, this._canvas.height = this._options.height, this._setupSvg(), this._canvasDrawingPromise = null === (t4 = this._svgDrawingPromise) || void 0 === t4 ? void 0 : t4.then((function() {
                if (e3._svg) {
                  var t5 = e3._svg, r3 = new XMLSerializer().serializeToString(t5), n2 = "data:image/svg+xml;base64," + btoa(r3), o2 = new Image();
                  return new Promise((function(t6) {
                    o2.onload = function() {
                      var r4, n3;
                      null === (n3 = null === (r4 = e3._canvas) || void 0 === r4 ? void 0 : r4.getContext("2d")) || void 0 === n3 || n3.drawImage(o2, 0, 0), t6();
                    }, o2.src = n2;
                  }));
                }
              })));
            }, t3.prototype._getElement = function(t4) {
              return void 0 === t4 && (t4 = "png"), z(this, void 0, void 0, (function() {
                return B(this, (function(e3) {
                  switch (e3.label) {
                    case 0:
                      if (!this._qr) throw "QR code is empty";
                      return "svg" !== t4.toLowerCase() ? [3, 2] : (this._svg && this._svgDrawingPromise || this._setupSvg(), [4, this._svgDrawingPromise]);
                    case 1:
                      return e3.sent(), [2, this._svg];
                    case 2:
                      return this._canvas && this._canvasDrawingPromise || this._setupCanvas(), [4, this._canvasDrawingPromise];
                    case 3:
                      return e3.sent(), [2, this._canvas];
                  }
                }));
              }));
            }, t3.prototype.update = function(e3) {
              t3._clearContainer(this._container), this._options = e3 ? O(a(this._options, e3)) : this._options, this._options.data && (this._qr = P()(this._options.qrOptions.typeNumber, this._options.qrOptions.errorCorrectionLevel), this._qr.addData(this._options.data, this._options.qrOptions.mode || (function(t4) {
                switch (true) {
                  case /^[0-9]*$/.test(t4):
                    return "Numeric";
                  case /^[0-9A-Z $%*+\-./:]*$/.test(t4):
                    return "Alphanumeric";
                  default:
                    return "Byte";
                }
              })(this._options.data)), this._qr.make(), this._options.type === x ? this._setupCanvas() : this._setupSvg(), this.append(this._container));
            }, t3.prototype.append = function(t4) {
              if (t4) {
                if ("function" != typeof t4.appendChild) throw "Container should be a single DOM node";
                this._options.type === x ? this._canvas && t4.appendChild(this._canvas) : this._svg && t4.appendChild(this._svg), this._container = t4;
              }
            }, t3.prototype.applyExtension = function(t4) {
              if (!t4) throw "Extension function should be defined.";
              this._extension = t4, this.update();
            }, t3.prototype.deleteExtension = function() {
              this._extension = void 0, this.update();
            }, t3.prototype.getRawData = function(t4) {
              return void 0 === t4 && (t4 = "png"), z(this, void 0, void 0, (function() {
                var e3, r3, n2;
                return B(this, (function(o2) {
                  switch (o2.label) {
                    case 0:
                      if (!this._qr) throw "QR code is empty";
                      return [4, this._getElement(t4)];
                    case 1:
                      return (e3 = o2.sent()) ? "svg" === t4.toLowerCase() ? (r3 = new XMLSerializer(), n2 = r3.serializeToString(e3), [2, new Blob(['<?xml version="1.0" standalone="no"?>\r\n' + n2], { type: "image/svg+xml" })]) : [2, new Promise((function(r4) {
                        return e3.toBlob(r4, "image/" + t4, 1);
                      }))] : [2, null];
                  }
                }));
              }));
            }, t3.prototype.download = function(t4) {
              return z(this, void 0, void 0, (function() {
                var e3, r3, n2, o2, i2;
                return B(this, (function(a2) {
                  switch (a2.label) {
                    case 0:
                      if (!this._qr) throw "QR code is empty";
                      return e3 = "png", r3 = "qr", "string" == typeof t4 ? (e3 = t4, console.warn("Extension is deprecated as argument for 'download' method, please pass object { name: '...', extension: '...' } as argument")) : "object" == typeof t4 && null !== t4 && (t4.name && (r3 = t4.name), t4.extension && (e3 = t4.extension)), [4, this._getElement(e3)];
                    case 1:
                      return (n2 = a2.sent()) ? ("svg" === e3.toLowerCase() ? (o2 = new XMLSerializer(), i2 = '<?xml version="1.0" standalone="no"?>\r\n' + (i2 = o2.serializeToString(n2)), s("data:image/svg+xml;charset=utf-8," + encodeURIComponent(i2), r3 + ".svg")) : s(n2.toDataURL("image/" + e3), r3 + "." + e3), [2]) : [2];
                  }
                }));
              }));
            }, t3;
          })();
        } }, e = {};
        function r(n) {
          if (e[n]) return e[n].exports;
          var o = e[n] = { exports: {} };
          return t[n](o, o.exports, r), o.exports;
        }
        return r.n = (t2) => {
          var e2 = t2 && t2.__esModule ? () => t2.default : () => t2;
          return r.d(e2, { a: e2 }), e2;
        }, r.d = (t2, e2) => {
          for (var n in e2) r.o(e2, n) && !r.o(t2, n) && Object.defineProperty(t2, n, { enumerable: true, get: e2[n] });
        }, r.o = (t2, e2) => Object.prototype.hasOwnProperty.call(t2, e2), r(676);
      })().default;
    }));
  }
});

// node_modules/@evanhahn/lottie-web-light/index.js
var require_lottie_web_light = __commonJS({
  "node_modules/@evanhahn/lottie-web-light/index.js"(exports, module) {
    typeof navigator !== "undefined" && (function(root, factory) {
      if (typeof define === "function" && define.amd) {
        define(function() {
          return factory(root);
        });
      } else if (typeof module === "object" && module.exports) {
        module.exports = factory(root);
      } else {
        root.lottie = factory(root);
        root.bodymovin = root.lottie;
      }
    })(window || {}, function(window2) {
      "use strict";
      var svgNS = "http://www.w3.org/2000/svg";
      var locationHref = "";
      var initialDefaultFrame = -999999;
      var _useWebWorker = false;
      var subframeEnabled = true;
      var idPrefix = "";
      var expressionsPlugin;
      var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
      var cachedColors = {};
      var bmRnd;
      var bmPow = Math.pow;
      var bmSqrt = Math.sqrt;
      var bmFloor = Math.floor;
      var bmMax = Math.max;
      var bmMin = Math.min;
      var BMMath = {};
      (function() {
        var propertyNames = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"];
        var i;
        var len = propertyNames.length;
        for (i = 0; i < len; i += 1) {
          BMMath[propertyNames[i]] = Math[propertyNames[i]];
        }
      })();
      function ProjectInterface() {
        return {};
      }
      BMMath.random = Math.random;
      BMMath.abs = function(val) {
        var tOfVal = typeof val;
        if (tOfVal === "object" && val.length) {
          var absArr = createSizedArray(val.length);
          var i;
          var len = val.length;
          for (i = 0; i < len; i += 1) {
            absArr[i] = Math.abs(val[i]);
          }
          return absArr;
        }
        return Math.abs(val);
      };
      var defaultCurveSegments = 150;
      var degToRads = Math.PI / 180;
      var roundCorner = 0.5519;
      function roundValues(flag) {
        if (flag) {
          bmRnd = Math.round;
        } else {
          bmRnd = function(val) {
            return val;
          };
        }
      }
      roundValues(false);
      function styleDiv(element) {
        element.style.position = "absolute";
        element.style.top = 0;
        element.style.left = 0;
        element.style.display = "block";
        element.style.transformOrigin = "0 0";
        element.style.webkitTransformOrigin = "0 0";
        element.style.backfaceVisibility = "visible";
        element.style.webkitBackfaceVisibility = "visible";
        element.style.transformStyle = "preserve-3d";
        element.style.webkitTransformStyle = "preserve-3d";
        element.style.mozTransformStyle = "preserve-3d";
      }
      function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {
        this.type = type;
        this.currentTime = currentTime;
        this.totalTime = totalTime;
        this.direction = frameMultiplier < 0 ? -1 : 1;
      }
      function BMCompleteEvent(type, frameMultiplier) {
        this.type = type;
        this.direction = frameMultiplier < 0 ? -1 : 1;
      }
      function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {
        this.type = type;
        this.currentLoop = currentLoop;
        this.totalLoops = totalLoops;
        this.direction = frameMultiplier < 0 ? -1 : 1;
      }
      function BMSegmentStartEvent(type, firstFrame, totalFrames) {
        this.type = type;
        this.firstFrame = firstFrame;
        this.totalFrames = totalFrames;
      }
      function BMDestroyEvent(type, target) {
        this.type = type;
        this.target = target;
      }
      function BMRenderFrameErrorEvent(nativeError, currentTime) {
        this.type = "renderFrameError";
        this.nativeError = nativeError;
        this.currentTime = currentTime;
      }
      function BMConfigErrorEvent(nativeError) {
        this.type = "configError";
        this.nativeError = nativeError;
      }
      function BMAnimationConfigErrorEvent(type, nativeError) {
        this.type = type;
        this.nativeError = nativeError;
      }
      var createElementID = /* @__PURE__ */ (function() {
        var _count = 0;
        return function createID() {
          _count += 1;
          return idPrefix + "__lottie_element_" + _count;
        };
      })();
      function HSVtoRGB(h, s, v) {
        var r;
        var g;
        var b;
        var i;
        var f;
        var p;
        var q;
        var t;
        i = Math.floor(h * 6);
        f = h * 6 - i;
        p = v * (1 - s);
        q = v * (1 - f * s);
        t = v * (1 - (1 - f) * s);
        switch (i % 6) {
          case 0:
            r = v;
            g = t;
            b = p;
            break;
          case 1:
            r = q;
            g = v;
            b = p;
            break;
          case 2:
            r = p;
            g = v;
            b = t;
            break;
          case 3:
            r = p;
            g = q;
            b = v;
            break;
          case 4:
            r = t;
            g = p;
            b = v;
            break;
          case 5:
            r = v;
            g = p;
            b = q;
            break;
          default:
            break;
        }
        return [
          r,
          g,
          b
        ];
      }
      function RGBtoHSV(r, g, b) {
        var max = Math.max(r, g, b);
        var min = Math.min(r, g, b);
        var d = max - min;
        var h;
        var s = max === 0 ? 0 : d / max;
        var v = max / 255;
        switch (max) {
          case min:
            h = 0;
            break;
          case r:
            h = g - b + d * (g < b ? 6 : 0);
            h /= 6 * d;
            break;
          case g:
            h = b - r + d * 2;
            h /= 6 * d;
            break;
          case b:
            h = r - g + d * 4;
            h /= 6 * d;
            break;
          default:
            break;
        }
        return [
          h,
          s,
          v
        ];
      }
      function addSaturationToRGB(color, offset) {
        var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
        hsv[1] += offset;
        if (hsv[1] > 1) {
          hsv[1] = 1;
        } else if (hsv[1] <= 0) {
          hsv[1] = 0;
        }
        return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
      }
      function addBrightnessToRGB(color, offset) {
        var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
        hsv[2] += offset;
        if (hsv[2] > 1) {
          hsv[2] = 1;
        } else if (hsv[2] < 0) {
          hsv[2] = 0;
        }
        return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
      }
      function addHueToRGB(color, offset) {
        var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
        hsv[0] += offset / 360;
        if (hsv[0] > 1) {
          hsv[0] -= 1;
        } else if (hsv[0] < 0) {
          hsv[0] += 1;
        }
        return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
      }
      var rgbToHex = (function() {
        var colorMap = [];
        var i;
        var hex;
        for (i = 0; i < 256; i += 1) {
          hex = i.toString(16);
          colorMap[i] = hex.length === 1 ? "0" + hex : hex;
        }
        return function(r, g, b) {
          if (r < 0) {
            r = 0;
          }
          if (g < 0) {
            g = 0;
          }
          if (b < 0) {
            b = 0;
          }
          return "#" + colorMap[r] + colorMap[g] + colorMap[b];
        };
      })();
      function BaseEvent() {
      }
      BaseEvent.prototype = {
        triggerEvent: function(eventName, args) {
          if (this._cbs[eventName]) {
            var callbacks = this._cbs[eventName];
            for (var i = 0; i < callbacks.length; i += 1) {
              callbacks[i](args);
            }
          }
        },
        addEventListener: function(eventName, callback) {
          if (!this._cbs[eventName]) {
            this._cbs[eventName] = [];
          }
          this._cbs[eventName].push(callback);
          return (function() {
            this.removeEventListener(eventName, callback);
          }).bind(this);
        },
        removeEventListener: function(eventName, callback) {
          if (!callback) {
            this._cbs[eventName] = null;
          } else if (this._cbs[eventName]) {
            var i = 0;
            var len = this._cbs[eventName].length;
            while (i < len) {
              if (this._cbs[eventName][i] === callback) {
                this._cbs[eventName].splice(i, 1);
                i -= 1;
                len -= 1;
              }
              i += 1;
            }
            if (!this._cbs[eventName].length) {
              this._cbs[eventName] = null;
            }
          }
        }
      };
      var createTypedArray = (function() {
        function createRegularArray(type, len) {
          var i = 0;
          var arr = [];
          var value;
          switch (type) {
            case "int16":
            case "uint8c":
              value = 1;
              break;
            default:
              value = 1.1;
              break;
          }
          for (i = 0; i < len; i += 1) {
            arr.push(value);
          }
          return arr;
        }
        function createTypedArrayFactory(type, len) {
          if (type === "float32") {
            return new Float32Array(len);
          }
          if (type === "int16") {
            return new Int16Array(len);
          }
          if (type === "uint8c") {
            return new Uint8ClampedArray(len);
          }
          return createRegularArray(type, len);
        }
        if (typeof Uint8ClampedArray === "function" && typeof Float32Array === "function") {
          return createTypedArrayFactory;
        }
        return createRegularArray;
      })();
      function createSizedArray(len) {
        return Array.apply(null, { length: len });
      }
      function createNS(type) {
        return document.createElementNS(svgNS, type);
      }
      function createTag(type) {
        return document.createElement(type);
      }
      function DynamicPropertyContainer() {
      }
      DynamicPropertyContainer.prototype = {
        addDynamicProperty: function(prop) {
          if (this.dynamicProperties.indexOf(prop) === -1) {
            this.dynamicProperties.push(prop);
            this.container.addDynamicProperty(this);
            this._isAnimated = true;
          }
        },
        iterateDynamicProperties: function() {
          this._mdf = false;
          var i;
          var len = this.dynamicProperties.length;
          for (i = 0; i < len; i += 1) {
            this.dynamicProperties[i].getValue();
            if (this.dynamicProperties[i]._mdf) {
              this._mdf = true;
            }
          }
        },
        initDynamicPropertyContainer: function(container) {
          this.container = container;
          this.dynamicProperties = [];
          this._mdf = false;
          this._isAnimated = false;
        }
      };
      var getBlendMode = /* @__PURE__ */ (function() {
        var blendModeEnums = {
          0: "source-over",
          1: "multiply",
          2: "screen",
          3: "overlay",
          4: "darken",
          5: "lighten",
          6: "color-dodge",
          7: "color-burn",
          8: "hard-light",
          9: "soft-light",
          10: "difference",
          11: "exclusion",
          12: "hue",
          13: "saturation",
          14: "color",
          15: "luminosity"
        };
        return function(mode) {
          return blendModeEnums[mode] || "";
        };
      })();
      var lineCapEnum = {
        1: "butt",
        2: "round",
        3: "square"
      };
      var lineJoinEnum = {
        1: "miter",
        2: "round",
        3: "bevel"
      };
      var Matrix = /* @__PURE__ */ (function() {
        var _cos = Math.cos;
        var _sin = Math.sin;
        var _tan = Math.tan;
        var _rnd = Math.round;
        function reset() {
          this.props[0] = 1;
          this.props[1] = 0;
          this.props[2] = 0;
          this.props[3] = 0;
          this.props[4] = 0;
          this.props[5] = 1;
          this.props[6] = 0;
          this.props[7] = 0;
          this.props[8] = 0;
          this.props[9] = 0;
          this.props[10] = 1;
          this.props[11] = 0;
          this.props[12] = 0;
          this.props[13] = 0;
          this.props[14] = 0;
          this.props[15] = 1;
          return this;
        }
        function rotate(angle) {
          if (angle === 0) {
            return this;
          }
          var mCos = _cos(angle);
          var mSin = _sin(angle);
          return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function rotateX(angle) {
          if (angle === 0) {
            return this;
          }
          var mCos = _cos(angle);
          var mSin = _sin(angle);
          return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);
        }
        function rotateY(angle) {
          if (angle === 0) {
            return this;
          }
          var mCos = _cos(angle);
          var mSin = _sin(angle);
          return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);
        }
        function rotateZ(angle) {
          if (angle === 0) {
            return this;
          }
          var mCos = _cos(angle);
          var mSin = _sin(angle);
          return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function shear(sx, sy) {
          return this._t(1, sy, sx, 1, 0, 0);
        }
        function skew(ax, ay) {
          return this.shear(_tan(ax), _tan(ay));
        }
        function skewFromAxis(ax, angle) {
          var mCos = _cos(angle);
          var mSin = _sin(angle);
          return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function scale(sx, sy, sz) {
          if (!sz && sz !== 0) {
            sz = 1;
          }
          if (sx === 1 && sy === 1 && sz === 1) {
            return this;
          }
          return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);
        }
        function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
          this.props[0] = a;
          this.props[1] = b;
          this.props[2] = c;
          this.props[3] = d;
          this.props[4] = e;
          this.props[5] = f;
          this.props[6] = g;
          this.props[7] = h;
          this.props[8] = i;
          this.props[9] = j;
          this.props[10] = k;
          this.props[11] = l;
          this.props[12] = m;
          this.props[13] = n;
          this.props[14] = o;
          this.props[15] = p;
          return this;
        }
        function translate(tx, ty, tz) {
          tz = tz || 0;
          if (tx !== 0 || ty !== 0 || tz !== 0) {
            return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);
          }
          return this;
        }
        function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {
          var _p = this.props;
          if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {
            _p[12] = _p[12] * a2 + _p[15] * m2;
            _p[13] = _p[13] * f2 + _p[15] * n2;
            _p[14] = _p[14] * k2 + _p[15] * o2;
            _p[15] *= p2;
            this._identityCalculated = false;
            return this;
          }
          var a1 = _p[0];
          var b1 = _p[1];
          var c1 = _p[2];
          var d1 = _p[3];
          var e1 = _p[4];
          var f1 = _p[5];
          var g1 = _p[6];
          var h1 = _p[7];
          var i1 = _p[8];
          var j1 = _p[9];
          var k1 = _p[10];
          var l1 = _p[11];
          var m1 = _p[12];
          var n1 = _p[13];
          var o1 = _p[14];
          var p1 = _p[15];
          _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;
          _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;
          _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;
          _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;
          _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;
          _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;
          _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;
          _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;
          _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;
          _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;
          _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;
          _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;
          _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;
          _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;
          _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;
          _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;
          this._identityCalculated = false;
          return this;
        }
        function isIdentity() {
          if (!this._identityCalculated) {
            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);
            this._identityCalculated = true;
          }
          return this._identity;
        }
        function equals(matr) {
          var i = 0;
          while (i < 16) {
            if (matr.props[i] !== this.props[i]) {
              return false;
            }
            i += 1;
          }
          return true;
        }
        function clone(matr) {
          var i;
          for (i = 0; i < 16; i += 1) {
            matr.props[i] = this.props[i];
          }
          return matr;
        }
        function cloneFromProps(props) {
          var i;
          for (i = 0; i < 16; i += 1) {
            this.props[i] = props[i];
          }
        }
        function applyToPoint(x, y, z) {
          return {
            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],
            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],
            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]
          };
        }
        function applyToX(x, y, z) {
          return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];
        }
        function applyToY(x, y, z) {
          return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];
        }
        function applyToZ(x, y, z) {
          return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];
        }
        function getInverseMatrix() {
          var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];
          var a = this.props[5] / determinant;
          var b = -this.props[1] / determinant;
          var c = -this.props[4] / determinant;
          var d = this.props[0] / determinant;
          var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;
          var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;
          var inverseMatrix = new Matrix();
          inverseMatrix.props[0] = a;
          inverseMatrix.props[1] = b;
          inverseMatrix.props[4] = c;
          inverseMatrix.props[5] = d;
          inverseMatrix.props[12] = e;
          inverseMatrix.props[13] = f;
          return inverseMatrix;
        }
        function inversePoint(pt) {
          var inverseMatrix = this.getInverseMatrix();
          return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);
        }
        function inversePoints(pts) {
          var i;
          var len = pts.length;
          var retPts = [];
          for (i = 0; i < len; i += 1) {
            retPts[i] = inversePoint(pts[i]);
          }
          return retPts;
        }
        function applyToTriplePoints(pt1, pt2, pt3) {
          var arr = createTypedArray("float32", 6);
          if (this.isIdentity()) {
            arr[0] = pt1[0];
            arr[1] = pt1[1];
            arr[2] = pt2[0];
            arr[3] = pt2[1];
            arr[4] = pt3[0];
            arr[5] = pt3[1];
          } else {
            var p0 = this.props[0];
            var p1 = this.props[1];
            var p4 = this.props[4];
            var p5 = this.props[5];
            var p12 = this.props[12];
            var p13 = this.props[13];
            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;
            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;
            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;
            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;
            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;
            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;
          }
          return arr;
        }
        function applyToPointArray(x, y, z) {
          var arr;
          if (this.isIdentity()) {
            arr = [x, y, z];
          } else {
            arr = [
              x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],
              x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],
              x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]
            ];
          }
          return arr;
        }
        function applyToPointStringified(x, y) {
          if (this.isIdentity()) {
            return x + "," + y;
          }
          var _p = this.props;
          return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + "," + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;
        }
        function toCSS() {
          var i = 0;
          var props = this.props;
          var cssValue = "matrix3d(";
          var v = 1e4;
          while (i < 16) {
            cssValue += _rnd(props[i] * v) / v;
            cssValue += i === 15 ? ")" : ",";
            i += 1;
          }
          return cssValue;
        }
        function roundMatrixProperty(val) {
          var v = 1e4;
          if (val < 1e-6 && val > 0 || val > -1e-6 && val < 0) {
            return _rnd(val * v) / v;
          }
          return val;
        }
        function to2dCSS() {
          var props = this.props;
          var _a = roundMatrixProperty(props[0]);
          var _b = roundMatrixProperty(props[1]);
          var _c = roundMatrixProperty(props[4]);
          var _d = roundMatrixProperty(props[5]);
          var _e = roundMatrixProperty(props[12]);
          var _f = roundMatrixProperty(props[13]);
          return "matrix(" + _a + "," + _b + "," + _c + "," + _d + "," + _e + "," + _f + ")";
        }
        return function() {
          this.reset = reset;
          this.rotate = rotate;
          this.rotateX = rotateX;
          this.rotateY = rotateY;
          this.rotateZ = rotateZ;
          this.skew = skew;
          this.skewFromAxis = skewFromAxis;
          this.shear = shear;
          this.scale = scale;
          this.setTransform = setTransform;
          this.translate = translate;
          this.transform = transform;
          this.applyToPoint = applyToPoint;
          this.applyToX = applyToX;
          this.applyToY = applyToY;
          this.applyToZ = applyToZ;
          this.applyToPointArray = applyToPointArray;
          this.applyToTriplePoints = applyToTriplePoints;
          this.applyToPointStringified = applyToPointStringified;
          this.toCSS = toCSS;
          this.to2dCSS = to2dCSS;
          this.clone = clone;
          this.cloneFromProps = cloneFromProps;
          this.equals = equals;
          this.inversePoints = inversePoints;
          this.inversePoint = inversePoint;
          this.getInverseMatrix = getInverseMatrix;
          this._t = this.transform;
          this.isIdentity = isIdentity;
          this._identity = true;
          this._identityCalculated = false;
          this.props = createTypedArray("float32", 16);
          this.reset();
        };
      })();
      (function(pool, math) {
        var global2 = this, width = 256, chunks = 6, digits = 52, rngname = "random", startdenom = math.pow(width, chunks), significance = math.pow(2, digits), overflow = significance * 2, mask = width - 1, nodecrypto;
        function seedrandom(seed, options, callback) {
          var key = [];
          options = options === true ? { entropy: true } : options || {};
          var shortseed = mixkey(flatten(
            options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed,
            3
          ), key);
          var arc4 = new ARC4(key);
          var prng = function() {
            var n = arc4.g(chunks), d = startdenom, x = 0;
            while (n < significance) {
              n = (n + x) * width;
              d *= width;
              x = arc4.g(1);
            }
            while (n >= overflow) {
              n /= 2;
              d /= 2;
              x >>>= 1;
            }
            return (n + x) / d;
          };
          prng.int32 = function() {
            return arc4.g(4) | 0;
          };
          prng.quick = function() {
            return arc4.g(4) / 4294967296;
          };
          prng.double = prng;
          mixkey(tostring(arc4.S), pool);
          return (options.pass || callback || function(prng2, seed2, is_math_call, state) {
            if (state) {
              if (state.S) {
                copy(state, arc4);
              }
              prng2.state = function() {
                return copy(arc4, {});
              };
            }
            if (is_math_call) {
              math[rngname] = prng2;
              return seed2;
            } else return prng2;
          })(
            prng,
            shortseed,
            "global" in options ? options.global : this == math,
            options.state
          );
        }
        math["seed" + rngname] = seedrandom;
        function ARC4(key) {
          var t, keylen = key.length, me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];
          if (!keylen) {
            key = [keylen++];
          }
          while (i < width) {
            s[i] = i++;
          }
          for (i = 0; i < width; i++) {
            s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];
            s[j] = t;
          }
          me.g = function(count) {
            var t2, r = 0, i2 = me.i, j2 = me.j, s2 = me.S;
            while (count--) {
              t2 = s2[i2 = mask & i2 + 1];
              r = r * width + s2[mask & (s2[i2] = s2[j2 = mask & j2 + t2]) + (s2[j2] = t2)];
            }
            me.i = i2;
            me.j = j2;
            return r;
          };
        }
        function copy(f, t) {
          t.i = f.i;
          t.j = f.j;
          t.S = f.S.slice();
          return t;
        }
        function flatten(obj, depth) {
          var result = [], typ = typeof obj, prop;
          if (depth && typ == "object") {
            for (prop in obj) {
              try {
                result.push(flatten(obj[prop], depth - 1));
              } catch (e) {
              }
            }
          }
          return result.length ? result : typ == "string" ? obj : obj + "\0";
        }
        function mixkey(seed, key) {
          var stringseed = seed + "", smear, j = 0;
          while (j < stringseed.length) {
            key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);
          }
          return tostring(key);
        }
        function autoseed() {
          try {
            if (nodecrypto) {
              return tostring(nodecrypto.randomBytes(width));
            }
            var out = new Uint8Array(width);
            (global2.crypto || global2.msCrypto).getRandomValues(out);
            return tostring(out);
          } catch (e) {
            var browser = global2.navigator, plugins = browser && browser.plugins;
            return [+/* @__PURE__ */ new Date(), global2, plugins, global2.screen, tostring(pool)];
          }
        }
        function tostring(a) {
          return String.fromCharCode.apply(0, a);
        }
        mixkey(math.random(), pool);
      })(
        [],
        // pool: entropy pool starts empty
        BMMath
        // math: package containing random, pow, and seedrandom
      );
      var BezierFactory = (function() {
        var ob = {};
        ob.getBezierEasing = getBezierEasing;
        var beziers = {};
        function getBezierEasing(a, b, c, d, nm) {
          var str = nm || ("bez_" + a + "_" + b + "_" + c + "_" + d).replace(/\./g, "p");
          if (beziers[str]) {
            return beziers[str];
          }
          var bezEasing = new BezierEasing([a, b, c, d]);
          beziers[str] = bezEasing;
          return bezEasing;
        }
        var NEWTON_ITERATIONS = 4;
        var NEWTON_MIN_SLOPE = 1e-3;
        var SUBDIVISION_PRECISION = 1e-7;
        var SUBDIVISION_MAX_ITERATIONS = 10;
        var kSplineTableSize = 11;
        var kSampleStepSize = 1 / (kSplineTableSize - 1);
        var float32ArraySupported = typeof Float32Array === "function";
        function A(aA1, aA2) {
          return 1 - 3 * aA2 + 3 * aA1;
        }
        function B(aA1, aA2) {
          return 3 * aA2 - 6 * aA1;
        }
        function C(aA1) {
          return 3 * aA1;
        }
        function calcBezier(aT, aA1, aA2) {
          return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
        }
        function getSlope(aT, aA1, aA2) {
          return 3 * A(aA1, aA2) * aT * aT + 2 * B(aA1, aA2) * aT + C(aA1);
        }
        function binarySubdivide(aX, aA, aB, mX1, mX2) {
          var currentX, currentT, i = 0;
          do {
            currentT = aA + (aB - aA) / 2;
            currentX = calcBezier(currentT, mX1, mX2) - aX;
            if (currentX > 0) {
              aB = currentT;
            } else {
              aA = currentT;
            }
          } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
          return currentT;
        }
        function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
          for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
            var currentSlope = getSlope(aGuessT, mX1, mX2);
            if (currentSlope === 0) return aGuessT;
            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
            aGuessT -= currentX / currentSlope;
          }
          return aGuessT;
        }
        function BezierEasing(points) {
          this._p = points;
          this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
          this._precomputed = false;
          this.get = this.get.bind(this);
        }
        BezierEasing.prototype = {
          get: function(x) {
            var mX1 = this._p[0], mY1 = this._p[1], mX2 = this._p[2], mY2 = this._p[3];
            if (!this._precomputed) this._precompute();
            if (mX1 === mY1 && mX2 === mY2) return x;
            if (x === 0) return 0;
            if (x === 1) return 1;
            return calcBezier(this._getTForX(x), mY1, mY2);
          },
          // Private part
          _precompute: function() {
            var mX1 = this._p[0], mY1 = this._p[1], mX2 = this._p[2], mY2 = this._p[3];
            this._precomputed = true;
            if (mX1 !== mY1 || mX2 !== mY2) {
              this._calcSampleValues();
            }
          },
          _calcSampleValues: function() {
            var mX1 = this._p[0], mX2 = this._p[2];
            for (var i = 0; i < kSplineTableSize; ++i) {
              this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
            }
          },
          /**
               * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
               */
          _getTForX: function(aX) {
            var mX1 = this._p[0], mX2 = this._p[2], mSampleValues = this._mSampleValues;
            var intervalStart = 0;
            var currentSample = 1;
            var lastSample = kSplineTableSize - 1;
            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
              intervalStart += kSampleStepSize;
            }
            --currentSample;
            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);
            var guessForT = intervalStart + dist * kSampleStepSize;
            var initialSlope = getSlope(guessForT, mX1, mX2);
            if (initialSlope >= NEWTON_MIN_SLOPE) {
              return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
            }
            if (initialSlope === 0) {
              return guessForT;
            }
            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
          }
        };
        return ob;
      })();
      (function() {
        var lastTime = 0;
        var vendors = ["ms", "moz", "webkit", "o"];
        for (var x = 0; x < vendors.length && !window2.requestAnimationFrame; ++x) {
          window2.requestAnimationFrame = window2[vendors[x] + "RequestAnimationFrame"];
          window2.cancelAnimationFrame = window2[vendors[x] + "CancelAnimationFrame"] || window2[vendors[x] + "CancelRequestAnimationFrame"];
        }
        if (!window2.requestAnimationFrame) {
          window2.requestAnimationFrame = function(callback) {
            var currTime = (/* @__PURE__ */ new Date()).getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = setTimeout(
              function() {
                callback(currTime + timeToCall);
              },
              timeToCall
            );
            lastTime = currTime + timeToCall;
            return id;
          };
        }
        if (!window2.cancelAnimationFrame) {
          window2.cancelAnimationFrame = function(id) {
            clearTimeout(id);
          };
        }
      })();
      function extendPrototype(sources, destination) {
        var i;
        var len = sources.length;
        var sourcePrototype;
        for (i = 0; i < len; i += 1) {
          sourcePrototype = sources[i].prototype;
          for (var attr in sourcePrototype) {
            if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];
          }
        }
      }
      function getDescriptor(object, prop) {
        return Object.getOwnPropertyDescriptor(object, prop);
      }
      function createProxyFunction(prototype) {
        function ProxyFunction() {
        }
        ProxyFunction.prototype = prototype;
        return ProxyFunction;
      }
      function bezFunction() {
        var math = Math;
        function pointOnLine2D(x1, y1, x2, y2, x3, y3) {
          var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;
          return det1 > -1e-3 && det1 < 1e-3;
        }
        function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {
          if (z1 === 0 && z2 === 0 && z3 === 0) {
            return pointOnLine2D(x1, y1, x2, y2, x3, y3);
          }
          var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));
          var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));
          var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));
          var diffDist;
          if (dist1 > dist2) {
            if (dist1 > dist3) {
              diffDist = dist1 - dist2 - dist3;
            } else {
              diffDist = dist3 - dist2 - dist1;
            }
          } else if (dist3 > dist2) {
            diffDist = dist3 - dist2 - dist1;
          } else {
            diffDist = dist2 - dist1 - dist3;
          }
          return diffDist > -1e-4 && diffDist < 1e-4;
        }
        var getBezierLength = /* @__PURE__ */ (function() {
          return function(pt1, pt2, pt3, pt4) {
            var curveSegments = defaultCurveSegments;
            var k;
            var i;
            var len;
            var ptCoord;
            var perc;
            var addedLength = 0;
            var ptDistance;
            var point = [];
            var lastPoint = [];
            var lengthData = bezierLengthPool.newElement();
            len = pt3.length;
            for (k = 0; k < curveSegments; k += 1) {
              perc = k / (curveSegments - 1);
              ptDistance = 0;
              for (i = 0; i < len; i += 1) {
                ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];
                point[i] = ptCoord;
                if (lastPoint[i] !== null) {
                  ptDistance += bmPow(point[i] - lastPoint[i], 2);
                }
                lastPoint[i] = point[i];
              }
              if (ptDistance) {
                ptDistance = bmSqrt(ptDistance);
                addedLength += ptDistance;
              }
              lengthData.percents[k] = perc;
              lengthData.lengths[k] = addedLength;
            }
            lengthData.addedLength = addedLength;
            return lengthData;
          };
        })();
        function getSegmentsLength(shapeData) {
          var segmentsLength = segmentsLengthPool.newElement();
          var closed = shapeData.c;
          var pathV = shapeData.v;
          var pathO = shapeData.o;
          var pathI = shapeData.i;
          var i;
          var len = shapeData._length;
          var lengths = segmentsLength.lengths;
          var totalLength = 0;
          for (i = 0; i < len - 1; i += 1) {
            lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);
            totalLength += lengths[i].addedLength;
          }
          if (closed && len) {
            lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);
            totalLength += lengths[i].addedLength;
          }
          segmentsLength.totalLength = totalLength;
          return segmentsLength;
        }
        function BezierData(length) {
          this.segmentLength = 0;
          this.points = new Array(length);
        }
        function PointData(partial, point) {
          this.partialLength = partial;
          this.point = point;
        }
        var buildBezierData = /* @__PURE__ */ (function() {
          var storedData = {};
          return function(pt1, pt2, pt3, pt4) {
            var bezierName = (pt1[0] + "_" + pt1[1] + "_" + pt2[0] + "_" + pt2[1] + "_" + pt3[0] + "_" + pt3[1] + "_" + pt4[0] + "_" + pt4[1]).replace(/\./g, "p");
            if (!storedData[bezierName]) {
              var curveSegments = defaultCurveSegments;
              var k;
              var i;
              var len;
              var ptCoord;
              var perc;
              var addedLength = 0;
              var ptDistance;
              var point;
              var lastPoint = null;
              if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {
                curveSegments = 2;
              }
              var bezierData = new BezierData(curveSegments);
              len = pt3.length;
              for (k = 0; k < curveSegments; k += 1) {
                point = createSizedArray(len);
                perc = k / (curveSegments - 1);
                ptDistance = 0;
                for (i = 0; i < len; i += 1) {
                  ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];
                  point[i] = ptCoord;
                  if (lastPoint !== null) {
                    ptDistance += bmPow(point[i] - lastPoint[i], 2);
                  }
                }
                ptDistance = bmSqrt(ptDistance);
                addedLength += ptDistance;
                bezierData.points[k] = new PointData(ptDistance, point);
                lastPoint = point;
              }
              bezierData.segmentLength = addedLength;
              storedData[bezierName] = bezierData;
            }
            return storedData[bezierName];
          };
        })();
        function getDistancePerc(perc, bezierData) {
          var percents = bezierData.percents;
          var lengths = bezierData.lengths;
          var len = percents.length;
          var initPos = bmFloor((len - 1) * perc);
          var lengthPos = perc * bezierData.addedLength;
          var lPerc = 0;
          if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {
            return percents[initPos];
          }
          var dir = lengths[initPos] > lengthPos ? -1 : 1;
          var flag = true;
          while (flag) {
            if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {
              lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);
              flag = false;
            } else {
              initPos += dir;
            }
            if (initPos < 0 || initPos >= len - 1) {
              if (initPos === len - 1) {
                return percents[initPos];
              }
              flag = false;
            }
          }
          return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;
        }
        function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {
          var t1 = getDistancePerc(percent, bezierData);
          var u1 = 1 - t1;
          var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1e3) / 1e3;
          var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1e3) / 1e3;
          return [ptX, ptY];
        }
        var bezierSegmentPoints = createTypedArray("float32", 8);
        function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {
          if (startPerc < 0) {
            startPerc = 0;
          } else if (startPerc > 1) {
            startPerc = 1;
          }
          var t0 = getDistancePerc(startPerc, bezierData);
          endPerc = endPerc > 1 ? 1 : endPerc;
          var t1 = getDistancePerc(endPerc, bezierData);
          var i;
          var len = pt1.length;
          var u0 = 1 - t0;
          var u1 = 1 - t1;
          var u0u0u0 = u0 * u0 * u0;
          var t0u0u0_3 = t0 * u0 * u0 * 3;
          var t0t0u0_3 = t0 * t0 * u0 * 3;
          var t0t0t0 = t0 * t0 * t0;
          var u0u0u1 = u0 * u0 * u1;
          var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1;
          var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1;
          var t0t0t1 = t0 * t0 * t1;
          var u0u1u1 = u0 * u1 * u1;
          var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1;
          var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1;
          var t0t1t1 = t0 * t1 * t1;
          var u1u1u1 = u1 * u1 * u1;
          var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1;
          var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1;
          var t1t1t1 = t1 * t1 * t1;
          for (i = 0; i < len; i += 1) {
            bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1e3) / 1e3;
            bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1e3) / 1e3;
            bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1e3) / 1e3;
            bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1e3) / 1e3;
          }
          return bezierSegmentPoints;
        }
        return {
          getSegmentsLength,
          getNewSegment,
          getPointInSegment,
          buildBezierData,
          pointOnLine2D,
          pointOnLine3D
        };
      }
      var bez = bezFunction();
      var dataManager = /* @__PURE__ */ (function() {
        var _counterId = 1;
        var processes = [];
        var workerFn;
        var workerInstance;
        var workerProxy = {
          onmessage: function() {
          },
          postMessage: function(path) {
            workerFn({
              data: path
            });
          }
        };
        var _workerSelf = {
          postMessage: function(data) {
            workerProxy.onmessage({
              data
            });
          }
        };
        function createWorker(fn) {
          if (window2.Worker && window2.Blob && _useWebWorker) {
            var blob = new Blob(["var _workerSelf = self; self.onmessage = ", fn.toString()], { type: "text/javascript" });
            var url = URL.createObjectURL(blob);
            return new Worker(url);
          }
          workerFn = fn;
          return workerProxy;
        }
        function setupWorker() {
          if (!workerInstance) {
            workerInstance = createWorker(function workerStart(e) {
              function dataFunctionManager() {
                function completeLayers(layers, comps) {
                  var layerData;
                  var i;
                  var len = layers.length;
                  var j;
                  var jLen;
                  var k;
                  var kLen;
                  for (i = 0; i < len; i += 1) {
                    layerData = layers[i];
                    if ("ks" in layerData && !layerData.completed) {
                      layerData.completed = true;
                      if (layerData.tt) {
                        layers[i - 1].td = layerData.tt;
                      }
                      if (layerData.hasMask) {
                        var maskProps = layerData.masksProperties;
                        jLen = maskProps.length;
                        for (j = 0; j < jLen; j += 1) {
                          if (maskProps[j].pt.k.i) {
                            convertPathsToAbsoluteValues(maskProps[j].pt.k);
                          } else {
                            kLen = maskProps[j].pt.k.length;
                            for (k = 0; k < kLen; k += 1) {
                              if (maskProps[j].pt.k[k].s) {
                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);
                              }
                              if (maskProps[j].pt.k[k].e) {
                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);
                              }
                            }
                          }
                        }
                      }
                      if (layerData.ty === 0) {
                        layerData.layers = findCompLayers(layerData.refId, comps);
                        completeLayers(layerData.layers, comps);
                      } else if (layerData.ty === 4) {
                        completeShapes(layerData.shapes);
                      } else if (layerData.ty === 5) {
                        completeText(layerData);
                      }
                    }
                  }
                }
                function findCompLayers(id, comps) {
                  var i = 0;
                  var len = comps.length;
                  while (i < len) {
                    if (comps[i].id === id) {
                      if (!comps[i].layers.__used) {
                        comps[i].layers.__used = true;
                        return comps[i].layers;
                      }
                      return JSON.parse(JSON.stringify(comps[i].layers));
                    }
                    i += 1;
                  }
                  return null;
                }
                function completeShapes(arr) {
                  var i;
                  var len = arr.length;
                  var j;
                  var jLen;
                  for (i = len - 1; i >= 0; i -= 1) {
                    if (arr[i].ty === "sh") {
                      if (arr[i].ks.k.i) {
                        convertPathsToAbsoluteValues(arr[i].ks.k);
                      } else {
                        jLen = arr[i].ks.k.length;
                        for (j = 0; j < jLen; j += 1) {
                          if (arr[i].ks.k[j].s) {
                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);
                          }
                          if (arr[i].ks.k[j].e) {
                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);
                          }
                        }
                      }
                    } else if (arr[i].ty === "gr") {
                      completeShapes(arr[i].it);
                    }
                  }
                }
                function convertPathsToAbsoluteValues(path) {
                  var i;
                  var len = path.i.length;
                  for (i = 0; i < len; i += 1) {
                    path.i[i][0] += path.v[i][0];
                    path.i[i][1] += path.v[i][1];
                    path.o[i][0] += path.v[i][0];
                    path.o[i][1] += path.v[i][1];
                  }
                }
                function checkVersion(minimum, animVersionString) {
                  var animVersion = animVersionString ? animVersionString.split(".") : [100, 100, 100];
                  if (minimum[0] > animVersion[0]) {
                    return true;
                  }
                  if (animVersion[0] > minimum[0]) {
                    return false;
                  }
                  if (minimum[1] > animVersion[1]) {
                    return true;
                  }
                  if (animVersion[1] > minimum[1]) {
                    return false;
                  }
                  if (minimum[2] > animVersion[2]) {
                    return true;
                  }
                  if (animVersion[2] > minimum[2]) {
                    return false;
                  }
                  return null;
                }
                var checkText = /* @__PURE__ */ (function() {
                  var minimumVersion = [4, 4, 14];
                  function updateTextLayer(textLayer) {
                    var documentData = textLayer.t.d;
                    textLayer.t.d = {
                      k: [
                        {
                          s: documentData,
                          t: 0
                        }
                      ]
                    };
                  }
                  function iterateLayers(layers) {
                    var i;
                    var len = layers.length;
                    for (i = 0; i < len; i += 1) {
                      if (layers[i].ty === 5) {
                        updateTextLayer(layers[i]);
                      }
                    }
                  }
                  return function(animationData2) {
                    if (checkVersion(minimumVersion, animationData2.v)) {
                      iterateLayers(animationData2.layers);
                      if (animationData2.assets) {
                        var i;
                        var len = animationData2.assets.length;
                        for (i = 0; i < len; i += 1) {
                          if (animationData2.assets[i].layers) {
                            iterateLayers(animationData2.assets[i].layers);
                          }
                        }
                      }
                    }
                  };
                })();
                var checkChars = /* @__PURE__ */ (function() {
                  var minimumVersion = [4, 7, 99];
                  return function(animationData2) {
                    if (animationData2.chars && !checkVersion(minimumVersion, animationData2.v)) {
                      var i;
                      var len = animationData2.chars.length;
                      var j;
                      var jLen;
                      var pathData;
                      var paths;
                      for (i = 0; i < len; i += 1) {
                        if (animationData2.chars[i].data && animationData2.chars[i].data.shapes) {
                          paths = animationData2.chars[i].data.shapes[0].it;
                          jLen = paths.length;
                          for (j = 0; j < jLen; j += 1) {
                            pathData = paths[j].ks.k;
                            if (!pathData.__converted) {
                              convertPathsToAbsoluteValues(paths[j].ks.k);
                              pathData.__converted = true;
                            }
                          }
                        }
                      }
                    }
                  };
                })();
                var checkPathProperties = /* @__PURE__ */ (function() {
                  var minimumVersion = [5, 7, 15];
                  function updateTextLayer(textLayer) {
                    var pathData = textLayer.t.p;
                    if (typeof pathData.a === "number") {
                      pathData.a = {
                        a: 0,
                        k: pathData.a
                      };
                    }
                    if (typeof pathData.p === "number") {
                      pathData.p = {
                        a: 0,
                        k: pathData.p
                      };
                    }
                    if (typeof pathData.r === "number") {
                      pathData.r = {
                        a: 0,
                        k: pathData.r
                      };
                    }
                  }
                  function iterateLayers(layers) {
                    var i;
                    var len = layers.length;
                    for (i = 0; i < len; i += 1) {
                      if (layers[i].ty === 5) {
                        updateTextLayer(layers[i]);
                      }
                    }
                  }
                  return function(animationData2) {
                    if (checkVersion(minimumVersion, animationData2.v)) {
                      iterateLayers(animationData2.layers);
                      if (animationData2.assets) {
                        var i;
                        var len = animationData2.assets.length;
                        for (i = 0; i < len; i += 1) {
                          if (animationData2.assets[i].layers) {
                            iterateLayers(animationData2.assets[i].layers);
                          }
                        }
                      }
                    }
                  };
                })();
                var checkColors = /* @__PURE__ */ (function() {
                  var minimumVersion = [4, 1, 9];
                  function iterateShapes(shapes) {
                    var i;
                    var len = shapes.length;
                    var j;
                    var jLen;
                    for (i = 0; i < len; i += 1) {
                      if (shapes[i].ty === "gr") {
                        iterateShapes(shapes[i].it);
                      } else if (shapes[i].ty === "fl" || shapes[i].ty === "st") {
                        if (shapes[i].c.k && shapes[i].c.k[0].i) {
                          jLen = shapes[i].c.k.length;
                          for (j = 0; j < jLen; j += 1) {
                            if (shapes[i].c.k[j].s) {
                              shapes[i].c.k[j].s[0] /= 255;
                              shapes[i].c.k[j].s[1] /= 255;
                              shapes[i].c.k[j].s[2] /= 255;
                              shapes[i].c.k[j].s[3] /= 255;
                            }
                            if (shapes[i].c.k[j].e) {
                              shapes[i].c.k[j].e[0] /= 255;
                              shapes[i].c.k[j].e[1] /= 255;
                              shapes[i].c.k[j].e[2] /= 255;
                              shapes[i].c.k[j].e[3] /= 255;
                            }
                          }
                        } else {
                          shapes[i].c.k[0] /= 255;
                          shapes[i].c.k[1] /= 255;
                          shapes[i].c.k[2] /= 255;
                          shapes[i].c.k[3] /= 255;
                        }
                      }
                    }
                  }
                  function iterateLayers(layers) {
                    var i;
                    var len = layers.length;
                    for (i = 0; i < len; i += 1) {
                      if (layers[i].ty === 4) {
                        iterateShapes(layers[i].shapes);
                      }
                    }
                  }
                  return function(animationData2) {
                    if (checkVersion(minimumVersion, animationData2.v)) {
                      iterateLayers(animationData2.layers);
                      if (animationData2.assets) {
                        var i;
                        var len = animationData2.assets.length;
                        for (i = 0; i < len; i += 1) {
                          if (animationData2.assets[i].layers) {
                            iterateLayers(animationData2.assets[i].layers);
                          }
                        }
                      }
                    }
                  };
                })();
                var checkShapes = /* @__PURE__ */ (function() {
                  var minimumVersion = [4, 4, 18];
                  function completeClosingShapes(arr) {
                    var i;
                    var len = arr.length;
                    var j;
                    var jLen;
                    for (i = len - 1; i >= 0; i -= 1) {
                      if (arr[i].ty === "sh") {
                        if (arr[i].ks.k.i) {
                          arr[i].ks.k.c = arr[i].closed;
                        } else {
                          jLen = arr[i].ks.k.length;
                          for (j = 0; j < jLen; j += 1) {
                            if (arr[i].ks.k[j].s) {
                              arr[i].ks.k[j].s[0].c = arr[i].closed;
                            }
                            if (arr[i].ks.k[j].e) {
                              arr[i].ks.k[j].e[0].c = arr[i].closed;
                            }
                          }
                        }
                      } else if (arr[i].ty === "gr") {
                        completeClosingShapes(arr[i].it);
                      }
                    }
                  }
                  function iterateLayers(layers) {
                    var layerData;
                    var i;
                    var len = layers.length;
                    var j;
                    var jLen;
                    var k;
                    var kLen;
                    for (i = 0; i < len; i += 1) {
                      layerData = layers[i];
                      if (layerData.hasMask) {
                        var maskProps = layerData.masksProperties;
                        jLen = maskProps.length;
                        for (j = 0; j < jLen; j += 1) {
                          if (maskProps[j].pt.k.i) {
                            maskProps[j].pt.k.c = maskProps[j].cl;
                          } else {
                            kLen = maskProps[j].pt.k.length;
                            for (k = 0; k < kLen; k += 1) {
                              if (maskProps[j].pt.k[k].s) {
                                maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;
                              }
                              if (maskProps[j].pt.k[k].e) {
                                maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;
                              }
                            }
                          }
                        }
                      }
                      if (layerData.ty === 4) {
                        completeClosingShapes(layerData.shapes);
                      }
                    }
                  }
                  return function(animationData2) {
                    if (checkVersion(minimumVersion, animationData2.v)) {
                      iterateLayers(animationData2.layers);
                      if (animationData2.assets) {
                        var i;
                        var len = animationData2.assets.length;
                        for (i = 0; i < len; i += 1) {
                          if (animationData2.assets[i].layers) {
                            iterateLayers(animationData2.assets[i].layers);
                          }
                        }
                      }
                    }
                  };
                })();
                function completeData(animationData2) {
                  if (animationData2.__complete) {
                    return;
                  }
                  checkColors(animationData2);
                  checkText(animationData2);
                  checkChars(animationData2);
                  checkPathProperties(animationData2);
                  checkShapes(animationData2);
                  completeLayers(animationData2.layers, animationData2.assets);
                  animationData2.__complete = true;
                }
                function completeText(data) {
                  if (data.t.a.length === 0 && !("m" in data.t.p)) {
                    data.singleShape = true;
                  }
                }
                var moduleOb = {};
                moduleOb.completeData = completeData;
                moduleOb.checkColors = checkColors;
                moduleOb.checkChars = checkChars;
                moduleOb.checkPathProperties = checkPathProperties;
                moduleOb.checkShapes = checkShapes;
                moduleOb.completeLayers = completeLayers;
                return moduleOb;
              }
              if (!_workerSelf.dataManager) {
                _workerSelf.dataManager = dataFunctionManager();
              }
              if (!_workerSelf.assetLoader) {
                _workerSelf.assetLoader = /* @__PURE__ */ (function() {
                  function formatResponse(xhr) {
                    var contentTypeHeader = xhr.getResponseHeader("content-type");
                    if (contentTypeHeader && xhr.responseType === "json" && contentTypeHeader.indexOf("json") !== -1) {
                      return xhr.response;
                    }
                    if (xhr.response && typeof xhr.response === "object") {
                      return xhr.response;
                    }
                    if (xhr.response && typeof xhr.response === "string") {
                      return JSON.parse(xhr.response);
                    }
                    if (xhr.responseText) {
                      return JSON.parse(xhr.responseText);
                    }
                    return null;
                  }
                  function loadAsset(path, fullPath, callback, errorCallback) {
                    var response;
                    var xhr = new XMLHttpRequest();
                    try {
                      xhr.responseType = "json";
                    } catch (err) {
                    }
                    xhr.onreadystatechange = function() {
                      if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                          response = formatResponse(xhr);
                          callback(response);
                        } else {
                          try {
                            response = formatResponse(xhr);
                            callback(response);
                          } catch (err) {
                            if (errorCallback) {
                              errorCallback(err);
                            }
                          }
                        }
                      }
                    };
                    try {
                      xhr.open("GET", path, true);
                    } catch (error) {
                      xhr.open("GET", fullPath + "/" + path, true);
                    }
                    xhr.send();
                  }
                  return {
                    load: loadAsset
                  };
                })();
              }
              if (e.data.type === "loadAnimation") {
                _workerSelf.assetLoader.load(
                  e.data.path,
                  e.data.fullPath,
                  function(data) {
                    _workerSelf.dataManager.completeData(data);
                    _workerSelf.postMessage({
                      id: e.data.id,
                      payload: data,
                      status: "success"
                    });
                  },
                  function() {
                    _workerSelf.postMessage({
                      id: e.data.id,
                      status: "error"
                    });
                  }
                );
              } else if (e.data.type === "complete") {
                var animation = e.data.animation;
                _workerSelf.dataManager.completeData(animation);
                _workerSelf.postMessage({
                  id: e.data.id,
                  payload: animation,
                  status: "success"
                });
              } else if (e.data.type === "loadData") {
                _workerSelf.assetLoader.load(
                  e.data.path,
                  e.data.fullPath,
                  function(data) {
                    _workerSelf.postMessage({
                      id: e.data.id,
                      payload: data,
                      status: "success"
                    });
                  },
                  function() {
                    _workerSelf.postMessage({
                      id: e.data.id,
                      status: "error"
                    });
                  }
                );
              }
            });
            workerInstance.onmessage = function(event) {
              var data = event.data;
              var id = data.id;
              var process2 = processes[id];
              processes[id] = null;
              if (data.status === "success") {
                process2.onComplete(data.payload);
              } else if (process2.onError) {
                process2.onError();
              }
            };
          }
        }
        function createProcess(onComplete, onError) {
          _counterId += 1;
          var id = "processId_" + _counterId;
          processes[id] = {
            onComplete,
            onError
          };
          return id;
        }
        function loadAnimation2(path, onComplete, onError) {
          setupWorker();
          var processId = createProcess(onComplete, onError);
          workerInstance.postMessage({
            type: "loadAnimation",
            path,
            fullPath: window2.location.origin + window2.location.pathname,
            id: processId
          });
        }
        function loadData(path, onComplete, onError) {
          setupWorker();
          var processId = createProcess(onComplete, onError);
          workerInstance.postMessage({
            type: "loadData",
            path,
            fullPath: window2.location.origin + window2.location.pathname,
            id: processId
          });
        }
        function completeAnimation(anim, onComplete, onError) {
          setupWorker();
          var processId = createProcess(onComplete, onError);
          workerInstance.postMessage({
            type: "complete",
            animation: anim,
            id: processId
          });
        }
        return {
          loadAnimation: loadAnimation2,
          loadData,
          completeAnimation
        };
      })();
      function getFontProperties(fontData) {
        var styles = fontData.fStyle ? fontData.fStyle.split(" ") : [];
        var fWeight = "normal";
        var fStyle = "normal";
        var len = styles.length;
        var styleName;
        for (var i = 0; i < len; i += 1) {
          styleName = styles[i].toLowerCase();
          switch (styleName) {
            case "italic":
              fStyle = "italic";
              break;
            case "bold":
              fWeight = "700";
              break;
            case "black":
              fWeight = "900";
              break;
            case "medium":
              fWeight = "500";
              break;
            case "regular":
            case "normal":
              fWeight = "400";
              break;
            case "light":
            case "thin":
              fWeight = "200";
              break;
            default:
              break;
          }
        }
        return {
          style: fStyle,
          weight: fontData.fWeight || fWeight
        };
      }
      var FontManager = (function() {
        var maxWaitingTime = 5e3;
        var emptyChar = {
          w: 0,
          size: 0,
          shapes: []
        };
        var combinedCharacters = [];
        combinedCharacters = combinedCharacters.concat([
          2304,
          2305,
          2306,
          2307,
          2362,
          2363,
          2364,
          2364,
          2366,
          2367,
          2368,
          2369,
          2370,
          2371,
          2372,
          2373,
          2374,
          2375,
          2376,
          2377,
          2378,
          2379,
          2380,
          2381,
          2382,
          2383,
          2387,
          2388,
          2389,
          2390,
          2391,
          2402,
          2403
        ]);
        var surrogateModifiers = [
          "d83cdffb",
          "d83cdffc",
          "d83cdffd",
          "d83cdffe",
          "d83cdfff"
        ];
        var zeroWidthJoiner = [65039, 8205];
        function trimFontOptions(font) {
          var familyArray = font.split(",");
          var i;
          var len = familyArray.length;
          var enabledFamilies = [];
          for (i = 0; i < len; i += 1) {
            if (familyArray[i] !== "sans-serif" && familyArray[i] !== "monospace") {
              enabledFamilies.push(familyArray[i]);
            }
          }
          return enabledFamilies.join(",");
        }
        function setUpNode(font, family) {
          var parentNode = createTag("span");
          parentNode.setAttribute("aria-hidden", true);
          parentNode.style.fontFamily = family;
          var node = createTag("span");
          node.innerText = "giItT1WQy@!-/#";
          parentNode.style.position = "absolute";
          parentNode.style.left = "-10000px";
          parentNode.style.top = "-10000px";
          parentNode.style.fontSize = "300px";
          parentNode.style.fontVariant = "normal";
          parentNode.style.fontStyle = "normal";
          parentNode.style.fontWeight = "normal";
          parentNode.style.letterSpacing = "0";
          parentNode.appendChild(node);
          document.body.appendChild(parentNode);
          var width = node.offsetWidth;
          node.style.fontFamily = trimFontOptions(font) + ", " + family;
          return { node, w: width, parent: parentNode };
        }
        function checkLoadedFonts() {
          var i;
          var len = this.fonts.length;
          var node;
          var w;
          var loadedCount = len;
          for (i = 0; i < len; i += 1) {
            if (this.fonts[i].loaded) {
              loadedCount -= 1;
            } else if (this.fonts[i].fOrigin === "n" || this.fonts[i].origin === 0) {
              this.fonts[i].loaded = true;
            } else {
              node = this.fonts[i].monoCase.node;
              w = this.fonts[i].monoCase.w;
              if (node.offsetWidth !== w) {
                loadedCount -= 1;
                this.fonts[i].loaded = true;
              } else {
                node = this.fonts[i].sansCase.node;
                w = this.fonts[i].sansCase.w;
                if (node.offsetWidth !== w) {
                  loadedCount -= 1;
                  this.fonts[i].loaded = true;
                }
              }
              if (this.fonts[i].loaded) {
                this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);
                this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);
              }
            }
          }
          if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {
            setTimeout(this.checkLoadedFontsBinded, 20);
          } else {
            setTimeout(this.setIsLoadedBinded, 10);
          }
        }
        function createHelper(def, fontData) {
          var tHelper = createNS("text");
          tHelper.style.fontSize = "100px";
          var fontProps = getFontProperties(fontData);
          tHelper.setAttribute("font-family", fontData.fFamily);
          tHelper.setAttribute("font-style", fontProps.style);
          tHelper.setAttribute("font-weight", fontProps.weight);
          tHelper.textContent = "1";
          if (fontData.fClass) {
            tHelper.style.fontFamily = "inherit";
            tHelper.setAttribute("class", fontData.fClass);
          } else {
            tHelper.style.fontFamily = fontData.fFamily;
          }
          def.appendChild(tHelper);
          var tCanvasHelper = createTag("canvas").getContext("2d");
          tCanvasHelper.font = fontData.fWeight + " " + fontData.fStyle + " 100px " + fontData.fFamily;
          return tHelper;
        }
        function addFonts(fontData, defs) {
          if (!fontData) {
            this.isLoaded = true;
            return;
          }
          if (this.chars) {
            this.isLoaded = true;
            this.fonts = fontData.list;
            return;
          }
          var fontArr = fontData.list;
          var i;
          var len = fontArr.length;
          var _pendingFonts = len;
          for (i = 0; i < len; i += 1) {
            var shouldLoadFont = true;
            var loadedSelector;
            var j;
            fontArr[i].loaded = false;
            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, "monospace");
            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, "sans-serif");
            if (!fontArr[i].fPath) {
              fontArr[i].loaded = true;
              _pendingFonts -= 1;
            } else if (fontArr[i].fOrigin === "p" || fontArr[i].origin === 3) {
              loadedSelector = document.querySelectorAll('style[f-forigin="p"][f-family="' + fontArr[i].fFamily + '"], style[f-origin="3"][f-family="' + fontArr[i].fFamily + '"]');
              if (loadedSelector.length > 0) {
                shouldLoadFont = false;
              }
              if (shouldLoadFont) {
                var s = createTag("style");
                s.setAttribute("f-forigin", fontArr[i].fOrigin);
                s.setAttribute("f-origin", fontArr[i].origin);
                s.setAttribute("f-family", fontArr[i].fFamily);
                s.type = "text/css";
                s.innerText = "@font-face {font-family: " + fontArr[i].fFamily + "; font-style: normal; src: url('" + fontArr[i].fPath + "');}";
                defs.appendChild(s);
              }
            } else if (fontArr[i].fOrigin === "g" || fontArr[i].origin === 1) {
              loadedSelector = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]');
              for (j = 0; j < loadedSelector.length; j += 1) {
                if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {
                  shouldLoadFont = false;
                }
              }
              if (shouldLoadFont) {
                var l = createTag("link");
                l.setAttribute("f-forigin", fontArr[i].fOrigin);
                l.setAttribute("f-origin", fontArr[i].origin);
                l.type = "text/css";
                l.rel = "stylesheet";
                l.href = fontArr[i].fPath;
                document.body.appendChild(l);
              }
            } else if (fontArr[i].fOrigin === "t" || fontArr[i].origin === 2) {
              loadedSelector = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]');
              for (j = 0; j < loadedSelector.length; j += 1) {
                if (fontArr[i].fPath === loadedSelector[j].src) {
                  shouldLoadFont = false;
                }
              }
              if (shouldLoadFont) {
                var sc = createTag("link");
                sc.setAttribute("f-forigin", fontArr[i].fOrigin);
                sc.setAttribute("f-origin", fontArr[i].origin);
                sc.setAttribute("rel", "stylesheet");
                sc.setAttribute("href", fontArr[i].fPath);
                defs.appendChild(sc);
              }
            }
            fontArr[i].helper = createHelper(defs, fontArr[i]);
            fontArr[i].cache = {};
            this.fonts.push(fontArr[i]);
          }
          if (_pendingFonts === 0) {
            this.isLoaded = true;
          } else {
            setTimeout(this.checkLoadedFonts.bind(this), 100);
          }
        }
        function addChars(chars) {
          if (!chars) {
            return;
          }
          if (!this.chars) {
            this.chars = [];
          }
          var i;
          var len = chars.length;
          var j;
          var jLen = this.chars.length;
          var found;
          for (i = 0; i < len; i += 1) {
            j = 0;
            found = false;
            while (j < jLen) {
              if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {
                found = true;
              }
              j += 1;
            }
            if (!found) {
              this.chars.push(chars[i]);
              jLen += 1;
            }
          }
        }
        function getCharData(char, style, font) {
          var i = 0;
          var len = this.chars.length;
          while (i < len) {
            if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {
              return this.chars[i];
            }
            i += 1;
          }
          if ((typeof char === "string" && char.charCodeAt(0) !== 13 || !char) && console && console.warn && !this._warned) {
            this._warned = true;
            console.warn("Missing character from exported characters list: ", char, style, font);
          }
          return emptyChar;
        }
        function measureText(char, fontName, size) {
          var fontData = this.getFontByName(fontName);
          var index2 = char.charCodeAt(0);
          if (!fontData.cache[index2 + 1]) {
            var tHelper = fontData.helper;
            if (char === " ") {
              tHelper.textContent = "|" + char + "|";
              var doubleSize = tHelper.getComputedTextLength();
              tHelper.textContent = "||";
              var singleSize = tHelper.getComputedTextLength();
              fontData.cache[index2 + 1] = (doubleSize - singleSize) / 100;
            } else {
              tHelper.textContent = char;
              fontData.cache[index2 + 1] = tHelper.getComputedTextLength() / 100;
            }
          }
          return fontData.cache[index2 + 1] * size;
        }
        function getFontByName(name) {
          var i = 0;
          var len = this.fonts.length;
          while (i < len) {
            if (this.fonts[i].fName === name) {
              return this.fonts[i];
            }
            i += 1;
          }
          return this.fonts[0];
        }
        function isModifier(firstCharCode, secondCharCode) {
          var sum = firstCharCode.toString(16) + secondCharCode.toString(16);
          return surrogateModifiers.indexOf(sum) !== -1;
        }
        function isZeroWidthJoiner(firstCharCode, secondCharCode) {
          if (!secondCharCode) {
            return firstCharCode === zeroWidthJoiner[1];
          }
          return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1];
        }
        function isCombinedCharacter(char) {
          return combinedCharacters.indexOf(char) !== -1;
        }
        function setIsLoaded() {
          this.isLoaded = true;
        }
        var Font = function() {
          this.fonts = [];
          this.chars = null;
          this.typekitLoaded = 0;
          this.isLoaded = false;
          this._warned = false;
          this.initTime = Date.now();
          this.setIsLoadedBinded = this.setIsLoaded.bind(this);
          this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);
        };
        Font.isModifier = isModifier;
        Font.isZeroWidthJoiner = isZeroWidthJoiner;
        Font.isCombinedCharacter = isCombinedCharacter;
        var fontPrototype = {
          addChars,
          addFonts,
          getCharData,
          getFontByName,
          measureText,
          checkLoadedFonts,
          setIsLoaded
        };
        Font.prototype = fontPrototype;
        return Font;
      })();
      var PropertyFactory = /* @__PURE__ */ (function() {
        var initFrame = initialDefaultFrame;
        var mathAbs = Math.abs;
        function interpolateValue(frameNum, caching) {
          var offsetTime = this.offsetTime;
          var newValue;
          if (this.propType === "multidimensional") {
            newValue = createTypedArray("float32", this.pv.length);
          }
          var iterationIndex = caching.lastIndex;
          var i = iterationIndex;
          var len = this.keyframes.length - 1;
          var flag = true;
          var keyData;
          var nextKeyData;
          var keyframeMetadata;
          while (flag) {
            keyData = this.keyframes[i];
            nextKeyData = this.keyframes[i + 1];
            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {
              if (keyData.h) {
                keyData = nextKeyData;
              }
              iterationIndex = 0;
              break;
            }
            if (nextKeyData.t - offsetTime > frameNum) {
              iterationIndex = i;
              break;
            }
            if (i < len - 1) {
              i += 1;
            } else {
              iterationIndex = 0;
              flag = false;
            }
          }
          keyframeMetadata = this.keyframesMetadata[i] || {};
          var k;
          var kLen;
          var perc;
          var jLen;
          var j;
          var fnc;
          var nextKeyTime = nextKeyData.t - offsetTime;
          var keyTime = keyData.t - offsetTime;
          var endValue;
          if (keyData.to) {
            if (!keyframeMetadata.bezierData) {
              keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);
            }
            var bezierData = keyframeMetadata.bezierData;
            if (frameNum >= nextKeyTime || frameNum < keyTime) {
              var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;
              kLen = bezierData.points[ind].point.length;
              for (k = 0; k < kLen; k += 1) {
                newValue[k] = bezierData.points[ind].point[k];
              }
            } else {
              if (keyframeMetadata.__fnct) {
                fnc = keyframeMetadata.__fnct;
              } else {
                fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;
                keyframeMetadata.__fnct = fnc;
              }
              perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
              var distanceInLine = bezierData.segmentLength * perc;
              var segmentPerc;
              var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;
              j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;
              flag = true;
              jLen = bezierData.points.length;
              while (flag) {
                addedLength += bezierData.points[j].partialLength;
                if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {
                  kLen = bezierData.points[j].point.length;
                  for (k = 0; k < kLen; k += 1) {
                    newValue[k] = bezierData.points[j].point[k];
                  }
                  break;
                } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {
                  segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;
                  kLen = bezierData.points[j].point.length;
                  for (k = 0; k < kLen; k += 1) {
                    newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;
                  }
                  break;
                }
                if (j < jLen - 1) {
                  j += 1;
                } else {
                  flag = false;
                }
              }
              caching._lastPoint = j;
              caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;
              caching._lastKeyframeIndex = i;
            }
          } else {
            var outX;
            var outY;
            var inX;
            var inY;
            var keyValue;
            len = keyData.s.length;
            endValue = nextKeyData.s || keyData.e;
            if (this.sh && keyData.h !== 1) {
              if (frameNum >= nextKeyTime) {
                newValue[0] = endValue[0];
                newValue[1] = endValue[1];
                newValue[2] = endValue[2];
              } else if (frameNum <= keyTime) {
                newValue[0] = keyData.s[0];
                newValue[1] = keyData.s[1];
                newValue[2] = keyData.s[2];
              } else {
                var quatStart = createQuaternion(keyData.s);
                var quatEnd = createQuaternion(endValue);
                var time = (frameNum - keyTime) / (nextKeyTime - keyTime);
                quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));
              }
            } else {
              for (i = 0; i < len; i += 1) {
                if (keyData.h !== 1) {
                  if (frameNum >= nextKeyTime) {
                    perc = 1;
                  } else if (frameNum < keyTime) {
                    perc = 0;
                  } else {
                    if (keyData.o.x.constructor === Array) {
                      if (!keyframeMetadata.__fnct) {
                        keyframeMetadata.__fnct = [];
                      }
                      if (!keyframeMetadata.__fnct[i]) {
                        outX = keyData.o.x[i] === void 0 ? keyData.o.x[0] : keyData.o.x[i];
                        outY = keyData.o.y[i] === void 0 ? keyData.o.y[0] : keyData.o.y[i];
                        inX = keyData.i.x[i] === void 0 ? keyData.i.x[0] : keyData.i.x[i];
                        inY = keyData.i.y[i] === void 0 ? keyData.i.y[0] : keyData.i.y[i];
                        fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                        keyframeMetadata.__fnct[i] = fnc;
                      } else {
                        fnc = keyframeMetadata.__fnct[i];
                      }
                    } else if (!keyframeMetadata.__fnct) {
                      outX = keyData.o.x;
                      outY = keyData.o.y;
                      inX = keyData.i.x;
                      inY = keyData.i.y;
                      fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                      keyData.keyframeMetadata = fnc;
                    } else {
                      fnc = keyframeMetadata.__fnct;
                    }
                    perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
                  }
                }
                endValue = nextKeyData.s || keyData.e;
                keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;
                if (this.propType === "multidimensional") {
                  newValue[i] = keyValue;
                } else {
                  newValue = keyValue;
                }
              }
            }
          }
          caching.lastIndex = iterationIndex;
          return newValue;
        }
        function slerp(a, b, t) {
          var out = [];
          var ax = a[0];
          var ay = a[1];
          var az = a[2];
          var aw = a[3];
          var bx = b[0];
          var by = b[1];
          var bz = b[2];
          var bw = b[3];
          var omega;
          var cosom;
          var sinom;
          var scale0;
          var scale1;
          cosom = ax * bx + ay * by + az * bz + aw * bw;
          if (cosom < 0) {
            cosom = -cosom;
            bx = -bx;
            by = -by;
            bz = -bz;
            bw = -bw;
          }
          if (1 - cosom > 1e-6) {
            omega = Math.acos(cosom);
            sinom = Math.sin(omega);
            scale0 = Math.sin((1 - t) * omega) / sinom;
            scale1 = Math.sin(t * omega) / sinom;
          } else {
            scale0 = 1 - t;
            scale1 = t;
          }
          out[0] = scale0 * ax + scale1 * bx;
          out[1] = scale0 * ay + scale1 * by;
          out[2] = scale0 * az + scale1 * bz;
          out[3] = scale0 * aw + scale1 * bw;
          return out;
        }
        function quaternionToEuler(out, quat) {
          var qx = quat[0];
          var qy = quat[1];
          var qz = quat[2];
          var qw = quat[3];
          var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);
          var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);
          var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);
          out[0] = heading / degToRads;
          out[1] = attitude / degToRads;
          out[2] = bank / degToRads;
        }
        function createQuaternion(values) {
          var heading = values[0] * degToRads;
          var attitude = values[1] * degToRads;
          var bank = values[2] * degToRads;
          var c1 = Math.cos(heading / 2);
          var c2 = Math.cos(attitude / 2);
          var c3 = Math.cos(bank / 2);
          var s1 = Math.sin(heading / 2);
          var s2 = Math.sin(attitude / 2);
          var s3 = Math.sin(bank / 2);
          var w = c1 * c2 * c3 - s1 * s2 * s3;
          var x = s1 * s2 * c3 + c1 * c2 * s3;
          var y = s1 * c2 * c3 + c1 * s2 * s3;
          var z = c1 * s2 * c3 - s1 * c2 * s3;
          return [x, y, z, w];
        }
        function getValueAtCurrentTime() {
          var frameNum = this.comp.renderedFrame - this.offsetTime;
          var initTime = this.keyframes[0].t - this.offsetTime;
          var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
          if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {
            if (this._caching.lastFrame >= frameNum) {
              this._caching._lastKeyframeIndex = -1;
              this._caching.lastIndex = 0;
            }
            var renderResult = this.interpolateValue(frameNum, this._caching);
            this.pv = renderResult;
          }
          this._caching.lastFrame = frameNum;
          return this.pv;
        }
        function setVValue(val) {
          var multipliedValue;
          if (this.propType === "unidimensional") {
            multipliedValue = val * this.mult;
            if (mathAbs(this.v - multipliedValue) > 1e-5) {
              this.v = multipliedValue;
              this._mdf = true;
            }
          } else {
            var i = 0;
            var len = this.v.length;
            while (i < len) {
              multipliedValue = val[i] * this.mult;
              if (mathAbs(this.v[i] - multipliedValue) > 1e-5) {
                this.v[i] = multipliedValue;
                this._mdf = true;
              }
              i += 1;
            }
          }
        }
        function processEffectsSequence() {
          if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {
            return;
          }
          if (this.lock) {
            this.setVValue(this.pv);
            return;
          }
          this.lock = true;
          this._mdf = this._isFirstFrame;
          var i;
          var len = this.effectsSequence.length;
          var finalValue = this.kf ? this.pv : this.data.k;
          for (i = 0; i < len; i += 1) {
            finalValue = this.effectsSequence[i](finalValue);
          }
          this.setVValue(finalValue);
          this._isFirstFrame = false;
          this.lock = false;
          this.frameId = this.elem.globalData.frameId;
        }
        function addEffect(effectFunction) {
          this.effectsSequence.push(effectFunction);
          this.container.addDynamicProperty(this);
        }
        function ValueProperty(elem, data, mult, container) {
          this.propType = "unidimensional";
          this.mult = mult || 1;
          this.data = data;
          this.v = mult ? data.k * mult : data.k;
          this.pv = data.k;
          this._mdf = false;
          this.elem = elem;
          this.container = container;
          this.comp = elem.comp;
          this.k = false;
          this.kf = false;
          this.vel = 0;
          this.effectsSequence = [];
          this._isFirstFrame = true;
          this.getValue = processEffectsSequence;
          this.setVValue = setVValue;
          this.addEffect = addEffect;
        }
        function MultiDimensionalProperty(elem, data, mult, container) {
          this.propType = "multidimensional";
          this.mult = mult || 1;
          this.data = data;
          this._mdf = false;
          this.elem = elem;
          this.container = container;
          this.comp = elem.comp;
          this.k = false;
          this.kf = false;
          this.frameId = -1;
          var i;
          var len = data.k.length;
          this.v = createTypedArray("float32", len);
          this.pv = createTypedArray("float32", len);
          this.vel = createTypedArray("float32", len);
          for (i = 0; i < len; i += 1) {
            this.v[i] = data.k[i] * this.mult;
            this.pv[i] = data.k[i];
          }
          this._isFirstFrame = true;
          this.effectsSequence = [];
          this.getValue = processEffectsSequence;
          this.setVValue = setVValue;
          this.addEffect = addEffect;
        }
        function KeyframedValueProperty(elem, data, mult, container) {
          this.propType = "unidimensional";
          this.keyframes = data.k;
          this.keyframesMetadata = [];
          this.offsetTime = elem.data.st;
          this.frameId = -1;
          this._caching = {
            lastFrame: initFrame,
            lastIndex: 0,
            value: 0,
            _lastKeyframeIndex: -1
          };
          this.k = true;
          this.kf = true;
          this.data = data;
          this.mult = mult || 1;
          this.elem = elem;
          this.container = container;
          this.comp = elem.comp;
          this.v = initFrame;
          this.pv = initFrame;
          this._isFirstFrame = true;
          this.getValue = processEffectsSequence;
          this.setVValue = setVValue;
          this.interpolateValue = interpolateValue;
          this.effectsSequence = [getValueAtCurrentTime.bind(this)];
          this.addEffect = addEffect;
        }
        function KeyframedMultidimensionalProperty(elem, data, mult, container) {
          this.propType = "multidimensional";
          var i;
          var len = data.k.length;
          var s;
          var e;
          var to;
          var ti;
          for (i = 0; i < len - 1; i += 1) {
            if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {
              s = data.k[i].s;
              e = data.k[i + 1].s;
              to = data.k[i].to;
              ti = data.k[i].ti;
              if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {
                data.k[i].to = null;
                data.k[i].ti = null;
              }
              if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {
                if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {
                  data.k[i].to = null;
                  data.k[i].ti = null;
                }
              }
            }
          }
          this.effectsSequence = [getValueAtCurrentTime.bind(this)];
          this.data = data;
          this.keyframes = data.k;
          this.keyframesMetadata = [];
          this.offsetTime = elem.data.st;
          this.k = true;
          this.kf = true;
          this._isFirstFrame = true;
          this.mult = mult || 1;
          this.elem = elem;
          this.container = container;
          this.comp = elem.comp;
          this.getValue = processEffectsSequence;
          this.setVValue = setVValue;
          this.interpolateValue = interpolateValue;
          this.frameId = -1;
          var arrLen = data.k[0].s.length;
          this.v = createTypedArray("float32", arrLen);
          this.pv = createTypedArray("float32", arrLen);
          for (i = 0; i < arrLen; i += 1) {
            this.v[i] = initFrame;
            this.pv[i] = initFrame;
          }
          this._caching = { lastFrame: initFrame, lastIndex: 0, value: createTypedArray("float32", arrLen) };
          this.addEffect = addEffect;
        }
        function getProp(elem, data, type, mult, container) {
          var p;
          if (!data.k.length) {
            p = new ValueProperty(elem, data, mult, container);
          } else if (typeof data.k[0] === "number") {
            p = new MultiDimensionalProperty(elem, data, mult, container);
          } else {
            switch (type) {
              case 0:
                p = new KeyframedValueProperty(elem, data, mult, container);
                break;
              case 1:
                p = new KeyframedMultidimensionalProperty(elem, data, mult, container);
                break;
              default:
                break;
            }
          }
          if (p.effectsSequence.length) {
            container.addDynamicProperty(p);
          }
          return p;
        }
        var ob = {
          getProp
        };
        return ob;
      })();
      var TransformPropertyFactory = (function() {
        var defaultVector = [0, 0];
        function applyToMatrix(mat) {
          var _mdf = this._mdf;
          this.iterateDynamicProperties();
          this._mdf = this._mdf || _mdf;
          if (this.a) {
            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
          }
          if (this.s) {
            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
          }
          if (this.sk) {
            mat.skewFromAxis(-this.sk.v, this.sa.v);
          }
          if (this.r) {
            mat.rotate(-this.r.v);
          } else {
            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
          }
          if (this.data.p.s) {
            if (this.data.p.z) {
              mat.translate(this.px.v, this.py.v, -this.pz.v);
            } else {
              mat.translate(this.px.v, this.py.v, 0);
            }
          } else {
            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
          }
        }
        function processKeys(forceRender) {
          if (this.elem.globalData.frameId === this.frameId) {
            return;
          }
          if (this._isDirty) {
            this.precalculateMatrix();
            this._isDirty = false;
          }
          this.iterateDynamicProperties();
          if (this._mdf || forceRender) {
            var frameRate;
            this.v.cloneFromProps(this.pre.props);
            if (this.appliedTransformations < 1) {
              this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
            }
            if (this.appliedTransformations < 2) {
              this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
            }
            if (this.sk && this.appliedTransformations < 3) {
              this.v.skewFromAxis(-this.sk.v, this.sa.v);
            }
            if (this.r && this.appliedTransformations < 4) {
              this.v.rotate(-this.r.v);
            } else if (!this.r && this.appliedTransformations < 4) {
              this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
            }
            if (this.autoOriented) {
              var v1;
              var v2;
              frameRate = this.elem.globalData.frameRate;
              if (this.p && this.p.keyframes && this.p.getValueAtTime) {
                if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {
                  v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);
                  v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);
                } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {
                  v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);
                  v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);
                } else {
                  v1 = this.p.pv;
                  v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);
                }
              } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                v1 = [];
                v2 = [];
                var px = this.px;
                var py = this.py;
                if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {
                  v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);
                  v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);
                  v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);
                  v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);
                } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {
                  v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);
                  v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);
                  v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);
                  v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);
                } else {
                  v1 = [px.pv, py.pv];
                  v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);
                  v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);
                }
              } else {
                v2 = defaultVector;
                v1 = v2;
              }
              this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));
            }
            if (this.data.p && this.data.p.s) {
              if (this.data.p.z) {
                this.v.translate(this.px.v, this.py.v, -this.pz.v);
              } else {
                this.v.translate(this.px.v, this.py.v, 0);
              }
            } else {
              this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
            }
          }
          this.frameId = this.elem.globalData.frameId;
        }
        function precalculateMatrix() {
          if (!this.a.k) {
            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
            this.appliedTransformations = 1;
          } else {
            return;
          }
          if (!this.s.effectsSequence.length) {
            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
            this.appliedTransformations = 2;
          } else {
            return;
          }
          if (this.sk) {
            if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {
              this.pre.skewFromAxis(-this.sk.v, this.sa.v);
              this.appliedTransformations = 3;
            } else {
              return;
            }
          }
          if (this.r) {
            if (!this.r.effectsSequence.length) {
              this.pre.rotate(-this.r.v);
              this.appliedTransformations = 4;
            }
          } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {
            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
            this.appliedTransformations = 4;
          }
        }
        function autoOrient() {
        }
        function addDynamicProperty(prop) {
          this._addDynamicProperty(prop);
          this.elem.addDynamicProperty(prop);
          this._isDirty = true;
        }
        function TransformProperty(elem, data, container) {
          this.elem = elem;
          this.frameId = -1;
          this.propType = "transform";
          this.data = data;
          this.v = new Matrix();
          this.pre = new Matrix();
          this.appliedTransformations = 0;
          this.initDynamicPropertyContainer(container || elem);
          if (data.p && data.p.s) {
            this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);
            this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);
            if (data.p.z) {
              this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);
            }
          } else {
            this.p = PropertyFactory.getProp(elem, data.p || { k: [0, 0, 0] }, 1, 0, this);
          }
          if (data.rx) {
            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);
            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);
            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);
            if (data.or.k[0].ti) {
              var i;
              var len = data.or.k.length;
              for (i = 0; i < len; i += 1) {
                data.or.k[i].to = null;
                data.or.k[i].ti = null;
              }
            }
            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);
            this.or.sh = true;
          } else {
            this.r = PropertyFactory.getProp(elem, data.r || { k: 0 }, 0, degToRads, this);
          }
          if (data.sk) {
            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);
            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);
          }
          this.a = PropertyFactory.getProp(elem, data.a || { k: [0, 0, 0] }, 1, 0, this);
          this.s = PropertyFactory.getProp(elem, data.s || { k: [100, 100, 100] }, 1, 0.01, this);
          if (data.o) {
            this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);
          } else {
            this.o = { _mdf: false, v: 1 };
          }
          this._isDirty = true;
          if (!this.dynamicProperties.length) {
            this.getValue(true);
          }
        }
        TransformProperty.prototype = {
          applyToMatrix,
          getValue: processKeys,
          precalculateMatrix,
          autoOrient
        };
        extendPrototype([DynamicPropertyContainer], TransformProperty);
        TransformProperty.prototype.addDynamicProperty = addDynamicProperty;
        TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;
        function getTransformProperty(elem, data, container) {
          return new TransformProperty(elem, data, container);
        }
        return {
          getTransformProperty
        };
      })();
      function ShapePath() {
        this.c = false;
        this._length = 0;
        this._maxLength = 8;
        this.v = createSizedArray(this._maxLength);
        this.o = createSizedArray(this._maxLength);
        this.i = createSizedArray(this._maxLength);
      }
      ShapePath.prototype.setPathData = function(closed, len) {
        this.c = closed;
        this.setLength(len);
        var i = 0;
        while (i < len) {
          this.v[i] = pointPool.newElement();
          this.o[i] = pointPool.newElement();
          this.i[i] = pointPool.newElement();
          i += 1;
        }
      };
      ShapePath.prototype.setLength = function(len) {
        while (this._maxLength < len) {
          this.doubleArrayLength();
        }
        this._length = len;
      };
      ShapePath.prototype.doubleArrayLength = function() {
        this.v = this.v.concat(createSizedArray(this._maxLength));
        this.i = this.i.concat(createSizedArray(this._maxLength));
        this.o = this.o.concat(createSizedArray(this._maxLength));
        this._maxLength *= 2;
      };
      ShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {
        var arr;
        this._length = Math.max(this._length, pos + 1);
        if (this._length >= this._maxLength) {
          this.doubleArrayLength();
        }
        switch (type) {
          case "v":
            arr = this.v;
            break;
          case "i":
            arr = this.i;
            break;
          case "o":
            arr = this.o;
            break;
          default:
            arr = [];
            break;
        }
        if (!arr[pos] || arr[pos] && !replace) {
          arr[pos] = pointPool.newElement();
        }
        arr[pos][0] = x;
        arr[pos][1] = y;
      };
      ShapePath.prototype.setTripleAt = function(vX, vY, oX, oY, iX, iY, pos, replace) {
        this.setXYAt(vX, vY, "v", pos, replace);
        this.setXYAt(oX, oY, "o", pos, replace);
        this.setXYAt(iX, iY, "i", pos, replace);
      };
      ShapePath.prototype.reverse = function() {
        var newPath = new ShapePath();
        newPath.setPathData(this.c, this._length);
        var vertices = this.v;
        var outPoints = this.o;
        var inPoints = this.i;
        var init = 0;
        if (this.c) {
          newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);
          init = 1;
        }
        var cnt = this._length - 1;
        var len = this._length;
        var i;
        for (i = init; i < len; i += 1) {
          newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);
          cnt -= 1;
        }
        return newPath;
      };
      var ShapePropertyFactory = (function() {
        var initFrame = -999999;
        function interpolateShape(frameNum, previousValue, caching) {
          var iterationIndex = caching.lastIndex;
          var keyPropS;
          var keyPropE;
          var isHold;
          var j;
          var k;
          var jLen;
          var kLen;
          var perc;
          var vertexValue;
          var kf = this.keyframes;
          if (frameNum < kf[0].t - this.offsetTime) {
            keyPropS = kf[0].s[0];
            isHold = true;
            iterationIndex = 0;
          } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {
            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];
            isHold = true;
          } else {
            var i = iterationIndex;
            var len = kf.length - 1;
            var flag = true;
            var keyData;
            var nextKeyData;
            var keyframeMetadata;
            while (flag) {
              keyData = kf[i];
              nextKeyData = kf[i + 1];
              if (nextKeyData.t - this.offsetTime > frameNum) {
                break;
              }
              if (i < len - 1) {
                i += 1;
              } else {
                flag = false;
              }
            }
            keyframeMetadata = this.keyframesMetadata[i] || {};
            isHold = keyData.h === 1;
            iterationIndex = i;
            if (!isHold) {
              if (frameNum >= nextKeyData.t - this.offsetTime) {
                perc = 1;
              } else if (frameNum < keyData.t - this.offsetTime) {
                perc = 0;
              } else {
                var fnc;
                if (keyframeMetadata.__fnct) {
                  fnc = keyframeMetadata.__fnct;
                } else {
                  fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;
                  keyframeMetadata.__fnct = fnc;
                }
                perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));
              }
              keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];
            }
            keyPropS = keyData.s[0];
          }
          jLen = previousValue._length;
          kLen = keyPropS.i[0].length;
          caching.lastIndex = iterationIndex;
          for (j = 0; j < jLen; j += 1) {
            for (k = 0; k < kLen; k += 1) {
              vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;
              previousValue.i[j][k] = vertexValue;
              vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;
              previousValue.o[j][k] = vertexValue;
              vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;
              previousValue.v[j][k] = vertexValue;
            }
          }
        }
        function interpolateShapeCurrentTime() {
          var frameNum = this.comp.renderedFrame - this.offsetTime;
          var initTime = this.keyframes[0].t - this.offsetTime;
          var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
          var lastFrame = this._caching.lastFrame;
          if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {
            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;
            this.interpolateShape(frameNum, this.pv, this._caching);
          }
          this._caching.lastFrame = frameNum;
          return this.pv;
        }
        function resetShape() {
          this.paths = this.localShapeCollection;
        }
        function shapesEqual(shape1, shape2) {
          if (shape1._length !== shape2._length || shape1.c !== shape2.c) {
            return false;
          }
          var i;
          var len = shape1._length;
          for (i = 0; i < len; i += 1) {
            if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {
              return false;
            }
          }
          return true;
        }
        function setVValue(newPath) {
          if (!shapesEqual(this.v, newPath)) {
            this.v = shapePool.clone(newPath);
            this.localShapeCollection.releaseShapes();
            this.localShapeCollection.addShape(this.v);
            this._mdf = true;
            this.paths = this.localShapeCollection;
          }
        }
        function processEffectsSequence() {
          if (this.elem.globalData.frameId === this.frameId) {
            return;
          }
          if (!this.effectsSequence.length) {
            this._mdf = false;
            return;
          }
          if (this.lock) {
            this.setVValue(this.pv);
            return;
          }
          this.lock = true;
          this._mdf = false;
          var finalValue;
          if (this.kf) {
            finalValue = this.pv;
          } else if (this.data.ks) {
            finalValue = this.data.ks.k;
          } else {
            finalValue = this.data.pt.k;
          }
          var i;
          var len = this.effectsSequence.length;
          for (i = 0; i < len; i += 1) {
            finalValue = this.effectsSequence[i](finalValue);
          }
          this.setVValue(finalValue);
          this.lock = false;
          this.frameId = this.elem.globalData.frameId;
        }
        function ShapeProperty(elem, data, type) {
          this.propType = "shape";
          this.comp = elem.comp;
          this.container = elem;
          this.elem = elem;
          this.data = data;
          this.k = false;
          this.kf = false;
          this._mdf = false;
          var pathData = type === 3 ? data.pt.k : data.ks.k;
          this.v = shapePool.clone(pathData);
          this.pv = shapePool.clone(this.v);
          this.localShapeCollection = shapeCollectionPool.newShapeCollection();
          this.paths = this.localShapeCollection;
          this.paths.addShape(this.v);
          this.reset = resetShape;
          this.effectsSequence = [];
        }
        function addEffect(effectFunction) {
          this.effectsSequence.push(effectFunction);
          this.container.addDynamicProperty(this);
        }
        ShapeProperty.prototype.interpolateShape = interpolateShape;
        ShapeProperty.prototype.getValue = processEffectsSequence;
        ShapeProperty.prototype.setVValue = setVValue;
        ShapeProperty.prototype.addEffect = addEffect;
        function KeyframedShapeProperty(elem, data, type) {
          this.propType = "shape";
          this.comp = elem.comp;
          this.elem = elem;
          this.container = elem;
          this.offsetTime = elem.data.st;
          this.keyframes = type === 3 ? data.pt.k : data.ks.k;
          this.keyframesMetadata = [];
          this.k = true;
          this.kf = true;
          var len = this.keyframes[0].s[0].i.length;
          this.v = shapePool.newElement();
          this.v.setPathData(this.keyframes[0].s[0].c, len);
          this.pv = shapePool.clone(this.v);
          this.localShapeCollection = shapeCollectionPool.newShapeCollection();
          this.paths = this.localShapeCollection;
          this.paths.addShape(this.v);
          this.lastFrame = initFrame;
          this.reset = resetShape;
          this._caching = { lastFrame: initFrame, lastIndex: 0 };
          this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];
        }
        KeyframedShapeProperty.prototype.getValue = processEffectsSequence;
        KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;
        KeyframedShapeProperty.prototype.setVValue = setVValue;
        KeyframedShapeProperty.prototype.addEffect = addEffect;
        var EllShapeProperty = (function() {
          var cPoint = roundCorner;
          function EllShapePropertyFactory(elem, data) {
            this.v = shapePool.newElement();
            this.v.setPathData(true, 4);
            this.localShapeCollection = shapeCollectionPool.newShapeCollection();
            this.paths = this.localShapeCollection;
            this.localShapeCollection.addShape(this.v);
            this.d = data.d;
            this.elem = elem;
            this.comp = elem.comp;
            this.frameId = -1;
            this.initDynamicPropertyContainer(elem);
            this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
            this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);
            if (this.dynamicProperties.length) {
              this.k = true;
            } else {
              this.k = false;
              this.convertEllToPath();
            }
          }
          EllShapePropertyFactory.prototype = {
            reset: resetShape,
            getValue: function() {
              if (this.elem.globalData.frameId === this.frameId) {
                return;
              }
              this.frameId = this.elem.globalData.frameId;
              this.iterateDynamicProperties();
              if (this._mdf) {
                this.convertEllToPath();
              }
            },
            convertEllToPath: function() {
              var p0 = this.p.v[0];
              var p1 = this.p.v[1];
              var s0 = this.s.v[0] / 2;
              var s1 = this.s.v[1] / 2;
              var _cw = this.d !== 3;
              var _v = this.v;
              _v.v[0][0] = p0;
              _v.v[0][1] = p1 - s1;
              _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;
              _v.v[1][1] = p1;
              _v.v[2][0] = p0;
              _v.v[2][1] = p1 + s1;
              _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;
              _v.v[3][1] = p1;
              _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
              _v.i[0][1] = p1 - s1;
              _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;
              _v.i[1][1] = p1 - s1 * cPoint;
              _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
              _v.i[2][1] = p1 + s1;
              _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;
              _v.i[3][1] = p1 + s1 * cPoint;
              _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
              _v.o[0][1] = p1 - s1;
              _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;
              _v.o[1][1] = p1 + s1 * cPoint;
              _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
              _v.o[2][1] = p1 + s1;
              _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;
              _v.o[3][1] = p1 - s1 * cPoint;
            }
          };
          extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);
          return EllShapePropertyFactory;
        })();
        var StarShapeProperty = (function() {
          function StarShapePropertyFactory(elem, data) {
            this.v = shapePool.newElement();
            this.v.setPathData(true, 0);
            this.elem = elem;
            this.comp = elem.comp;
            this.data = data;
            this.frameId = -1;
            this.d = data.d;
            this.initDynamicPropertyContainer(elem);
            if (data.sy === 1) {
              this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);
              this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);
              this.convertToPath = this.convertStarToPath;
            } else {
              this.convertToPath = this.convertPolygonToPath;
            }
            this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);
            this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
            this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);
            this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);
            this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);
            this.localShapeCollection = shapeCollectionPool.newShapeCollection();
            this.localShapeCollection.addShape(this.v);
            this.paths = this.localShapeCollection;
            if (this.dynamicProperties.length) {
              this.k = true;
            } else {
              this.k = false;
              this.convertToPath();
            }
          }
          StarShapePropertyFactory.prototype = {
            reset: resetShape,
            getValue: function() {
              if (this.elem.globalData.frameId === this.frameId) {
                return;
              }
              this.frameId = this.elem.globalData.frameId;
              this.iterateDynamicProperties();
              if (this._mdf) {
                this.convertToPath();
              }
            },
            convertStarToPath: function() {
              var numPts = Math.floor(this.pt.v) * 2;
              var angle = Math.PI * 2 / numPts;
              var longFlag = true;
              var longRad = this.or.v;
              var shortRad = this.ir.v;
              var longRound = this.os.v;
              var shortRound = this.is.v;
              var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);
              var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);
              var i;
              var rad;
              var roundness;
              var perimSegment;
              var currentAng = -Math.PI / 2;
              currentAng += this.r.v;
              var dir = this.data.d === 3 ? -1 : 1;
              this.v._length = 0;
              for (i = 0; i < numPts; i += 1) {
                rad = longFlag ? longRad : shortRad;
                roundness = longFlag ? longRound : shortRound;
                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;
                var x = rad * Math.cos(currentAng);
                var y = rad * Math.sin(currentAng);
                var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);
                var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);
                x += +this.p.v[0];
                y += +this.p.v[1];
                this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);
                longFlag = !longFlag;
                currentAng += angle * dir;
              }
            },
            convertPolygonToPath: function() {
              var numPts = Math.floor(this.pt.v);
              var angle = Math.PI * 2 / numPts;
              var rad = this.or.v;
              var roundness = this.os.v;
              var perimSegment = 2 * Math.PI * rad / (numPts * 4);
              var i;
              var currentAng = -Math.PI * 0.5;
              var dir = this.data.d === 3 ? -1 : 1;
              currentAng += this.r.v;
              this.v._length = 0;
              for (i = 0; i < numPts; i += 1) {
                var x = rad * Math.cos(currentAng);
                var y = rad * Math.sin(currentAng);
                var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);
                var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);
                x += +this.p.v[0];
                y += +this.p.v[1];
                this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);
                currentAng += angle * dir;
              }
              this.paths.length = 0;
              this.paths[0] = this.v;
            }
          };
          extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);
          return StarShapePropertyFactory;
        })();
        var RectShapeProperty = (function() {
          function RectShapePropertyFactory(elem, data) {
            this.v = shapePool.newElement();
            this.v.c = true;
            this.localShapeCollection = shapeCollectionPool.newShapeCollection();
            this.localShapeCollection.addShape(this.v);
            this.paths = this.localShapeCollection;
            this.elem = elem;
            this.comp = elem.comp;
            this.frameId = -1;
            this.d = data.d;
            this.initDynamicPropertyContainer(elem);
            this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
            this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);
            this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);
            if (this.dynamicProperties.length) {
              this.k = true;
            } else {
              this.k = false;
              this.convertRectToPath();
            }
          }
          RectShapePropertyFactory.prototype = {
            convertRectToPath: function() {
              var p0 = this.p.v[0];
              var p1 = this.p.v[1];
              var v0 = this.s.v[0] / 2;
              var v1 = this.s.v[1] / 2;
              var round = bmMin(v0, v1, this.r.v);
              var cPoint = round * (1 - roundCorner);
              this.v._length = 0;
              if (this.d === 2 || this.d === 1) {
                this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);
                this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);
                if (round !== 0) {
                  this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);
                  this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);
                  this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);
                  this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);
                  this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);
                  this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);
                } else {
                  this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);
                  this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);
                }
              } else {
                this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);
                if (round !== 0) {
                  this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);
                  this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);
                  this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);
                  this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);
                  this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);
                  this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);
                  this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);
                } else {
                  this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);
                  this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);
                  this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);
                }
              }
            },
            getValue: function() {
              if (this.elem.globalData.frameId === this.frameId) {
                return;
              }
              this.frameId = this.elem.globalData.frameId;
              this.iterateDynamicProperties();
              if (this._mdf) {
                this.convertRectToPath();
              }
            },
            reset: resetShape
          };
          extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);
          return RectShapePropertyFactory;
        })();
        function getShapeProp(elem, data, type) {
          var prop;
          if (type === 3 || type === 4) {
            var dataProp = type === 3 ? data.pt : data.ks;
            var keys = dataProp.k;
            if (keys.length) {
              prop = new KeyframedShapeProperty(elem, data, type);
            } else {
              prop = new ShapeProperty(elem, data, type);
            }
          } else if (type === 5) {
            prop = new RectShapeProperty(elem, data);
          } else if (type === 6) {
            prop = new EllShapeProperty(elem, data);
          } else if (type === 7) {
            prop = new StarShapeProperty(elem, data);
          }
          if (prop.k) {
            elem.addDynamicProperty(prop);
          }
          return prop;
        }
        function getConstructorFunction() {
          return ShapeProperty;
        }
        function getKeyframedConstructorFunction() {
          return KeyframedShapeProperty;
        }
        var ob = {};
        ob.getShapeProp = getShapeProp;
        ob.getConstructorFunction = getConstructorFunction;
        ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;
        return ob;
      })();
      var ShapeModifiers = (function() {
        var ob = {};
        var modifiers = {};
        ob.registerModifier = registerModifier;
        ob.getModifier = getModifier;
        function registerModifier(nm, factory) {
          if (!modifiers[nm]) {
            modifiers[nm] = factory;
          }
        }
        function getModifier(nm, elem, data) {
          return new modifiers[nm](elem, data);
        }
        return ob;
      })();
      function ShapeModifier() {
      }
      ShapeModifier.prototype.initModifierProperties = function() {
      };
      ShapeModifier.prototype.addShapeToModifier = function() {
      };
      ShapeModifier.prototype.addShape = function(data) {
        if (!this.closed) {
          data.sh.container.addDynamicProperty(data.sh);
          var shapeData = { shape: data.sh, data, localShapeCollection: shapeCollectionPool.newShapeCollection() };
          this.shapes.push(shapeData);
          this.addShapeToModifier(shapeData);
          if (this._isAnimated) {
            data.setAsAnimated();
          }
        }
      };
      ShapeModifier.prototype.init = function(elem, data) {
        this.shapes = [];
        this.elem = elem;
        this.initDynamicPropertyContainer(elem);
        this.initModifierProperties(elem, data);
        this.frameId = initialDefaultFrame;
        this.closed = false;
        this.k = false;
        if (this.dynamicProperties.length) {
          this.k = true;
        } else {
          this.getValue(true);
        }
      };
      ShapeModifier.prototype.processKeys = function() {
        if (this.elem.globalData.frameId === this.frameId) {
          return;
        }
        this.frameId = this.elem.globalData.frameId;
        this.iterateDynamicProperties();
      };
      extendPrototype([DynamicPropertyContainer], ShapeModifier);
      function TrimModifier() {
      }
      extendPrototype([ShapeModifier], TrimModifier);
      TrimModifier.prototype.initModifierProperties = function(elem, data) {
        this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);
        this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);
        this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);
        this.sValue = 0;
        this.eValue = 0;
        this.getValue = this.processKeys;
        this.m = data.m;
        this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;
      };
      TrimModifier.prototype.addShapeToModifier = function(shapeData) {
        shapeData.pathsData = [];
      };
      TrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {
        var segments = [];
        if (e <= 1) {
          segments.push({
            s,
            e
          });
        } else if (s >= 1) {
          segments.push({
            s: s - 1,
            e: e - 1
          });
        } else {
          segments.push({
            s,
            e: 1
          });
          segments.push({
            s: 0,
            e: e - 1
          });
        }
        var shapeSegments = [];
        var i;
        var len = segments.length;
        var segmentOb;
        for (i = 0; i < len; i += 1) {
          segmentOb = segments[i];
          if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {
            var shapeS;
            var shapeE;
            if (segmentOb.s * totalModifierLength <= addedLength) {
              shapeS = 0;
            } else {
              shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;
            }
            if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {
              shapeE = 1;
            } else {
              shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;
            }
            shapeSegments.push([shapeS, shapeE]);
          }
        }
        if (!shapeSegments.length) {
          shapeSegments.push([0, 0]);
        }
        return shapeSegments;
      };
      TrimModifier.prototype.releasePathsData = function(pathsData) {
        var i;
        var len = pathsData.length;
        for (i = 0; i < len; i += 1) {
          segmentsLengthPool.release(pathsData[i]);
        }
        pathsData.length = 0;
        return pathsData;
      };
      TrimModifier.prototype.processShapes = function(_isFirstFrame) {
        var s;
        var e;
        if (this._mdf || _isFirstFrame) {
          var o = this.o.v % 360 / 360;
          if (o < 0) {
            o += 1;
          }
          if (this.s.v > 1) {
            s = 1 + o;
          } else if (this.s.v < 0) {
            s = 0 + o;
          } else {
            s = this.s.v + o;
          }
          if (this.e.v > 1) {
            e = 1 + o;
          } else if (this.e.v < 0) {
            e = 0 + o;
          } else {
            e = this.e.v + o;
          }
          if (s > e) {
            var _s = s;
            s = e;
            e = _s;
          }
          s = Math.round(s * 1e4) * 1e-4;
          e = Math.round(e * 1e4) * 1e-4;
          this.sValue = s;
          this.eValue = e;
        } else {
          s = this.sValue;
          e = this.eValue;
        }
        var shapePaths;
        var i;
        var len = this.shapes.length;
        var j;
        var jLen;
        var pathsData;
        var pathData;
        var totalShapeLength;
        var totalModifierLength = 0;
        if (e === s) {
          for (i = 0; i < len; i += 1) {
            this.shapes[i].localShapeCollection.releaseShapes();
            this.shapes[i].shape._mdf = true;
            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;
            if (this._mdf) {
              this.shapes[i].pathsData.length = 0;
            }
          }
        } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {
          var segments = [];
          var shapeData;
          var localShapeCollection;
          for (i = 0; i < len; i += 1) {
            shapeData = this.shapes[i];
            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {
              shapeData.shape.paths = shapeData.localShapeCollection;
            } else {
              shapePaths = shapeData.shape.paths;
              jLen = shapePaths._length;
              totalShapeLength = 0;
              if (!shapeData.shape._mdf && shapeData.pathsData.length) {
                totalShapeLength = shapeData.totalShapeLength;
              } else {
                pathsData = this.releasePathsData(shapeData.pathsData);
                for (j = 0; j < jLen; j += 1) {
                  pathData = bez.getSegmentsLength(shapePaths.shapes[j]);
                  pathsData.push(pathData);
                  totalShapeLength += pathData.totalLength;
                }
                shapeData.totalShapeLength = totalShapeLength;
                shapeData.pathsData = pathsData;
              }
              totalModifierLength += totalShapeLength;
              shapeData.shape._mdf = true;
            }
          }
          var shapeS = s;
          var shapeE = e;
          var addedLength = 0;
          var edges;
          for (i = len - 1; i >= 0; i -= 1) {
            shapeData = this.shapes[i];
            if (shapeData.shape._mdf) {
              localShapeCollection = shapeData.localShapeCollection;
              localShapeCollection.releaseShapes();
              if (this.m === 2 && len > 1) {
                edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);
                addedLength += shapeData.totalShapeLength;
              } else {
                edges = [[shapeS, shapeE]];
              }
              jLen = edges.length;
              for (j = 0; j < jLen; j += 1) {
                shapeS = edges[j][0];
                shapeE = edges[j][1];
                segments.length = 0;
                if (shapeE <= 1) {
                  segments.push({
                    s: shapeData.totalShapeLength * shapeS,
                    e: shapeData.totalShapeLength * shapeE
                  });
                } else if (shapeS >= 1) {
                  segments.push({
                    s: shapeData.totalShapeLength * (shapeS - 1),
                    e: shapeData.totalShapeLength * (shapeE - 1)
                  });
                } else {
                  segments.push({
                    s: shapeData.totalShapeLength * shapeS,
                    e: shapeData.totalShapeLength
                  });
                  segments.push({
                    s: 0,
                    e: shapeData.totalShapeLength * (shapeE - 1)
                  });
                }
                var newShapesData = this.addShapes(shapeData, segments[0]);
                if (segments[0].s !== segments[0].e) {
                  if (segments.length > 1) {
                    var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];
                    if (lastShapeInCollection.c) {
                      var lastShape = newShapesData.pop();
                      this.addPaths(newShapesData, localShapeCollection);
                      newShapesData = this.addShapes(shapeData, segments[1], lastShape);
                    } else {
                      this.addPaths(newShapesData, localShapeCollection);
                      newShapesData = this.addShapes(shapeData, segments[1]);
                    }
                  }
                  this.addPaths(newShapesData, localShapeCollection);
                }
              }
              shapeData.shape.paths = localShapeCollection;
            }
          }
        } else if (this._mdf) {
          for (i = 0; i < len; i += 1) {
            this.shapes[i].pathsData.length = 0;
            this.shapes[i].shape._mdf = true;
          }
        }
      };
      TrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {
        var i;
        var len = newPaths.length;
        for (i = 0; i < len; i += 1) {
          localShapeCollection.addShape(newPaths[i]);
        }
      };
      TrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {
        shapePath.setXYAt(pt2[0], pt2[1], "o", pos);
        shapePath.setXYAt(pt3[0], pt3[1], "i", pos + 1);
        if (newShape) {
          shapePath.setXYAt(pt1[0], pt1[1], "v", pos);
        }
        shapePath.setXYAt(pt4[0], pt4[1], "v", pos + 1);
      };
      TrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {
        shapePath.setXYAt(points[1], points[5], "o", pos);
        shapePath.setXYAt(points[2], points[6], "i", pos + 1);
        if (newShape) {
          shapePath.setXYAt(points[0], points[4], "v", pos);
        }
        shapePath.setXYAt(points[3], points[7], "v", pos + 1);
      };
      TrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {
        var pathsData = shapeData.pathsData;
        var shapePaths = shapeData.shape.paths.shapes;
        var i;
        var len = shapeData.shape.paths._length;
        var j;
        var jLen;
        var addedLength = 0;
        var currentLengthData;
        var segmentCount;
        var lengths;
        var segment;
        var shapes = [];
        var initPos;
        var newShape = true;
        if (!shapePath) {
          shapePath = shapePool.newElement();
          segmentCount = 0;
          initPos = 0;
        } else {
          segmentCount = shapePath._length;
          initPos = shapePath._length;
        }
        shapes.push(shapePath);
        for (i = 0; i < len; i += 1) {
          lengths = pathsData[i].lengths;
          shapePath.c = shapePaths[i].c;
          jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;
          for (j = 1; j < jLen; j += 1) {
            currentLengthData = lengths[j - 1];
            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {
              addedLength += currentLengthData.addedLength;
              shapePath.c = false;
            } else if (addedLength > shapeSegment.e) {
              shapePath.c = false;
              break;
            } else {
              if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {
                this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);
                newShape = false;
              } else {
                segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);
                this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
                newShape = false;
                shapePath.c = false;
              }
              addedLength += currentLengthData.addedLength;
              segmentCount += 1;
            }
          }
          if (shapePaths[i].c && lengths.length) {
            currentLengthData = lengths[j - 1];
            if (addedLength <= shapeSegment.e) {
              var segmentLength = lengths[j - 1].addedLength;
              if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {
                this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);
                newShape = false;
              } else {
                segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);
                this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
                newShape = false;
                shapePath.c = false;
              }
            } else {
              shapePath.c = false;
            }
            addedLength += currentLengthData.addedLength;
            segmentCount += 1;
          }
          if (shapePath._length) {
            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], "i", initPos);
            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], "o", shapePath._length - 1);
          }
          if (addedLength > shapeSegment.e) {
            break;
          }
          if (i < len - 1) {
            shapePath = shapePool.newElement();
            newShape = true;
            shapes.push(shapePath);
            segmentCount = 0;
          }
        }
        return shapes;
      };
      ShapeModifiers.registerModifier("tm", TrimModifier);
      function RoundCornersModifier() {
      }
      extendPrototype([ShapeModifier], RoundCornersModifier);
      RoundCornersModifier.prototype.initModifierProperties = function(elem, data) {
        this.getValue = this.processKeys;
        this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);
        this._isAnimated = !!this.rd.effectsSequence.length;
      };
      RoundCornersModifier.prototype.processPath = function(path, round) {
        var clonedPath = shapePool.newElement();
        clonedPath.c = path.c;
        var i;
        var len = path._length;
        var currentV;
        var currentI;
        var currentO;
        var closerV;
        var distance;
        var newPosPerc;
        var index2 = 0;
        var vX;
        var vY;
        var oX;
        var oY;
        var iX;
        var iY;
        for (i = 0; i < len; i += 1) {
          currentV = path.v[i];
          currentO = path.o[i];
          currentI = path.i[i];
          if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {
            if ((i === 0 || i === len - 1) && !path.c) {
              clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index2);
              index2 += 1;
            } else {
              if (i === 0) {
                closerV = path.v[len - 1];
              } else {
                closerV = path.v[i - 1];
              }
              distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));
              newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;
              iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
              vX = iX;
              iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;
              vY = iY;
              oX = vX - (vX - currentV[0]) * roundCorner;
              oY = vY - (vY - currentV[1]) * roundCorner;
              clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);
              index2 += 1;
              if (i === len - 1) {
                closerV = path.v[0];
              } else {
                closerV = path.v[i + 1];
              }
              distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));
              newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;
              oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
              vX = oX;
              oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;
              vY = oY;
              iX = vX - (vX - currentV[0]) * roundCorner;
              iY = vY - (vY - currentV[1]) * roundCorner;
              clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);
              index2 += 1;
            }
          } else {
            clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index2);
            index2 += 1;
          }
        }
        return clonedPath;
      };
      RoundCornersModifier.prototype.processShapes = function(_isFirstFrame) {
        var shapePaths;
        var i;
        var len = this.shapes.length;
        var j;
        var jLen;
        var rd = this.rd.v;
        if (rd !== 0) {
          var shapeData;
          var localShapeCollection;
          for (i = 0; i < len; i += 1) {
            shapeData = this.shapes[i];
            localShapeCollection = shapeData.localShapeCollection;
            if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
              localShapeCollection.releaseShapes();
              shapeData.shape._mdf = true;
              shapePaths = shapeData.shape.paths.shapes;
              jLen = shapeData.shape.paths._length;
              for (j = 0; j < jLen; j += 1) {
                localShapeCollection.addShape(this.processPath(shapePaths[j], rd));
              }
            }
            shapeData.shape.paths = shapeData.localShapeCollection;
          }
        }
        if (!this.dynamicProperties.length) {
          this._mdf = false;
        }
      };
      ShapeModifiers.registerModifier("rd", RoundCornersModifier);
      function PuckerAndBloatModifier() {
      }
      extendPrototype([ShapeModifier], PuckerAndBloatModifier);
      PuckerAndBloatModifier.prototype.initModifierProperties = function(elem, data) {
        this.getValue = this.processKeys;
        this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);
        this._isAnimated = !!this.amount.effectsSequence.length;
      };
      PuckerAndBloatModifier.prototype.processPath = function(path, amount) {
        var percent = amount / 100;
        var centerPoint = [0, 0];
        var pathLength = path._length;
        var i = 0;
        for (i = 0; i < pathLength; i += 1) {
          centerPoint[0] += path.v[i][0];
          centerPoint[1] += path.v[i][1];
        }
        centerPoint[0] /= pathLength;
        centerPoint[1] /= pathLength;
        var clonedPath = shapePool.newElement();
        clonedPath.c = path.c;
        var vX;
        var vY;
        var oX;
        var oY;
        var iX;
        var iY;
        for (i = 0; i < pathLength; i += 1) {
          vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;
          vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;
          oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;
          oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;
          iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;
          iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;
          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);
        }
        return clonedPath;
      };
      PuckerAndBloatModifier.prototype.processShapes = function(_isFirstFrame) {
        var shapePaths;
        var i;
        var len = this.shapes.length;
        var j;
        var jLen;
        var amount = this.amount.v;
        if (amount !== 0) {
          var shapeData;
          var localShapeCollection;
          for (i = 0; i < len; i += 1) {
            shapeData = this.shapes[i];
            localShapeCollection = shapeData.localShapeCollection;
            if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
              localShapeCollection.releaseShapes();
              shapeData.shape._mdf = true;
              shapePaths = shapeData.shape.paths.shapes;
              jLen = shapeData.shape.paths._length;
              for (j = 0; j < jLen; j += 1) {
                localShapeCollection.addShape(this.processPath(shapePaths[j], amount));
              }
            }
            shapeData.shape.paths = shapeData.localShapeCollection;
          }
        }
        if (!this.dynamicProperties.length) {
          this._mdf = false;
        }
      };
      ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier);
      function RepeaterModifier() {
      }
      extendPrototype([ShapeModifier], RepeaterModifier);
      RepeaterModifier.prototype.initModifierProperties = function(elem, data) {
        this.getValue = this.processKeys;
        this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);
        this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);
        this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);
        this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);
        this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);
        this.data = data;
        if (!this.dynamicProperties.length) {
          this.getValue(true);
        }
        this._isAnimated = !!this.dynamicProperties.length;
        this.pMatrix = new Matrix();
        this.rMatrix = new Matrix();
        this.sMatrix = new Matrix();
        this.tMatrix = new Matrix();
        this.matrix = new Matrix();
      };
      RepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv) {
        var dir = inv ? -1 : 1;
        var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);
        var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);
        pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);
        rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);
        rMatrix.rotate(-transform.r.v * dir * perc);
        rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);
        sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);
        sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);
        sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);
      };
      RepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {
        this.elem = elem;
        this.arr = arr;
        this.pos = pos;
        this.elemsData = elemsData;
        this._currentCopies = 0;
        this._elements = [];
        this._groups = [];
        this.frameId = -1;
        this.initDynamicPropertyContainer(elem);
        this.initModifierProperties(elem, arr[pos]);
        while (pos > 0) {
          pos -= 1;
          this._elements.unshift(arr[pos]);
        }
        if (this.dynamicProperties.length) {
          this.k = true;
        } else {
          this.getValue(true);
        }
      };
      RepeaterModifier.prototype.resetElements = function(elements) {
        var i;
        var len = elements.length;
        for (i = 0; i < len; i += 1) {
          elements[i]._processed = false;
          if (elements[i].ty === "gr") {
            this.resetElements(elements[i].it);
          }
        }
      };
      RepeaterModifier.prototype.cloneElements = function(elements) {
        var newElements = JSON.parse(JSON.stringify(elements));
        this.resetElements(newElements);
        return newElements;
      };
      RepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {
        var i;
        var len = elements.length;
        for (i = 0; i < len; i += 1) {
          elements[i]._render = renderFlag;
          if (elements[i].ty === "gr") {
            this.changeGroupRender(elements[i].it, renderFlag);
          }
        }
      };
      RepeaterModifier.prototype.processShapes = function(_isFirstFrame) {
        var items;
        var itemsTransform;
        var i;
        var dir;
        var cont;
        var hasReloaded = false;
        if (this._mdf || _isFirstFrame) {
          var copies = Math.ceil(this.c.v);
          if (this._groups.length < copies) {
            while (this._groups.length < copies) {
              var group = {
                it: this.cloneElements(this._elements),
                ty: "gr"
              };
              group.it.push({
                a: { a: 0, ix: 1, k: [0, 0] },
                nm: "Transform",
                o: { a: 0, ix: 7, k: 100 },
                p: { a: 0, ix: 2, k: [0, 0] },
                r: { a: 1, ix: 6, k: [{ s: 0, e: 0, t: 0 }, { s: 0, e: 0, t: 1 }] },
                s: { a: 0, ix: 3, k: [100, 100] },
                sa: { a: 0, ix: 5, k: 0 },
                sk: { a: 0, ix: 4, k: 0 },
                ty: "tr"
              });
              this.arr.splice(0, 0, group);
              this._groups.splice(0, 0, group);
              this._currentCopies += 1;
            }
            this.elem.reloadShapes();
            hasReloaded = true;
          }
          cont = 0;
          var renderFlag;
          for (i = 0; i <= this._groups.length - 1; i += 1) {
            renderFlag = cont < copies;
            this._groups[i]._render = renderFlag;
            this.changeGroupRender(this._groups[i].it, renderFlag);
            if (!renderFlag) {
              var elems = this.elemsData[i].it;
              var transformData = elems[elems.length - 1];
              if (transformData.transform.op.v !== 0) {
                transformData.transform.op._mdf = true;
                transformData.transform.op.v = 0;
              } else {
                transformData.transform.op._mdf = false;
              }
            }
            cont += 1;
          }
          this._currentCopies = copies;
          var offset = this.o.v;
          var offsetModulo = offset % 1;
          var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);
          var pProps = this.pMatrix.props;
          var rProps = this.rMatrix.props;
          var sProps = this.sMatrix.props;
          this.pMatrix.reset();
          this.rMatrix.reset();
          this.sMatrix.reset();
          this.tMatrix.reset();
          this.matrix.reset();
          var iteration = 0;
          if (offset > 0) {
            while (iteration < roundOffset) {
              this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
              iteration += 1;
            }
            if (offsetModulo) {
              this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);
              iteration += offsetModulo;
            }
          } else if (offset < 0) {
            while (iteration > roundOffset) {
              this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);
              iteration -= 1;
            }
            if (offsetModulo) {
              this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);
              iteration -= offsetModulo;
            }
          }
          i = this.data.m === 1 ? 0 : this._currentCopies - 1;
          dir = this.data.m === 1 ? 1 : -1;
          cont = this._currentCopies;
          var j;
          var jLen;
          while (cont) {
            items = this.elemsData[i].it;
            itemsTransform = items[items.length - 1].transform.mProps.v.props;
            jLen = itemsTransform.length;
            items[items.length - 1].transform.mProps._mdf = true;
            items[items.length - 1].transform.op._mdf = true;
            items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));
            if (iteration !== 0) {
              if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
              }
              this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);
              this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);
              this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);
              for (j = 0; j < jLen; j += 1) {
                itemsTransform[j] = this.matrix.props[j];
              }
              this.matrix.reset();
            } else {
              this.matrix.reset();
              for (j = 0; j < jLen; j += 1) {
                itemsTransform[j] = this.matrix.props[j];
              }
            }
            iteration += 1;
            cont -= 1;
            i += dir;
          }
        } else {
          cont = this._currentCopies;
          i = 0;
          dir = 1;
          while (cont) {
            items = this.elemsData[i].it;
            itemsTransform = items[items.length - 1].transform.mProps.v.props;
            items[items.length - 1].transform.mProps._mdf = false;
            items[items.length - 1].transform.op._mdf = false;
            cont -= 1;
            i += dir;
          }
        }
        return hasReloaded;
      };
      RepeaterModifier.prototype.addShape = function() {
      };
      ShapeModifiers.registerModifier("rp", RepeaterModifier);
      function ShapeCollection() {
        this._length = 0;
        this._maxLength = 4;
        this.shapes = createSizedArray(this._maxLength);
      }
      ShapeCollection.prototype.addShape = function(shapeData) {
        if (this._length === this._maxLength) {
          this.shapes = this.shapes.concat(createSizedArray(this._maxLength));
          this._maxLength *= 2;
        }
        this.shapes[this._length] = shapeData;
        this._length += 1;
      };
      ShapeCollection.prototype.releaseShapes = function() {
        var i;
        for (i = 0; i < this._length; i += 1) {
          shapePool.release(this.shapes[i]);
        }
        this._length = 0;
      };
      function DashProperty(elem, data, renderer2, container) {
        this.elem = elem;
        this.frameId = -1;
        this.dataProps = createSizedArray(data.length);
        this.renderer = renderer2;
        this.k = false;
        this.dashStr = "";
        this.dashArray = createTypedArray("float32", data.length ? data.length - 1 : 0);
        this.dashoffset = createTypedArray("float32", 1);
        this.initDynamicPropertyContainer(container);
        var i;
        var len = data.length || 0;
        var prop;
        for (i = 0; i < len; i += 1) {
          prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);
          this.k = prop.k || this.k;
          this.dataProps[i] = { n: data[i].n, p: prop };
        }
        if (!this.k) {
          this.getValue(true);
        }
        this._isAnimated = this.k;
      }
      DashProperty.prototype.getValue = function(forceRender) {
        if (this.elem.globalData.frameId === this.frameId && !forceRender) {
          return;
        }
        this.frameId = this.elem.globalData.frameId;
        this.iterateDynamicProperties();
        this._mdf = this._mdf || forceRender;
        if (this._mdf) {
          var i = 0;
          var len = this.dataProps.length;
          if (this.renderer === "svg") {
            this.dashStr = "";
          }
          for (i = 0; i < len; i += 1) {
            if (this.dataProps[i].n !== "o") {
              if (this.renderer === "svg") {
                this.dashStr += " " + this.dataProps[i].p.v;
              } else {
                this.dashArray[i] = this.dataProps[i].p.v;
              }
            } else {
              this.dashoffset[0] = this.dataProps[i].p.v;
            }
          }
        }
      };
      extendPrototype([DynamicPropertyContainer], DashProperty);
      function GradientProperty(elem, data, container) {
        this.data = data;
        this.c = createTypedArray("uint8c", data.p * 4);
        var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;
        this.o = createTypedArray("float32", cLength);
        this._cmdf = false;
        this._omdf = false;
        this._collapsable = this.checkCollapsable();
        this._hasOpacity = cLength;
        this.initDynamicPropertyContainer(container);
        this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);
        this.k = this.prop.k;
        this.getValue(true);
      }
      GradientProperty.prototype.comparePoints = function(values, points) {
        var i = 0;
        var len = this.o.length / 2;
        var diff;
        while (i < len) {
          diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);
          if (diff > 0.01) {
            return false;
          }
          i += 1;
        }
        return true;
      };
      GradientProperty.prototype.checkCollapsable = function() {
        if (this.o.length / 2 !== this.c.length / 4) {
          return false;
        }
        if (this.data.k.k[0].s) {
          var i = 0;
          var len = this.data.k.k.length;
          while (i < len) {
            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {
              return false;
            }
            i += 1;
          }
        } else if (!this.comparePoints(this.data.k.k, this.data.p)) {
          return false;
        }
        return true;
      };
      GradientProperty.prototype.getValue = function(forceRender) {
        this.prop.getValue();
        this._mdf = false;
        this._cmdf = false;
        this._omdf = false;
        if (this.prop._mdf || forceRender) {
          var i;
          var len = this.data.p * 4;
          var mult;
          var val;
          for (i = 0; i < len; i += 1) {
            mult = i % 4 === 0 ? 100 : 255;
            val = Math.round(this.prop.v[i] * mult);
            if (this.c[i] !== val) {
              this.c[i] = val;
              this._cmdf = !forceRender;
            }
          }
          if (this.o.length) {
            len = this.prop.v.length;
            for (i = this.data.p * 4; i < len; i += 1) {
              mult = i % 2 === 0 ? 100 : 1;
              val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];
              if (this.o[i - this.data.p * 4] !== val) {
                this.o[i - this.data.p * 4] = val;
                this._omdf = !forceRender;
              }
            }
          }
          this._mdf = !forceRender;
        }
      };
      extendPrototype([DynamicPropertyContainer], GradientProperty);
      var buildShapeString = function(pathNodes, length, closed, mat) {
        if (length === 0) {
          return "";
        }
        var _o = pathNodes.o;
        var _i = pathNodes.i;
        var _v = pathNodes.v;
        var i;
        var shapeString = " M" + mat.applyToPointStringified(_v[0][0], _v[0][1]);
        for (i = 1; i < length; i += 1) {
          shapeString += " C" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + " " + mat.applyToPointStringified(_i[i][0], _i[i][1]) + " " + mat.applyToPointStringified(_v[i][0], _v[i][1]);
        }
        if (closed && length) {
          shapeString += " C" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + " " + mat.applyToPointStringified(_i[0][0], _i[0][1]) + " " + mat.applyToPointStringified(_v[0][0], _v[0][1]);
          shapeString += "z";
        }
        return shapeString;
      };
      var audioControllerFactory = (function() {
        function AudioController(audioFactory) {
          this.audios = [];
          this.audioFactory = audioFactory;
          this._volume = 1;
          this._isMuted = false;
        }
        AudioController.prototype = {
          addAudio: function(audio) {
            this.audios.push(audio);
          },
          pause: function() {
            var i;
            var len = this.audios.length;
            for (i = 0; i < len; i += 1) {
              this.audios[i].pause();
            }
          },
          resume: function() {
            var i;
            var len = this.audios.length;
            for (i = 0; i < len; i += 1) {
              this.audios[i].resume();
            }
          },
          setRate: function(rateValue) {
            var i;
            var len = this.audios.length;
            for (i = 0; i < len; i += 1) {
              this.audios[i].setRate(rateValue);
            }
          },
          createAudio: function(assetPath) {
            if (this.audioFactory) {
              return this.audioFactory(assetPath);
            }
            if (Howl) {
              return new Howl({
                src: [assetPath]
              });
            }
            return {
              isPlaying: false,
              play: function() {
                this.isPlaying = true;
              },
              seek: function() {
                this.isPlaying = false;
              },
              playing: function() {
              },
              rate: function() {
              },
              setVolume: function() {
              }
            };
          },
          setAudioFactory: function(audioFactory) {
            this.audioFactory = audioFactory;
          },
          setVolume: function(value) {
            this._volume = value;
            this._updateVolume();
          },
          mute: function() {
            this._isMuted = true;
            this._updateVolume();
          },
          unmute: function() {
            this._isMuted = false;
            this._updateVolume();
          },
          getVolume: function() {
            return this._volume;
          },
          _updateVolume: function() {
            var i;
            var len = this.audios.length;
            for (i = 0; i < len; i += 1) {
              this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));
            }
          }
        };
        return function() {
          return new AudioController();
        };
      })();
      var ImagePreloader = (function() {
        var proxyImage = (function() {
          var canvas = createTag("canvas");
          canvas.width = 1;
          canvas.height = 1;
          var ctx = canvas.getContext("2d");
          ctx.fillStyle = "rgba(0,0,0,0)";
          ctx.fillRect(0, 0, 1, 1);
          return canvas;
        })();
        function imageLoaded() {
          this.loadedAssets += 1;
          if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {
            if (this.imagesLoadedCb) {
              this.imagesLoadedCb(null);
            }
          }
        }
        function footageLoaded() {
          this.loadedFootagesCount += 1;
          if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {
            if (this.imagesLoadedCb) {
              this.imagesLoadedCb(null);
            }
          }
        }
        function getAssetsPath(assetData, assetsPath, originalPath) {
          var path = "";
          if (assetData.e) {
            path = assetData.p;
          } else if (assetsPath) {
            var imagePath = assetData.p;
            if (imagePath.indexOf("images/") !== -1) {
              imagePath = imagePath.split("/")[1];
            }
            path = assetsPath + imagePath;
          } else {
            path = originalPath;
            path += assetData.u ? assetData.u : "";
            path += assetData.p;
          }
          return path;
        }
        function testImageLoaded(img) {
          var _count = 0;
          var intervalId = setInterval((function() {
            var box = img.getBBox();
            if (box.width || _count > 500) {
              this._imageLoaded();
              clearInterval(intervalId);
            }
            _count += 1;
          }).bind(this), 50);
        }
        function createImageData(assetData) {
          var path = getAssetsPath(assetData, this.assetsPath, this.path);
          var img = createNS("image");
          if (isSafari) {
            this.testImageLoaded(img);
          } else {
            img.addEventListener("load", this._imageLoaded, false);
          }
          img.addEventListener("error", (function() {
            ob.img = proxyImage;
            this._imageLoaded();
          }).bind(this), false);
          img.setAttributeNS("http://www.w3.org/1999/xlink", "href", path);
          if (this._elementHelper.append) {
            this._elementHelper.append(img);
          } else {
            this._elementHelper.appendChild(img);
          }
          var ob = {
            img,
            assetData
          };
          return ob;
        }
        function createImgData(assetData) {
          var path = getAssetsPath(assetData, this.assetsPath, this.path);
          var img = createTag("img");
          img.crossOrigin = "anonymous";
          img.addEventListener("load", this._imageLoaded, false);
          img.addEventListener("error", (function() {
            ob.img = proxyImage;
            this._imageLoaded();
          }).bind(this), false);
          img.src = path;
          var ob = {
            img,
            assetData
          };
          return ob;
        }
        function createFootageData(data) {
          var ob = {
            assetData: data
          };
          var path = getAssetsPath(data, this.assetsPath, this.path);
          dataManager.loadData(path, (function(footageData) {
            ob.img = footageData;
            this._footageLoaded();
          }).bind(this), (function() {
            ob.img = {};
            this._footageLoaded();
          }).bind(this));
          return ob;
        }
        function loadAssets(assets, cb) {
          this.imagesLoadedCb = cb;
          var i;
          var len = assets.length;
          for (i = 0; i < len; i += 1) {
            if (!assets[i].layers) {
              if (!assets[i].t || assets[i].t === "seq") {
                this.totalImages += 1;
                this.images.push(this._createImageData(assets[i]));
              } else if (assets[i].t === 3) {
                this.totalFootages += 1;
                this.images.push(this.createFootageData(assets[i]));
              }
            }
          }
        }
        function setPath(path) {
          this.path = path || "";
        }
        function setAssetsPath(path) {
          this.assetsPath = path || "";
        }
        function getAsset(assetData) {
          var i = 0;
          var len = this.images.length;
          while (i < len) {
            if (this.images[i].assetData === assetData) {
              return this.images[i].img;
            }
            i += 1;
          }
          return null;
        }
        function destroy() {
          this.imagesLoadedCb = null;
          this.images.length = 0;
        }
        function loadedImages() {
          return this.totalImages === this.loadedAssets;
        }
        function loadedFootages() {
          return this.totalFootages === this.loadedFootagesCount;
        }
        function setCacheType(type, elementHelper) {
          if (type === "svg") {
            this._elementHelper = elementHelper;
            this._createImageData = this.createImageData.bind(this);
          } else {
            this._createImageData = this.createImgData.bind(this);
          }
        }
        function ImagePreloaderFactory() {
          this._imageLoaded = imageLoaded.bind(this);
          this._footageLoaded = footageLoaded.bind(this);
          this.testImageLoaded = testImageLoaded.bind(this);
          this.createFootageData = createFootageData.bind(this);
          this.assetsPath = "";
          this.path = "";
          this.totalImages = 0;
          this.totalFootages = 0;
          this.loadedAssets = 0;
          this.loadedFootagesCount = 0;
          this.imagesLoadedCb = null;
          this.images = [];
        }
        ImagePreloaderFactory.prototype = {
          loadAssets,
          setAssetsPath,
          setPath,
          loadedImages,
          loadedFootages,
          destroy,
          getAsset,
          createImgData,
          createImageData,
          imageLoaded,
          footageLoaded,
          setCacheType
        };
        return ImagePreloaderFactory;
      })();
      var featureSupport = (function() {
        var ob = {
          maskType: true
        };
        if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) {
          ob.maskType = false;
        }
        return ob;
      })();
      var filtersFactory = (function() {
        var ob = {};
        ob.createFilter = createFilter;
        ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;
        function createFilter(filId, skipCoordinates) {
          var fil = createNS("filter");
          fil.setAttribute("id", filId);
          if (skipCoordinates !== true) {
            fil.setAttribute("filterUnits", "objectBoundingBox");
            fil.setAttribute("x", "0%");
            fil.setAttribute("y", "0%");
            fil.setAttribute("width", "100%");
            fil.setAttribute("height", "100%");
          }
          return fil;
        }
        function createAlphaToLuminanceFilter() {
          var feColorMatrix = createNS("feColorMatrix");
          feColorMatrix.setAttribute("type", "matrix");
          feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
          feColorMatrix.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1");
          return feColorMatrix;
        }
        return ob;
      })();
      function TextAnimatorProperty(textData, renderType, elem) {
        this._isFirstFrame = true;
        this._hasMaskedPath = false;
        this._frameId = -1;
        this._textData = textData;
        this._renderType = renderType;
        this._elem = elem;
        this._animatorsData = createSizedArray(this._textData.a.length);
        this._pathData = {};
        this._moreOptions = {
          alignment: {}
        };
        this.renderedLetters = [];
        this.lettersChangedFlag = false;
        this.initDynamicPropertyContainer(elem);
      }
      TextAnimatorProperty.prototype.searchProperties = function() {
        var i;
        var len = this._textData.a.length;
        var animatorProps;
        var getProp = PropertyFactory.getProp;
        for (i = 0; i < len; i += 1) {
          animatorProps = this._textData.a[i];
          this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);
        }
        if (this._textData.p && "m" in this._textData.p) {
          this._pathData = {
            a: getProp(this._elem, this._textData.p.a, 0, 0, this),
            f: getProp(this._elem, this._textData.p.f, 0, 0, this),
            l: getProp(this._elem, this._textData.p.l, 0, 0, this),
            r: getProp(this._elem, this._textData.p.r, 0, 0, this),
            p: getProp(this._elem, this._textData.p.p, 0, 0, this),
            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
          };
          this._hasMaskedPath = true;
        } else {
          this._hasMaskedPath = false;
        }
        this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);
      };
      TextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag) {
        this.lettersChangedFlag = lettersChangedFlag;
        if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {
          return;
        }
        this._isFirstFrame = false;
        var alignment = this._moreOptions.alignment.v;
        var animators = this._animatorsData;
        var textData = this._textData;
        var matrixHelper = this.mHelper;
        var renderType = this._renderType;
        var renderedLettersCount = this.renderedLetters.length;
        var xPos;
        var yPos;
        var i;
        var len;
        var letters = documentData.l;
        var pathInfo;
        var currentLength;
        var currentPoint;
        var segmentLength;
        var flag;
        var pointInd;
        var segmentInd;
        var prevPoint;
        var points;
        var segments;
        var partialLength;
        var totalLength;
        var perc;
        var tanAngle;
        var mask;
        if (this._hasMaskedPath) {
          mask = this._pathData.m;
          if (!this._pathData.n || this._pathData._mdf) {
            var paths = mask.v;
            if (this._pathData.r.v) {
              paths = paths.reverse();
            }
            pathInfo = {
              tLength: 0,
              segments: []
            };
            len = paths._length - 1;
            var bezierData;
            totalLength = 0;
            for (i = 0; i < len; i += 1) {
              bezierData = bez.buildBezierData(
                paths.v[i],
                paths.v[i + 1],
                [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],
                [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]
              );
              pathInfo.tLength += bezierData.segmentLength;
              pathInfo.segments.push(bezierData);
              totalLength += bezierData.segmentLength;
            }
            i = len;
            if (mask.v.c) {
              bezierData = bez.buildBezierData(
                paths.v[i],
                paths.v[0],
                [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],
                [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]
              );
              pathInfo.tLength += bezierData.segmentLength;
              pathInfo.segments.push(bezierData);
              totalLength += bezierData.segmentLength;
            }
            this._pathData.pi = pathInfo;
          }
          pathInfo = this._pathData.pi;
          currentLength = this._pathData.f.v;
          segmentInd = 0;
          pointInd = 1;
          segmentLength = 0;
          flag = true;
          segments = pathInfo.segments;
          if (currentLength < 0 && mask.v.c) {
            if (pathInfo.tLength < Math.abs(currentLength)) {
              currentLength = -Math.abs(currentLength) % pathInfo.tLength;
            }
            segmentInd = segments.length - 1;
            points = segments[segmentInd].points;
            pointInd = points.length - 1;
            while (currentLength < 0) {
              currentLength += points[pointInd].partialLength;
              pointInd -= 1;
              if (pointInd < 0) {
                segmentInd -= 1;
                points = segments[segmentInd].points;
                pointInd = points.length - 1;
              }
            }
          }
          points = segments[segmentInd].points;
          prevPoint = points[pointInd - 1];
          currentPoint = points[pointInd];
          partialLength = currentPoint.partialLength;
        }
        len = letters.length;
        xPos = 0;
        yPos = 0;
        var yOff = documentData.finalSize * 1.2 * 0.714;
        var firstLine = true;
        var animatorProps;
        var animatorSelector;
        var j;
        var jLen;
        var letterValue;
        jLen = animators.length;
        var mult;
        var ind = -1;
        var offf;
        var xPathPos;
        var yPathPos;
        var initPathPos = currentLength;
        var initSegmentInd = segmentInd;
        var initPointInd = pointInd;
        var currentLine = -1;
        var elemOpacity;
        var sc;
        var sw;
        var fc;
        var k;
        var letterSw;
        var letterSc;
        var letterFc;
        var letterM = "";
        var letterP = this.defaultPropsArray;
        var letterO;
        if (documentData.j === 2 || documentData.j === 1) {
          var animatorJustifyOffset = 0;
          var animatorFirstCharOffset = 0;
          var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;
          var lastIndex = 0;
          var isNewLine = true;
          for (i = 0; i < len; i += 1) {
            if (letters[i].n) {
              if (animatorJustifyOffset) {
                animatorJustifyOffset += animatorFirstCharOffset;
              }
              while (lastIndex < i) {
                letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
                lastIndex += 1;
              }
              animatorJustifyOffset = 0;
              isNewLine = true;
            } else {
              for (j = 0; j < jLen; j += 1) {
                animatorProps = animators[j].a;
                if (animatorProps.t.propType) {
                  if (isNewLine && documentData.j === 2) {
                    animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;
                  }
                  animatorSelector = animators[j].s;
                  mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                  if (mult.length) {
                    animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;
                  } else {
                    animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;
                  }
                }
              }
              isNewLine = false;
            }
          }
          if (animatorJustifyOffset) {
            animatorJustifyOffset += animatorFirstCharOffset;
          }
          while (lastIndex < i) {
            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
            lastIndex += 1;
          }
        }
        for (i = 0; i < len; i += 1) {
          matrixHelper.reset();
          elemOpacity = 1;
          if (letters[i].n) {
            xPos = 0;
            yPos += documentData.yOffset;
            yPos += firstLine ? 1 : 0;
            currentLength = initPathPos;
            firstLine = false;
            if (this._hasMaskedPath) {
              segmentInd = initSegmentInd;
              pointInd = initPointInd;
              points = segments[segmentInd].points;
              prevPoint = points[pointInd - 1];
              currentPoint = points[pointInd];
              partialLength = currentPoint.partialLength;
              segmentLength = 0;
            }
            letterM = "";
            letterFc = "";
            letterSw = "";
            letterO = "";
            letterP = this.defaultPropsArray;
          } else {
            if (this._hasMaskedPath) {
              if (currentLine !== letters[i].line) {
                switch (documentData.j) {
                  case 1:
                    currentLength += totalLength - documentData.lineWidths[letters[i].line];
                    break;
                  case 2:
                    currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;
                    break;
                  default:
                    break;
                }
                currentLine = letters[i].line;
              }
              if (ind !== letters[i].ind) {
                if (letters[ind]) {
                  currentLength += letters[ind].extra;
                }
                currentLength += letters[i].an / 2;
                ind = letters[i].ind;
              }
              currentLength += alignment[0] * letters[i].an * 5e-3;
              var animatorOffset = 0;
              for (j = 0; j < jLen; j += 1) {
                animatorProps = animators[j].a;
                if (animatorProps.p.propType) {
                  animatorSelector = animators[j].s;
                  mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                  if (mult.length) {
                    animatorOffset += animatorProps.p.v[0] * mult[0];
                  } else {
                    animatorOffset += animatorProps.p.v[0] * mult;
                  }
                }
                if (animatorProps.a.propType) {
                  animatorSelector = animators[j].s;
                  mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                  if (mult.length) {
                    animatorOffset += animatorProps.a.v[0] * mult[0];
                  } else {
                    animatorOffset += animatorProps.a.v[0] * mult;
                  }
                }
              }
              flag = true;
              if (this._pathData.a.v) {
                currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);
                currentLength += this._pathData.f.v;
              }
              while (flag) {
                if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {
                  perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;
                  xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;
                  yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;
                  matrixHelper.translate(-alignment[0] * letters[i].an * 5e-3, -(alignment[1] * yOff) * 0.01);
                  flag = false;
                } else if (points) {
                  segmentLength += currentPoint.partialLength;
                  pointInd += 1;
                  if (pointInd >= points.length) {
                    pointInd = 0;
                    segmentInd += 1;
                    if (!segments[segmentInd]) {
                      if (mask.v.c) {
                        pointInd = 0;
                        segmentInd = 0;
                        points = segments[segmentInd].points;
                      } else {
                        segmentLength -= currentPoint.partialLength;
                        points = null;
                      }
                    } else {
                      points = segments[segmentInd].points;
                    }
                  }
                  if (points) {
                    prevPoint = currentPoint;
                    currentPoint = points[pointInd];
                    partialLength = currentPoint.partialLength;
                  }
                }
              }
              offf = letters[i].an / 2 - letters[i].add;
              matrixHelper.translate(-offf, 0, 0);
            } else {
              offf = letters[i].an / 2 - letters[i].add;
              matrixHelper.translate(-offf, 0, 0);
              matrixHelper.translate(-alignment[0] * letters[i].an * 5e-3, -alignment[1] * yOff * 0.01, 0);
            }
            for (j = 0; j < jLen; j += 1) {
              animatorProps = animators[j].a;
              if (animatorProps.t.propType) {
                animatorSelector = animators[j].s;
                mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                if (xPos !== 0 || documentData.j !== 0) {
                  if (this._hasMaskedPath) {
                    if (mult.length) {
                      currentLength += animatorProps.t.v * mult[0];
                    } else {
                      currentLength += animatorProps.t.v * mult;
                    }
                  } else if (mult.length) {
                    xPos += animatorProps.t.v * mult[0];
                  } else {
                    xPos += animatorProps.t.v * mult;
                  }
                }
              }
            }
            if (documentData.strokeWidthAnim) {
              sw = documentData.sw || 0;
            }
            if (documentData.strokeColorAnim) {
              if (documentData.sc) {
                sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];
              } else {
                sc = [0, 0, 0];
              }
            }
            if (documentData.fillColorAnim && documentData.fc) {
              fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];
            }
            for (j = 0; j < jLen; j += 1) {
              animatorProps = animators[j].a;
              if (animatorProps.a.propType) {
                animatorSelector = animators[j].s;
                mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                if (mult.length) {
                  matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);
                } else {
                  matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);
                }
              }
            }
            for (j = 0; j < jLen; j += 1) {
              animatorProps = animators[j].a;
              if (animatorProps.s.propType) {
                animatorSelector = animators[j].s;
                mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                if (mult.length) {
                  matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);
                } else {
                  matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);
                }
              }
            }
            for (j = 0; j < jLen; j += 1) {
              animatorProps = animators[j].a;
              animatorSelector = animators[j].s;
              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
              if (animatorProps.sk.propType) {
                if (mult.length) {
                  matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);
                } else {
                  matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);
                }
              }
              if (animatorProps.r.propType) {
                if (mult.length) {
                  matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);
                } else {
                  matrixHelper.rotateZ(-animatorProps.r.v * mult);
                }
              }
              if (animatorProps.ry.propType) {
                if (mult.length) {
                  matrixHelper.rotateY(animatorProps.ry.v * mult[1]);
                } else {
                  matrixHelper.rotateY(animatorProps.ry.v * mult);
                }
              }
              if (animatorProps.rx.propType) {
                if (mult.length) {
                  matrixHelper.rotateX(animatorProps.rx.v * mult[0]);
                } else {
                  matrixHelper.rotateX(animatorProps.rx.v * mult);
                }
              }
              if (animatorProps.o.propType) {
                if (mult.length) {
                  elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];
                } else {
                  elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;
                }
              }
              if (documentData.strokeWidthAnim && animatorProps.sw.propType) {
                if (mult.length) {
                  sw += animatorProps.sw.v * mult[0];
                } else {
                  sw += animatorProps.sw.v * mult;
                }
              }
              if (documentData.strokeColorAnim && animatorProps.sc.propType) {
                for (k = 0; k < 3; k += 1) {
                  if (mult.length) {
                    sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];
                  } else {
                    sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;
                  }
                }
              }
              if (documentData.fillColorAnim && documentData.fc) {
                if (animatorProps.fc.propType) {
                  for (k = 0; k < 3; k += 1) {
                    if (mult.length) {
                      fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];
                    } else {
                      fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;
                    }
                  }
                }
                if (animatorProps.fh.propType) {
                  if (mult.length) {
                    fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);
                  } else {
                    fc = addHueToRGB(fc, animatorProps.fh.v * mult);
                  }
                }
                if (animatorProps.fs.propType) {
                  if (mult.length) {
                    fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);
                  } else {
                    fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);
                  }
                }
                if (animatorProps.fb.propType) {
                  if (mult.length) {
                    fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);
                  } else {
                    fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);
                  }
                }
              }
            }
            for (j = 0; j < jLen; j += 1) {
              animatorProps = animators[j].a;
              if (animatorProps.p.propType) {
                animatorSelector = animators[j].s;
                mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                if (this._hasMaskedPath) {
                  if (mult.length) {
                    matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);
                  } else {
                    matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                  }
                } else if (mult.length) {
                  matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);
                } else {
                  matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                }
              }
            }
            if (documentData.strokeWidthAnim) {
              letterSw = sw < 0 ? 0 : sw;
            }
            if (documentData.strokeColorAnim) {
              letterSc = "rgb(" + Math.round(sc[0] * 255) + "," + Math.round(sc[1] * 255) + "," + Math.round(sc[2] * 255) + ")";
            }
            if (documentData.fillColorAnim && documentData.fc) {
              letterFc = "rgb(" + Math.round(fc[0] * 255) + "," + Math.round(fc[1] * 255) + "," + Math.round(fc[2] * 255) + ")";
            }
            if (this._hasMaskedPath) {
              matrixHelper.translate(0, -documentData.ls);
              matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);
              if (this._pathData.p.v) {
                tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);
                var rot = Math.atan(tanAngle) * 180 / Math.PI;
                if (currentPoint.point[0] < prevPoint.point[0]) {
                  rot += 180;
                }
                matrixHelper.rotate(-rot * Math.PI / 180);
              }
              matrixHelper.translate(xPathPos, yPathPos, 0);
              currentLength -= alignment[0] * letters[i].an * 5e-3;
              if (letters[i + 1] && ind !== letters[i + 1].ind) {
                currentLength += letters[i].an / 2;
                currentLength += documentData.tr * 1e-3 * documentData.finalSize;
              }
            } else {
              matrixHelper.translate(xPos, yPos, 0);
              if (documentData.ps) {
                matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);
              }
              switch (documentData.j) {
                case 1:
                  matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);
                  break;
                case 2:
                  matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);
                  break;
                default:
                  break;
              }
              matrixHelper.translate(0, -documentData.ls);
              matrixHelper.translate(offf, 0, 0);
              matrixHelper.translate(alignment[0] * letters[i].an * 5e-3, alignment[1] * yOff * 0.01, 0);
              xPos += letters[i].l + documentData.tr * 1e-3 * documentData.finalSize;
            }
            if (renderType === "html") {
              letterM = matrixHelper.toCSS();
            } else if (renderType === "svg") {
              letterM = matrixHelper.to2dCSS();
            } else {
              letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];
            }
            letterO = elemOpacity;
          }
          if (renderedLettersCount <= i) {
            letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);
            this.renderedLetters.push(letterValue);
            renderedLettersCount += 1;
            this.lettersChangedFlag = true;
          } else {
            letterValue = this.renderedLetters[i];
            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;
          }
        }
      };
      TextAnimatorProperty.prototype.getValue = function() {
        if (this._elem.globalData.frameId === this._frameId) {
          return;
        }
        this._frameId = this._elem.globalData.frameId;
        this.iterateDynamicProperties();
      };
      TextAnimatorProperty.prototype.mHelper = new Matrix();
      TextAnimatorProperty.prototype.defaultPropsArray = [];
      extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);
      function TextAnimatorDataProperty(elem, animatorProps, container) {
        var defaultData = { propType: false };
        var getProp = PropertyFactory.getProp;
        var textAnimatorAnimatables = animatorProps.a;
        this.a = {
          r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,
          rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,
          ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,
          sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,
          sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,
          s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,
          a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,
          o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,
          p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,
          sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,
          sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,
          fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,
          fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,
          fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,
          fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,
          t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData
        };
        this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);
        this.s.t = animatorProps.s.t;
      }
      function LetterProps(o, sw, sc, fc, m, p) {
        this.o = o;
        this.sw = sw;
        this.sc = sc;
        this.fc = fc;
        this.m = m;
        this.p = p;
        this._mdf = {
          o: true,
          sw: !!sw,
          sc: !!sc,
          fc: !!fc,
          m: true,
          p: true
        };
      }
      LetterProps.prototype.update = function(o, sw, sc, fc, m, p) {
        this._mdf.o = false;
        this._mdf.sw = false;
        this._mdf.sc = false;
        this._mdf.fc = false;
        this._mdf.m = false;
        this._mdf.p = false;
        var updated = false;
        if (this.o !== o) {
          this.o = o;
          this._mdf.o = true;
          updated = true;
        }
        if (this.sw !== sw) {
          this.sw = sw;
          this._mdf.sw = true;
          updated = true;
        }
        if (this.sc !== sc) {
          this.sc = sc;
          this._mdf.sc = true;
          updated = true;
        }
        if (this.fc !== fc) {
          this.fc = fc;
          this._mdf.fc = true;
          updated = true;
        }
        if (this.m !== m) {
          this.m = m;
          this._mdf.m = true;
          updated = true;
        }
        if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {
          this.p = p;
          this._mdf.p = true;
          updated = true;
        }
        return updated;
      };
      function TextProperty(elem, data) {
        this._frameId = initialDefaultFrame;
        this.pv = "";
        this.v = "";
        this.kf = false;
        this._isFirstFrame = true;
        this._mdf = false;
        this.data = data;
        this.elem = elem;
        this.comp = this.elem.comp;
        this.keysIndex = 0;
        this.canResize = false;
        this.minimumFontSize = 1;
        this.effectsSequence = [];
        this.currentData = {
          ascent: 0,
          boxWidth: this.defaultBoxWidth,
          f: "",
          fStyle: "",
          fWeight: "",
          fc: "",
          j: "",
          justifyOffset: "",
          l: [],
          lh: 0,
          lineWidths: [],
          ls: "",
          of: "",
          s: "",
          sc: "",
          sw: 0,
          t: 0,
          tr: 0,
          sz: 0,
          ps: null,
          fillColorAnim: false,
          strokeColorAnim: false,
          strokeWidthAnim: false,
          yOffset: 0,
          finalSize: 0,
          finalText: [],
          finalLineHeight: 0,
          __complete: false
        };
        this.copyData(this.currentData, this.data.d.k[0].s);
        if (!this.searchProperty()) {
          this.completeTextData(this.currentData);
        }
      }
      TextProperty.prototype.defaultBoxWidth = [0, 0];
      TextProperty.prototype.copyData = function(obj, data) {
        for (var s in data) {
          if (Object.prototype.hasOwnProperty.call(data, s)) {
            obj[s] = data[s];
          }
        }
        return obj;
      };
      TextProperty.prototype.setCurrentData = function(data) {
        if (!data.__complete) {
          this.completeTextData(data);
        }
        this.currentData = data;
        this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;
        this._mdf = true;
      };
      TextProperty.prototype.searchProperty = function() {
        return this.searchKeyframes();
      };
      TextProperty.prototype.searchKeyframes = function() {
        this.kf = this.data.d.k.length > 1;
        if (this.kf) {
          this.addEffect(this.getKeyframeValue.bind(this));
        }
        return this.kf;
      };
      TextProperty.prototype.addEffect = function(effectFunction) {
        this.effectsSequence.push(effectFunction);
        this.elem.addDynamicProperty(this);
      };
      TextProperty.prototype.getValue = function(_finalValue) {
        if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {
          return;
        }
        this.currentData.t = this.data.d.k[this.keysIndex].s.t;
        var currentValue = this.currentData;
        var currentIndex = this.keysIndex;
        if (this.lock) {
          this.setCurrentData(this.currentData);
          return;
        }
        this.lock = true;
        this._mdf = false;
        var i;
        var len = this.effectsSequence.length;
        var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;
        for (i = 0; i < len; i += 1) {
          if (currentIndex !== this.keysIndex) {
            finalValue = this.effectsSequence[i](finalValue, finalValue.t);
          } else {
            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);
          }
        }
        if (currentValue !== finalValue) {
          this.setCurrentData(finalValue);
        }
        this.v = this.currentData;
        this.pv = this.v;
        this.lock = false;
        this.frameId = this.elem.globalData.frameId;
      };
      TextProperty.prototype.getKeyframeValue = function() {
        var textKeys = this.data.d.k;
        var frameNum = this.elem.comp.renderedFrame;
        var i = 0;
        var len = textKeys.length;
        while (i <= len - 1) {
          if (i === len - 1 || textKeys[i + 1].t > frameNum) {
            break;
          }
          i += 1;
        }
        if (this.keysIndex !== i) {
          this.keysIndex = i;
        }
        return this.data.d.k[this.keysIndex].s;
      };
      TextProperty.prototype.buildFinalText = function(text) {
        var charactersArray = [];
        var i = 0;
        var len = text.length;
        var charCode;
        var secondCharCode;
        var shouldCombine = false;
        while (i < len) {
          charCode = text.charCodeAt(i);
          if (FontManager.isCombinedCharacter(charCode)) {
            charactersArray[charactersArray.length - 1] += text.charAt(i);
          } else if (charCode >= 55296 && charCode <= 56319) {
            secondCharCode = text.charCodeAt(i + 1);
            if (secondCharCode >= 56320 && secondCharCode <= 57343) {
              if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {
                charactersArray[charactersArray.length - 1] += text.substr(i, 2);
                shouldCombine = false;
              } else {
                charactersArray.push(text.substr(i, 2));
              }
              i += 1;
            } else {
              charactersArray.push(text.charAt(i));
            }
          } else if (charCode > 56319) {
            secondCharCode = text.charCodeAt(i + 1);
            if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {
              shouldCombine = true;
              charactersArray[charactersArray.length - 1] += text.substr(i, 2);
              i += 1;
            } else {
              charactersArray.push(text.charAt(i));
            }
          } else if (FontManager.isZeroWidthJoiner(charCode)) {
            charactersArray[charactersArray.length - 1] += text.charAt(i);
            shouldCombine = true;
          } else {
            charactersArray.push(text.charAt(i));
          }
          i += 1;
        }
        return charactersArray;
      };
      TextProperty.prototype.completeTextData = function(documentData) {
        documentData.__complete = true;
        var fontManager = this.elem.globalData.fontManager;
        var data = this.data;
        var letters = [];
        var i;
        var len;
        var newLineFlag;
        var index2 = 0;
        var val;
        var anchorGrouping = data.m.g;
        var currentSize = 0;
        var currentPos = 0;
        var currentLine = 0;
        var lineWidths = [];
        var lineWidth = 0;
        var maxLineWidth = 0;
        var j;
        var jLen;
        var fontData = fontManager.getFontByName(documentData.f);
        var charData;
        var cLength = 0;
        var fontProps = getFontProperties(fontData);
        documentData.fWeight = fontProps.weight;
        documentData.fStyle = fontProps.style;
        documentData.finalSize = documentData.s;
        documentData.finalText = this.buildFinalText(documentData.t);
        len = documentData.finalText.length;
        documentData.finalLineHeight = documentData.lh;
        var trackingOffset = documentData.tr / 1e3 * documentData.finalSize;
        var charCode;
        if (documentData.sz) {
          var flag = true;
          var boxWidth = documentData.sz[0];
          var boxHeight = documentData.sz[1];
          var currentHeight;
          var finalText;
          while (flag) {
            finalText = this.buildFinalText(documentData.t);
            currentHeight = 0;
            lineWidth = 0;
            len = finalText.length;
            trackingOffset = documentData.tr / 1e3 * documentData.finalSize;
            var lastSpaceIndex = -1;
            for (i = 0; i < len; i += 1) {
              charCode = finalText[i].charCodeAt(0);
              newLineFlag = false;
              if (finalText[i] === " ") {
                lastSpaceIndex = i;
              } else if (charCode === 13 || charCode === 3) {
                lineWidth = 0;
                newLineFlag = true;
                currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;
              }
              if (fontManager.chars) {
                charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);
                cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;
              } else {
                cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);
              }
              if (lineWidth + cLength > boxWidth && finalText[i] !== " ") {
                if (lastSpaceIndex === -1) {
                  len += 1;
                } else {
                  i = lastSpaceIndex;
                }
                currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;
                finalText.splice(i, lastSpaceIndex === i ? 1 : 0, "\r");
                lastSpaceIndex = -1;
                lineWidth = 0;
              } else {
                lineWidth += cLength;
                lineWidth += trackingOffset;
              }
            }
            currentHeight += fontData.ascent * documentData.finalSize / 100;
            if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {
              documentData.finalSize -= 1;
              documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;
            } else {
              documentData.finalText = finalText;
              len = documentData.finalText.length;
              flag = false;
            }
          }
        }
        lineWidth = -trackingOffset;
        cLength = 0;
        var uncollapsedSpaces = 0;
        var currentChar;
        for (i = 0; i < len; i += 1) {
          newLineFlag = false;
          currentChar = documentData.finalText[i];
          charCode = currentChar.charCodeAt(0);
          if (charCode === 13 || charCode === 3) {
            uncollapsedSpaces = 0;
            lineWidths.push(lineWidth);
            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
            lineWidth = -2 * trackingOffset;
            val = "";
            newLineFlag = true;
            currentLine += 1;
          } else {
            val = currentChar;
          }
          if (fontManager.chars) {
            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);
            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;
          } else {
            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);
          }
          if (currentChar === " ") {
            uncollapsedSpaces += cLength + trackingOffset;
          } else {
            lineWidth += cLength + trackingOffset + uncollapsedSpaces;
            uncollapsedSpaces = 0;
          }
          letters.push({
            l: cLength,
            an: cLength,
            add: currentSize,
            n: newLineFlag,
            anIndexes: [],
            val,
            line: currentLine,
            animatorJustifyOffset: 0
          });
          if (anchorGrouping == 2) {
            currentSize += cLength;
            if (val === "" || val === " " || i === len - 1) {
              if (val === "" || val === " ") {
                currentSize -= cLength;
              }
              while (currentPos <= i) {
                letters[currentPos].an = currentSize;
                letters[currentPos].ind = index2;
                letters[currentPos].extra = cLength;
                currentPos += 1;
              }
              index2 += 1;
              currentSize = 0;
            }
          } else if (anchorGrouping == 3) {
            currentSize += cLength;
            if (val === "" || i === len - 1) {
              if (val === "") {
                currentSize -= cLength;
              }
              while (currentPos <= i) {
                letters[currentPos].an = currentSize;
                letters[currentPos].ind = index2;
                letters[currentPos].extra = cLength;
                currentPos += 1;
              }
              currentSize = 0;
              index2 += 1;
            }
          } else {
            letters[index2].ind = index2;
            letters[index2].extra = 0;
            index2 += 1;
          }
        }
        documentData.l = letters;
        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
        lineWidths.push(lineWidth);
        if (documentData.sz) {
          documentData.boxWidth = documentData.sz[0];
          documentData.justifyOffset = 0;
        } else {
          documentData.boxWidth = maxLineWidth;
          switch (documentData.j) {
            case 1:
              documentData.justifyOffset = -documentData.boxWidth;
              break;
            case 2:
              documentData.justifyOffset = -documentData.boxWidth / 2;
              break;
            default:
              documentData.justifyOffset = 0;
          }
        }
        documentData.lineWidths = lineWidths;
        var animators = data.a;
        var animatorData;
        var letterData;
        jLen = animators.length;
        var based;
        var ind;
        var indexes = [];
        for (j = 0; j < jLen; j += 1) {
          animatorData = animators[j];
          if (animatorData.a.sc) {
            documentData.strokeColorAnim = true;
          }
          if (animatorData.a.sw) {
            documentData.strokeWidthAnim = true;
          }
          if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {
            documentData.fillColorAnim = true;
          }
          ind = 0;
          based = animatorData.s.b;
          for (i = 0; i < len; i += 1) {
            letterData = letters[i];
            letterData.anIndexes[j] = ind;
            if (based == 1 && letterData.val !== "" || based == 2 && letterData.val !== "" && letterData.val !== " " || based == 3 && (letterData.n || letterData.val == " " || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {
              if (animatorData.s.rn === 1) {
                indexes.push(ind);
              }
              ind += 1;
            }
          }
          data.a[j].s.totalChars = ind;
          var currentInd = -1;
          var newInd;
          if (animatorData.s.rn === 1) {
            for (i = 0; i < len; i += 1) {
              letterData = letters[i];
              if (currentInd != letterData.anIndexes[j]) {
                currentInd = letterData.anIndexes[j];
                newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];
              }
              letterData.anIndexes[j] = newInd;
            }
          }
        }
        documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;
        documentData.ls = documentData.ls || 0;
        documentData.ascent = fontData.ascent * documentData.finalSize / 100;
      };
      TextProperty.prototype.updateDocumentData = function(newData, index2) {
        index2 = index2 === void 0 ? this.keysIndex : index2;
        var dData = this.copyData({}, this.data.d.k[index2].s);
        dData = this.copyData(dData, newData);
        this.data.d.k[index2].s = dData;
        this.recalculate(index2);
        this.elem.addDynamicProperty(this);
      };
      TextProperty.prototype.recalculate = function(index2) {
        var dData = this.data.d.k[index2].s;
        dData.__complete = false;
        this.keysIndex = 0;
        this._isFirstFrame = true;
        this.getValue(dData);
      };
      TextProperty.prototype.canResizeFont = function(_canResize) {
        this.canResize = _canResize;
        this.recalculate(this.keysIndex);
        this.elem.addDynamicProperty(this);
      };
      TextProperty.prototype.setMinimumFontSize = function(_fontValue) {
        this.minimumFontSize = Math.floor(_fontValue) || 1;
        this.recalculate(this.keysIndex);
        this.elem.addDynamicProperty(this);
      };
      var TextSelectorProp = (function() {
        var max = Math.max;
        var min = Math.min;
        var floor = Math.floor;
        function TextSelectorPropFactory(elem, data) {
          this._currentTextLength = -1;
          this.k = false;
          this.data = data;
          this.elem = elem;
          this.comp = elem.comp;
          this.finalS = 0;
          this.finalE = 0;
          this.initDynamicPropertyContainer(elem);
          this.s = PropertyFactory.getProp(elem, data.s || { k: 0 }, 0, 0, this);
          if ("e" in data) {
            this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);
          } else {
            this.e = { v: 100 };
          }
          this.o = PropertyFactory.getProp(elem, data.o || { k: 0 }, 0, 0, this);
          this.xe = PropertyFactory.getProp(elem, data.xe || { k: 0 }, 0, 0, this);
          this.ne = PropertyFactory.getProp(elem, data.ne || { k: 0 }, 0, 0, this);
          this.sm = PropertyFactory.getProp(elem, data.sm || { k: 100 }, 0, 0, this);
          this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);
          if (!this.dynamicProperties.length) {
            this.getValue();
          }
        }
        TextSelectorPropFactory.prototype = {
          getMult: function(ind) {
            if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {
              this.getValue();
            }
            var x1 = 0;
            var y1 = 0;
            var x2 = 1;
            var y2 = 1;
            if (this.ne.v > 0) {
              x1 = this.ne.v / 100;
            } else {
              y1 = -this.ne.v / 100;
            }
            if (this.xe.v > 0) {
              x2 = 1 - this.xe.v / 100;
            } else {
              y2 = 1 + this.xe.v / 100;
            }
            var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;
            var mult = 0;
            var s = this.finalS;
            var e = this.finalE;
            var type = this.data.sh;
            if (type === 2) {
              if (e === s) {
                mult = ind >= e ? 1 : 0;
              } else {
                mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
              }
              mult = easer(mult);
            } else if (type === 3) {
              if (e === s) {
                mult = ind >= e ? 0 : 1;
              } else {
                mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
              }
              mult = easer(mult);
            } else if (type === 4) {
              if (e === s) {
                mult = 0;
              } else {
                mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
                if (mult < 0.5) {
                  mult *= 2;
                } else {
                  mult = 1 - 2 * (mult - 0.5);
                }
              }
              mult = easer(mult);
            } else if (type === 5) {
              if (e === s) {
                mult = 0;
              } else {
                var tot = e - s;
                ind = min(max(0, ind + 0.5 - s), e - s);
                var x = -tot / 2 + ind;
                var a = tot / 2;
                mult = Math.sqrt(1 - x * x / (a * a));
              }
              mult = easer(mult);
            } else if (type === 6) {
              if (e === s) {
                mult = 0;
              } else {
                ind = min(max(0, ind + 0.5 - s), e - s);
                mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2;
              }
              mult = easer(mult);
            } else {
              if (ind >= floor(s)) {
                if (ind - s < 0) {
                  mult = max(0, min(min(e, 1) - (s - ind), 1));
                } else {
                  mult = max(0, min(e - ind, 1));
                }
              }
              mult = easer(mult);
            }
            if (this.sm.v !== 100) {
              var smoothness = this.sm.v * 0.01;
              if (smoothness === 0) {
                smoothness = 1e-8;
              }
              var threshold = 0.5 - smoothness * 0.5;
              if (mult < threshold) {
                mult = 0;
              } else {
                mult = (mult - threshold) / smoothness;
                if (mult > 1) {
                  mult = 1;
                }
              }
            }
            return mult * this.a.v;
          },
          getValue: function(newCharsFlag) {
            this.iterateDynamicProperties();
            this._mdf = newCharsFlag || this._mdf;
            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;
            if (newCharsFlag && this.data.r === 2) {
              this.e.v = this._currentTextLength;
            }
            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;
            var o = this.o.v / divisor;
            var s = this.s.v / divisor + o;
            var e = this.e.v / divisor + o;
            if (s > e) {
              var _s = s;
              s = e;
              e = _s;
            }
            this.finalS = s;
            this.finalE = e;
          }
        };
        extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);
        function getTextSelectorProp(elem, data, arr) {
          return new TextSelectorPropFactory(elem, data, arr);
        }
        return {
          getTextSelectorProp
        };
      })();
      var poolFactory = /* @__PURE__ */ (function() {
        return function(initialLength, _create, _release) {
          var _length = 0;
          var _maxLength = initialLength;
          var pool = createSizedArray(_maxLength);
          var ob = {
            newElement,
            release
          };
          function newElement() {
            var element;
            if (_length) {
              _length -= 1;
              element = pool[_length];
            } else {
              element = _create();
            }
            return element;
          }
          function release(element) {
            if (_length === _maxLength) {
              pool = pooling.double(pool);
              _maxLength *= 2;
            }
            if (_release) {
              _release(element);
            }
            pool[_length] = element;
            _length += 1;
          }
          return ob;
        };
      })();
      var pooling = /* @__PURE__ */ (function() {
        function double(arr) {
          return arr.concat(createSizedArray(arr.length));
        }
        return {
          double
        };
      })();
      var pointPool = (function() {
        function create() {
          return createTypedArray("float32", 2);
        }
        return poolFactory(8, create);
      })();
      var shapePool = (function() {
        function create() {
          return new ShapePath();
        }
        function release(shapePath) {
          var len = shapePath._length;
          var i;
          for (i = 0; i < len; i += 1) {
            pointPool.release(shapePath.v[i]);
            pointPool.release(shapePath.i[i]);
            pointPool.release(shapePath.o[i]);
            shapePath.v[i] = null;
            shapePath.i[i] = null;
            shapePath.o[i] = null;
          }
          shapePath._length = 0;
          shapePath.c = false;
        }
        function clone(shape) {
          var cloned = factory.newElement();
          var i;
          var len = shape._length === void 0 ? shape.v.length : shape._length;
          cloned.setLength(len);
          cloned.c = shape.c;
          for (i = 0; i < len; i += 1) {
            cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);
          }
          return cloned;
        }
        var factory = poolFactory(4, create, release);
        factory.clone = clone;
        return factory;
      })();
      var shapeCollectionPool = (function() {
        var ob = {
          newShapeCollection,
          release
        };
        var _length = 0;
        var _maxLength = 4;
        var pool = createSizedArray(_maxLength);
        function newShapeCollection() {
          var shapeCollection;
          if (_length) {
            _length -= 1;
            shapeCollection = pool[_length];
          } else {
            shapeCollection = new ShapeCollection();
          }
          return shapeCollection;
        }
        function release(shapeCollection) {
          var i;
          var len = shapeCollection._length;
          for (i = 0; i < len; i += 1) {
            shapePool.release(shapeCollection.shapes[i]);
          }
          shapeCollection._length = 0;
          if (_length === _maxLength) {
            pool = pooling.double(pool);
            _maxLength *= 2;
          }
          pool[_length] = shapeCollection;
          _length += 1;
        }
        return ob;
      })();
      var segmentsLengthPool = (function() {
        function create() {
          return {
            lengths: [],
            totalLength: 0
          };
        }
        function release(element) {
          var i;
          var len = element.lengths.length;
          for (i = 0; i < len; i += 1) {
            bezierLengthPool.release(element.lengths[i]);
          }
          element.lengths.length = 0;
        }
        return poolFactory(8, create, release);
      })();
      var bezierLengthPool = (function() {
        function create() {
          return {
            addedLength: 0,
            percents: createTypedArray("float32", defaultCurveSegments),
            lengths: createTypedArray("float32", defaultCurveSegments)
          };
        }
        return poolFactory(8, create);
      })();
      var markerParser = /* @__PURE__ */ (function() {
        function parsePayloadLines(payload) {
          var lines = payload.split("\r\n");
          var keys = {};
          var line;
          var keysCount = 0;
          for (var i = 0; i < lines.length; i += 1) {
            line = lines[i].split(":");
            if (line.length === 2) {
              keys[line[0]] = line[1].trim();
              keysCount += 1;
            }
          }
          if (keysCount === 0) {
            throw new Error();
          }
          return keys;
        }
        return function(_markers) {
          var markers = [];
          for (var i = 0; i < _markers.length; i += 1) {
            var _marker = _markers[i];
            var markerData = {
              time: _marker.tm,
              duration: _marker.dr
            };
            try {
              markerData.payload = JSON.parse(_markers[i].cm);
            } catch (_) {
              try {
                markerData.payload = parsePayloadLines(_markers[i].cm);
              } catch (__) {
                markerData.payload = {
                  name: _markers[i]
                };
              }
            }
            markers.push(markerData);
          }
          return markers;
        };
      })();
      function BaseRenderer() {
      }
      BaseRenderer.prototype.checkLayers = function(num) {
        var i;
        var len = this.layers.length;
        var data;
        this.completeLayers = true;
        for (i = len - 1; i >= 0; i -= 1) {
          if (!this.elements[i]) {
            data = this.layers[i];
            if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {
              this.buildItem(i);
            }
          }
          this.completeLayers = this.elements[i] ? this.completeLayers : false;
        }
        this.checkPendingElements();
      };
      BaseRenderer.prototype.createItem = function(layer) {
        switch (layer.ty) {
          case 2:
            return this.createImage(layer);
          case 0:
            return this.createComp(layer);
          case 1:
            return this.createSolid(layer);
          case 3:
            return this.createNull(layer);
          case 4:
            return this.createShape(layer);
          case 5:
            return this.createText(layer);
          case 6:
            return this.createAudio(layer);
          case 13:
            return this.createCamera(layer);
          case 15:
            return this.createFootage(layer);
          default:
            return this.createNull(layer);
        }
      };
      BaseRenderer.prototype.createCamera = function() {
        throw new Error("You're using a 3d camera. Try the html renderer.");
      };
      BaseRenderer.prototype.createAudio = function(data) {
        return new AudioElement(data, this.globalData, this);
      };
      BaseRenderer.prototype.createFootage = function(data) {
        return new FootageElement(data, this.globalData, this);
      };
      BaseRenderer.prototype.buildAllItems = function() {
        var i;
        var len = this.layers.length;
        for (i = 0; i < len; i += 1) {
          this.buildItem(i);
        }
        this.checkPendingElements();
      };
      BaseRenderer.prototype.includeLayers = function(newLayers) {
        this.completeLayers = false;
        var i;
        var len = newLayers.length;
        var j;
        var jLen = this.layers.length;
        for (i = 0; i < len; i += 1) {
          j = 0;
          while (j < jLen) {
            if (this.layers[j].id === newLayers[i].id) {
              this.layers[j] = newLayers[i];
              break;
            }
            j += 1;
          }
        }
      };
      BaseRenderer.prototype.setProjectInterface = function(pInterface) {
        this.globalData.projectInterface = pInterface;
      };
      BaseRenderer.prototype.initItems = function() {
        if (!this.globalData.progressiveLoad) {
          this.buildAllItems();
        }
      };
      BaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {
        var elements = this.elements;
        var layers = this.layers;
        var i = 0;
        var len = layers.length;
        while (i < len) {
          if (layers[i].ind == parentName) {
            if (!elements[i] || elements[i] === true) {
              this.buildItem(i);
              this.addPendingElement(element);
            } else {
              hierarchy.push(elements[i]);
              elements[i].setAsParent();
              if (layers[i].parent !== void 0) {
                this.buildElementParenting(element, layers[i].parent, hierarchy);
              } else {
                element.setHierarchy(hierarchy);
              }
            }
          }
          i += 1;
        }
      };
      BaseRenderer.prototype.addPendingElement = function(element) {
        this.pendingElements.push(element);
      };
      BaseRenderer.prototype.searchExtraCompositions = function(assets) {
        var i;
        var len = assets.length;
        for (i = 0; i < len; i += 1) {
          if (assets[i].xt) {
            var comp = this.createComp(assets[i]);
            comp.initExpressions();
            this.globalData.projectInterface.registerComposition(comp);
          }
        }
      };
      BaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {
        this.globalData.fontManager = new FontManager();
        this.globalData.fontManager.addChars(animData.chars);
        this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);
        this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);
        this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);
        this.globalData.imageLoader = this.animationItem.imagePreloader;
        this.globalData.audioController = this.animationItem.audioController;
        this.globalData.frameId = 0;
        this.globalData.frameRate = animData.fr;
        this.globalData.nm = animData.nm;
        this.globalData.compSize = {
          w: animData.w,
          h: animData.h
        };
      };
      function SVGRenderer(animationItem, config) {
        this.animationItem = animationItem;
        this.layers = null;
        this.renderedFrame = -1;
        this.svgElement = createNS("svg");
        var ariaLabel = "";
        if (config && config.title) {
          var titleElement = createNS("title");
          var titleId = createElementID();
          titleElement.setAttribute("id", titleId);
          titleElement.textContent = config.title;
          this.svgElement.appendChild(titleElement);
          ariaLabel += titleId;
        }
        if (config && config.description) {
          var descElement = createNS("desc");
          var descId = createElementID();
          descElement.setAttribute("id", descId);
          descElement.textContent = config.description;
          this.svgElement.appendChild(descElement);
          ariaLabel += " " + descId;
        }
        if (ariaLabel) {
          this.svgElement.setAttribute("aria-labelledby", ariaLabel);
        }
        var defs = createNS("defs");
        this.svgElement.appendChild(defs);
        var maskElement = createNS("g");
        this.svgElement.appendChild(maskElement);
        this.layerElement = maskElement;
        this.renderConfig = {
          preserveAspectRatio: config && config.preserveAspectRatio || "xMidYMid meet",
          imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || "xMidYMid slice",
          contentVisibility: config && config.contentVisibility || "visible",
          progressiveLoad: config && config.progressiveLoad || false,
          hideOnTransparent: !(config && config.hideOnTransparent === false),
          viewBoxOnly: config && config.viewBoxOnly || false,
          viewBoxSize: config && config.viewBoxSize || false,
          className: config && config.className || "",
          id: config && config.id || "",
          focusable: config && config.focusable,
          filterSize: {
            width: config && config.filterSize && config.filterSize.width || "100%",
            height: config && config.filterSize && config.filterSize.height || "100%",
            x: config && config.filterSize && config.filterSize.x || "0%",
            y: config && config.filterSize && config.filterSize.y || "0%"
          }
        };
        this.globalData = {
          _mdf: false,
          frameNum: -1,
          defs,
          renderConfig: this.renderConfig
        };
        this.elements = [];
        this.pendingElements = [];
        this.destroyed = false;
        this.rendererType = "svg";
      }
      extendPrototype([BaseRenderer], SVGRenderer);
      SVGRenderer.prototype.createNull = function(data) {
        return new NullElement(data, this.globalData, this);
      };
      SVGRenderer.prototype.createShape = function(data) {
        return new SVGShapeElement(data, this.globalData, this);
      };
      SVGRenderer.prototype.createText = function(data) {
        return new SVGTextLottieElement(data, this.globalData, this);
      };
      SVGRenderer.prototype.createImage = function(data) {
        return new IImageElement(data, this.globalData, this);
      };
      SVGRenderer.prototype.createComp = function(data) {
        return new SVGCompElement(data, this.globalData, this);
      };
      SVGRenderer.prototype.createSolid = function(data) {
        return new ISolidElement(data, this.globalData, this);
      };
      SVGRenderer.prototype.configAnimation = function(animData) {
        this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        if (this.renderConfig.viewBoxSize) {
          this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize);
        } else {
          this.svgElement.setAttribute("viewBox", "0 0 " + animData.w + " " + animData.h);
        }
        if (!this.renderConfig.viewBoxOnly) {
          this.svgElement.setAttribute("width", animData.w);
          this.svgElement.setAttribute("height", animData.h);
          this.svgElement.style.width = "100%";
          this.svgElement.style.height = "100%";
          this.svgElement.style.transform = "translate3d(0,0,0)";
          this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;
        }
        if (this.renderConfig.className) {
          this.svgElement.setAttribute("class", this.renderConfig.className);
        }
        if (this.renderConfig.id) {
          this.svgElement.setAttribute("id", this.renderConfig.id);
        }
        if (this.renderConfig.focusable !== void 0) {
          this.svgElement.setAttribute("focusable", this.renderConfig.focusable);
        }
        this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio);
        this.animationItem.wrapper.appendChild(this.svgElement);
        var defs = this.globalData.defs;
        this.setupGlobalData(animData, defs);
        this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
        this.data = animData;
        var maskElement = createNS("clipPath");
        var rect = createNS("rect");
        rect.setAttribute("width", animData.w);
        rect.setAttribute("height", animData.h);
        rect.setAttribute("x", 0);
        rect.setAttribute("y", 0);
        var maskId = createElementID();
        maskElement.setAttribute("id", maskId);
        maskElement.appendChild(rect);
        this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + maskId + ")");
        defs.appendChild(maskElement);
        this.layers = animData.layers;
        this.elements = createSizedArray(animData.layers.length);
      };
      SVGRenderer.prototype.destroy = function() {
        if (this.animationItem.wrapper) {
          this.animationItem.wrapper.innerText = "";
        }
        this.layerElement = null;
        this.globalData.defs = null;
        var i;
        var len = this.layers ? this.layers.length : 0;
        for (i = 0; i < len; i += 1) {
          if (this.elements[i]) {
            this.elements[i].destroy();
          }
        }
        this.elements.length = 0;
        this.destroyed = true;
        this.animationItem = null;
      };
      SVGRenderer.prototype.updateContainerSize = function() {
      };
      SVGRenderer.prototype.buildItem = function(pos) {
        var elements = this.elements;
        if (elements[pos] || this.layers[pos].ty === 99) {
          return;
        }
        elements[pos] = true;
        var element = this.createItem(this.layers[pos]);
        elements[pos] = element;
        if (expressionsPlugin) {
          if (this.layers[pos].ty === 0) {
            this.globalData.projectInterface.registerComposition(element);
          }
          element.initExpressions();
        }
        this.appendElementInPos(element, pos);
        if (this.layers[pos].tt) {
          if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {
            this.buildItem(pos - 1);
            this.addPendingElement(element);
          } else {
            element.setMatte(elements[pos - 1].layerId);
          }
        }
      };
      SVGRenderer.prototype.checkPendingElements = function() {
        while (this.pendingElements.length) {
          var element = this.pendingElements.pop();
          element.checkParenting();
          if (element.data.tt) {
            var i = 0;
            var len = this.elements.length;
            while (i < len) {
              if (this.elements[i] === element) {
                element.setMatte(this.elements[i - 1].layerId);
                break;
              }
              i += 1;
            }
          }
        }
      };
      SVGRenderer.prototype.renderFrame = function(num) {
        if (this.renderedFrame === num || this.destroyed) {
          return;
        }
        if (num === null) {
          num = this.renderedFrame;
        } else {
          this.renderedFrame = num;
        }
        this.globalData.frameNum = num;
        this.globalData.frameId += 1;
        this.globalData.projectInterface.currentFrame = num;
        this.globalData._mdf = false;
        var i;
        var len = this.layers.length;
        if (!this.completeLayers) {
          this.checkLayers(num);
        }
        for (i = len - 1; i >= 0; i -= 1) {
          if (this.completeLayers || this.elements[i]) {
            this.elements[i].prepareFrame(num - this.layers[i].st);
          }
        }
        if (this.globalData._mdf) {
          for (i = 0; i < len; i += 1) {
            if (this.completeLayers || this.elements[i]) {
              this.elements[i].renderFrame();
            }
          }
        }
      };
      SVGRenderer.prototype.appendElementInPos = function(element, pos) {
        var newElement = element.getBaseElement();
        if (!newElement) {
          return;
        }
        var i = 0;
        var nextElement;
        while (i < pos) {
          if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {
            nextElement = this.elements[i].getBaseElement();
          }
          i += 1;
        }
        if (nextElement) {
          this.layerElement.insertBefore(newElement, nextElement);
        } else {
          this.layerElement.appendChild(newElement);
        }
      };
      SVGRenderer.prototype.hide = function() {
        this.layerElement.style.display = "none";
      };
      SVGRenderer.prototype.show = function() {
        this.layerElement.style.display = "block";
      };
      function MaskElement(data, element, globalData) {
        this.data = data;
        this.element = element;
        this.globalData = globalData;
        this.storedData = [];
        this.masksProperties = this.data.masksProperties || [];
        this.maskElement = null;
        var defs = this.globalData.defs;
        var i;
        var len = this.masksProperties ? this.masksProperties.length : 0;
        this.viewData = createSizedArray(len);
        this.solidPath = "";
        var path;
        var properties = this.masksProperties;
        var count = 0;
        var currentMasks = [];
        var j;
        var jLen;
        var layerId = createElementID();
        var rect;
        var expansor;
        var feMorph;
        var x;
        var maskType = "clipPath";
        var maskRef = "clip-path";
        for (i = 0; i < len; i += 1) {
          if (properties[i].mode !== "a" && properties[i].mode !== "n" || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {
            maskType = "mask";
            maskRef = "mask";
          }
          if ((properties[i].mode === "s" || properties[i].mode === "i") && count === 0) {
            rect = createNS("rect");
            rect.setAttribute("fill", "#ffffff");
            rect.setAttribute("width", this.element.comp.data.w || 0);
            rect.setAttribute("height", this.element.comp.data.h || 0);
            currentMasks.push(rect);
          } else {
            rect = null;
          }
          path = createNS("path");
          if (properties[i].mode === "n") {
            this.viewData[i] = {
              op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),
              prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),
              elem: path,
              lastPath: ""
            };
            defs.appendChild(path);
          } else {
            count += 1;
            path.setAttribute("fill", properties[i].mode === "s" ? "#000000" : "#ffffff");
            path.setAttribute("clip-rule", "nonzero");
            var filterID;
            if (properties[i].x.k !== 0) {
              maskType = "mask";
              maskRef = "mask";
              x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);
              filterID = createElementID();
              expansor = createNS("filter");
              expansor.setAttribute("id", filterID);
              feMorph = createNS("feMorphology");
              feMorph.setAttribute("operator", "erode");
              feMorph.setAttribute("in", "SourceGraphic");
              feMorph.setAttribute("radius", "0");
              expansor.appendChild(feMorph);
              defs.appendChild(expansor);
              path.setAttribute("stroke", properties[i].mode === "s" ? "#000000" : "#ffffff");
            } else {
              feMorph = null;
              x = null;
            }
            this.storedData[i] = {
              elem: path,
              x,
              expan: feMorph,
              lastPath: "",
              lastOperator: "",
              filterId: filterID,
              lastRadius: 0
            };
            if (properties[i].mode === "i") {
              jLen = currentMasks.length;
              var g = createNS("g");
              for (j = 0; j < jLen; j += 1) {
                g.appendChild(currentMasks[j]);
              }
              var mask = createNS("mask");
              mask.setAttribute("mask-type", "alpha");
              mask.setAttribute("id", layerId + "_" + count);
              mask.appendChild(path);
              defs.appendChild(mask);
              g.setAttribute("mask", "url(" + locationHref + "#" + layerId + "_" + count + ")");
              currentMasks.length = 0;
              currentMasks.push(g);
            } else {
              currentMasks.push(path);
            }
            if (properties[i].inv && !this.solidPath) {
              this.solidPath = this.createLayerSolidPath();
            }
            this.viewData[i] = {
              elem: path,
              lastPath: "",
              op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),
              prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),
              invRect: rect
            };
            if (!this.viewData[i].prop.k) {
              this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);
            }
          }
        }
        this.maskElement = createNS(maskType);
        len = currentMasks.length;
        for (i = 0; i < len; i += 1) {
          this.maskElement.appendChild(currentMasks[i]);
        }
        if (count > 0) {
          this.maskElement.setAttribute("id", layerId);
          this.element.maskedElement.setAttribute(maskRef, "url(" + locationHref + "#" + layerId + ")");
          defs.appendChild(this.maskElement);
        }
        if (this.viewData.length) {
          this.element.addRenderableComponent(this);
        }
      }
      MaskElement.prototype.getMaskProperty = function(pos) {
        return this.viewData[pos].prop;
      };
      MaskElement.prototype.renderFrame = function(isFirstFrame) {
        var finalMat = this.element.finalTransform.mat;
        var i;
        var len = this.masksProperties.length;
        for (i = 0; i < len; i += 1) {
          if (this.viewData[i].prop._mdf || isFirstFrame) {
            this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);
          }
          if (this.viewData[i].op._mdf || isFirstFrame) {
            this.viewData[i].elem.setAttribute("fill-opacity", this.viewData[i].op.v);
          }
          if (this.masksProperties[i].mode !== "n") {
            if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {
              this.viewData[i].invRect.setAttribute("transform", finalMat.getInverseMatrix().to2dCSS());
            }
            if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {
              var feMorph = this.storedData[i].expan;
              if (this.storedData[i].x.v < 0) {
                if (this.storedData[i].lastOperator !== "erode") {
                  this.storedData[i].lastOperator = "erode";
                  this.storedData[i].elem.setAttribute("filter", "url(" + locationHref + "#" + this.storedData[i].filterId + ")");
                }
                feMorph.setAttribute("radius", -this.storedData[i].x.v);
              } else {
                if (this.storedData[i].lastOperator !== "dilate") {
                  this.storedData[i].lastOperator = "dilate";
                  this.storedData[i].elem.setAttribute("filter", null);
                }
                this.storedData[i].elem.setAttribute("stroke-width", this.storedData[i].x.v * 2);
              }
            }
          }
        }
      };
      MaskElement.prototype.getMaskelement = function() {
        return this.maskElement;
      };
      MaskElement.prototype.createLayerSolidPath = function() {
        var path = "M0,0 ";
        path += " h" + this.globalData.compSize.w;
        path += " v" + this.globalData.compSize.h;
        path += " h-" + this.globalData.compSize.w;
        path += " v-" + this.globalData.compSize.h + " ";
        return path;
      };
      MaskElement.prototype.drawPath = function(pathData, pathNodes, viewData) {
        var pathString = " M" + pathNodes.v[0][0] + "," + pathNodes.v[0][1];
        var i;
        var len;
        len = pathNodes._length;
        for (i = 1; i < len; i += 1) {
          pathString += " C" + pathNodes.o[i - 1][0] + "," + pathNodes.o[i - 1][1] + " " + pathNodes.i[i][0] + "," + pathNodes.i[i][1] + " " + pathNodes.v[i][0] + "," + pathNodes.v[i][1];
        }
        if (pathNodes.c && len > 1) {
          pathString += " C" + pathNodes.o[i - 1][0] + "," + pathNodes.o[i - 1][1] + " " + pathNodes.i[0][0] + "," + pathNodes.i[0][1] + " " + pathNodes.v[0][0] + "," + pathNodes.v[0][1];
        }
        if (viewData.lastPath !== pathString) {
          var pathShapeValue = "";
          if (viewData.elem) {
            if (pathNodes.c) {
              pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;
            }
            viewData.elem.setAttribute("d", pathShapeValue);
          }
          viewData.lastPath = pathString;
        }
      };
      MaskElement.prototype.destroy = function() {
        this.element = null;
        this.globalData = null;
        this.maskElement = null;
        this.data = null;
        this.masksProperties = null;
      };
      function HierarchyElement() {
      }
      HierarchyElement.prototype = {
        /**
           * @function
           * Initializes hierarchy properties
           *
           */
        initHierarchy: function() {
          this.hierarchy = [];
          this._isParent = false;
          this.checkParenting();
        },
        /**
           * @function
           * Sets layer's hierarchy.
           * @param {array} hierarch
           * layer's parent list
           *
           */
        setHierarchy: function(hierarchy) {
          this.hierarchy = hierarchy;
        },
        /**
           * @function
           * Sets layer as parent.
           *
           */
        setAsParent: function() {
          this._isParent = true;
        },
        /**
           * @function
           * Searches layer's parenting chain
           *
           */
        checkParenting: function() {
          if (this.data.parent !== void 0) {
            this.comp.buildElementParenting(this, this.data.parent, []);
          }
        }
      };
      function FrameElement() {
      }
      FrameElement.prototype = {
        /**
           * @function
           * Initializes frame related properties.
           *
           */
        initFrame: function() {
          this._isFirstFrame = false;
          this.dynamicProperties = [];
          this._mdf = false;
        },
        /**
           * @function
           * Calculates all dynamic values
           *
           * @param {number} num
           * current frame number in Layer's time
           * @param {boolean} isVisible
           * if layers is currently in range
           *
           */
        prepareProperties: function(num, isVisible) {
          var i;
          var len = this.dynamicProperties.length;
          for (i = 0; i < len; i += 1) {
            if (isVisible || this._isParent && this.dynamicProperties[i].propType === "transform") {
              this.dynamicProperties[i].getValue();
              if (this.dynamicProperties[i]._mdf) {
                this.globalData._mdf = true;
                this._mdf = true;
              }
            }
          }
        },
        addDynamicProperty: function(prop) {
          if (this.dynamicProperties.indexOf(prop) === -1) {
            this.dynamicProperties.push(prop);
          }
        }
      };
      function TransformElement() {
      }
      TransformElement.prototype = {
        initTransform: function() {
          this.finalTransform = {
            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 },
            _matMdf: false,
            _opMdf: false,
            mat: new Matrix()
          };
          if (this.data.ao) {
            this.finalTransform.mProp.autoOriented = true;
          }
          if (this.data.ty !== 11) {
          }
        },
        renderTransform: function() {
          this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;
          this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;
          if (this.hierarchy) {
            var mat;
            var finalMat = this.finalTransform.mat;
            var i = 0;
            var len = this.hierarchy.length;
            if (!this.finalTransform._matMdf) {
              while (i < len) {
                if (this.hierarchy[i].finalTransform.mProp._mdf) {
                  this.finalTransform._matMdf = true;
                  break;
                }
                i += 1;
              }
            }
            if (this.finalTransform._matMdf) {
              mat = this.finalTransform.mProp.v.props;
              finalMat.cloneFromProps(mat);
              for (i = 0; i < len; i += 1) {
                mat = this.hierarchy[i].finalTransform.mProp.v.props;
                finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);
              }
            }
          }
        },
        globalToLocal: function(pt) {
          var transforms = [];
          transforms.push(this.finalTransform);
          var flag = true;
          var comp = this.comp;
          while (flag) {
            if (comp.finalTransform) {
              if (comp.data.hasMask) {
                transforms.splice(0, 0, comp.finalTransform);
              }
              comp = comp.comp;
            } else {
              flag = false;
            }
          }
          var i;
          var len = transforms.length;
          var ptNew;
          for (i = 0; i < len; i += 1) {
            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);
            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];
          }
          return pt;
        },
        mHelper: new Matrix()
      };
      function RenderableElement() {
      }
      RenderableElement.prototype = {
        initRenderable: function() {
          this.isInRange = false;
          this.hidden = false;
          this.isTransparent = false;
          this.renderableComponents = [];
        },
        addRenderableComponent: function(component) {
          if (this.renderableComponents.indexOf(component) === -1) {
            this.renderableComponents.push(component);
          }
        },
        removeRenderableComponent: function(component) {
          if (this.renderableComponents.indexOf(component) !== -1) {
            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);
          }
        },
        prepareRenderableFrame: function(num) {
          this.checkLayerLimits(num);
        },
        checkTransparency: function() {
          if (this.finalTransform.mProp.o.v <= 0) {
            if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {
              this.isTransparent = true;
              this.hide();
            }
          } else if (this.isTransparent) {
            this.isTransparent = false;
            this.show();
          }
        },
        /**
           * @function
           * Initializes frame related properties.
           *
           * @param {number} num
           * current frame number in Layer's time
           *
           */
        checkLayerLimits: function(num) {
          if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {
            if (this.isInRange !== true) {
              this.globalData._mdf = true;
              this._mdf = true;
              this.isInRange = true;
              this.show();
            }
          } else if (this.isInRange !== false) {
            this.globalData._mdf = true;
            this.isInRange = false;
            this.hide();
          }
        },
        renderRenderable: function() {
          var i;
          var len = this.renderableComponents.length;
          for (i = 0; i < len; i += 1) {
            this.renderableComponents[i].renderFrame(this._isFirstFrame);
          }
        },
        sourceRectAtTime: function() {
          return {
            top: 0,
            left: 0,
            width: 100,
            height: 100
          };
        },
        getLayerSize: function() {
          if (this.data.ty === 5) {
            return { w: this.data.textData.width, h: this.data.textData.height };
          }
          return { w: this.data.width, h: this.data.height };
        }
      };
      function RenderableDOMElement() {
      }
      (function() {
        var _prototype = {
          initElement: function(data, globalData, comp) {
            this.initFrame();
            this.initBaseData(data, globalData, comp);
            this.initTransform(data, globalData, comp);
            this.initHierarchy();
            this.initRenderable();
            this.initRendererElement();
            this.createContainerElements();
            this.createRenderableComponents();
            this.createContent();
            this.hide();
          },
          hide: function() {
            if (!this.hidden && (!this.isInRange || this.isTransparent)) {
              var elem = this.baseElement || this.layerElement;
              elem.style.display = "none";
              this.hidden = true;
            }
          },
          show: function() {
            if (this.isInRange && !this.isTransparent) {
              if (!this.data.hd) {
                var elem = this.baseElement || this.layerElement;
                elem.style.display = "block";
              }
              this.hidden = false;
              this._isFirstFrame = true;
            }
          },
          renderFrame: function() {
            if (this.data.hd || this.hidden) {
              return;
            }
            this.renderTransform();
            this.renderRenderable();
            this.renderElement();
            this.renderInnerContent();
            if (this._isFirstFrame) {
              this._isFirstFrame = false;
            }
          },
          renderInnerContent: function() {
          },
          prepareFrame: function(num) {
            this._mdf = false;
            this.prepareRenderableFrame(num);
            this.prepareProperties(num, this.isInRange);
            this.checkTransparency();
          },
          destroy: function() {
            this.innerElem = null;
            this.destroyBaseElement();
          }
        };
        extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);
      })();
      function ProcessedElement(element, position) {
        this.elem = element;
        this.pos = position;
      }
      function SVGStyleData(data, level) {
        this.data = data;
        this.type = data.ty;
        this.d = "";
        this.lvl = level;
        this._mdf = false;
        this.closed = data.hd === true;
        this.pElem = createNS("path");
        this.msElem = null;
      }
      SVGStyleData.prototype.reset = function() {
        this.d = "";
        this._mdf = false;
      };
      function SVGShapeData(transformers, level, shape) {
        this.caches = [];
        this.styles = [];
        this.transformers = transformers;
        this.lStr = "";
        this.sh = shape;
        this.lvl = level;
        this._isAnimated = !!shape.k;
        var i = 0;
        var len = transformers.length;
        while (i < len) {
          if (transformers[i].mProps.dynamicProperties.length) {
            this._isAnimated = true;
            break;
          }
          i += 1;
        }
      }
      SVGShapeData.prototype.setAsAnimated = function() {
        this._isAnimated = true;
      };
      function SVGTransformData(mProps, op, container) {
        this.transform = {
          mProps,
          op,
          container
        };
        this.elements = [];
        this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;
      }
      function SVGStrokeStyleData(elem, data, styleOb) {
        this.initDynamicPropertyContainer(elem);
        this.getValue = this.iterateDynamicProperties;
        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
        this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);
        this.d = new DashProperty(elem, data.d || {}, "svg", this);
        this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);
        this.style = styleOb;
        this._isAnimated = !!this._isAnimated;
      }
      extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);
      function SVGFillStyleData(elem, data, styleOb) {
        this.initDynamicPropertyContainer(elem);
        this.getValue = this.iterateDynamicProperties;
        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
        this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);
        this.style = styleOb;
      }
      extendPrototype([DynamicPropertyContainer], SVGFillStyleData);
      function SVGGradientFillStyleData(elem, data, styleOb) {
        this.initDynamicPropertyContainer(elem);
        this.getValue = this.iterateDynamicProperties;
        this.initGradientData(elem, data, styleOb);
      }
      SVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb) {
        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
        this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);
        this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);
        this.h = PropertyFactory.getProp(elem, data.h || { k: 0 }, 0, 0.01, this);
        this.a = PropertyFactory.getProp(elem, data.a || { k: 0 }, 0, degToRads, this);
        this.g = new GradientProperty(elem, data.g, this);
        this.style = styleOb;
        this.stops = [];
        this.setGradientData(styleOb.pElem, data);
        this.setGradientOpacity(data, styleOb);
        this._isAnimated = !!this._isAnimated;
      };
      SVGGradientFillStyleData.prototype.setGradientData = function(pathElement, data) {
        var gradientId = createElementID();
        var gfill = createNS(data.t === 1 ? "linearGradient" : "radialGradient");
        gfill.setAttribute("id", gradientId);
        gfill.setAttribute("spreadMethod", "pad");
        gfill.setAttribute("gradientUnits", "userSpaceOnUse");
        var stops = [];
        var stop;
        var j;
        var jLen;
        jLen = data.g.p * 4;
        for (j = 0; j < jLen; j += 4) {
          stop = createNS("stop");
          gfill.appendChild(stop);
          stops.push(stop);
        }
        pathElement.setAttribute(data.ty === "gf" ? "fill" : "stroke", "url(" + locationHref + "#" + gradientId + ")");
        this.gf = gfill;
        this.cst = stops;
      };
      SVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb) {
        if (this.g._hasOpacity && !this.g._collapsable) {
          var stop;
          var j;
          var jLen;
          var mask = createNS("mask");
          var maskElement = createNS("path");
          mask.appendChild(maskElement);
          var opacityId = createElementID();
          var maskId = createElementID();
          mask.setAttribute("id", maskId);
          var opFill = createNS(data.t === 1 ? "linearGradient" : "radialGradient");
          opFill.setAttribute("id", opacityId);
          opFill.setAttribute("spreadMethod", "pad");
          opFill.setAttribute("gradientUnits", "userSpaceOnUse");
          jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;
          var stops = this.stops;
          for (j = data.g.p * 4; j < jLen; j += 2) {
            stop = createNS("stop");
            stop.setAttribute("stop-color", "rgb(255,255,255)");
            opFill.appendChild(stop);
            stops.push(stop);
          }
          maskElement.setAttribute(data.ty === "gf" ? "fill" : "stroke", "url(" + locationHref + "#" + opacityId + ")");
          if (data.ty === "gs") {
            maskElement.setAttribute("stroke-linecap", lineCapEnum[data.lc || 2]);
            maskElement.setAttribute("stroke-linejoin", lineJoinEnum[data.lj || 2]);
            if (data.lj === 1) {
              maskElement.setAttribute("stroke-miterlimit", data.ml);
            }
          }
          this.of = opFill;
          this.ms = mask;
          this.ost = stops;
          this.maskId = maskId;
          styleOb.msElem = maskElement;
        }
      };
      extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);
      function SVGGradientStrokeStyleData(elem, data, styleOb) {
        this.initDynamicPropertyContainer(elem);
        this.getValue = this.iterateDynamicProperties;
        this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);
        this.d = new DashProperty(elem, data.d || {}, "svg", this);
        this.initGradientData(elem, data, styleOb);
        this._isAnimated = !!this._isAnimated;
      }
      extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
      function ShapeGroupData() {
        this.it = [];
        this.prevViewData = [];
        this.gr = createNS("g");
      }
      var SVGElementsRenderer = (function() {
        var _identityMatrix = new Matrix();
        var _matrixHelper = new Matrix();
        var ob = {
          createRenderFunction
        };
        function createRenderFunction(data) {
          switch (data.ty) {
            case "fl":
              return renderFill;
            case "gf":
              return renderGradient;
            case "gs":
              return renderGradientStroke;
            case "st":
              return renderStroke;
            case "sh":
            case "el":
            case "rc":
            case "sr":
              return renderPath;
            case "tr":
              return renderContentTransform;
            default:
              return null;
          }
        }
        function renderContentTransform(styleData, itemData, isFirstFrame) {
          if (isFirstFrame || itemData.transform.op._mdf) {
            itemData.transform.container.setAttribute("opacity", itemData.transform.op.v);
          }
          if (isFirstFrame || itemData.transform.mProps._mdf) {
            itemData.transform.container.setAttribute("transform", itemData.transform.mProps.v.to2dCSS());
          }
        }
        function renderPath(styleData, itemData, isFirstFrame) {
          var j;
          var jLen;
          var pathStringTransformed;
          var redraw;
          var pathNodes;
          var l;
          var lLen = itemData.styles.length;
          var lvl = itemData.lvl;
          var paths;
          var mat;
          var props;
          var iterations;
          var k;
          for (l = 0; l < lLen; l += 1) {
            redraw = itemData.sh._mdf || isFirstFrame;
            if (itemData.styles[l].lvl < lvl) {
              mat = _matrixHelper.reset();
              iterations = lvl - itemData.styles[l].lvl;
              k = itemData.transformers.length - 1;
              while (!redraw && iterations > 0) {
                redraw = itemData.transformers[k].mProps._mdf || redraw;
                iterations -= 1;
                k -= 1;
              }
              if (redraw) {
                iterations = lvl - itemData.styles[l].lvl;
                k = itemData.transformers.length - 1;
                while (iterations > 0) {
                  props = itemData.transformers[k].mProps.v.props;
                  mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);
                  iterations -= 1;
                  k -= 1;
                }
              }
            } else {
              mat = _identityMatrix;
            }
            paths = itemData.sh.paths;
            jLen = paths._length;
            if (redraw) {
              pathStringTransformed = "";
              for (j = 0; j < jLen; j += 1) {
                pathNodes = paths.shapes[j];
                if (pathNodes && pathNodes._length) {
                  pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);
                }
              }
              itemData.caches[l] = pathStringTransformed;
            } else {
              pathStringTransformed = itemData.caches[l];
            }
            itemData.styles[l].d += styleData.hd === true ? "" : pathStringTransformed;
            itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;
          }
        }
        function renderFill(styleData, itemData, isFirstFrame) {
          var styleElem = itemData.style;
          if (itemData.c._mdf || isFirstFrame) {
            styleElem.pElem.setAttribute("fill", "rgb(" + bmFloor(itemData.c.v[0]) + "," + bmFloor(itemData.c.v[1]) + "," + bmFloor(itemData.c.v[2]) + ")");
          }
          if (itemData.o._mdf || isFirstFrame) {
            styleElem.pElem.setAttribute("fill-opacity", itemData.o.v);
          }
        }
        function renderGradientStroke(styleData, itemData, isFirstFrame) {
          renderGradient(styleData, itemData, isFirstFrame);
          renderStroke(styleData, itemData, isFirstFrame);
        }
        function renderGradient(styleData, itemData, isFirstFrame) {
          var gfill = itemData.gf;
          var hasOpacity = itemData.g._hasOpacity;
          var pt1 = itemData.s.v;
          var pt2 = itemData.e.v;
          if (itemData.o._mdf || isFirstFrame) {
            var attr = styleData.ty === "gf" ? "fill-opacity" : "stroke-opacity";
            itemData.style.pElem.setAttribute(attr, itemData.o.v);
          }
          if (itemData.s._mdf || isFirstFrame) {
            var attr1 = styleData.t === 1 ? "x1" : "cx";
            var attr2 = attr1 === "x1" ? "y1" : "cy";
            gfill.setAttribute(attr1, pt1[0]);
            gfill.setAttribute(attr2, pt1[1]);
            if (hasOpacity && !itemData.g._collapsable) {
              itemData.of.setAttribute(attr1, pt1[0]);
              itemData.of.setAttribute(attr2, pt1[1]);
            }
          }
          var stops;
          var i;
          var len;
          var stop;
          if (itemData.g._cmdf || isFirstFrame) {
            stops = itemData.cst;
            var cValues = itemData.g.c;
            len = stops.length;
            for (i = 0; i < len; i += 1) {
              stop = stops[i];
              stop.setAttribute("offset", cValues[i * 4] + "%");
              stop.setAttribute("stop-color", "rgb(" + cValues[i * 4 + 1] + "," + cValues[i * 4 + 2] + "," + cValues[i * 4 + 3] + ")");
            }
          }
          if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {
            var oValues = itemData.g.o;
            if (itemData.g._collapsable) {
              stops = itemData.cst;
            } else {
              stops = itemData.ost;
            }
            len = stops.length;
            for (i = 0; i < len; i += 1) {
              stop = stops[i];
              if (!itemData.g._collapsable) {
                stop.setAttribute("offset", oValues[i * 2] + "%");
              }
              stop.setAttribute("stop-opacity", oValues[i * 2 + 1]);
            }
          }
          if (styleData.t === 1) {
            if (itemData.e._mdf || isFirstFrame) {
              gfill.setAttribute("x2", pt2[0]);
              gfill.setAttribute("y2", pt2[1]);
              if (hasOpacity && !itemData.g._collapsable) {
                itemData.of.setAttribute("x2", pt2[0]);
                itemData.of.setAttribute("y2", pt2[1]);
              }
            }
          } else {
            var rad;
            if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {
              rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
              gfill.setAttribute("r", rad);
              if (hasOpacity && !itemData.g._collapsable) {
                itemData.of.setAttribute("r", rad);
              }
            }
            if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {
              if (!rad) {
                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
              }
              var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);
              var percent = itemData.h.v;
              if (percent >= 1) {
                percent = 0.99;
              } else if (percent <= -1) {
                percent = -0.99;
              }
              var dist = rad * percent;
              var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];
              var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];
              gfill.setAttribute("fx", x);
              gfill.setAttribute("fy", y);
              if (hasOpacity && !itemData.g._collapsable) {
                itemData.of.setAttribute("fx", x);
                itemData.of.setAttribute("fy", y);
              }
            }
          }
        }
        function renderStroke(styleData, itemData, isFirstFrame) {
          var styleElem = itemData.style;
          var d = itemData.d;
          if (d && (d._mdf || isFirstFrame) && d.dashStr) {
            styleElem.pElem.setAttribute("stroke-dasharray", d.dashStr);
            styleElem.pElem.setAttribute("stroke-dashoffset", d.dashoffset[0]);
          }
          if (itemData.c && (itemData.c._mdf || isFirstFrame)) {
            styleElem.pElem.setAttribute("stroke", "rgb(" + bmFloor(itemData.c.v[0]) + "," + bmFloor(itemData.c.v[1]) + "," + bmFloor(itemData.c.v[2]) + ")");
          }
          if (itemData.o._mdf || isFirstFrame) {
            styleElem.pElem.setAttribute("stroke-opacity", itemData.o.v);
          }
          if (itemData.w._mdf || isFirstFrame) {
            styleElem.pElem.setAttribute("stroke-width", itemData.w.v);
            if (styleElem.msElem) {
              styleElem.msElem.setAttribute("stroke-width", itemData.w.v);
            }
          }
        }
        return ob;
      })();
      function ShapeTransformManager() {
        this.sequences = {};
        this.sequenceList = [];
        this.transform_key_count = 0;
      }
      ShapeTransformManager.prototype = {
        addTransformSequence: function(transforms) {
          var i;
          var len = transforms.length;
          var key = "_";
          for (i = 0; i < len; i += 1) {
            key += transforms[i].transform.key + "_";
          }
          var sequence = this.sequences[key];
          if (!sequence) {
            sequence = {
              transforms: [].concat(transforms),
              finalTransform: new Matrix(),
              _mdf: false
            };
            this.sequences[key] = sequence;
            this.sequenceList.push(sequence);
          }
          return sequence;
        },
        processSequence: function(sequence, isFirstFrame) {
          var i = 0;
          var len = sequence.transforms.length;
          var _mdf = isFirstFrame;
          while (i < len && !isFirstFrame) {
            if (sequence.transforms[i].transform.mProps._mdf) {
              _mdf = true;
              break;
            }
            i += 1;
          }
          if (_mdf) {
            var props;
            sequence.finalTransform.reset();
            for (i = len - 1; i >= 0; i -= 1) {
              props = sequence.transforms[i].transform.mProps.v.props;
              sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);
            }
          }
          sequence._mdf = _mdf;
        },
        processSequences: function(isFirstFrame) {
          var i;
          var len = this.sequenceList.length;
          for (i = 0; i < len; i += 1) {
            this.processSequence(this.sequenceList[i], isFirstFrame);
          }
        },
        getNewKey: function() {
          this.transform_key_count += 1;
          return "_" + this.transform_key_count;
        }
      };
      function BaseElement() {
      }
      BaseElement.prototype = {
        checkMasks: function() {
          if (!this.data.hasMask) {
            return false;
          }
          var i = 0;
          var len = this.data.masksProperties.length;
          while (i < len) {
            if (this.data.masksProperties[i].mode !== "n" && this.data.masksProperties[i].cl !== false) {
              return true;
            }
            i += 1;
          }
          return false;
        },
        initExpressions: function() {
          this.layerInterface = LayerExpressionInterface(this);
          if (this.data.hasMask && this.maskManager) {
            this.layerInterface.registerMaskInterface(this.maskManager);
          }
          var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);
          this.layerInterface.registerEffectsInterface(effectsInterface);
          if (this.data.ty === 0 || this.data.xt) {
            this.compInterface = CompExpressionInterface(this);
          } else if (this.data.ty === 4) {
            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);
            this.layerInterface.content = this.layerInterface.shapeInterface;
          } else if (this.data.ty === 5) {
            this.layerInterface.textInterface = TextExpressionInterface(this);
            this.layerInterface.text = this.layerInterface.textInterface;
          }
        },
        setBlendMode: function() {
          var blendModeValue = getBlendMode(this.data.bm);
          var elem = this.baseElement || this.layerElement;
          elem.style["mix-blend-mode"] = blendModeValue;
        },
        initBaseData: function(data, globalData, comp) {
          this.globalData = globalData;
          this.comp = comp;
          this.data = data;
          this.layerId = createElementID();
          if (!this.data.sr) {
            this.data.sr = 1;
          }
          this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);
        },
        getType: function() {
          return this.type;
        },
        sourceRectAtTime: function() {
        }
      };
      function NullElement(data, globalData, comp) {
        this.initFrame();
        this.initBaseData(data, globalData, comp);
        this.initFrame();
        this.initTransform(data, globalData, comp);
        this.initHierarchy();
      }
      NullElement.prototype.prepareFrame = function(num) {
        this.prepareProperties(num, true);
      };
      NullElement.prototype.renderFrame = function() {
      };
      NullElement.prototype.getBaseElement = function() {
        return null;
      };
      NullElement.prototype.destroy = function() {
      };
      NullElement.prototype.sourceRectAtTime = function() {
      };
      NullElement.prototype.hide = function() {
      };
      extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);
      function SVGBaseElement() {
      }
      SVGBaseElement.prototype = {
        initRendererElement: function() {
          this.layerElement = createNS("g");
        },
        createContainerElements: function() {
          this.matteElement = createNS("g");
          this.transformedElement = this.layerElement;
          this.maskedElement = this.layerElement;
          this._sizeChanged = false;
          var layerElementParent = null;
          var filId;
          var fil;
          var gg;
          if (this.data.td) {
            if (this.data.td == 3 || this.data.td == 1) {
              var masker = createNS("mask");
              masker.setAttribute("id", this.layerId);
              masker.setAttribute("mask-type", this.data.td == 3 ? "luminance" : "alpha");
              masker.appendChild(this.layerElement);
              layerElementParent = masker;
              this.globalData.defs.appendChild(masker);
              if (!featureSupport.maskType && this.data.td == 1) {
                masker.setAttribute("mask-type", "luminance");
                filId = createElementID();
                fil = filtersFactory.createFilter(filId);
                this.globalData.defs.appendChild(fil);
                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
                gg = createNS("g");
                gg.appendChild(this.layerElement);
                layerElementParent = gg;
                masker.appendChild(gg);
                gg.setAttribute("filter", "url(" + locationHref + "#" + filId + ")");
              }
            } else if (this.data.td == 2) {
              var maskGroup = createNS("mask");
              maskGroup.setAttribute("id", this.layerId);
              maskGroup.setAttribute("mask-type", "alpha");
              var maskGrouper = createNS("g");
              maskGroup.appendChild(maskGrouper);
              filId = createElementID();
              fil = filtersFactory.createFilter(filId);
              var feCTr = createNS("feComponentTransfer");
              feCTr.setAttribute("in", "SourceGraphic");
              fil.appendChild(feCTr);
              var feFunc = createNS("feFuncA");
              feFunc.setAttribute("type", "table");
              feFunc.setAttribute("tableValues", "1.0 0.0");
              feCTr.appendChild(feFunc);
              this.globalData.defs.appendChild(fil);
              var alphaRect = createNS("rect");
              alphaRect.setAttribute("width", this.comp.data.w);
              alphaRect.setAttribute("height", this.comp.data.h);
              alphaRect.setAttribute("x", "0");
              alphaRect.setAttribute("y", "0");
              alphaRect.setAttribute("fill", "#ffffff");
              alphaRect.setAttribute("opacity", "0");
              maskGrouper.setAttribute("filter", "url(" + locationHref + "#" + filId + ")");
              maskGrouper.appendChild(alphaRect);
              maskGrouper.appendChild(this.layerElement);
              layerElementParent = maskGrouper;
              if (!featureSupport.maskType) {
                maskGroup.setAttribute("mask-type", "luminance");
                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
                gg = createNS("g");
                maskGrouper.appendChild(alphaRect);
                gg.appendChild(this.layerElement);
                layerElementParent = gg;
                maskGrouper.appendChild(gg);
              }
              this.globalData.defs.appendChild(maskGroup);
            }
          } else if (this.data.tt) {
            this.matteElement.appendChild(this.layerElement);
            layerElementParent = this.matteElement;
            this.baseElement = this.matteElement;
          } else {
            this.baseElement = this.layerElement;
          }
          if (this.data.ln) {
            this.layerElement.setAttribute("id", this.data.ln);
          }
          if (this.data.cl) {
            this.layerElement.setAttribute("class", this.data.cl);
          }
          if (this.data.ty === 0 && !this.data.hd) {
            var cp = createNS("clipPath");
            var pt = createNS("path");
            pt.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
            var clipId = createElementID();
            cp.setAttribute("id", clipId);
            cp.appendChild(pt);
            this.globalData.defs.appendChild(cp);
            if (this.checkMasks()) {
              var cpGroup = createNS("g");
              cpGroup.setAttribute("clip-path", "url(" + locationHref + "#" + clipId + ")");
              cpGroup.appendChild(this.layerElement);
              this.transformedElement = cpGroup;
              if (layerElementParent) {
                layerElementParent.appendChild(this.transformedElement);
              } else {
                this.baseElement = this.transformedElement;
              }
            } else {
              this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + clipId + ")");
            }
          }
          if (this.data.bm !== 0) {
            this.setBlendMode();
          }
        },
        renderElement: function() {
          if (this.finalTransform._matMdf) {
            this.transformedElement.setAttribute("transform", this.finalTransform.mat.to2dCSS());
          }
          if (this.finalTransform._opMdf) {
            this.transformedElement.setAttribute("opacity", this.finalTransform.mProp.o.v);
          }
        },
        destroyBaseElement: function() {
          this.layerElement = null;
          this.matteElement = null;
          this.maskManager.destroy();
        },
        getBaseElement: function() {
          if (this.data.hd) {
            return null;
          }
          return this.baseElement;
        },
        createRenderableComponents: function() {
          this.maskManager = new MaskElement(this.data, this, this.globalData);
          this.renderableEffectsManager = new SVGEffects(this);
        },
        setMatte: function(id) {
          if (!this.matteElement) {
            return;
          }
          this.matteElement.setAttribute("mask", "url(" + locationHref + "#" + id + ")");
        }
      };
      function IShapeElement() {
      }
      IShapeElement.prototype = {
        addShapeToModifiers: function(data) {
          var i;
          var len = this.shapeModifiers.length;
          for (i = 0; i < len; i += 1) {
            this.shapeModifiers[i].addShape(data);
          }
        },
        isShapeInAnimatedModifiers: function(data) {
          var i = 0;
          var len = this.shapeModifiers.length;
          while (i < len) {
            if (this.shapeModifiers[i].isAnimatedWithShape(data)) {
              return true;
            }
          }
          return false;
        },
        renderModifiers: function() {
          if (!this.shapeModifiers.length) {
            return;
          }
          var i;
          var len = this.shapes.length;
          for (i = 0; i < len; i += 1) {
            this.shapes[i].sh.reset();
          }
          len = this.shapeModifiers.length;
          var shouldBreakProcess;
          for (i = len - 1; i >= 0; i -= 1) {
            shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame);
            if (shouldBreakProcess) {
              break;
            }
          }
        },
        searchProcessedElement: function(elem) {
          var elements = this.processedElements;
          var i = 0;
          var len = elements.length;
          while (i < len) {
            if (elements[i].elem === elem) {
              return elements[i].pos;
            }
            i += 1;
          }
          return 0;
        },
        addProcessedElement: function(elem, pos) {
          var elements = this.processedElements;
          var i = elements.length;
          while (i) {
            i -= 1;
            if (elements[i].elem === elem) {
              elements[i].pos = pos;
              return;
            }
          }
          elements.push(new ProcessedElement(elem, pos));
        },
        prepareFrame: function(num) {
          this.prepareRenderableFrame(num);
          this.prepareProperties(num, this.isInRange);
        }
      };
      function ITextElement() {
      }
      ITextElement.prototype.initElement = function(data, globalData, comp) {
        this.lettersChangedFlag = true;
        this.initFrame();
        this.initBaseData(data, globalData, comp);
        this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);
        this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);
        this.initTransform(data, globalData, comp);
        this.initHierarchy();
        this.initRenderable();
        this.initRendererElement();
        this.createContainerElements();
        this.createRenderableComponents();
        this.createContent();
        this.hide();
        this.textAnimator.searchProperties(this.dynamicProperties);
      };
      ITextElement.prototype.prepareFrame = function(num) {
        this._mdf = false;
        this.prepareRenderableFrame(num);
        this.prepareProperties(num, this.isInRange);
        if (this.textProperty._mdf || this.textProperty._isFirstFrame) {
          this.buildNewText();
          this.textProperty._isFirstFrame = false;
          this.textProperty._mdf = false;
        }
      };
      ITextElement.prototype.createPathShape = function(matrixHelper, shapes) {
        var j;
        var jLen = shapes.length;
        var pathNodes;
        var shapeStr = "";
        for (j = 0; j < jLen; j += 1) {
          pathNodes = shapes[j].ks.k;
          shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);
        }
        return shapeStr;
      };
      ITextElement.prototype.updateDocumentData = function(newData, index2) {
        this.textProperty.updateDocumentData(newData, index2);
      };
      ITextElement.prototype.canResizeFont = function(_canResize) {
        this.textProperty.canResizeFont(_canResize);
      };
      ITextElement.prototype.setMinimumFontSize = function(_fontSize) {
        this.textProperty.setMinimumFontSize(_fontSize);
      };
      ITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {
        if (documentData.ps) {
          matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);
        }
        matrixHelper.translate(0, -documentData.ls, 0);
        switch (documentData.j) {
          case 1:
            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);
            break;
          case 2:
            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);
            break;
          default:
            break;
        }
        matrixHelper.translate(xPos, yPos, 0);
      };
      ITextElement.prototype.buildColor = function(colorData) {
        return "rgb(" + Math.round(colorData[0] * 255) + "," + Math.round(colorData[1] * 255) + "," + Math.round(colorData[2] * 255) + ")";
      };
      ITextElement.prototype.emptyProp = new LetterProps();
      ITextElement.prototype.destroy = function() {
      };
      function ICompElement() {
      }
      extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);
      ICompElement.prototype.initElement = function(data, globalData, comp) {
        this.initFrame();
        this.initBaseData(data, globalData, comp);
        this.initTransform(data, globalData, comp);
        this.initRenderable();
        this.initHierarchy();
        this.initRendererElement();
        this.createContainerElements();
        this.createRenderableComponents();
        if (this.data.xt || !globalData.progressiveLoad) {
          this.buildAllItems();
        }
        this.hide();
      };
      ICompElement.prototype.prepareFrame = function(num) {
        this._mdf = false;
        this.prepareRenderableFrame(num);
        this.prepareProperties(num, this.isInRange);
        if (!this.isInRange && !this.data.xt) {
          return;
        }
        if (!this.tm._placeholder) {
          var timeRemapped = this.tm.v;
          if (timeRemapped === this.data.op) {
            timeRemapped = this.data.op - 1;
          }
          this.renderedFrame = timeRemapped;
        } else {
          this.renderedFrame = num / this.data.sr;
        }
        var i;
        var len = this.elements.length;
        if (!this.completeLayers) {
          this.checkLayers(this.renderedFrame);
        }
        for (i = len - 1; i >= 0; i -= 1) {
          if (this.completeLayers || this.elements[i]) {
            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);
            if (this.elements[i]._mdf) {
              this._mdf = true;
            }
          }
        }
      };
      ICompElement.prototype.renderInnerContent = function() {
        var i;
        var len = this.layers.length;
        for (i = 0; i < len; i += 1) {
          if (this.completeLayers || this.elements[i]) {
            this.elements[i].renderFrame();
          }
        }
      };
      ICompElement.prototype.setElements = function(elems) {
        this.elements = elems;
      };
      ICompElement.prototype.getElements = function() {
        return this.elements;
      };
      ICompElement.prototype.destroyElements = function() {
        var i;
        var len = this.layers.length;
        for (i = 0; i < len; i += 1) {
          if (this.elements[i]) {
            this.elements[i].destroy();
          }
        }
      };
      ICompElement.prototype.destroy = function() {
        this.destroyElements();
        this.destroyBaseElement();
      };
      function IImageElement(data, globalData, comp) {
        this.assetData = globalData.getAssetData(data.refId);
        this.initElement(data, globalData, comp);
        this.sourceRect = {
          top: 0,
          left: 0,
          width: this.assetData.w,
          height: this.assetData.h
        };
      }
      extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);
      IImageElement.prototype.createContent = function() {
        var assetPath = this.globalData.getAssetsPath(this.assetData);
        this.innerElem = createNS("image");
        this.innerElem.setAttribute("width", this.assetData.w + "px");
        this.innerElem.setAttribute("height", this.assetData.h + "px");
        this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);
        this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", assetPath);
        this.layerElement.appendChild(this.innerElem);
      };
      IImageElement.prototype.sourceRectAtTime = function() {
        return this.sourceRect;
      };
      function ISolidElement(data, globalData, comp) {
        this.initElement(data, globalData, comp);
      }
      extendPrototype([IImageElement], ISolidElement);
      ISolidElement.prototype.createContent = function() {
        var rect = createNS("rect");
        rect.setAttribute("width", this.data.sw);
        rect.setAttribute("height", this.data.sh);
        rect.setAttribute("fill", this.data.sc);
        this.layerElement.appendChild(rect);
      };
      function AudioElement(data, globalData, comp) {
        this.initFrame();
        this.initRenderable();
        this.assetData = globalData.getAssetData(data.refId);
        this.initBaseData(data, globalData, comp);
        this._isPlaying = false;
        this._canPlay = false;
        var assetPath = this.globalData.getAssetsPath(this.assetData);
        this.audio = this.globalData.audioController.createAudio(assetPath);
        this._currentTime = 0;
        this.globalData.audioController.addAudio(this);
        this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true };
      }
      AudioElement.prototype.prepareFrame = function(num) {
        this.prepareRenderableFrame(num, true);
        this.prepareProperties(num, true);
        if (!this.tm._placeholder) {
          var timeRemapped = this.tm.v;
          this._currentTime = timeRemapped;
        } else {
          this._currentTime = num / this.data.sr;
        }
      };
      extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);
      AudioElement.prototype.renderFrame = function() {
        if (this.isInRange && this._canPlay) {
          if (!this._isPlaying) {
            this.audio.play();
            this.audio.seek(this._currentTime / this.globalData.frameRate);
            this._isPlaying = true;
          } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {
            this.audio.seek(this._currentTime / this.globalData.frameRate);
          }
        }
      };
      AudioElement.prototype.show = function() {
      };
      AudioElement.prototype.hide = function() {
        this.audio.pause();
        this._isPlaying = false;
      };
      AudioElement.prototype.pause = function() {
        this.audio.pause();
        this._isPlaying = false;
        this._canPlay = false;
      };
      AudioElement.prototype.resume = function() {
        this._canPlay = true;
      };
      AudioElement.prototype.setRate = function(rateValue) {
        this.audio.rate(rateValue);
      };
      AudioElement.prototype.volume = function(volumeValue) {
        this.audio.volume(volumeValue);
      };
      AudioElement.prototype.getBaseElement = function() {
        return null;
      };
      AudioElement.prototype.destroy = function() {
      };
      AudioElement.prototype.sourceRectAtTime = function() {
      };
      AudioElement.prototype.initExpressions = function() {
      };
      function SVGCompElement(data, globalData, comp) {
        this.layers = data.layers;
        this.supports3d = true;
        this.completeLayers = false;
        this.pendingElements = [];
        this.elements = this.layers ? createSizedArray(this.layers.length) : [];
        this.initElement(data, globalData, comp);
        this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true };
      }
      extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);
      function SVGTextLottieElement(data, globalData, comp) {
        this.textSpans = [];
        this.renderType = "svg";
        this.initElement(data, globalData, comp);
      }
      extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);
      SVGTextLottieElement.prototype.createContent = function() {
        if (this.data.singleShape && !this.globalData.fontManager.chars) {
          this.textContainer = createNS("text");
        }
      };
      SVGTextLottieElement.prototype.buildTextContents = function(textArray) {
        var i = 0;
        var len = textArray.length;
        var textContents = [];
        var currentTextContent = "";
        while (i < len) {
          if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {
            textContents.push(currentTextContent);
            currentTextContent = "";
          } else {
            currentTextContent += textArray[i];
          }
          i += 1;
        }
        textContents.push(currentTextContent);
        return textContents;
      };
      SVGTextLottieElement.prototype.buildNewText = function() {
        var i;
        var len;
        var documentData = this.textProperty.currentData;
        this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);
        if (documentData.fc) {
          this.layerElement.setAttribute("fill", this.buildColor(documentData.fc));
        } else {
          this.layerElement.setAttribute("fill", "rgba(0,0,0,0)");
        }
        if (documentData.sc) {
          this.layerElement.setAttribute("stroke", this.buildColor(documentData.sc));
          this.layerElement.setAttribute("stroke-width", documentData.sw);
        }
        this.layerElement.setAttribute("font-size", documentData.finalSize);
        var fontData = this.globalData.fontManager.getFontByName(documentData.f);
        if (fontData.fClass) {
          this.layerElement.setAttribute("class", fontData.fClass);
        } else {
          this.layerElement.setAttribute("font-family", fontData.fFamily);
          var fWeight = documentData.fWeight;
          var fStyle = documentData.fStyle;
          this.layerElement.setAttribute("font-style", fStyle);
          this.layerElement.setAttribute("font-weight", fWeight);
        }
        this.layerElement.setAttribute("aria-label", documentData.t);
        var letters = documentData.l || [];
        var usesGlyphs = !!this.globalData.fontManager.chars;
        len = letters.length;
        var tSpan;
        var matrixHelper = this.mHelper;
        var shapes;
        var shapeStr = "";
        var singleShape = this.data.singleShape;
        var xPos = 0;
        var yPos = 0;
        var firstLine = true;
        var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;
        if (singleShape && !usesGlyphs && !documentData.sz) {
          var tElement = this.textContainer;
          var justify = "start";
          switch (documentData.j) {
            case 1:
              justify = "end";
              break;
            case 2:
              justify = "middle";
              break;
            default:
              justify = "start";
              break;
          }
          tElement.setAttribute("text-anchor", justify);
          tElement.setAttribute("letter-spacing", trackingOffset);
          var textContent = this.buildTextContents(documentData.finalText);
          len = textContent.length;
          yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;
          for (i = 0; i < len; i += 1) {
            tSpan = this.textSpans[i] || createNS("tspan");
            tSpan.textContent = textContent[i];
            tSpan.setAttribute("x", 0);
            tSpan.setAttribute("y", yPos);
            tSpan.style.display = "inherit";
            tElement.appendChild(tSpan);
            this.textSpans[i] = tSpan;
            yPos += documentData.finalLineHeight;
          }
          this.layerElement.appendChild(tElement);
        } else {
          var cachedSpansLength = this.textSpans.length;
          var shapeData;
          var charData;
          for (i = 0; i < len; i += 1) {
            if (!usesGlyphs || !singleShape || i === 0) {
              tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs ? "path" : "text");
              if (cachedSpansLength <= i) {
                tSpan.setAttribute("stroke-linecap", "butt");
                tSpan.setAttribute("stroke-linejoin", "round");
                tSpan.setAttribute("stroke-miterlimit", "4");
                this.textSpans[i] = tSpan;
                this.layerElement.appendChild(tSpan);
              }
              tSpan.style.display = "inherit";
            }
            matrixHelper.reset();
            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
            if (singleShape) {
              if (letters[i].n) {
                xPos = -trackingOffset;
                yPos += documentData.yOffset;
                yPos += firstLine ? 1 : 0;
                firstLine = false;
              }
              this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);
              xPos += letters[i].l || 0;
              xPos += trackingOffset;
            }
            if (usesGlyphs) {
              charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
              shapeData = charData && charData.data || {};
              shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
              if (!singleShape) {
                tSpan.setAttribute("d", this.createPathShape(matrixHelper, shapes));
              } else {
                shapeStr += this.createPathShape(matrixHelper, shapes);
              }
            } else {
              if (singleShape) {
                tSpan.setAttribute("transform", "translate(" + matrixHelper.props[12] + "," + matrixHelper.props[13] + ")");
              }
              tSpan.textContent = letters[i].val;
              tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");
            }
          }
          if (singleShape && tSpan) {
            tSpan.setAttribute("d", shapeStr);
          }
        }
        while (i < this.textSpans.length) {
          this.textSpans[i].style.display = "none";
          i += 1;
        }
        this._sizeChanged = true;
      };
      SVGTextLottieElement.prototype.sourceRectAtTime = function() {
        this.prepareFrame(this.comp.renderedFrame - this.data.st);
        this.renderInnerContent();
        if (this._sizeChanged) {
          this._sizeChanged = false;
          var textBox = this.layerElement.getBBox();
          this.bbox = {
            top: textBox.y,
            left: textBox.x,
            width: textBox.width,
            height: textBox.height
          };
        }
        return this.bbox;
      };
      SVGTextLottieElement.prototype.renderInnerContent = function() {
        if (!this.data.singleShape) {
          this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
          if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
            this._sizeChanged = true;
            var i;
            var len;
            var renderedLetters = this.textAnimator.renderedLetters;
            var letters = this.textProperty.currentData.l;
            len = letters.length;
            var renderedLetter;
            var textSpan;
            for (i = 0; i < len; i += 1) {
              if (!letters[i].n) {
                renderedLetter = renderedLetters[i];
                textSpan = this.textSpans[i];
                if (renderedLetter._mdf.m) {
                  textSpan.setAttribute("transform", renderedLetter.m);
                }
                if (renderedLetter._mdf.o) {
                  textSpan.setAttribute("opacity", renderedLetter.o);
                }
                if (renderedLetter._mdf.sw) {
                  textSpan.setAttribute("stroke-width", renderedLetter.sw);
                }
                if (renderedLetter._mdf.sc) {
                  textSpan.setAttribute("stroke", renderedLetter.sc);
                }
                if (renderedLetter._mdf.fc) {
                  textSpan.setAttribute("fill", renderedLetter.fc);
                }
              }
            }
          }
        }
      };
      function SVGShapeElement(data, globalData, comp) {
        this.shapes = [];
        this.shapesData = data.shapes;
        this.stylesList = [];
        this.shapeModifiers = [];
        this.itemsData = [];
        this.processedElements = [];
        this.animatedContents = [];
        this.initElement(data, globalData, comp);
        this.prevViewData = [];
      }
      extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);
      SVGShapeElement.prototype.initSecondaryElement = function() {
      };
      SVGShapeElement.prototype.identityMatrix = new Matrix();
      SVGShapeElement.prototype.buildExpressionInterface = function() {
      };
      SVGShapeElement.prototype.createContent = function() {
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);
        this.filterUniqueShapes();
      };
      SVGShapeElement.prototype.filterUniqueShapes = function() {
        var i;
        var len = this.shapes.length;
        var shape;
        var j;
        var jLen = this.stylesList.length;
        var style;
        var tempShapes = [];
        var areAnimated = false;
        for (j = 0; j < jLen; j += 1) {
          style = this.stylesList[j];
          areAnimated = false;
          tempShapes.length = 0;
          for (i = 0; i < len; i += 1) {
            shape = this.shapes[i];
            if (shape.styles.indexOf(style) !== -1) {
              tempShapes.push(shape);
              areAnimated = shape._isAnimated || areAnimated;
            }
          }
          if (tempShapes.length > 1 && areAnimated) {
            this.setShapesAsAnimated(tempShapes);
          }
        }
      };
      SVGShapeElement.prototype.setShapesAsAnimated = function(shapes) {
        var i;
        var len = shapes.length;
        for (i = 0; i < len; i += 1) {
          shapes[i].setAsAnimated();
        }
      };
      SVGShapeElement.prototype.createStyleElement = function(data, level) {
        var elementData;
        var styleOb = new SVGStyleData(data, level);
        var pathElement = styleOb.pElem;
        if (data.ty === "st") {
          elementData = new SVGStrokeStyleData(this, data, styleOb);
        } else if (data.ty === "fl") {
          elementData = new SVGFillStyleData(this, data, styleOb);
        } else if (data.ty === "gf" || data.ty === "gs") {
          var GradientConstructor = data.ty === "gf" ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;
          elementData = new GradientConstructor(this, data, styleOb);
          this.globalData.defs.appendChild(elementData.gf);
          if (elementData.maskId) {
            this.globalData.defs.appendChild(elementData.ms);
            this.globalData.defs.appendChild(elementData.of);
            pathElement.setAttribute("mask", "url(" + locationHref + "#" + elementData.maskId + ")");
          }
        }
        if (data.ty === "st" || data.ty === "gs") {
          pathElement.setAttribute("stroke-linecap", lineCapEnum[data.lc || 2]);
          pathElement.setAttribute("stroke-linejoin", lineJoinEnum[data.lj || 2]);
          pathElement.setAttribute("fill-opacity", "0");
          if (data.lj === 1) {
            pathElement.setAttribute("stroke-miterlimit", data.ml);
          }
        }
        if (data.r === 2) {
          pathElement.setAttribute("fill-rule", "evenodd");
        }
        if (data.ln) {
          pathElement.setAttribute("id", data.ln);
        }
        if (data.cl) {
          pathElement.setAttribute("class", data.cl);
        }
        if (data.bm) {
          pathElement.style["mix-blend-mode"] = getBlendMode(data.bm);
        }
        this.stylesList.push(styleOb);
        this.addToAnimatedContents(data, elementData);
        return elementData;
      };
      SVGShapeElement.prototype.createGroupElement = function(data) {
        var elementData = new ShapeGroupData();
        if (data.ln) {
          elementData.gr.setAttribute("id", data.ln);
        }
        if (data.cl) {
          elementData.gr.setAttribute("class", data.cl);
        }
        if (data.bm) {
          elementData.gr.style["mix-blend-mode"] = getBlendMode(data.bm);
        }
        return elementData;
      };
      SVGShapeElement.prototype.createTransformElement = function(data, container) {
        var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);
        var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);
        this.addToAnimatedContents(data, elementData);
        return elementData;
      };
      SVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {
        var ty = 4;
        if (data.ty === "rc") {
          ty = 5;
        } else if (data.ty === "el") {
          ty = 6;
        } else if (data.ty === "sr") {
          ty = 7;
        }
        var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);
        var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);
        this.shapes.push(elementData);
        this.addShapeToModifiers(elementData);
        this.addToAnimatedContents(data, elementData);
        return elementData;
      };
      SVGShapeElement.prototype.addToAnimatedContents = function(data, element) {
        var i = 0;
        var len = this.animatedContents.length;
        while (i < len) {
          if (this.animatedContents[i].element === element) {
            return;
          }
          i += 1;
        }
        this.animatedContents.push({
          fn: SVGElementsRenderer.createRenderFunction(data),
          element,
          data
        });
      };
      SVGShapeElement.prototype.setElementStyles = function(elementData) {
        var arr = elementData.styles;
        var j;
        var jLen = this.stylesList.length;
        for (j = 0; j < jLen; j += 1) {
          if (!this.stylesList[j].closed) {
            arr.push(this.stylesList[j]);
          }
        }
      };
      SVGShapeElement.prototype.reloadShapes = function() {
        this._isFirstFrame = true;
        var i;
        var len = this.itemsData.length;
        for (i = 0; i < len; i += 1) {
          this.prevViewData[i] = this.itemsData[i];
        }
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);
        this.filterUniqueShapes();
        len = this.dynamicProperties.length;
        for (i = 0; i < len; i += 1) {
          this.dynamicProperties[i].getValue();
        }
        this.renderModifiers();
      };
      SVGShapeElement.prototype.searchShapes = function(arr, itemsData, prevViewData, container, level, transformers, render) {
        var ownTransformers = [].concat(transformers);
        var i;
        var len = arr.length - 1;
        var j;
        var jLen;
        var ownStyles = [];
        var ownModifiers = [];
        var currentTransform;
        var modifier;
        var processedPos;
        for (i = len; i >= 0; i -= 1) {
          processedPos = this.searchProcessedElement(arr[i]);
          if (!processedPos) {
            arr[i]._render = render;
          } else {
            itemsData[i] = prevViewData[processedPos - 1];
          }
          if (arr[i].ty === "fl" || arr[i].ty === "st" || arr[i].ty === "gf" || arr[i].ty === "gs") {
            if (!processedPos) {
              itemsData[i] = this.createStyleElement(arr[i], level);
            } else {
              itemsData[i].style.closed = false;
            }
            if (arr[i]._render) {
              if (itemsData[i].style.pElem.parentNode !== container) {
                container.appendChild(itemsData[i].style.pElem);
              }
            }
            ownStyles.push(itemsData[i].style);
          } else if (arr[i].ty === "gr") {
            if (!processedPos) {
              itemsData[i] = this.createGroupElement(arr[i]);
            } else {
              jLen = itemsData[i].it.length;
              for (j = 0; j < jLen; j += 1) {
                itemsData[i].prevViewData[j] = itemsData[i].it[j];
              }
            }
            this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);
            if (arr[i]._render) {
              if (itemsData[i].gr.parentNode !== container) {
                container.appendChild(itemsData[i].gr);
              }
            }
          } else if (arr[i].ty === "tr") {
            if (!processedPos) {
              itemsData[i] = this.createTransformElement(arr[i], container);
            }
            currentTransform = itemsData[i].transform;
            ownTransformers.push(currentTransform);
          } else if (arr[i].ty === "sh" || arr[i].ty === "rc" || arr[i].ty === "el" || arr[i].ty === "sr") {
            if (!processedPos) {
              itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);
            }
            this.setElementStyles(itemsData[i]);
          } else if (arr[i].ty === "tm" || arr[i].ty === "rd" || arr[i].ty === "ms" || arr[i].ty === "pb") {
            if (!processedPos) {
              modifier = ShapeModifiers.getModifier(arr[i].ty);
              modifier.init(this, arr[i]);
              itemsData[i] = modifier;
              this.shapeModifiers.push(modifier);
            } else {
              modifier = itemsData[i];
              modifier.closed = false;
            }
            ownModifiers.push(modifier);
          } else if (arr[i].ty === "rp") {
            if (!processedPos) {
              modifier = ShapeModifiers.getModifier(arr[i].ty);
              itemsData[i] = modifier;
              modifier.init(this, arr, i, itemsData);
              this.shapeModifiers.push(modifier);
              render = false;
            } else {
              modifier = itemsData[i];
              modifier.closed = true;
            }
            ownModifiers.push(modifier);
          }
          this.addProcessedElement(arr[i], i + 1);
        }
        len = ownStyles.length;
        for (i = 0; i < len; i += 1) {
          ownStyles[i].closed = true;
        }
        len = ownModifiers.length;
        for (i = 0; i < len; i += 1) {
          ownModifiers[i].closed = true;
        }
      };
      SVGShapeElement.prototype.renderInnerContent = function() {
        this.renderModifiers();
        var i;
        var len = this.stylesList.length;
        for (i = 0; i < len; i += 1) {
          this.stylesList[i].reset();
        }
        this.renderShape();
        for (i = 0; i < len; i += 1) {
          if (this.stylesList[i]._mdf || this._isFirstFrame) {
            if (this.stylesList[i].msElem) {
              this.stylesList[i].msElem.setAttribute("d", this.stylesList[i].d);
              this.stylesList[i].d = "M0 0" + this.stylesList[i].d;
            }
            this.stylesList[i].pElem.setAttribute("d", this.stylesList[i].d || "M0 0");
          }
        }
      };
      SVGShapeElement.prototype.renderShape = function() {
        var i;
        var len = this.animatedContents.length;
        var animatedContent;
        for (i = 0; i < len; i += 1) {
          animatedContent = this.animatedContents[i];
          if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {
            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);
          }
        }
      };
      SVGShapeElement.prototype.destroy = function() {
        this.destroyBaseElement();
        this.shapesData = null;
        this.itemsData = null;
      };
      function SVGTintFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var feColorMatrix = createNS("feColorMatrix");
        feColorMatrix.setAttribute("type", "matrix");
        feColorMatrix.setAttribute("color-interpolation-filters", "linearRGB");
        feColorMatrix.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0");
        feColorMatrix.setAttribute("result", "f1");
        filter.appendChild(feColorMatrix);
        feColorMatrix = createNS("feColorMatrix");
        feColorMatrix.setAttribute("type", "matrix");
        feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
        feColorMatrix.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0");
        feColorMatrix.setAttribute("result", "f2");
        filter.appendChild(feColorMatrix);
        this.matrixFilter = feColorMatrix;
        if (filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k) {
          var feMerge = createNS("feMerge");
          filter.appendChild(feMerge);
          var feMergeNode;
          feMergeNode = createNS("feMergeNode");
          feMergeNode.setAttribute("in", "SourceGraphic");
          feMerge.appendChild(feMergeNode);
          feMergeNode = createNS("feMergeNode");
          feMergeNode.setAttribute("in", "f2");
          feMerge.appendChild(feMergeNode);
        }
      }
      SVGTintFilter.prototype.renderFrame = function(forceRender) {
        if (forceRender || this.filterManager._mdf) {
          var colorBlack = this.filterManager.effectElements[0].p.v;
          var colorWhite = this.filterManager.effectElements[1].p.v;
          var opacity = this.filterManager.effectElements[2].p.v / 100;
          this.matrixFilter.setAttribute("values", colorWhite[0] - colorBlack[0] + " 0 0 0 " + colorBlack[0] + " " + (colorWhite[1] - colorBlack[1]) + " 0 0 0 " + colorBlack[1] + " " + (colorWhite[2] - colorBlack[2]) + " 0 0 0 " + colorBlack[2] + " 0 0 0 " + opacity + " 0");
        }
      };
      function SVGFillFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var feColorMatrix = createNS("feColorMatrix");
        feColorMatrix.setAttribute("type", "matrix");
        feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
        feColorMatrix.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0");
        filter.appendChild(feColorMatrix);
        this.matrixFilter = feColorMatrix;
      }
      SVGFillFilter.prototype.renderFrame = function(forceRender) {
        if (forceRender || this.filterManager._mdf) {
          var color = this.filterManager.effectElements[2].p.v;
          var opacity = this.filterManager.effectElements[6].p.v;
          this.matrixFilter.setAttribute("values", "0 0 0 0 " + color[0] + " 0 0 0 0 " + color[1] + " 0 0 0 0 " + color[2] + " 0 0 0 " + opacity + " 0");
        }
      };
      function SVGGaussianBlurEffect(filter, filterManager) {
        filter.setAttribute("x", "-100%");
        filter.setAttribute("y", "-100%");
        filter.setAttribute("width", "300%");
        filter.setAttribute("height", "300%");
        this.filterManager = filterManager;
        var feGaussianBlur = createNS("feGaussianBlur");
        filter.appendChild(feGaussianBlur);
        this.feGaussianBlur = feGaussianBlur;
      }
      SVGGaussianBlurEffect.prototype.renderFrame = function(forceRender) {
        if (forceRender || this.filterManager._mdf) {
          var kBlurrinessToSigma = 0.3;
          var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;
          var dimensions = this.filterManager.effectElements[1].p.v;
          var sigmaX = dimensions == 3 ? 0 : sigma;
          var sigmaY = dimensions == 2 ? 0 : sigma;
          this.feGaussianBlur.setAttribute("stdDeviation", sigmaX + " " + sigmaY);
          var edgeMode = this.filterManager.effectElements[2].p.v == 1 ? "wrap" : "duplicate";
          this.feGaussianBlur.setAttribute("edgeMode", edgeMode);
        }
      };
      function SVGStrokeEffect(elem, filterManager) {
        this.initialized = false;
        this.filterManager = filterManager;
        this.elem = elem;
        this.paths = [];
      }
      SVGStrokeEffect.prototype.initialize = function() {
        var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
        var path;
        var groupPath;
        var i;
        var len;
        if (this.filterManager.effectElements[1].p.v === 1) {
          len = this.elem.maskManager.masksProperties.length;
          i = 0;
        } else {
          i = this.filterManager.effectElements[0].p.v - 1;
          len = i + 1;
        }
        groupPath = createNS("g");
        groupPath.setAttribute("fill", "none");
        groupPath.setAttribute("stroke-linecap", "round");
        groupPath.setAttribute("stroke-dashoffset", 1);
        for (i; i < len; i += 1) {
          path = createNS("path");
          groupPath.appendChild(path);
          this.paths.push({ p: path, m: i });
        }
        if (this.filterManager.effectElements[10].p.v === 3) {
          var mask = createNS("mask");
          var id = createElementID();
          mask.setAttribute("id", id);
          mask.setAttribute("mask-type", "alpha");
          mask.appendChild(groupPath);
          this.elem.globalData.defs.appendChild(mask);
          var g = createNS("g");
          g.setAttribute("mask", "url(" + locationHref + "#" + id + ")");
          while (elemChildren[0]) {
            g.appendChild(elemChildren[0]);
          }
          this.elem.layerElement.appendChild(g);
          this.masker = mask;
          groupPath.setAttribute("stroke", "#fff");
        } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {
          if (this.filterManager.effectElements[10].p.v === 2) {
            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
            while (elemChildren.length) {
              this.elem.layerElement.removeChild(elemChildren[0]);
            }
          }
          this.elem.layerElement.appendChild(groupPath);
          this.elem.layerElement.removeAttribute("mask");
          groupPath.setAttribute("stroke", "#fff");
        }
        this.initialized = true;
        this.pathMasker = groupPath;
      };
      SVGStrokeEffect.prototype.renderFrame = function(forceRender) {
        if (!this.initialized) {
          this.initialize();
        }
        var i;
        var len = this.paths.length;
        var mask;
        var path;
        for (i = 0; i < len; i += 1) {
          if (this.paths[i].m !== -1) {
            mask = this.elem.maskManager.viewData[this.paths[i].m];
            path = this.paths[i].p;
            if (forceRender || this.filterManager._mdf || mask.prop._mdf) {
              path.setAttribute("d", mask.lastPath);
            }
            if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {
              var dasharrayValue;
              if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {
                var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;
                var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;
                var l = path.getTotalLength();
                dasharrayValue = "0 0 0 " + l * s + " ";
                var lineLength = l * (e - s);
                var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;
                var units = Math.floor(lineLength / segment);
                var j;
                for (j = 0; j < units; j += 1) {
                  dasharrayValue += "1 " + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01 + " ";
                }
                dasharrayValue += "0 " + l * 10 + " 0 0";
              } else {
                dasharrayValue = "1 " + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;
              }
              path.setAttribute("stroke-dasharray", dasharrayValue);
            }
          }
        }
        if (forceRender || this.filterManager.effectElements[4].p._mdf) {
          this.pathMasker.setAttribute("stroke-width", this.filterManager.effectElements[4].p.v * 2);
        }
        if (forceRender || this.filterManager.effectElements[6].p._mdf) {
          this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v);
        }
        if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {
          if (forceRender || this.filterManager.effectElements[3].p._mdf) {
            var color = this.filterManager.effectElements[3].p.v;
            this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(color[0] * 255) + "," + bmFloor(color[1] * 255) + "," + bmFloor(color[2] * 255) + ")");
          }
        }
      };
      function SVGTritoneFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var feColorMatrix = createNS("feColorMatrix");
        feColorMatrix.setAttribute("type", "matrix");
        feColorMatrix.setAttribute("color-interpolation-filters", "linearRGB");
        feColorMatrix.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0");
        feColorMatrix.setAttribute("result", "f1");
        filter.appendChild(feColorMatrix);
        var feComponentTransfer = createNS("feComponentTransfer");
        feComponentTransfer.setAttribute("color-interpolation-filters", "sRGB");
        filter.appendChild(feComponentTransfer);
        this.matrixFilter = feComponentTransfer;
        var feFuncR = createNS("feFuncR");
        feFuncR.setAttribute("type", "table");
        feComponentTransfer.appendChild(feFuncR);
        this.feFuncR = feFuncR;
        var feFuncG = createNS("feFuncG");
        feFuncG.setAttribute("type", "table");
        feComponentTransfer.appendChild(feFuncG);
        this.feFuncG = feFuncG;
        var feFuncB = createNS("feFuncB");
        feFuncB.setAttribute("type", "table");
        feComponentTransfer.appendChild(feFuncB);
        this.feFuncB = feFuncB;
      }
      SVGTritoneFilter.prototype.renderFrame = function(forceRender) {
        if (forceRender || this.filterManager._mdf) {
          var color1 = this.filterManager.effectElements[0].p.v;
          var color2 = this.filterManager.effectElements[1].p.v;
          var color3 = this.filterManager.effectElements[2].p.v;
          var tableR = color3[0] + " " + color2[0] + " " + color1[0];
          var tableG = color3[1] + " " + color2[1] + " " + color1[1];
          var tableB = color3[2] + " " + color2[2] + " " + color1[2];
          this.feFuncR.setAttribute("tableValues", tableR);
          this.feFuncG.setAttribute("tableValues", tableG);
          this.feFuncB.setAttribute("tableValues", tableB);
        }
      };
      function SVGProLevelsFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var effectElements = this.filterManager.effectElements;
        var feComponentTransfer = createNS("feComponentTransfer");
        if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {
          this.feFuncR = this.createFeFunc("feFuncR", feComponentTransfer);
        }
        if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {
          this.feFuncG = this.createFeFunc("feFuncG", feComponentTransfer);
        }
        if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {
          this.feFuncB = this.createFeFunc("feFuncB", feComponentTransfer);
        }
        if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {
          this.feFuncA = this.createFeFunc("feFuncA", feComponentTransfer);
        }
        if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {
          feComponentTransfer.setAttribute("color-interpolation-filters", "sRGB");
          filter.appendChild(feComponentTransfer);
          feComponentTransfer = createNS("feComponentTransfer");
        }
        if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {
          feComponentTransfer.setAttribute("color-interpolation-filters", "sRGB");
          filter.appendChild(feComponentTransfer);
          this.feFuncRComposed = this.createFeFunc("feFuncR", feComponentTransfer);
          this.feFuncGComposed = this.createFeFunc("feFuncG", feComponentTransfer);
          this.feFuncBComposed = this.createFeFunc("feFuncB", feComponentTransfer);
        }
      }
      SVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {
        var feFunc = createNS(type);
        feFunc.setAttribute("type", "table");
        feComponentTransfer.appendChild(feFunc);
        return feFunc;
      };
      SVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {
        var cnt = 0;
        var segments = 256;
        var perc;
        var min = Math.min(inputBlack, inputWhite);
        var max = Math.max(inputBlack, inputWhite);
        var table = Array.call(null, { length: segments });
        var colorValue;
        var pos = 0;
        var outputDelta = outputWhite - outputBlack;
        var inputDelta = inputWhite - inputBlack;
        while (cnt <= 256) {
          perc = cnt / 256;
          if (perc <= min) {
            colorValue = inputDelta < 0 ? outputWhite : outputBlack;
          } else if (perc >= max) {
            colorValue = inputDelta < 0 ? outputBlack : outputWhite;
          } else {
            colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);
          }
          table[pos] = colorValue;
          pos += 1;
          cnt += 256 / (segments - 1);
        }
        return table.join(" ");
      };
      SVGProLevelsFilter.prototype.renderFrame = function(forceRender) {
        if (forceRender || this.filterManager._mdf) {
          var val;
          var effectElements = this.filterManager.effectElements;
          if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {
            val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);
            this.feFuncRComposed.setAttribute("tableValues", val);
            this.feFuncGComposed.setAttribute("tableValues", val);
            this.feFuncBComposed.setAttribute("tableValues", val);
          }
          if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {
            val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);
            this.feFuncR.setAttribute("tableValues", val);
          }
          if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {
            val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);
            this.feFuncG.setAttribute("tableValues", val);
          }
          if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {
            val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);
            this.feFuncB.setAttribute("tableValues", val);
          }
          if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {
            val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);
            this.feFuncA.setAttribute("tableValues", val);
          }
        }
      };
      function SVGDropShadowEffect(filter, filterManager) {
        var filterSize = filterManager.container.globalData.renderConfig.filterSize;
        filter.setAttribute("x", filterSize.x);
        filter.setAttribute("y", filterSize.y);
        filter.setAttribute("width", filterSize.width);
        filter.setAttribute("height", filterSize.height);
        this.filterManager = filterManager;
        var feGaussianBlur = createNS("feGaussianBlur");
        feGaussianBlur.setAttribute("in", "SourceAlpha");
        feGaussianBlur.setAttribute("result", "drop_shadow_1");
        feGaussianBlur.setAttribute("stdDeviation", "0");
        this.feGaussianBlur = feGaussianBlur;
        filter.appendChild(feGaussianBlur);
        var feOffset = createNS("feOffset");
        feOffset.setAttribute("dx", "25");
        feOffset.setAttribute("dy", "0");
        feOffset.setAttribute("in", "drop_shadow_1");
        feOffset.setAttribute("result", "drop_shadow_2");
        this.feOffset = feOffset;
        filter.appendChild(feOffset);
        var feFlood = createNS("feFlood");
        feFlood.setAttribute("flood-color", "#00ff00");
        feFlood.setAttribute("flood-opacity", "1");
        feFlood.setAttribute("result", "drop_shadow_3");
        this.feFlood = feFlood;
        filter.appendChild(feFlood);
        var feComposite = createNS("feComposite");
        feComposite.setAttribute("in", "drop_shadow_3");
        feComposite.setAttribute("in2", "drop_shadow_2");
        feComposite.setAttribute("operator", "in");
        feComposite.setAttribute("result", "drop_shadow_4");
        filter.appendChild(feComposite);
        var feMerge = createNS("feMerge");
        filter.appendChild(feMerge);
        var feMergeNode;
        feMergeNode = createNS("feMergeNode");
        feMerge.appendChild(feMergeNode);
        feMergeNode = createNS("feMergeNode");
        feMergeNode.setAttribute("in", "SourceGraphic");
        this.feMergeNode = feMergeNode;
        this.feMerge = feMerge;
        this.originalNodeAdded = false;
        feMerge.appendChild(feMergeNode);
      }
      SVGDropShadowEffect.prototype.renderFrame = function(forceRender) {
        if (forceRender || this.filterManager._mdf) {
          if (forceRender || this.filterManager.effectElements[4].p._mdf) {
            this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4);
          }
          if (forceRender || this.filterManager.effectElements[0].p._mdf) {
            var col = this.filterManager.effectElements[0].p.v;
            this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));
          }
          if (forceRender || this.filterManager.effectElements[1].p._mdf) {
            this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255);
          }
          if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
            var distance = this.filterManager.effectElements[3].p.v;
            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;
            var x = distance * Math.cos(angle);
            var y = distance * Math.sin(angle);
            this.feOffset.setAttribute("dx", x);
            this.feOffset.setAttribute("dy", y);
          }
        }
      };
      var _svgMatteSymbols = [];
      function SVGMatte3Effect(filterElem, filterManager, elem) {
        this.initialized = false;
        this.filterManager = filterManager;
        this.filterElem = filterElem;
        this.elem = elem;
        elem.matteElement = createNS("g");
        elem.matteElement.appendChild(elem.layerElement);
        elem.matteElement.appendChild(elem.transformedElement);
        elem.baseElement = elem.matteElement;
      }
      SVGMatte3Effect.prototype.findSymbol = function(mask) {
        var i = 0;
        var len = _svgMatteSymbols.length;
        while (i < len) {
          if (_svgMatteSymbols[i] === mask) {
            return _svgMatteSymbols[i];
          }
          i += 1;
        }
        return null;
      };
      SVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {
        var parentNode = mask.layerElement.parentNode;
        if (!parentNode) {
          return;
        }
        var children = parentNode.children;
        var i = 0;
        var len = children.length;
        while (i < len) {
          if (children[i] === mask.layerElement) {
            break;
          }
          i += 1;
        }
        var nextChild;
        if (i <= len - 2) {
          nextChild = children[i + 1];
        }
        var useElem = createNS("use");
        useElem.setAttribute("href", "#" + symbolId);
        if (nextChild) {
          parentNode.insertBefore(useElem, nextChild);
        } else {
          parentNode.appendChild(useElem);
        }
      };
      SVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {
        if (!this.findSymbol(mask)) {
          var symbolId = createElementID();
          var masker = createNS("mask");
          masker.setAttribute("id", mask.layerId);
          masker.setAttribute("mask-type", "alpha");
          _svgMatteSymbols.push(mask);
          var defs = elem.globalData.defs;
          defs.appendChild(masker);
          var symbol = createNS("symbol");
          symbol.setAttribute("id", symbolId);
          this.replaceInParent(mask, symbolId);
          symbol.appendChild(mask.layerElement);
          defs.appendChild(symbol);
          var useElem = createNS("use");
          useElem.setAttribute("href", "#" + symbolId);
          masker.appendChild(useElem);
          mask.data.hd = false;
          mask.show();
        }
        elem.setMatte(mask.layerId);
      };
      SVGMatte3Effect.prototype.initialize = function() {
        var ind = this.filterManager.effectElements[0].p.v;
        var elements = this.elem.comp.elements;
        var i = 0;
        var len = elements.length;
        while (i < len) {
          if (elements[i] && elements[i].data.ind === ind) {
            this.setElementAsMask(this.elem, elements[i]);
          }
          i += 1;
        }
        this.initialized = true;
      };
      SVGMatte3Effect.prototype.renderFrame = function() {
        if (!this.initialized) {
          this.initialize();
        }
      };
      function SVGEffects() {
      }
      var animationManager = (function() {
        var moduleOb = {};
        var registeredAnimations = [];
        var initTime = 0;
        var len = 0;
        var playingAnimationsNum = 0;
        var _stopped = true;
        var _isFrozen = false;
        function removeElement(ev) {
          var i = 0;
          var animItem = ev.target;
          while (i < len) {
            if (registeredAnimations[i].animation === animItem) {
              registeredAnimations.splice(i, 1);
              i -= 1;
              len -= 1;
              if (!animItem.isPaused) {
                subtractPlayingCount();
              }
            }
            i += 1;
          }
        }
        function registerAnimation(element, animationData2) {
          if (!element) {
            return null;
          }
          var i = 0;
          while (i < len) {
            if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {
              return registeredAnimations[i].animation;
            }
            i += 1;
          }
          var animItem = new AnimationItem();
          setupAnimation(animItem, element);
          animItem.setData(element, animationData2);
          return animItem;
        }
        function getRegisteredAnimations() {
          var i;
          var lenAnims = registeredAnimations.length;
          var animations = [];
          for (i = 0; i < lenAnims; i += 1) {
            animations.push(registeredAnimations[i].animation);
          }
          return animations;
        }
        function addPlayingCount() {
          playingAnimationsNum += 1;
          activate();
        }
        function subtractPlayingCount() {
          playingAnimationsNum -= 1;
        }
        function setupAnimation(animItem, element) {
          animItem.addEventListener("destroy", removeElement);
          animItem.addEventListener("_active", addPlayingCount);
          animItem.addEventListener("_idle", subtractPlayingCount);
          registeredAnimations.push({ elem: element, animation: animItem });
          len += 1;
        }
        function loadAnimation2(params) {
          var animItem = new AnimationItem();
          setupAnimation(animItem, null);
          animItem.setParams(params);
          return animItem;
        }
        function setSpeed(val, animation) {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.setSpeed(val, animation);
          }
        }
        function setDirection(val, animation) {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.setDirection(val, animation);
          }
        }
        function play(animation) {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.play(animation);
          }
        }
        function resume(nowTime) {
          var elapsedTime = nowTime - initTime;
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.advanceTime(elapsedTime);
          }
          initTime = nowTime;
          if (playingAnimationsNum && !_isFrozen) {
            window2.requestAnimationFrame(resume);
          } else {
            _stopped = true;
          }
        }
        function first(nowTime) {
          initTime = nowTime;
          window2.requestAnimationFrame(resume);
        }
        function pause(animation) {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.pause(animation);
          }
        }
        function goToAndStop(value, isFrame, animation) {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);
          }
        }
        function stop(animation) {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.stop(animation);
          }
        }
        function togglePause(animation) {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.togglePause(animation);
          }
        }
        function destroy(animation) {
          var i;
          for (i = len - 1; i >= 0; i -= 1) {
            registeredAnimations[i].animation.destroy(animation);
          }
        }
        function searchAnimations2(animationData2, standalone2, renderer2) {
          var animElements = [].concat(
            [].slice.call(document.getElementsByClassName("lottie")),
            [].slice.call(document.getElementsByClassName("bodymovin"))
          );
          var i;
          var lenAnims = animElements.length;
          for (i = 0; i < lenAnims; i += 1) {
            if (renderer2) {
              animElements[i].setAttribute("data-bm-type", renderer2);
            }
            registerAnimation(animElements[i], animationData2);
          }
          if (standalone2 && lenAnims === 0) {
            if (!renderer2) {
              renderer2 = "svg";
            }
            var body = document.getElementsByTagName("body")[0];
            body.innerText = "";
            var div = createTag("div");
            div.style.width = "100%";
            div.style.height = "100%";
            div.setAttribute("data-bm-type", renderer2);
            body.appendChild(div);
            registerAnimation(div, animationData2);
          }
        }
        function resize() {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.resize();
          }
        }
        function activate() {
          if (!_isFrozen && playingAnimationsNum) {
            if (_stopped) {
              window2.requestAnimationFrame(first);
              _stopped = false;
            }
          }
        }
        function freeze() {
          _isFrozen = true;
        }
        function unfreeze() {
          _isFrozen = false;
          activate();
        }
        function setVolume(val, animation) {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.setVolume(val, animation);
          }
        }
        function mute(animation) {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.mute(animation);
          }
        }
        function unmute(animation) {
          var i;
          for (i = 0; i < len; i += 1) {
            registeredAnimations[i].animation.unmute(animation);
          }
        }
        moduleOb.registerAnimation = registerAnimation;
        moduleOb.loadAnimation = loadAnimation2;
        moduleOb.setSpeed = setSpeed;
        moduleOb.setDirection = setDirection;
        moduleOb.play = play;
        moduleOb.pause = pause;
        moduleOb.stop = stop;
        moduleOb.togglePause = togglePause;
        moduleOb.searchAnimations = searchAnimations2;
        moduleOb.resize = resize;
        moduleOb.goToAndStop = goToAndStop;
        moduleOb.destroy = destroy;
        moduleOb.freeze = freeze;
        moduleOb.unfreeze = unfreeze;
        moduleOb.setVolume = setVolume;
        moduleOb.mute = mute;
        moduleOb.unmute = unmute;
        moduleOb.getRegisteredAnimations = getRegisteredAnimations;
        return moduleOb;
      })();
      var AnimationItem = function() {
        this._cbs = [];
        this.name = "";
        this.path = "";
        this.isLoaded = false;
        this.currentFrame = 0;
        this.currentRawFrame = 0;
        this.firstFrame = 0;
        this.totalFrames = 0;
        this.frameRate = 0;
        this.frameMult = 0;
        this.playSpeed = 1;
        this.playDirection = 1;
        this.playCount = 0;
        this.animationData = {};
        this.assets = [];
        this.isPaused = true;
        this.autoplay = false;
        this.loop = true;
        this.renderer = null;
        this.animationID = createElementID();
        this.assetsPath = "";
        this.timeCompleted = 0;
        this.segmentPos = 0;
        this.isSubframeEnabled = subframeEnabled;
        this.segments = [];
        this._idle = true;
        this._completedLoop = false;
        this.projectInterface = ProjectInterface();
        this.imagePreloader = new ImagePreloader();
        this.audioController = audioControllerFactory();
        this.markers = [];
        this.configAnimation = this.configAnimation.bind(this);
        this.onSetupError = this.onSetupError.bind(this);
        this.onSegmentComplete = this.onSegmentComplete.bind(this);
      };
      extendPrototype([BaseEvent], AnimationItem);
      AnimationItem.prototype.setParams = function(params) {
        if (params.wrapper || params.container) {
          this.wrapper = params.wrapper || params.container;
        }
        var animType = "svg";
        if (params.animType) {
          animType = params.animType;
        } else if (params.renderer) {
          animType = params.renderer;
        }
        switch (animType) {
          case "canvas":
            this.renderer = new CanvasRenderer(this, params.rendererSettings);
            break;
          case "svg":
            this.renderer = new SVGRenderer(this, params.rendererSettings);
            break;
          default:
            this.renderer = new HybridRenderer(this, params.rendererSettings);
            break;
        }
        this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);
        this.renderer.setProjectInterface(this.projectInterface);
        this.animType = animType;
        if (params.loop === "" || params.loop === null || params.loop === void 0 || params.loop === true) {
          this.loop = true;
        } else if (params.loop === false) {
          this.loop = false;
        } else {
          this.loop = parseInt(params.loop, 10);
        }
        this.autoplay = "autoplay" in params ? params.autoplay : true;
        this.name = params.name ? params.name : "";
        this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, "autoloadSegments") ? params.autoloadSegments : true;
        this.assetsPath = params.assetsPath;
        this.initialSegment = params.initialSegment;
        if (params.audioFactory) {
          this.audioController.setAudioFactory(params.audioFactory);
        }
        if (params.animationData) {
          this.setupAnimation(params.animationData);
        } else if (params.path) {
          if (params.path.lastIndexOf("\\") !== -1) {
            this.path = params.path.substr(0, params.path.lastIndexOf("\\") + 1);
          } else {
            this.path = params.path.substr(0, params.path.lastIndexOf("/") + 1);
          }
          this.fileName = params.path.substr(params.path.lastIndexOf("/") + 1);
          this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json"));
          dataManager.loadAnimation(
            params.path,
            this.configAnimation,
            this.onSetupError
          );
        }
      };
      AnimationItem.prototype.onSetupError = function() {
        this.trigger("data_failed");
      };
      AnimationItem.prototype.setupAnimation = function(data) {
        dataManager.completeAnimation(
          data,
          this.configAnimation
        );
      };
      AnimationItem.prototype.setData = function(wrapper, animationData2) {
        if (animationData2) {
          if (typeof animationData2 !== "object") {
            animationData2 = JSON.parse(animationData2);
          }
        }
        var params = {
          wrapper,
          animationData: animationData2
        };
        var wrapperAttributes = wrapper.attributes;
        params.path = wrapperAttributes.getNamedItem("data-animation-path") ? wrapperAttributes.getNamedItem("data-animation-path").value : wrapperAttributes.getNamedItem("data-bm-path") ? wrapperAttributes.getNamedItem("data-bm-path").value : wrapperAttributes.getNamedItem("bm-path") ? wrapperAttributes.getNamedItem("bm-path").value : "";
        params.animType = wrapperAttributes.getNamedItem("data-anim-type") ? wrapperAttributes.getNamedItem("data-anim-type").value : wrapperAttributes.getNamedItem("data-bm-type") ? wrapperAttributes.getNamedItem("data-bm-type").value : wrapperAttributes.getNamedItem("bm-type") ? wrapperAttributes.getNamedItem("bm-type").value : wrapperAttributes.getNamedItem("data-bm-renderer") ? wrapperAttributes.getNamedItem("data-bm-renderer").value : wrapperAttributes.getNamedItem("bm-renderer") ? wrapperAttributes.getNamedItem("bm-renderer").value : "canvas";
        var loop = wrapperAttributes.getNamedItem("data-anim-loop") ? wrapperAttributes.getNamedItem("data-anim-loop").value : wrapperAttributes.getNamedItem("data-bm-loop") ? wrapperAttributes.getNamedItem("data-bm-loop").value : wrapperAttributes.getNamedItem("bm-loop") ? wrapperAttributes.getNamedItem("bm-loop").value : "";
        if (loop === "false") {
          params.loop = false;
        } else if (loop === "true") {
          params.loop = true;
        } else if (loop !== "") {
          params.loop = parseInt(loop, 10);
        }
        var autoplay = wrapperAttributes.getNamedItem("data-anim-autoplay") ? wrapperAttributes.getNamedItem("data-anim-autoplay").value : wrapperAttributes.getNamedItem("data-bm-autoplay") ? wrapperAttributes.getNamedItem("data-bm-autoplay").value : wrapperAttributes.getNamedItem("bm-autoplay") ? wrapperAttributes.getNamedItem("bm-autoplay").value : true;
        params.autoplay = autoplay !== "false";
        params.name = wrapperAttributes.getNamedItem("data-name") ? wrapperAttributes.getNamedItem("data-name").value : wrapperAttributes.getNamedItem("data-bm-name") ? wrapperAttributes.getNamedItem("data-bm-name").value : wrapperAttributes.getNamedItem("bm-name") ? wrapperAttributes.getNamedItem("bm-name").value : "";
        var prerender = wrapperAttributes.getNamedItem("data-anim-prerender") ? wrapperAttributes.getNamedItem("data-anim-prerender").value : wrapperAttributes.getNamedItem("data-bm-prerender") ? wrapperAttributes.getNamedItem("data-bm-prerender").value : wrapperAttributes.getNamedItem("bm-prerender") ? wrapperAttributes.getNamedItem("bm-prerender").value : "";
        if (prerender === "false") {
          params.prerender = false;
        }
        this.setParams(params);
      };
      AnimationItem.prototype.includeLayers = function(data) {
        if (data.op > this.animationData.op) {
          this.animationData.op = data.op;
          this.totalFrames = Math.floor(data.op - this.animationData.ip);
        }
        var layers = this.animationData.layers;
        var i;
        var len = layers.length;
        var newLayers = data.layers;
        var j;
        var jLen = newLayers.length;
        for (j = 0; j < jLen; j += 1) {
          i = 0;
          while (i < len) {
            if (layers[i].id === newLayers[j].id) {
              layers[i] = newLayers[j];
              break;
            }
            i += 1;
          }
        }
        if (data.chars || data.fonts) {
          this.renderer.globalData.fontManager.addChars(data.chars);
          this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);
        }
        if (data.assets) {
          len = data.assets.length;
          for (i = 0; i < len; i += 1) {
            this.animationData.assets.push(data.assets[i]);
          }
        }
        this.animationData.__complete = false;
        dataManager.completeAnimation(
          this.animationData,
          this.onSegmentComplete
        );
      };
      AnimationItem.prototype.onSegmentComplete = function(data) {
        this.animationData = data;
        if (expressionsPlugin) {
          expressionsPlugin.initExpressions(this);
        }
        this.loadNextSegment();
      };
      AnimationItem.prototype.loadNextSegment = function() {
        var segments = this.animationData.segments;
        if (!segments || segments.length === 0 || !this.autoloadSegments) {
          this.trigger("data_ready");
          this.timeCompleted = this.totalFrames;
          return;
        }
        var segment = segments.shift();
        this.timeCompleted = segment.time * this.frameRate;
        var segmentPath = this.path + this.fileName + "_" + this.segmentPos + ".json";
        this.segmentPos += 1;
        dataManager.loadData(segmentPath, this.includeLayers.bind(this), (function() {
          this.trigger("data_failed");
        }).bind(this));
      };
      AnimationItem.prototype.loadSegments = function() {
        var segments = this.animationData.segments;
        if (!segments) {
          this.timeCompleted = this.totalFrames;
        }
        this.loadNextSegment();
      };
      AnimationItem.prototype.imagesLoaded = function() {
        this.trigger("loaded_images");
        this.checkLoaded();
      };
      AnimationItem.prototype.preloadImages = function() {
        this.imagePreloader.setAssetsPath(this.assetsPath);
        this.imagePreloader.setPath(this.path);
        this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
      };
      AnimationItem.prototype.configAnimation = function(animData) {
        if (!this.renderer) {
          return;
        }
        try {
          this.animationData = animData;
          if (this.initialSegment) {
            this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);
            this.firstFrame = Math.round(this.initialSegment[0]);
          } else {
            this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);
            this.firstFrame = Math.round(this.animationData.ip);
          }
          this.renderer.configAnimation(animData);
          if (!animData.assets) {
            animData.assets = [];
          }
          this.assets = this.animationData.assets;
          this.frameRate = this.animationData.fr;
          this.frameMult = this.animationData.fr / 1e3;
          this.renderer.searchExtraCompositions(animData.assets);
          this.markers = markerParser(animData.markers || []);
          this.trigger("config_ready");
          this.preloadImages();
          this.loadSegments();
          this.updaFrameModifier();
          this.waitForFontsLoaded();
          if (this.isPaused) {
            this.audioController.pause();
          }
        } catch (error) {
          this.triggerConfigError(error);
        }
      };
      AnimationItem.prototype.waitForFontsLoaded = function() {
        if (!this.renderer) {
          return;
        }
        if (this.renderer.globalData.fontManager.isLoaded) {
          this.checkLoaded();
        } else {
          setTimeout(this.waitForFontsLoaded.bind(this), 20);
        }
      };
      AnimationItem.prototype.checkLoaded = function() {
        if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== "canvas") && this.imagePreloader.loadedFootages()) {
          this.isLoaded = true;
          if (expressionsPlugin) {
            expressionsPlugin.initExpressions(this);
          }
          this.renderer.initItems();
          setTimeout((function() {
            this.trigger("DOMLoaded");
          }).bind(this), 0);
          this.gotoFrame();
          if (this.autoplay) {
            this.play();
          }
        }
      };
      AnimationItem.prototype.resize = function() {
        this.renderer.updateContainerSize();
      };
      AnimationItem.prototype.setSubframe = function(flag) {
        this.isSubframeEnabled = !!flag;
      };
      AnimationItem.prototype.gotoFrame = function() {
        this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;
        if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {
          this.currentFrame = this.timeCompleted;
        }
        this.trigger("enterFrame");
        this.renderFrame();
        this.trigger("drawnFrame");
      };
      AnimationItem.prototype.renderFrame = function() {
        if (this.isLoaded === false || !this.renderer) {
          return;
        }
        try {
          this.renderer.renderFrame(this.currentFrame + this.firstFrame);
        } catch (error) {
          this.triggerRenderFrameError(error);
        }
      };
      AnimationItem.prototype.play = function(name) {
        if (name && this.name !== name) {
          return;
        }
        if (this.isPaused === true) {
          this.isPaused = false;
          this.audioController.resume();
          if (this._idle) {
            this._idle = false;
            this.trigger("_active");
          }
        }
      };
      AnimationItem.prototype.pause = function(name) {
        if (name && this.name !== name) {
          return;
        }
        if (this.isPaused === false) {
          this.isPaused = true;
          this._idle = true;
          this.trigger("_idle");
          this.audioController.pause();
        }
      };
      AnimationItem.prototype.togglePause = function(name) {
        if (name && this.name !== name) {
          return;
        }
        if (this.isPaused === true) {
          this.play();
        } else {
          this.pause();
        }
      };
      AnimationItem.prototype.stop = function(name) {
        if (name && this.name !== name) {
          return;
        }
        this.pause();
        this.playCount = 0;
        this._completedLoop = false;
        this.setCurrentRawFrameValue(0);
      };
      AnimationItem.prototype.getMarkerData = function(markerName) {
        var marker;
        for (var i = 0; i < this.markers.length; i += 1) {
          marker = this.markers[i];
          if (marker.payload && marker.payload.name === markerName) {
            return marker;
          }
        }
        return null;
      };
      AnimationItem.prototype.goToAndStop = function(value, isFrame, name) {
        if (name && this.name !== name) {
          return;
        }
        var numValue = Number(value);
        if (isNaN(numValue)) {
          var marker = this.getMarkerData(value);
          if (marker) {
            this.goToAndStop(marker.time, true);
          }
        } else if (isFrame) {
          this.setCurrentRawFrameValue(value);
        } else {
          this.setCurrentRawFrameValue(value * this.frameModifier);
        }
        this.pause();
      };
      AnimationItem.prototype.goToAndPlay = function(value, isFrame, name) {
        if (name && this.name !== name) {
          return;
        }
        var numValue = Number(value);
        if (isNaN(numValue)) {
          var marker = this.getMarkerData(value);
          if (marker) {
            if (!marker.duration) {
              this.goToAndStop(marker.time, true);
            } else {
              this.playSegments([marker.time, marker.time + marker.duration], true);
            }
          }
        } else {
          this.goToAndStop(numValue, isFrame, name);
        }
        this.play();
      };
      AnimationItem.prototype.advanceTime = function(value) {
        if (this.isPaused === true || this.isLoaded === false) {
          return;
        }
        var nextValue = this.currentRawFrame + value * this.frameModifier;
        var _isComplete = false;
        if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {
          if (!this.loop || this.playCount === this.loop) {
            if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {
              _isComplete = true;
              nextValue = this.totalFrames - 1;
            }
          } else if (nextValue >= this.totalFrames) {
            this.playCount += 1;
            if (!this.checkSegments(nextValue % this.totalFrames)) {
              this.setCurrentRawFrameValue(nextValue % this.totalFrames);
              this._completedLoop = true;
              this.trigger("loopComplete");
            }
          } else {
            this.setCurrentRawFrameValue(nextValue);
          }
        } else if (nextValue < 0) {
          if (!this.checkSegments(nextValue % this.totalFrames)) {
            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {
              this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);
              if (!this._completedLoop) {
                this._completedLoop = true;
              } else {
                this.trigger("loopComplete");
              }
            } else {
              _isComplete = true;
              nextValue = 0;
            }
          }
        } else {
          this.setCurrentRawFrameValue(nextValue);
        }
        if (_isComplete) {
          this.setCurrentRawFrameValue(nextValue);
          this.pause();
          this.trigger("complete");
        }
      };
      AnimationItem.prototype.adjustSegment = function(arr, offset) {
        this.playCount = 0;
        if (arr[1] < arr[0]) {
          if (this.frameModifier > 0) {
            if (this.playSpeed < 0) {
              this.setSpeed(-this.playSpeed);
            } else {
              this.setDirection(-1);
            }
          }
          this.totalFrames = arr[0] - arr[1];
          this.timeCompleted = this.totalFrames;
          this.firstFrame = arr[1];
          this.setCurrentRawFrameValue(this.totalFrames - 1e-3 - offset);
        } else if (arr[1] > arr[0]) {
          if (this.frameModifier < 0) {
            if (this.playSpeed < 0) {
              this.setSpeed(-this.playSpeed);
            } else {
              this.setDirection(1);
            }
          }
          this.totalFrames = arr[1] - arr[0];
          this.timeCompleted = this.totalFrames;
          this.firstFrame = arr[0];
          this.setCurrentRawFrameValue(1e-3 + offset);
        }
        this.trigger("segmentStart");
      };
      AnimationItem.prototype.setSegment = function(init, end) {
        var pendingFrame = -1;
        if (this.isPaused) {
          if (this.currentRawFrame + this.firstFrame < init) {
            pendingFrame = init;
          } else if (this.currentRawFrame + this.firstFrame > end) {
            pendingFrame = end - init;
          }
        }
        this.firstFrame = init;
        this.totalFrames = end - init;
        this.timeCompleted = this.totalFrames;
        if (pendingFrame !== -1) {
          this.goToAndStop(pendingFrame, true);
        }
      };
      AnimationItem.prototype.playSegments = function(arr, forceFlag) {
        if (forceFlag) {
          this.segments.length = 0;
        }
        if (typeof arr[0] === "object") {
          var i;
          var len = arr.length;
          for (i = 0; i < len; i += 1) {
            this.segments.push(arr[i]);
          }
        } else {
          this.segments.push(arr);
        }
        if (this.segments.length && forceFlag) {
          this.adjustSegment(this.segments.shift(), 0);
        }
        if (this.isPaused) {
          this.play();
        }
      };
      AnimationItem.prototype.resetSegments = function(forceFlag) {
        this.segments.length = 0;
        this.segments.push([this.animationData.ip, this.animationData.op]);
        if (forceFlag) {
          this.checkSegments(0);
        }
      };
      AnimationItem.prototype.checkSegments = function(offset) {
        if (this.segments.length) {
          this.adjustSegment(this.segments.shift(), offset);
          return true;
        }
        return false;
      };
      AnimationItem.prototype.destroy = function(name) {
        if (name && this.name !== name || !this.renderer) {
          return;
        }
        this.renderer.destroy();
        this.imagePreloader.destroy();
        this.trigger("destroy");
        this._cbs = null;
        this.onEnterFrame = null;
        this.onLoopComplete = null;
        this.onComplete = null;
        this.onSegmentStart = null;
        this.onDestroy = null;
        this.renderer = null;
        this.renderer = null;
        this.imagePreloader = null;
        this.projectInterface = null;
      };
      AnimationItem.prototype.setCurrentRawFrameValue = function(value) {
        this.currentRawFrame = value;
        this.gotoFrame();
      };
      AnimationItem.prototype.setSpeed = function(val) {
        this.playSpeed = val;
        this.updaFrameModifier();
      };
      AnimationItem.prototype.setDirection = function(val) {
        this.playDirection = val < 0 ? -1 : 1;
        this.updaFrameModifier();
      };
      AnimationItem.prototype.setVolume = function(val, name) {
        if (name && this.name !== name) {
          return;
        }
        this.audioController.setVolume(val);
      };
      AnimationItem.prototype.getVolume = function() {
        return this.audioController.getVolume();
      };
      AnimationItem.prototype.mute = function(name) {
        if (name && this.name !== name) {
          return;
        }
        this.audioController.mute();
      };
      AnimationItem.prototype.unmute = function(name) {
        if (name && this.name !== name) {
          return;
        }
        this.audioController.unmute();
      };
      AnimationItem.prototype.updaFrameModifier = function() {
        this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;
        this.audioController.setRate(this.playSpeed * this.playDirection);
      };
      AnimationItem.prototype.getPath = function() {
        return this.path;
      };
      AnimationItem.prototype.getAssetsPath = function(assetData) {
        var path = "";
        if (assetData.e) {
          path = assetData.p;
        } else if (this.assetsPath) {
          var imagePath = assetData.p;
          if (imagePath.indexOf("images/") !== -1) {
            imagePath = imagePath.split("/")[1];
          }
          path = this.assetsPath + imagePath;
        } else {
          path = this.path;
          path += assetData.u ? assetData.u : "";
          path += assetData.p;
        }
        return path;
      };
      AnimationItem.prototype.getAssetData = function(id) {
        var i = 0;
        var len = this.assets.length;
        while (i < len) {
          if (id === this.assets[i].id) {
            return this.assets[i];
          }
          i += 1;
        }
        return null;
      };
      AnimationItem.prototype.hide = function() {
        this.renderer.hide();
      };
      AnimationItem.prototype.show = function() {
        this.renderer.show();
      };
      AnimationItem.prototype.getDuration = function(isFrame) {
        return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;
      };
      AnimationItem.prototype.trigger = function(name) {
        if (this._cbs && this._cbs[name]) {
          switch (name) {
            case "enterFrame":
            case "drawnFrame":
              this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));
              break;
            case "loopComplete":
              this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));
              break;
            case "complete":
              this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));
              break;
            case "segmentStart":
              this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));
              break;
            case "destroy":
              this.triggerEvent(name, new BMDestroyEvent(name, this));
              break;
            default:
              this.triggerEvent(name);
          }
        }
        if (name === "enterFrame" && this.onEnterFrame) {
          this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));
        }
        if (name === "loopComplete" && this.onLoopComplete) {
          this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));
        }
        if (name === "complete" && this.onComplete) {
          this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));
        }
        if (name === "segmentStart" && this.onSegmentStart) {
          this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));
        }
        if (name === "destroy" && this.onDestroy) {
          this.onDestroy.call(this, new BMDestroyEvent(name, this));
        }
      };
      AnimationItem.prototype.triggerRenderFrameError = function(nativeError) {
        var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);
        this.triggerEvent("error", error);
        if (this.onError) {
          this.onError.call(this, error);
        }
      };
      AnimationItem.prototype.triggerConfigError = function(nativeError) {
        var error = new BMConfigErrorEvent(nativeError, this.currentFrame);
        this.triggerEvent("error", error);
        if (this.onError) {
          this.onError.call(this, error);
        }
      };
      function EffectsManager() {
        this.effectElements = [];
      }
      var lottie = {};
      function setLocationHref(href) {
        locationHref = href;
      }
      function searchAnimations() {
        if (standalone === true) {
          animationManager.searchAnimations(animationData, standalone, renderer);
        } else {
          animationManager.searchAnimations();
        }
      }
      function setSubframeRendering(flag) {
        subframeEnabled = flag;
      }
      function setIDPrefix(prefix) {
        idPrefix = prefix;
      }
      function loadAnimation(params) {
        if (standalone === true) {
          params.animationData = JSON.parse(animationData);
        }
        return animationManager.loadAnimation(params);
      }
      function setQuality(value) {
        if (typeof value === "string") {
          switch (value) {
            case "high":
              defaultCurveSegments = 200;
              break;
            default:
            case "medium":
              defaultCurveSegments = 50;
              break;
            case "low":
              defaultCurveSegments = 10;
              break;
          }
        } else if (!isNaN(value) && value > 1) {
          defaultCurveSegments = value;
        }
        if (defaultCurveSegments >= 50) {
          roundValues(false);
        } else {
          roundValues(true);
        }
      }
      function inBrowser() {
        return typeof navigator !== "undefined";
      }
      function installPlugin(type, plugin) {
        if (type === "expressions") {
          expressionsPlugin = plugin;
        }
      }
      function getFactory(name) {
        switch (name) {
          case "propertyFactory":
            return PropertyFactory;
          case "shapePropertyFactory":
            return ShapePropertyFactory;
          case "matrix":
            return Matrix;
          default:
            return null;
        }
      }
      lottie.play = animationManager.play;
      lottie.pause = animationManager.pause;
      lottie.setLocationHref = setLocationHref;
      lottie.togglePause = animationManager.togglePause;
      lottie.setSpeed = animationManager.setSpeed;
      lottie.setDirection = animationManager.setDirection;
      lottie.stop = animationManager.stop;
      lottie.searchAnimations = searchAnimations;
      lottie.registerAnimation = animationManager.registerAnimation;
      lottie.loadAnimation = loadAnimation;
      lottie.setSubframeRendering = setSubframeRendering;
      lottie.resize = animationManager.resize;
      lottie.goToAndStop = animationManager.goToAndStop;
      lottie.destroy = animationManager.destroy;
      lottie.setQuality = setQuality;
      lottie.inBrowser = inBrowser;
      lottie.installPlugin = installPlugin;
      lottie.freeze = animationManager.freeze;
      lottie.unfreeze = animationManager.unfreeze;
      lottie.setVolume = animationManager.setVolume;
      lottie.mute = animationManager.mute;
      lottie.unmute = animationManager.unmute;
      lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;
      lottie.useWebWorker = function(flag) {
        _useWebWorker = flag;
      };
      lottie.setIDPrefix = setIDPrefix;
      lottie.__getFactory = getFactory;
      lottie.version = "5.8.1";
      function checkReady() {
        if (document.readyState === "complete") {
          clearInterval(readyStateCheckInterval);
          searchAnimations();
        }
      }
      function getQueryVariable(variable) {
        var vars = queryString.split("&");
        for (var i = 0; i < vars.length; i += 1) {
          var pair = vars[i].split("=");
          if (decodeURIComponent(pair[0]) == variable) {
            return decodeURIComponent(pair[1]);
          }
        }
        return null;
      }
      var standalone = "__[STANDALONE]__";
      var animationData = "__[ANIMATIONDATA]__";
      var renderer = "";
      var queryString;
      if (standalone) {
        var scripts = document.getElementsByTagName("script");
        var index = scripts.length - 1;
        var myScript = scripts[index] || {
          src: ""
        };
        queryString = myScript.src.replace(/^[^\?]+\??/, "");
        renderer = getQueryVariable("renderer");
      }
      var readyStateCheckInterval = setInterval(checkReady, 100);
      return lottie;
    });
  }
});

// node_modules/@perawallet/connect/dist/App-94e9365e.js
var require_App_94e9365e = __commonJS({
  "node_modules/@perawallet/connect/dist/App-94e9365e.js"() {
    "use strict";
    var e = require_index_87ee6d1d();
    var n = require_qr_code_styling();
    var t = require_lottie_web_light();
    function a(e2) {
      return e2 && "object" == typeof e2 && "default" in e2 ? e2 : { default: e2 };
    }
    init_esm9(), require_algosdk_min(), require_es5();
    var o = a(n);
    var l = a(t);
    function i(n2 = true) {
      let t2 = e.PERA_WALLET_APP_DEEP_LINK;
      const a2 = e.detectBrowser();
      return n2 && a2 && (t2 = `${t2}?browser=${encodeURIComponent(a2)}`), t2;
    }
    function r(e2, n2) {
      void 0 === n2 && (n2 = {});
      var t2 = n2.insertAt;
      if (e2 && "undefined" != typeof document) {
        var a2 = document.head || document.getElementsByTagName("head")[0], o2 = document.createElement("style");
        o2.type = "text/css", "top" === t2 && a2.firstChild ? a2.insertBefore(o2, a2.firstChild) : a2.appendChild(o2), o2.styleSheet ? o2.styleSheet.cssText = e2 : o2.appendChild(document.createTextNode(e2));
      }
    }
    var d = ".pera-wallet-modal-header {\n  position: absolute;\n  top: -44px;\n  right: 0px;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.pera-wallet-modal-header--mobile {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  position: static;\n}\n.pera-wallet-modal-header--mobile .pera-wallet-modal-header__close-button {\n  width: 24px;\n  height: 24px;\n  margin: 0;\n  padding: 0;\n  background: transparent;\n  border: unset;\n  box-shadow: unset;\n}\n\n.pera-wallet-modal-header__brand {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 24px;\n  letter-spacing: -0.1px;\n  color: #ffffff;\n}\n\n.pera-wallet-modal-header__brand-text {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.pera-wallet-modal-header__version-number {\n  color: #9d9dae;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: 0.01;\n}\n\n.pera-wallet-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 48px;\n  padding: 14px;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 14px;\n}\n\n.pera-wallet-modal-header__close-button {\n  width: 32px;\n  height: 32px;\n  margin: 0;\n  padding: 0;\n  background: rgba(44, 53, 89, 0.1);\n  border-radius: 8px;\n}\n\n.pera-wallet-modal-header__close-button__close-icon {\n  width: 20px;\n  height: 20px;\n}";
    r(d);
    var c = document.createElement("template");
    var p = e.isMobile() ? "pera-wallet-modal-header pera-wallet-modal-header--mobile" : "pera-wallet-modal-header pera-wallet-modal-header--desktop";
    c.innerHTML = `
  <div class="${p}">
      ${e.isMobile() ? "" : `<div class="pera-wallet-modal-header__brand">
              <img src="data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='24' height='24' rx='4.8' fill='%23FFEE55'/%3e%3cpath d='M13.0408 5.92462C13.413 7.46693 13.2872 8.8236 12.7597 8.95482C12.2322 9.08605 11.5028 7.94214 11.1306 6.39983C10.7583 4.85752 10.8842 3.50085 11.4117 3.36963C11.9391 3.2384 12.6685 4.38231 13.0408 5.92462Z' fill='black'/%3e%3cpath d='M19.1876 7.25063C18.3632 6.37689 16.7231 6.61371 15.5243 7.77959C14.3254 8.94547 14.0219 10.5989 14.8463 11.4727C15.6707 12.3464 17.3108 12.1096 18.5097 10.9437C19.7085 9.77781 20.012 8.12438 19.1876 7.25063Z' fill='black'/%3e%3cpath d='M12.6308 20.6297C13.1583 20.4985 13.2656 19.0651 12.8705 17.4281C12.4754 15.7911 11.7275 14.5705 11.2 14.7017C10.6725 14.8329 10.5652 16.2663 10.9603 17.9033C11.3554 19.5403 12.1033 20.7609 12.6308 20.6297Z' fill='black'/%3e%3cpath d='M7.25371 8.05056C8.77551 8.49933 9.8875 9.28664 9.73741 9.80906C9.58731 10.3315 8.23197 10.3912 6.71016 9.94242C5.18836 9.49364 4.07637 8.70633 4.22646 8.18391C4.37656 7.66149 5.7319 7.60178 7.25371 8.05056Z' fill='black'/%3e%3cpath d='M17.1309 13.9497C18.7461 14.4261 19.9338 15.2357 19.7837 15.7581C19.6336 16.2806 18.2025 16.3179 16.5873 15.8416C14.9721 15.3653 13.7844 14.5556 13.9345 14.0332C14.0846 13.5108 15.5157 13.4734 17.1309 13.9497Z' fill='black'/%3e%3cpath d='M8.96609 12.8536C8.5887 12.4624 7.35088 13.0318 6.20133 14.1253C5.05177 15.2188 4.42581 16.4225 4.80319 16.8137C5.18058 17.2048 6.4184 16.6355 7.56796 15.542C8.71751 14.4484 9.34347 13.2448 8.96609 12.8536Z' fill='black'/%3e%3c/svg%3e" />

              <div class="pera-wallet-modal-header__brand-text">
                <span>Pera Connect</span>

                <span class="pera-wallet-modal-header__version-number">v1.3.4</span>
              </div>
            </div>
            `} 

      <button
        id="pera-wallet-modal-header-close-button"
        class="pera-wallet-button pera-wallet-modal-header__close-button">
        <img
          class="pera-wallet-modal-header__close-button__close-icon"
          src="${e.isMobile() ? "data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18 6L12 12M12 12L6 18M12 12L18 18M12 12L6 6' stroke='%232C3559' stroke-width='2'/%3e%3c/svg%3e" : "data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18 6L12 12M12 12L6 18M12 12L18 18M12 12L6 6' stroke='white' stroke-width='2'/%3e%3c/svg%3e"}"
        />
      </button>
    </div>
`;
    var s = class extends HTMLElement {
      constructor() {
        if (super(), this.attachShadow({ mode: "open" }), this.shadowRoot) {
          const e2 = document.createElement("style");
          e2.textContent = d, this.shadowRoot.append(c.content.cloneNode(true), e2), this.onClose();
        }
      }
      onClose() {
        var n2;
        const t2 = null === (n2 = this.shadowRoot) || void 0 === n2 ? void 0 : n2.getElementById("pera-wallet-modal-header-close-button"), a2 = this.getAttribute("modal-id");
        t2 && a2 === e.PERA_WALLET_REDIRECT_MODAL_ID && t2.addEventListener("click", (() => {
          e.removeModalWrapperFromDOM(e.PERA_WALLET_REDIRECT_MODAL_ID);
        }));
      }
    };
    var m = "data:image/svg+xml,%3csvg fill='none' height='80' width='80' xmlns='http://www.w3.org/2000/svg'%3e%3cpath clip-rule='evenodd' d='M39.9 80V68.99h-9.8V80h-.2V68.99h-3.5a6.503 6.503 0 0 1-6.247-4.7 6.514 6.514 0 0 1-4.445-4.444 6.503 6.503 0 0 1-4.695-6.246v-3.5H0v-.2h11.013v-9.8H0v-.2h11.013v-9.8H0v-.2h11.013v-3.5a6.503 6.503 0 0 1 4.694-6.246 6.513 6.513 0 0 1 4.447-4.447 6.503 6.503 0 0 1 6.246-4.696h3.5V0h.2v11.011h9.8V0h.2v11.011h9.8V0h.2v11.011h3.5a6.503 6.503 0 0 1 6.247 4.697 6.514 6.514 0 0 1 4.443 4.444 6.503 6.503 0 0 1 4.701 6.248v3.5H80v.2H68.991v9.8H80v.2H68.991v9.8H80v.2H68.991v3.5a6.503 6.503 0 0 1-4.701 6.248 6.514 6.514 0 0 1-4.443 4.442 6.503 6.503 0 0 1-6.247 4.7h-3.5V80h-.2V68.99h-9.8V80zm28.89-40.1a28.728 28.728 0 0 0-1.746-9.8h-2.5v9.8h4.247zm-4.246.2h4.247a28.729 28.729 0 0 1-1.747 9.8h-2.5zm-.2-.2v-9.8H60.1v9.8zm-4.244.2h4.244v9.8H60.1zm-.2-.2a19.807 19.807 0 0 0-2.633-9.8H50.1v9.8zm-9.8.2h9.8a19.807 19.807 0 0 1-2.633 9.8H50.1zm-.2-.2v-9.8h-9.8v9.8zm-9.8.2h9.8v9.8h-9.8zm-.2-.2v-9.8h-9.8v9.8zm-9.8.2h9.8v9.8h-9.8zm-.2-.2v-9.8h-7.167a19.807 19.807 0 0 0-2.633 9.8zm-9.8.2h9.8v9.8h-7.167a19.807 19.807 0 0 1-2.633-9.8zm-.2-.2v-9.8h-4.245v9.8zm-4.245.2H19.9v9.8h-4.245zm-.2-.2v-9.8H12.96a28.726 28.726 0 0 0-1.748 9.8h4.242zm-4.242.2h4.242v9.8H12.96a28.726 28.726 0 0 1-1.748-9.8zm0 13.5v-3.5h1.608a28.876 28.876 0 0 0 2.634 5.327v2.617c0 .543.066 1.07.192 1.575a6.303 6.303 0 0 1-4.434-6.019zm4.242 1.449a28.674 28.674 0 0 1-2.42-4.949h2.42zm.2.32V50.1H19.9v9.8h-.702a28.915 28.915 0 0 1-3.543-4.53zM20.1 59.9v-9.8h2.518a20.2 20.2 0 0 0 7.282 7.282V59.9zm0-10h2.403a19.966 19.966 0 0 1-2.403-7.053zm9.8 7.25a20 20 0 0 1-7.05-7.05h7.05zm.2.117V50.1h9.8v9.8a19.807 19.807 0 0 1-9.8-2.633zm10 2.633v-9.8h9.8v7.167a19.807 19.807 0 0 1-9.8 2.633zm10-2.75V50.1h7.05a20 20 0 0 1-7.05 7.05zm0 .232a20.2 20.2 0 0 0 7.282-7.282H59.9v9.8h-9.8zm7.397-7.482H59.9v-7.053a19.966 19.966 0 0 1-2.403 7.053zm2.603 10v-9.8h4.244v5.28a28.91 28.91 0 0 1-3.538 4.52zm4.444-4.841V50.1h2.426a28.67 28.67 0 0 1-2.426 4.959zm0 .378a28.881 28.881 0 0 0 2.64-5.337h1.607v3.5a6.303 6.303 0 0 1-4.44 6.021 6.514 6.514 0 0 0 .193-1.577zm2.713-5.537h1.534v-6.477a28.817 28.817 0 0 1-1.534 6.477zm-56.044 0h1.535a28.807 28.807 0 0 1-1.535-6.477zm57.578-20v-3.5a6.303 6.303 0 0 0-4.44-6.02c.126.504.193 1.031.193 1.575v2.608a28.877 28.877 0 0 1 2.639 5.337zm-1.534.2h1.534v6.477a28.815 28.815 0 0 0-1.534-6.477zm-.288-.2a28.673 28.673 0 0 0-2.425-4.958V29.9zm-2.625 0v-5.279a28.911 28.911 0 0 0-3.538-4.521H60.1v9.8zm-4.444 0v-9.8h-9.8v2.518a20.2 20.2 0 0 1 7.282 7.282zm-2.403.2H59.9v7.053a19.966 19.966 0 0 0-2.403-7.053zm-.347-.2a20 20 0 0 0-7.05-7.05v7.05zm-7.25 0v-7.167a19.807 19.807 0 0 0-9.8-2.633v9.8zm-10 0v-9.8a19.807 19.807 0 0 0-9.8 2.633V29.9zm-10 0v-7.05a20 20 0 0 0-7.05 7.05zm-7.282 0a20.2 20.2 0 0 1 7.282-7.282V20.1h-9.8v9.8zm-2.518.2h2.403a19.966 19.966 0 0 0-2.403 7.053zm-.2-.2v-9.8h-.701a28.915 28.915 0 0 0-3.544 4.53v5.27zm-4.445 0v-4.948a28.665 28.665 0 0 0-2.42 4.948zm-2.634 0a28.874 28.874 0 0 1 2.634-5.327v-2.618c0-.543.066-1.07.191-1.574a6.303 6.303 0 0 0-4.433 6.019v3.5zm-1.608.2h1.535a28.81 28.81 0 0 0-1.535 6.477zM36.58 68.79H30.1v-1.536c2.06.749 4.23 1.27 6.479 1.535zm3.321-.001a28.726 28.726 0 0 1-9.8-1.748v-2.497h9.8zm-10-1.822v-2.423h-4.953a28.678 28.678 0 0 0 4.953 2.423zm10-2.623h-9.8V60.1h9.8zm-10 0V60.1h-9.8v.702a28.915 28.915 0 0 0 4.526 3.542H29.9zm7.254-4.444H30.1v-2.403a19.966 19.966 0 0 0 7.053 2.403zm0-39.8a19.966 19.966 0 0 0-7.054 2.403V20.1h7.053zm2.746-.2h-9.8v-4.245h9.8zm-10 0v-4.245h-5.27a28.907 28.907 0 0 0-4.53 3.544v.701zm10-4.445h-9.8V12.96a28.729 28.729 0 0 1 9.8-1.749zm-10 0v-2.421a28.668 28.668 0 0 0-4.95 2.42h4.95zm6.679-4.244a28.81 28.81 0 0 0-6.479 1.536V11.21h6.479zm-6.679 1.61v-1.61h-3.5a6.303 6.303 0 0 0-6.02 4.436 6.514 6.514 0 0 1 1.575-.192h2.617A28.877 28.877 0 0 1 29.9 12.82zm0 55.968V67.18a28.878 28.878 0 0 1-5.331-2.636h-2.614c-.543 0-1.07-.067-1.575-.192a6.303 6.303 0 0 0 6.02 4.437zm20.2 0h3.5a6.303 6.303 0 0 0 6.02-4.438 6.513 6.513 0 0 1-1.576.193h-2.608a28.879 28.879 0 0 1-5.336 2.638zm-.2-1.534v1.534h-6.475a28.808 28.808 0 0 0 6.475-1.534zm.2-.287a28.671 28.671 0 0 0 4.957-2.424H50.1v2.424zm-.2-2.424v2.499a28.728 28.728 0 0 1-9.8 1.746v-4.245zm.2-.2h5.278a28.914 28.914 0 0 0 4.522-3.538V60.1h-9.8zm-.2-4.244v4.244h-9.8V60.1zm0-2.603V59.9h-7.053a19.966 19.966 0 0 0 7.053-2.403zm0-37.397v2.403a19.966 19.966 0 0 0-7.053-2.403H49.9zm.2-.2h9.8v-.705a28.911 28.911 0 0 0-4.526-3.54H50.1V19.9zm-.2-4.245V19.9h-9.8v-4.245h9.8zm.2-.2h4.954a28.676 28.676 0 0 0-4.954-2.423zm-.2-2.497v2.497h-9.8V11.21a28.75 28.75 0 0 1 9.8 1.747zm.2-.14a28.877 28.877 0 0 1 5.332 2.637h2.612c.543 0 1.071.066 1.576.192a6.303 6.303 0 0 0-6.02-4.436h-3.5zm-.2-1.607v1.534a28.812 28.812 0 0 0-6.475-1.534H49.9zm-34.245 44.53v2.303c0 .567.075 1.117.215 1.64a6.309 6.309 0 0 0 1.643.216h1.41a29.118 29.118 0 0 1-3.268-4.16zm3.458 4.359h-1.6a6.513 6.513 0 0 1-1.578-.193 6.315 6.315 0 0 0 4.157 4.157 6.517 6.517 0 0 1-.192-1.575v-1.602a29.35 29.35 0 0 1-.787-.787zm.787.509a29.029 29.029 0 0 1-.508-.509h.508zm.2.469v1.411c0 .567.075 1.117.215 1.64.523.14 1.073.215 1.64.215h2.3a29.118 29.118 0 0 1-4.155-3.266zm35.649 3.266h2.295c.567 0 1.117-.075 1.64-.216a6.286 6.286 0 0 0 .216-1.639v-1.407a29.116 29.116 0 0 1-4.151 3.262zm4.35-3.454v1.598a6.53 6.53 0 0 1-.192 1.574 6.314 6.314 0 0 0 4.155-4.154 6.509 6.509 0 0 1-1.572.191h-1.6a29.08 29.08 0 0 1-.791.791zm.982-.991h1.41c.565 0 1.114-.075 1.636-.215a6.31 6.31 0 0 0 .216-1.641V55.75a29.113 29.113 0 0 1-3.262 4.15zm3.262-35.65v-2.295c0-.568-.075-1.117-.216-1.64a6.307 6.307 0 0 0-1.637-.215h-1.41a29.112 29.112 0 0 1 3.263 4.15zM60.89 19.9h1.6c.542 0 1.069.066 1.573.192a6.314 6.314 0 0 0-4.156-4.157 6.51 6.51 0 0 1 .192 1.576v1.598c.269.259.532.522.79.791zm-.991-.981V17.51a6.31 6.31 0 0 0-.216-1.64 6.308 6.308 0 0 0-1.64-.216h-2.299a29.108 29.108 0 0 1 4.155 3.264zm-35.641-3.264h-2.304a6.31 6.31 0 0 0-1.639.215 6.306 6.306 0 0 0-.216 1.641v1.412a29.115 29.115 0 0 1 4.159-3.268zM19.9 19.113v-1.602c0-.543.067-1.072.193-1.577a6.315 6.315 0 0 0-4.159 4.16 6.518 6.518 0 0 1 1.58-.194h1.6c.257-.267.519-.53.786-.787zm-.508.787h.508v-.508c-.171.167-.34.337-.508.508zm-.47.2h-1.409a6.31 6.31 0 0 0-1.643.216 6.308 6.308 0 0 0-.215 1.639v2.305a29.107 29.107 0 0 1 3.268-4.16zm41.178-.712c.173.168.344.34.512.512H60.1zm.513 40.712c-.169.173-.34.344-.513.513V60.1z' fill='%2394a3b8' fill-rule='evenodd'/%3e%3crect fill='black' height='80' rx='16' width='80'/%3e%3cpath d='M43.47 19.752c1.24 5.14.821 9.663-.937 10.1-1.758.438-4.19-3.375-5.43-8.517-1.241-5.14-.822-9.663.936-10.1 1.759-.438 4.19 3.376 5.43 8.517zm20.49 4.42c-2.749-2.913-8.216-2.123-12.212 1.763s-5.008 9.398-2.26 12.31 8.215 2.123 12.211-1.763 5.008-9.398 2.26-12.31zM42.102 68.769c1.758-.438 2.116-5.216.8-10.673-1.318-5.456-3.81-9.525-5.57-9.088-1.757.438-2.115 5.216-.798 10.672 1.317 5.457 3.81 9.526 5.568 9.089zM24.18 26.838c5.073 1.496 8.78 4.12 8.28 5.862-.5 1.741-5.019 1.94-10.091.444-5.073-1.496-8.78-4.12-8.28-5.861.501-1.742 5.019-1.941 10.092-.445zm32.924 19.664c5.384 1.588 9.343 4.286 8.843 6.028-.5 1.741-5.27 1.866-10.654.278-5.385-1.588-9.343-4.286-8.843-6.028.5-1.741 5.27-1.866 10.654-.278zm-27.216-3.654c-1.258-1.304-5.384.594-9.215 4.24-3.832 3.644-5.919 7.656-4.66 8.96 1.257 1.304 5.383-.594 9.215-4.239s5.918-7.657 4.66-8.96z' fill='%23fe5'/%3e%3c/svg%3e";
    var w = ".pera-wallet-download-qr-code-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  margin: 26px auto 0;\n  padding: 10px;\n  box-shadow: 0px 20px 60px rgba(26, 35, 91, 0.15), 0px 4px 12px rgba(26, 35, 91, 0.05), 0px 1px 4px rgba(26, 35, 91, 0.06);\n  border-radius: 24px;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-download-qr-code-wrapper {\n    margin-top: 51px;\n  }\n}";
    r(w);
    var h = document.createElement("template");
    h.innerHTML = '\n  <div id="pera-wallet-download-qr-code-wrapper" class="pera-wallet-download-qr-code-wrapper"></div>  \n';
    var g = class extends HTMLElement {
      constructor() {
        if (super(), this.attachShadow({ mode: "open" }), this.shadowRoot) {
          const e2 = document.createElement("style");
          e2.textContent = w, this.shadowRoot.append(h.content.cloneNode(true), e2);
        }
      }
      connectedCallback() {
        var n2;
        const t2 = new o.default({ width: 205, height: 205, type: "svg", data: e.PERA_DOWNLOAD_URL, image: m, dotsOptions: { color: "#000", type: "extra-rounded" }, imageOptions: { crossOrigin: "anonymous", margin: 10 }, cornersSquareOptions: { type: "extra-rounded" }, cornersDotOptions: { type: "dot" } }), a2 = null === (n2 = this.shadowRoot) || void 0 === n2 ? void 0 : n2.getElementById("pera-wallet-download-qr-code-wrapper");
        a2 && t2.append(a2);
      }
    };
    var x = "data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M8.5 19L15.5 12L8.5 5' stroke='%233C3C49' stroke-width='2'/%3e%3c/svg%3e";
    var f = ".pera-wallet-connect-modal-desktop-mode {\n  display: grid;\n  grid-template-columns: 205px auto;\n  gap: 70px;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view {\n  display: block;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-accordion-item--active .pera-wallet-accordion-item__content {\n  height: 364px;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item--web-wallet {\n  display: none;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item .pera-wallet-accordion-toggle {\n  padding: 26px 24px 12px;\n  border-radius: 24px 24px 0 0;\n  transition: all ease-in 0.2s;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item .pera-wallet-accordion-item__content {\n  height: 434px;\n  border-radius: 0 0 24px 24px;\n  transition: height ease-in 0.2s;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item .pera-wallet-accordion-icon {\n  transform: rotate(90deg);\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-connect-modal-desktop-mode__download-pera-description {\n  margin-top: 50px;\n}\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__download-view {\n  display: none;\n}\n.pera-wallet-connect-modal-desktop-mode--download .pera-wallet-connect-modal-desktop-mode__default-view {\n  display: none;\n}\n.pera-wallet-connect-modal-desktop-mode--download .pera-wallet-connect-modal-desktop-mode__download-view {\n  display: block;\n}\n.pera-wallet-connect-modal-desktop-mode--download .pera-wallet-connect-modal-desktop-mode__download-view .pera-wallet-connect-modal-download-pera-view__footer a {\n  display: flex;\n  cursor: pointer;\n}\n.pera-wallet-connect-modal-desktop-mode--compact {\n  grid-template-columns: unset;\n  gap: unset;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__web-wallet {\n  padding: 28px 40px;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__web-wallet .pera-wallet-connect-modal-desktop-mode__web-wallet__logo-wrapper {\n  box-shadow: unset;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__web-wallet .pera-wallet-connect-modal-desktop-mode__web-wallet__description {\n  margin-bottom: 16px;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__web-wallet .pera-wallet-connect-modal-desktop-mode__web-wallet__launch-button {\n  width: 172px;\n  height: 40px;\n  margin: 0 auto;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__web-wallet-iframe {\n  height: 100%;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view {\n  overflow: hidden;\n  border-radius: 24px;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-accordion-item {\n  margin-bottom: 0;\n  border-radius: 0;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-accordion-item:not(:last-child) {\n  border-bottom: 1px solid #e6e8ee;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-accordion-item #pera-wallet-iframe {\n  height: 100%;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-accordion-toggle {\n  padding: 20px;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-accordion-toggle__text, .pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-accordion-toggle__content-with-label__text {\n  color: #626268;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: -0.09px;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-accordion-toggle__bold-color {\n  font-weight: 600;\n  color: #1a1a1a;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-accordion-item--active .pera-wallet-accordion-item__content {\n  height: 265px;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-connect-modal-desktop-mode__download-pera-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 14px;\n  padding: 0 20px;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-connect-modal-desktop-mode__download-pera-description,\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-connect-modal-desktop-mode__download-pera-button {\n  margin: 0;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-connect-modal-desktop-mode__download-pera-button {\n  font-weight: 500;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-connect-qr-code-wrapper {\n  margin: 4px auto 0;\n  padding: 0;\n  box-shadow: unset;\n}\n.pera-wallet-connect-modal-desktop-mode--compact .pera-wallet-connect-modal-desktop-mode__default-view .pera-wallet-connect-qr-code-wrapper svg {\n  padding: 8px;\n  box-shadow: 0px 20px 60px rgba(26, 35, 91, 0.15), 0px 4px 12px rgba(26, 35, 91, 0.05), 0px 1px 4px rgba(26, 35, 91, 0.06);\n  border-radius: 12px;\n}\n.pera-wallet-connect-modal-desktop-mode--select-account {\n  width: 100%;\n  height: 100%;\n}\n.pera-wallet-connect-modal-desktop-mode--select-account.pera-wallet-connect-modal-desktop-mode--default {\n  overflow: hidden;\n}\n.pera-wallet-connect-modal-desktop-mode--select-account .pera-wallet-connect-modal-desktop-mode__web-wallet-iframe {\n  position: unset;\n}\n.pera-wallet-connect-modal-desktop-mode--select-account .pera-wallet-accordion {\n  overflow: hidden;\n}\n.pera-wallet-connect-modal-desktop-mode--select-account #pera-wallet-iframe {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 3;\n  width: 100%;\n  height: 100%;\n  border-radius: 16px;\n}\n\n.pera-wallet-connect-modal-desktop-mode__accordion__description,\n.pera-wallet-connect-modal-desktop-mode__connect-button-wrapper {\n  padding: 0 40px 20px 64px;\n}\n\n.pera-wallet-connect-modal-desktop-mode__web-wallet {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: calc(100% - 88px);\n  padding: 48px 52px 40px;\n  margin: 0 auto;\n}\n\n.pera-wallet-connect-modal-desktop-mode__web-wallet__logo-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 72px;\n  height: 72px;\n  margin: 0 auto 16px;\n  background: #ffffff;\n  border-radius: 50%;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.1), 0px 10px 16px rgba(20, 37, 63, 0.06);\n}\n\n.pera-wallet-connect-modal-desktop-mode__web-wallet__description {\n  margin: 0 auto 32px;\n  font-size: 14px;\n  line-height: 24px;\n  letter-spacing: -0.1px;\n  text-align: center;\n  color: #6a6a81;\n}\n\n.pera-wallet-connect-modal-desktop-mode__web-wallet__launch-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 100%;\n  padding: 14px 0;\n  color: #ffffff;\n  background-color: #6b46fe;\n  border-radius: 12px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: -0.1;\n  border: none;\n  outline: none;\n  cursor: pointer;\n}\n\n.pera-wallet-connect-modal-desktop-mode__web-wallet-iframe {\n  position: relative;\n  width: fit-content;\n  margin: 0 auto;\n}\n\n.pera-wallet-connect-modal-desktop-mode__connect-button {\n  display: block;\n  width: 100%;\n  height: 48px;\n  border: unset;\n  border-radius: 6px;\n  background-color: #333333;\n  color: white;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 13px;\n}\n\n.pera-wallet-connect-qr-code-wrapper {\n  width: fit-content;\n  margin: 24px auto 0;\n  padding: 10px;\n  box-shadow: 0px 20px 60px rgba(26, 35, 91, 0.15), 0px 4px 12px rgba(26, 35, 91, 0.05), 0px 1px 4px rgba(26, 35, 91, 0.06);\n  border-radius: 24px;\n}\n\n.pera-wallet-connect-modal-desktop-mode__download-pera-description {\n  color: #838aa6;\n  text-align: center;\n  margin: 32px 0 12px;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: -0.04px;\n}\n\n.pera-wallet-connect-modal-desktop-mode__download-pera-button {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0 auto;\n  padding: 0;\n  color: #6b46fe;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  font-weight: 600;\n  font-size: 13px;\n  line-height: 20px;\n  letter-spacing: 0.01px;\n  cursor: pointer;\n}\n\n.pera-wallet-connect-modal-download-pera-view__back-button {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 14px;\n  padding: 12px 24px;\n  color: #3c3c49;\n  background-color: #ffffff;\n  outline: none;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n  border: unset;\n  border-radius: 24px;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 24px;\n  letter-spacing: -0.1px;\n  cursor: pointer;\n}\n\n.pera-wallet-connect-modal-download-pera-view {\n  padding: 32px 37px 28px;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n  border-radius: 24px;\n}\n\n.pera-wallet-connect-modal-download-pera-view__title {\n  margin-bottom: 8px;\n  color: #3c3c49;\n  font-weight: 600;\n  font-size: 15px;\n  line-height: 18px;\n  text-align: center;\n  letter-spacing: -0.13px;\n}\n\n.pera-wallet-connect-modal-download-pera-view__footer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  margin-top: 53px;\n}\n\n.pera-wallet-connect-modal-download-pera-view__footer__button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 8px 16px;\n  color: #6a6a81;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n  text-decoration: none;\n  border-radius: 12px;\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 200%;\n  letter-spacing: -0.04px;\n  cursor: pointer;\n}\n\n#pera-wallet-iframe {\n  width: 285px;\n  height: 376px;\n  margin: 0 auto;\n  border: none;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-connect-modal-desktop-mode {\n    grid-template-columns: 1fr;\n    gap: 24px;\n  }\n  .pera-wallet-connect-qr-code-wrapper {\n    margin-top: 16px;\n  }\n  .pera-wallet-connect-modal-download-pera-view {\n    padding: 24px;\n  }\n  .pera-wallet-download-qr-code-wrapper {\n    margin-top: 32px;\n  }\n  .pera-wallet-connect-modal-download-pera-view__footer {\n    margin-top: 40px;\n  }\n}";
    r(f);
    var u = ".pera-wallet-accordion-item {\n  background-color: #ffffff;\n  border-radius: 24px;\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.02), 0px 4px 12px rgba(0, 0, 0, 0.03);\n}\n.pera-wallet-accordion-item:not(:last-of-type) {\n  margin-bottom: 20px;\n}\n.pera-wallet-accordion-item:not(:last-of-type) .pera-wallet-accordion-panel {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.pera-wallet-accordion-item .pera-wallet-accordion-item__content {\n  height: 0;\n  overflow: hidden;\n  color: #69708d;\n  background-color: #ffffff;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: -0.04px;\n  transition: height ease-in 0.2s;\n}\n.pera-wallet-accordion-item--active .pera-wallet-accordion-toggle {\n  padding: 26px 24px 12px;\n  border-radius: 24px 24px 0 0;\n  transition: all ease-in 0.2s;\n}\n.pera-wallet-accordion-item--active .pera-wallet-accordion-item__content {\n  border-radius: 0 0 24px 24px;\n  transition: height ease-in 0.2s;\n}\n.pera-wallet-accordion-item--active .pera-wallet-accordion-icon {\n  transform: rotate(90deg);\n}\n\n.pera-wallet-accordion-toggle {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  padding: 12px 24px;\n  color: #2c3559;\n  background-color: #ffffff;\n  border: none;\n  border-radius: 24px;\n  outline: none;\n  cursor: pointer;\n  font-size: 16px;\n  line-height: 18px;\n  letter-spacing: -0.1px;\n  font-weight: 600;\n  transition: all ease-in 0.2s;\n}\n.pera-wallet-accordion-toggle__text, .pera-wallet-accordion-toggle__content-with-label__text {\n  color: #626268;\n}\n\n.pera-wallet-accordion-icon {\n  transition: all ease-in 0.2s;\n}\n\n.pera-wallet-accordion-toggle__bold-color {\n  color: #1A1A1A;\n  font-weight: 600;\n}\n\n.pera-wallet-accordion-toggle__content-with-label {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.pera-wallet-accordion-toggle__label {\n  padding: 4px 9px;\n  color: #1C786C;\n  background: #E0FAEE;\n  border-radius: 12px;\n  font-size: 11px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: 0.01px;\n}\n\n.pera-wallet-accordion-toggle__button {\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  height: 100%;\n  background: transparent;\n  box-shadow: none;\n  outline: none;\n  border: none;\n  cursor: pointer;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-accordion-toggle {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 24px;\n    letter-spacing: -0.1px;\n  }\n}";
    r(u);
    var _ = document.createElement("template");
    var b = document.createElement("style");
    var v = document.createElement("style");
    b.textContent = f, v.textContent = u;
    _.innerHTML = `
  <div id="pera-wallet-connect-modal-desktop-mode" class="pera-wallet-connect-modal-desktop-mode pera-wallet-connect-modal-desktop-mode--default">
      <pera-wallet-connect-modal-information-section></pera-wallet-connect-modal-information-section>

      <div class="pera-wallet-connect-modal-desktop-mode__default-view"></div>
       

      <div class="pera-wallet-connect-modal-desktop-mode__download-view">
        <button
          id="pera-wallet-connect-modal-download-pera-view-back-button"
          class="pera-wallet-connect-modal-download-pera-view__back-button">
          <img
            src="data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M10.7071 6.29387C11.0976 6.68439 11.0976 7.31756 10.7071 7.70808L7.41421 11.001L19 11.001C19.5523 11.001 20 11.4487 20 12.001C20 12.5533 19.5523 13.001 19 13.001L7.41421 13.001L10.7071 16.2939C11.0976 16.6844 11.0976 17.3176 10.7071 17.7081C10.3166 18.0986 9.68342 18.0986 9.29289 17.7081L4.29289 12.7081C4.10536 12.5205 4 12.2662 4 12.001C4 11.7358 4.10536 11.4814 4.29289 11.2939L9.29289 6.29387C9.68342 5.90335 10.3166 5.90335 10.7071 6.29387Z' fill='%233C3C49'/%3e%3c/svg%3e"
            alt="Back Arrow"
          />

          Back
        </button>

        <div class="pera-wallet-connect-modal-download-pera-view">
          <h1 class="pera-wallet-connect-modal-download-pera-view__title">
            Download Pera Wallet
          </h1>

          <pera-wallet-download-qr-code></pera-wallet-download-qr-code>

          <div class="pera-wallet-connect-modal-download-pera-view__footer">
            <a
              href="https://apps.apple.com/us/app/algorand-wallet/id1459898525"
              target="_blank"
              rel="noopener noreferrer">
              <img src="data:image/svg+xml,%3csvg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='40' height='40' rx='12' fill='black'/%3e%3cpath d='M25.6308 20.3011C25.6416 19.4664 25.8633 18.6481 26.2753 17.9221C26.6873 17.1962 27.2763 16.5863 27.9873 16.1491C27.5356 15.5039 26.9397 14.973 26.2469 14.5984C25.554 14.2239 24.7834 14.016 23.9963 13.9914C22.317 13.8151 20.6891 14.9962 19.8333 14.9962C18.9611 14.9962 17.6436 14.0089 16.2249 14.0381C15.3072 14.0677 14.4128 14.3346 13.6289 14.8126C12.8451 15.2906 12.1984 15.9636 11.7519 16.7659C9.81789 20.1144 11.2605 25.0354 13.1132 27.742C14.0401 29.0674 15.1233 30.5478 16.5408 30.4953C17.9278 30.4378 18.4458 29.6108 20.1202 29.6108C21.779 29.6108 22.265 30.4953 23.7112 30.4619C25.1995 30.4378 26.1372 29.1307 27.0316 27.7928C27.6976 26.8484 28.2101 25.8047 28.55 24.7003C27.6853 24.3345 26.9474 23.7224 26.4283 22.9401C25.9092 22.1578 25.6318 21.2399 25.6308 20.3011ZM22.8993 12.2113C23.7108 11.2371 24.1106 9.98492 24.0138 8.7207C22.7739 8.85092 21.6287 9.44347 20.8062 10.3803C20.404 10.838 20.096 11.3704 19.8998 11.9472C19.7035 12.5239 19.6229 13.1337 19.6625 13.7417C20.2826 13.7481 20.8961 13.6137 21.4568 13.3486C22.0175 13.0835 22.5107 12.6946 22.8993 12.2113Z' fill='white'/%3e%3c/svg%3e" alt="App Store icon" />
            </a>

            <a
              href="https://play.google.com/store/apps/details?id=com.algorand.android"
              target="_blank"
              rel="noopener noreferrer">
              <img src="data:image/svg+xml,%3csvg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='40' height='40' rx='12' fill='black'/%3e%3cpath d='M12.41 9.7719C12.1334 10.0219 11.9683 10.4388 11.9683 10.9922V10.8671V29.1294V29.0091C11.9683 29.5202 12.1099 29.9149 12.3497 30.169L12.4109 30.2277V30.228C12.6051 30.4035 12.854 30.4966 13.1393 30.4963C13.418 30.4963 13.7316 30.4073 14.0626 30.2194L26.0264 23.4107L30.1359 21.0717C30.6578 20.7748 30.9508 20.3917 30.9998 20.0014V19.9998C30.9508 19.6087 30.6578 19.2259 30.1359 18.9289L26.0261 16.5902L14.0627 9.78154C13.731 9.59325 13.4171 9.50391 13.1376 9.50391C12.8527 9.50391 12.6041 9.59677 12.41 9.7719H12.41Z' fill='%2300C1FF'/%3e%3cpath d='M12.411 30.2285L12.3497 30.1698C12.1099 29.9157 11.9683 29.5209 11.9683 29.0098V29.1301V10.8724V10.993C11.9683 10.4396 12.1334 10.0226 12.41 9.77268L22.622 20.0009L12.411 30.2285Z' fill='url(%23paint0_linear_173_14441)'/%3e%3cpath d='M26.0256 23.4102L22.6211 19.9996L26.0253 16.5896L30.1351 18.9283C30.657 19.2253 30.95 19.6081 30.9989 19.9993V20.0008C30.95 20.3911 30.657 20.7742 30.1351 21.0712L26.0256 23.4101' fill='url(%23paint1_linear_173_14441)'/%3e%3cpath d='M13.1374 30.4961C12.8522 30.4964 12.6033 30.4032 12.4092 30.2277V30.2275L22.6202 19.9999L26.0246 23.4104L14.0608 30.2191C13.7298 30.4071 13.4162 30.4961 13.1374 30.4961Z' fill='url(%23paint2_linear_173_14441)'/%3e%3cpath d='M22.6212 20.002L12.4092 9.7737C12.6033 9.59858 12.8519 9.50571 13.1368 9.50571C13.4163 9.50571 13.7302 9.59501 14.0618 9.78335L26.0253 16.592L22.6212 20.002' fill='url(%23paint3_linear_173_14441)'/%3e%3cpath d='M13.1394 30.6172C12.8542 30.6172 12.6049 30.524 12.4108 30.3486L12.4105 30.3489C12.4097 30.3481 12.4088 30.3473 12.4079 30.3466L12.3548 30.2947C12.3531 30.2931 12.3516 30.2912 12.3496 30.2893L12.4108 30.2279C12.6049 30.4034 12.8538 30.4966 13.1392 30.4962C13.4179 30.4962 13.7315 30.4073 14.0625 30.2193L26.0263 23.4106L26.1029 23.4874L26.0253 23.5316L14.0625 30.3398C13.7608 30.5111 13.4739 30.6004 13.2147 30.6153C13.1896 30.6165 13.1645 30.6171 13.1394 30.6172' fill='url(%23paint4_linear_173_14441)'/%3e%3cpath d='M12.3497 30.2891C12.1099 30.0349 11.9683 29.6406 11.9683 29.1292V29.0089C11.9683 29.52 12.1099 29.9146 12.3497 30.1688L12.4109 30.2275L12.3497 30.2891Z' fill='url(%23paint5_linear_173_14441)'/%3e%3cpath d='M26.1025 23.4882L26.0259 23.4114L30.1349 21.0727C30.6568 20.7758 30.9498 20.3927 30.9987 20.0025C30.9987 20.1457 30.9668 20.2889 30.9035 20.4282C30.7756 20.7091 30.5194 20.9744 30.135 21.1934L26.1025 23.4883' fill='url(%23paint6_linear_173_14441)'/%3e%3cpath d='M30.9991 20C30.9501 19.6089 30.6571 19.2261 30.1353 18.9291L26.0259 16.5907L26.1025 16.5139H26.1029L30.1353 18.8088C30.7106 19.1365 30.9987 19.5682 30.9991 20Z' fill='url(%23paint7_linear_173_14441)'/%3e%3cpath d='M11.9683 10.9922V10.8661C11.9683 10.8206 11.9695 10.7761 11.9718 10.7329V10.7309C11.9718 10.7303 11.9718 10.7297 11.972 10.729V10.7242C11.9969 10.284 12.1334 9.94066 12.3497 9.71139L12.4099 9.77198C12.1334 10.0219 11.9683 10.4388 11.9683 10.9922Z' fill='url(%23paint8_linear_173_14441)'/%3e%3cpath d='M26.026 16.5898L14.0625 9.78115C13.7308 9.59285 13.417 9.50355 13.1375 9.50355C12.8525 9.50355 12.6039 9.59642 12.4099 9.77154L12.3496 9.71091C12.3684 9.69096 12.388 9.67172 12.4082 9.65322C12.4089 9.65255 12.4099 9.65188 12.4105 9.65125C12.6031 9.47747 12.849 9.3846 13.1314 9.38293H13.1375C13.417 9.38293 13.7308 9.47227 14.0625 9.66064L26.1029 16.5128L26.1026 16.513L26.026 16.5898Z' fill='url(%23paint9_linear_173_14441)'/%3e%3cdefs%3e%3clinearGradient id='paint0_linear_173_14441' x1='18.4943' y1='10.6794' x2='9.69389' y2='19.494' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2300A0FF'/%3e%3cstop offset='0.00657' stop-color='%2300A1FF'/%3e%3cstop offset='0.2601' stop-color='%2300BEFF'/%3e%3cstop offset='0.5122' stop-color='%2300D2FF'/%3e%3cstop offset='0.7604' stop-color='%2300DFFF'/%3e%3cstop offset='1' stop-color='%2300E3FF'/%3e%3c/linearGradient%3e%3clinearGradient id='paint1_linear_173_14441' x1='31.6348' y1='19.9407' x2='11.691' y2='19.9407' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFE000'/%3e%3cstop offset='0.4087' stop-color='%23FFBD00'/%3e%3cstop offset='0.7754' stop-color='orange'/%3e%3cstop offset='1' stop-color='%23FF9C00'/%3e%3c/linearGradient%3e%3clinearGradient id='paint2_linear_173_14441' x1='24.2172' y1='23.2425' x2='9.30414' y2='38.0705' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FF3A44'/%3e%3cstop offset='1' stop-color='%23C31162'/%3e%3c/linearGradient%3e%3clinearGradient id='paint3_linear_173_14441' x1='9.77725' y1='8.25731' x2='16.4237' y2='14.876' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2332A071'/%3e%3cstop offset='0.0685' stop-color='%232DA771'/%3e%3cstop offset='0.4762' stop-color='%2315CF74'/%3e%3cstop offset='0.8009' stop-color='%2306E775'/%3e%3cstop offset='1' stop-color='%2300F076'/%3e%3c/linearGradient%3e%3clinearGradient id='paint4_linear_173_14441' x1='24.2114' y1='25.6084' x2='12.2683' y2='37.5709' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23CC2E36'/%3e%3cstop offset='1' stop-color='%239C0E4E'/%3e%3c/linearGradient%3e%3clinearGradient id='paint5_linear_173_14441' x1='13.3285' y1='10.6804' x2='5.57625' y2='18.4453' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23008DE0'/%3e%3cstop offset='0.00657' stop-color='%23008DE0'/%3e%3cstop offset='0.2601' stop-color='%2300A7E0'/%3e%3cstop offset='0.5122' stop-color='%2300B8E0'/%3e%3cstop offset='0.7604' stop-color='%2300C4E0'/%3e%3cstop offset='1' stop-color='%2300C7E0'/%3e%3c/linearGradient%3e%3clinearGradient id='paint6_linear_173_14441' x1='31.6346' y1='20.0018' x2='11.6929' y2='20.0018' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23E0C500'/%3e%3cstop offset='0.4087' stop-color='%23E0A600'/%3e%3cstop offset='0.7754' stop-color='%23E09100'/%3e%3cstop offset='1' stop-color='%23E08900'/%3e%3c/linearGradient%3e%3clinearGradient id='paint7_linear_173_14441' x1='31.6349' y1='20.0008' x2='11.6933' y2='20.0008' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFE840'/%3e%3cstop offset='0.4087' stop-color='%23FFCE40'/%3e%3cstop offset='0.7754' stop-color='%23FFBC40'/%3e%3cstop offset='1' stop-color='%23FFB540'/%3e%3c/linearGradient%3e%3clinearGradient id='paint8_linear_173_14441' x1='13.3201' y1='10.6927' x2='5.8533' y2='17.8475' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2340B8FF'/%3e%3cstop offset='0.00657' stop-color='%2340B9FF'/%3e%3cstop offset='0.2601' stop-color='%2340CEFF'/%3e%3cstop offset='0.5122' stop-color='%2340DDFF'/%3e%3cstop offset='0.7604' stop-color='%2340E7FF'/%3e%3cstop offset='1' stop-color='%2340EAFF'/%3e%3c/linearGradient%3e%3clinearGradient id='paint9_linear_173_14441' x1='9.76302' y1='10.4182' x2='15.0961' y2='15.76' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2365B895'/%3e%3cstop offset='0.0685' stop-color='%2362BD95'/%3e%3cstop offset='0.4762' stop-color='%2350DB97'/%3e%3cstop offset='0.8009' stop-color='%2344ED98'/%3e%3cstop offset='1' stop-color='%2340F498'/%3e%3c/linearGradient%3e%3c/defs%3e%3c/svg%3e" alt="Play Store icon" />
            </a>

            <a
              class="pera-wallet-connect-modal-download-pera-view__footer__button"
              href="https://perawallet.s3-eu-west-3.amazonaws.com/android-releases/app-pera-prod-release-bitrise-signed.apk"
              target="_blank"
              rel="noopener noreferrer">
              <img src="data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M3 14V20C3 20.5523 3.44772 21 4 21H20C20.5523 21 21 20.5523 21 20V14' stroke='%232C3559' stroke-width='1.5'/%3e%3cpath d='M11.9998 16V3M11.9998 16L7.47803 11.4783M11.9998 16L16.5215 11.4783' stroke='%232C3559' stroke-width='1.5'/%3e%3c/svg%3e" alt="Download icon" />

              Download APK File
            </a>
          </div>
        </div>
      </div>
    </div>
  `;
    var C = class extends HTMLElement {
      constructor() {
        var e2;
        if (super(), this.attachShadow({ mode: "open" }), this.shadowRoot) {
          this.shadowRoot.append(_.content.cloneNode(true), b, v), this.shadowRoot.addEventListener("click", ((e3) => {
            this.handleAccordion(e3);
          }));
          if ("true" === this.getAttribute("compact-mode")) {
            const e3 = this.shadowRoot.getElementById("pera-wallet-connect-modal-desktop-mode");
            null == e3 || e3.classList.add("pera-wallet-connect-modal-desktop-mode--compact");
          }
          const n2 = null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.querySelector(".pera-wallet-connect-modal-desktop-mode__default-view"), t2 = "true" === this.getAttribute("promote-mobile"), { webWalletOption: a2, mobileWalletOption: o2 } = (function(e3) {
            const n3 = `
  <div id="web-wallet-option" class="pera-wallet-accordion-item ${e3 ? "" : "pera-wallet-accordion-item--active"}  pera-wallet-accordion-item--web-wallet">
            <a class="pera-wallet-accordion-toggle">
              <button class="pera-wallet-accordion-toggle__button"></button>
  
              <img src="${x}" class="pera-wallet-accordion-icon" />
  
              <div class="pera-wallet-accordion-toggle__content-with-label">
                <div class="pera-wallet-accordion-toggle__content-with-label__text">
                  Connect With
  
                  <span class="pera-wallet-accordion-toggle__bold-color">
                    Pera Web
                  </span>
                </div>
  
                <span id="pera-web-new-label" class="pera-wallet-accordion-toggle__label">NEW</span>
              </div>
            </a>
  
            <div class="pera-wallet-accordion-item__content">
              <div class="pera-wallet-connect-modal-desktop-mode__web-wallet"><div>
              
              <div
                class="pera-wallet-connect-modal-desktop-mode__web-wallet__logo-wrapper">
                <img src="data:image/svg+xml,%3csvg width='44' height='44' viewBox='0 0 44 44' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect x='3.5' y='7.5' width='36' height='26' rx='5.5' stroke='%236B46FE' stroke-width='3'/%3e%3cpath d='M22.4973 14.5237C22.8556 16.041 22.7344 17.3757 22.2267 17.5048C21.719 17.6339 21.0169 16.5085 20.6586 14.9912C20.3003 13.4739 20.4214 12.1392 20.9292 12.0101C21.4369 11.881 22.1389 13.0064 22.4973 14.5237Z' fill='%236B46FE'/%3e%3cpath d='M28.4139 15.8282C27.6204 14.9686 26.0417 15.2016 24.8877 16.3486C23.7338 17.4956 23.4417 19.1222 24.2352 19.9818C25.0287 20.8414 26.6074 20.6084 27.7613 19.4614C28.9153 18.3144 29.2074 16.6878 28.4139 15.8282Z' fill='%236B46FE'/%3e%3cpath d='M22.1027 28.9905C22.6104 28.8614 22.7137 27.4512 22.3334 25.8407C21.9531 24.2303 21.2332 23.0294 20.7254 23.1585C20.2177 23.2876 20.1144 24.6978 20.4947 26.3083C20.875 27.9187 21.5949 29.1196 22.1027 28.9905Z' fill='%236B46FE'/%3e%3cpath d='M16.9269 16.6152C18.3917 17.0567 19.4621 17.8312 19.3176 18.3452C19.1731 18.8591 17.8686 18.9179 16.4037 18.4764C14.9389 18.0349 13.8686 17.2603 14.0131 16.7464C14.1575 16.2324 15.4621 16.1737 16.9269 16.6152Z' fill='%236B46FE'/%3e%3cpath d='M26.4342 22.4188C27.9889 22.8874 29.1322 23.6839 28.9877 24.1979C28.8432 24.7118 27.4657 24.7486 25.911 24.28C24.3563 23.8114 23.213 23.0148 23.3575 22.5009C23.502 21.9869 24.8795 21.9502 26.4342 22.4188Z' fill='%236B46FE'/%3e%3cpath d='M18.5752 21.3404C18.2119 20.9555 17.0205 21.5157 15.914 22.5915C14.8075 23.6673 14.2049 24.8514 14.5682 25.2363C14.9314 25.6211 16.1229 25.061 17.2294 23.9852C18.3359 22.9094 18.9384 21.7253 18.5752 21.3404Z' fill='%236B46FE'/%3e%3cpath d='M16 39C21 39.0001 23.5 39.0001 28 39' stroke='%236B46FE' stroke-width='3' stroke-linecap='round'/%3e%3c/svg%3e" />
              </div>
  
              <p
                class="pera-wallet-connect-modal-desktop-mode__web-wallet__description">
                Connect with Pera Web to continue
              </p>
            </div>
  
            <button
              id="pera-wallet-connect-web-wallet-launch-button"
              class="pera-wallet-connect-modal-desktop-mode__web-wallet__launch-button">
              Launch Pera Web
  
              <img src="data:image/svg+xml,%3csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M13.0892 9.41009C13.4147 9.73553 13.4147 10.2632 13.0892 10.5886L8.08924 15.5886C7.7638 15.914 7.23616 15.914 6.91072 15.5886C6.58529 15.2632 6.58529 14.7355 6.91072 14.4101L11.3215 9.99935L6.91073 5.5886C6.58529 5.26317 6.58529 4.73553 6.91073 4.41009C7.23616 4.08466 7.7638 4.08466 8.08924 4.41009L13.0892 9.41009Z' fill='white'/%3e%3c/svg%3e" />
            </button>
          </div>`, t3 = `
  <div id="mobile-wallet-option" class="pera-wallet-accordion-item ${e3 ? "pera-wallet-accordion-item--active" : ""}">
            <a class="pera-wallet-accordion-toggle">
            <button class="pera-wallet-accordion-toggle__button"></button>
  
              <img src="${x}" class="pera-wallet-accordion-icon" />
  
              <div class="pera-wallet-accordion-toggle__text">
                Connect with
  
                <span class="pera-wallet-accordion-toggle__bold-color">
                  Pera Mobile
                </span>
              </div>
            </a>
  
            <div class="pera-wallet-accordion-item__content">
              <div id="pera-wallet-connect-modal-connect-qr-code" class="pera-wallet-connect-qr-code-wrapper"></div>
  
              <div class="pera-wallet-connect-modal-desktop-mode__download-pera-container">
                <p
                  class="pera-wallet-connect-modal-desktop-mode__download-pera-description">
                    Don’t have Pera Wallet app?
                </p>
  
                <button
                  id="pera-wallet-connect-modal-desktop-mode-download-pera-button"
                  class="pera-wallet-connect-modal-desktop-mode__download-pera-button">
                  <img src="data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect x='2' y='2' width='4.66667' height='4.66667' rx='1.2' stroke='%236B46FE' stroke-width='1.5'/%3e%3crect x='2' y='9.33203' width='4.66667' height='4.66667' rx='1.2' stroke='%236B46FE' stroke-width='1.5'/%3e%3crect x='9.33325' y='2' width='4.66667' height='4.66667' rx='1.2' stroke='%236B46FE' stroke-width='1.5'/%3e%3cpath d='M8.70581 9.5293H10.9411' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M13.1765 12.668L14.6667 12.668' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M13.1765 14L14.6667 14' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M11.686 14L13.1762 14' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M12.4314 9.5293H14.6667' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M8.70581 10.2754H12.4313' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 11.7656H11.6862' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 12.5117H11.6862' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M8.70581 13.2539H10.196' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M8.70581 14H10.196' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 11.0195H12.4313' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3c/svg%3e" alt="QR Icon" />
  
                  Download Pera Wallet
                </button>
              </div>
            </div>
          </div>`;
            return { mobileWalletOption: document.createRange().createContextualFragment(t3), webWalletOption: document.createRange().createContextualFragment(n3) };
          })(t2);
          t2 ? (null == n2 || n2.appendChild(o2), null == n2 || n2.appendChild(a2)) : (null == n2 || n2.appendChild(a2), null == n2 || n2.appendChild(o2));
        }
      }
      connectedCallback() {
        var e2;
        const n2 = this.getAttribute("should-display-new-badge"), t2 = null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.getElementById("pera-web-new-label");
        "false" === n2 && (null == t2 || t2.setAttribute("style", "display:none")), this.handleChangeView();
      }
      handleChangeView() {
        var e2, n2, t2;
        const a2 = null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.getElementById("pera-wallet-connect-modal-desktop-mode-download-pera-button"), o2 = null === (n2 = this.shadowRoot) || void 0 === n2 ? void 0 : n2.getElementById("pera-wallet-connect-modal-download-pera-view-back-button"), l2 = null === (t2 = this.shadowRoot) || void 0 === t2 ? void 0 : t2.getElementById("pera-wallet-connect-web-wallet-launch-button");
        a2 && a2.addEventListener("click", (() => {
          this.onClickDownload();
        })), o2 && o2.addEventListener("click", (() => {
          this.onClickBack();
        })), l2 && l2.addEventListener("click", (() => {
          this.webWalletConnect();
        })), this.renderQRCode(), this.checkWebWalletAvaliability();
      }
      webWalletConnect() {
        "true" === this.getAttribute("is-web-wallet-avaliable") && window.onWebWalletConnect();
      }
      handleAccordion(e2) {
        var n2, t2;
        if (e2.target instanceof Element) {
          if (!e2.target.classList.contains("pera-wallet-accordion-toggle__button")) return;
          if (this.shadowRoot && (null === (n2 = e2.target.parentElement) || void 0 === n2 ? void 0 : n2.parentElement)) {
            const n3 = null === (t2 = e2.target.parentElement) || void 0 === t2 ? void 0 : t2.parentElement;
            if (!n3) return;
            if (n3.classList.contains("pera-wallet-accordion-item--active")) return;
            const a2 = this.shadowRoot.querySelectorAll(".pera-wallet-accordion-item.pera-wallet-accordion-item--active");
            for (let e3 = 0; e3 < a2.length; e3++) a2[e3].classList.remove("pera-wallet-accordion-item--active");
            n3.classList.toggle("pera-wallet-accordion-item--active");
          }
        }
      }
      renderQRCode() {
        var e2;
        const n2 = this.getAttribute("uri");
        let t2 = "false" === this.getAttribute("is-web-wallet-avaliable") ? 250 : 205;
        if ("true" === this.getAttribute("compact-mode") && (t2 = 190), n2) {
          const a2 = new o.default({ width: t2, height: t2, type: "svg", data: n2, image: m, dotsOptions: { color: "#000", type: "extra-rounded" }, imageOptions: { crossOrigin: "anonymous", margin: 8 }, cornersSquareOptions: { type: "extra-rounded" }, cornersDotOptions: { type: "dot" } }), l2 = null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.getElementById("pera-wallet-connect-modal-connect-qr-code");
          l2 && a2.append(l2);
        }
      }
      onClickDownload() {
        if (this.shadowRoot) {
          const e2 = this.shadowRoot.getElementById("pera-wallet-connect-modal-desktop-mode");
          e2 && (e2.classList.remove("pera-wallet-connect-modal-desktop-mode--default"), e2.classList.add("pera-wallet-connect-modal-desktop-mode--download"));
        }
      }
      onClickBack() {
        if (this.shadowRoot) {
          const e2 = this.shadowRoot.getElementById("pera-wallet-connect-modal-desktop-mode");
          e2 && (e2.classList.add("pera-wallet-connect-modal-desktop-mode--default"), e2.classList.remove("pera-wallet-connect-modal-desktop-mode--download"));
        }
      }
      checkWebWalletAvaliability() {
        var e2;
        if ("false" === this.getAttribute("is-web-wallet-avaliable")) {
          const n2 = null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.querySelector(".pera-wallet-connect-modal-desktop-mode__default-view");
          null == n2 || n2.classList.add("pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable");
        }
      }
    };
    var L = ".pera-wallet-connect-modal-touch-screen-mode {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 46px;\n  padding: 4px;\n}\n\n.pera-wallet-connect-modal-touch-screen-mode--pending-message-view {\n  gap: 56px;\n  grid-template-rows: auto 48px;\n  height: 100%;\n  padding-bottom: 70px;\n}\n\n.pera-wallet-connect-modal-touch-screen-mode__launch-pera-wallet-button,\n.pera-wallet-connect-modal-touch-screen-mode__install-pera-wallet-button {\n  display: block;\n  padding: 14px;\n  border-radius: 12px;\n  text-decoration: none;\n  text-align: center;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: -0.09px;\n  font-weight: 500;\n}\n\n.pera-wallet-connect-modal-touch-screen-mode__launch-pera-wallet-button {\n  margin-bottom: 32px;\n  background-color: #6b46fe;\n  color: #ffffff;\n}\n\n.pera-wallet-connect-modal-touch-screen-mode__install-pera-wallet-button {\n  margin-bottom: 20px;\n  color: #6a6a81;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n}\n\n.pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box {\n  position: relative;\n  margin-bottom: 32px;\n  border-top: 1px solid #e6e8ee;\n}\n\n.pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box__text {\n  position: absolute;\n  top: -25px;\n  right: calc(50% - 56px);\n  width: 116px;\n  color: #69708d;\n  background-color: #ffffff;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: -0.04px;\n  text-align: center;\n}";
    r(L);
    var k = document.createElement("template");
    var y = class extends HTMLElement {
      constructor() {
        var n2;
        if (super(), this.attachShadow({ mode: "open" }), k.innerHTML = '\n  <div class="pera-wallet-connect-modal-touch-screen-mode">\n    <pera-wallet-connect-modal-information-section></pera-wallet-connect-modal-information-section>\n\n    <div>\n      <a\n        id="pera-wallet-connect-modal-touch-screen-mode-launch-pera-wallet-button"\n        class="pera-wallet-connect-modal-touch-screen-mode__launch-pera-wallet-button"\n        rel="noopener noreferrer"\n        target="_blank">\n        Launch Pera Wallet\n      </a>\n\n      <div\n        class="pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box">\n        <p\n          class="pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box__text"\n          >\n          New to Pera?\n        </p>\n      </div>\n\n      <a\n        href="https://perawallet.app/download/"\n        class="pera-wallet-connect-modal-touch-screen-mode__install-pera-wallet-button"\n        rel="noopener noreferrer"\n        target="_blank">\n        Install Pera Wallet\n      </a>\n    </div>\n  </div>\n', this.shadowRoot) {
          const t2 = document.createElement("style");
          t2.textContent = L, this.shadowRoot.append(k.content.cloneNode(true), t2);
          const a2 = null === (n2 = this.shadowRoot) || void 0 === n2 ? void 0 : n2.getElementById("pera-wallet-connect-modal-touch-screen-mode-launch-pera-wallet-button"), o2 = this.getAttribute("uri");
          a2 && o2 && (a2.setAttribute("href", (function(n3) {
            let t3 = i(false);
            e.isIOS() && !t3.includes("-wc") && (t3 = t3.replace("://", "-wc://"));
            let a3 = `${t3}wc?uri=${encodeURIComponent(n3)}`;
            const o3 = e.detectBrowser();
            return e.isAndroid() && (a3 = n3), o3 && (a3 = `${a3}&browser=${encodeURIComponent(o3)}`), a3;
          })(o2)), a2.addEventListener("click", (() => {
            this.onClickLaunch();
          })));
        }
      }
      onClickLaunch() {
        if (k.innerHTML = `
    <div class="pera-wallet-connect-modal-touch-screen-mode pera-wallet-connect-modal-touch-screen-mode--pending-message-view">
      <pera-wallet-connect-modal-pending-message-section should-use-sound="${this.getAttribute("should-use-sound")}"></pera-wallet-connect-modal-pending-message-section>
    </div>
  `, this.shadowRoot) {
          const e2 = document.createElement("style");
          e2.textContent = L, this.shadowRoot.innerHTML = "", this.shadowRoot.append(k.content.cloneNode(true), e2);
        }
      }
    };
    var M = '@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");\n.pera-wallet-modal {\n  --pera-wallet-modal-font-family: "Inter", sans-serif;\n  --pera-wallet-modal-compact-width: 380px;\n  --pera-wallet-modal-compact-height: 396px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 999999;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\n  width: 480px;\n  height: 578px;\n  background-color: #ffffff;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\n  top: 40px;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  max-width: unset;\n  height: calc(100 * var(--vh));\n  padding: 20px;\n  background-color: #ffffff;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\n  border-radius: 20px 20px 0px 0px;\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\n  overflow-y: auto;\n  transform: unset;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\n  background-image: unset;\n}\n.pera-wallet-modal--compact:not(.pera-wallet-modal--mobile) .pera-wallet-modal__body {\n  width: var(--pera-wallet-modal-compact-width);\n  height: var(--pera-wallet-modal-compact-height);\n  padding: 0;\n}\n.pera-wallet-modal * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.pera-wallet-modal ul,\n.pera-wallet-modal ol,\n.pera-wallet-modal li {\n  list-style-type: none;\n}\n\n.pera-wallet-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 48px;\n  padding: 14px;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 14px;\n}\n\n.pera-wallet-modal__logo img {\n  display: block;\n  width: 32px;\n}\n\n.pera-wallet-modal__body {\n  position: relative;\n  top: 50%;\n  left: 50%;\n  width: 700px;\n  max-width: calc(100vw - 80px);\n  padding: 28px;\n  background-color: #f3f3f7;\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 24px;\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\n  transform: translate(-50%, -50%);\n}\n.pera-wallet-modal__body::before {\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: -1;\n  content: "";\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\n  background-size: 116px 116px;\n  mix-blend-mode: overlay;\n  border-radius: 24px;\n  opacity: 0.8;\n  pointer-events: none;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\n    width: 100%;\n    max-width: calc(100vw - 32px);\n    padding: 24px;\n  }\n}\n@keyframes PeraWalletConnectSlideIn {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, calc(-50% + 24px));\n  }\n  100% {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n}\n@keyframes PeraWalletConnectMobileSlideIn {\n  0% {\n    top: 30%;\n    opacity: 0;\n  }\n  100% {\n    top: 40px;\n    opacity: 1;\n  }\n}';
    r(M);
    var E = document.createElement("template");
    var z = e.isMobile() ? `${e.PERA_WALLET_MODAL_CLASSNAME} ${e.PERA_WALLET_MODAL_CLASSNAME}--mobile` : `${e.PERA_WALLET_MODAL_CLASSNAME} ${e.PERA_WALLET_MODAL_CLASSNAME}--desktop`;
    var A = class extends HTMLElement {
      constructor() {
        if (super(), this.attachShadow({ mode: "open" }), this.shadowRoot) {
          const n2 = document.createElement("style");
          n2.textContent = M;
          "true" === this.getAttribute("compact-mode") && (z = `${z} ${e.PERA_WALLET_MODAL_CLASSNAME}--compact`), e.isMobile() ? (E.innerHTML = `
        <div class="${z}">
          <div class="pera-wallet-modal__body" part="body">
            <pera-wallet-modal-header modal-id="${e.PERA_WALLET_CONNECT_MODAL_ID}"></pera-wallet-modal-header/>
      
            <pera-wallet-modal-touch-screen-mode uri="${this.getAttribute("uri")}" should-use-sound="${this.getAttribute("should-use-sound")}"></pera-wallet-modal-touch-screen-mode>
          </div>
        </div>
      `, this.shadowRoot.append(E.content.cloneNode(true), n2)) : (E.innerHTML = `
          <div class="${z}">
            <div class="pera-wallet-modal__body">
              <pera-wallet-modal-header modal-id="${e.PERA_WALLET_CONNECT_MODAL_ID}"></pera-wallet-modal-header/>
        
              <pera-wallet-modal-desktop-mode id="pera-wallet-modal-desktop-mode" uri="${this.getAttribute("uri")}" is-web-wallet-avaliable="${this.getAttribute("is-web-wallet-avaliable")}" should-display-new-badge="${this.getAttribute("should-display-new-badge")}" compact-mode="${this.getAttribute("compact-mode")}" promote-mobile="${this.getAttribute("promote-mobile")}"></pera-wallet-modal-desktop-mode>
            </div>
          </div>
        `, this.shadowRoot.append(E.content.cloneNode(true), n2));
        }
      }
    };
    var Z = '@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");\n.pera-wallet-modal {\n  --pera-wallet-modal-font-family: "Inter", sans-serif;\n  --pera-wallet-modal-compact-width: 380px;\n  --pera-wallet-modal-compact-height: 396px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 999999;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\n  width: 480px;\n  height: 578px;\n  background-color: #ffffff;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\n  top: 40px;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  max-width: unset;\n  height: calc(100 * var(--vh));\n  padding: 20px;\n  background-color: #ffffff;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\n  border-radius: 20px 20px 0px 0px;\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\n  overflow-y: auto;\n  transform: unset;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\n  background-image: unset;\n}\n.pera-wallet-modal--compact:not(.pera-wallet-modal--mobile) .pera-wallet-modal__body {\n  width: var(--pera-wallet-modal-compact-width);\n  height: var(--pera-wallet-modal-compact-height);\n  padding: 0;\n}\n.pera-wallet-modal * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.pera-wallet-modal ul,\n.pera-wallet-modal ol,\n.pera-wallet-modal li {\n  list-style-type: none;\n}\n\n.pera-wallet-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 48px;\n  padding: 14px;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 14px;\n}\n\n.pera-wallet-modal__logo img {\n  display: block;\n  width: 32px;\n}\n\n.pera-wallet-modal__body {\n  position: relative;\n  top: 50%;\n  left: 50%;\n  width: 700px;\n  max-width: calc(100vw - 80px);\n  padding: 28px;\n  background-color: #f3f3f7;\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 24px;\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\n  transform: translate(-50%, -50%);\n}\n.pera-wallet-modal__body::before {\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: -1;\n  content: "";\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\n  background-size: 116px 116px;\n  mix-blend-mode: overlay;\n  border-radius: 24px;\n  opacity: 0.8;\n  pointer-events: none;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\n    width: 100%;\n    max-width: calc(100vw - 32px);\n    padding: 24px;\n  }\n}\n@keyframes PeraWalletConnectSlideIn {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, calc(-50% + 24px));\n  }\n  100% {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n}\n@keyframes PeraWalletConnectMobileSlideIn {\n  0% {\n    top: 30%;\n    opacity: 0;\n  }\n  100% {\n    top: 40px;\n    opacity: 1;\n  }\n}\n.pera-wallet-redirect-modal {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 56px;\n  grid-template-rows: auto 48px;\n  height: 100%;\n  padding: 4px;\n  padding-bottom: 70px;\n}\n\n.pera-wallet-redirect-modal__content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.pera-wallet-redirect-modal__content__title {\n  margin: 20px 0 8px;\n  color: #3c3c49;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 22px;\n  letter-spacing: -0.26px;\n}\n\n.pera-wallet-redirect-modal__content__description,\n.pera-wallet-redirect-modal__content__install-pera-text {\n  color: #3c3c49;\n  max-width: 271px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: -0.09px;\n  text-align: center;\n}\n\n.pera-wallet-redirect-modal__content__description {\n  margin-bottom: 24px;\n}\n\n.pera-wallet-redirect-modal__content__install-pera-text__link {\n  color: #6b46fe;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: -0.09px;\n  text-align: center;\n}\n\n.pera-wallet-redirect-modal__launch-pera-wallet-button {\n  display: block;\n  padding: 14px;\n  color: #ffffff;\n  background-color: #6b46fe;\n  border-radius: 12px;\n  text-decoration: none;\n  text-align: center;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: -0.09px;\n  font-weight: 500;\n}';
    r(Z);
    var H = document.createElement("template");
    H.innerHTML = `
  <div class="pera-wallet-modal pera-wallet-modal--mobile">
    <div class="pera-wallet-modal__body">
      <pera-wallet-modal-header modal-id="${e.PERA_WALLET_REDIRECT_MODAL_ID}"></pera-wallet-modal-header/>

      <div class="pera-wallet-redirect-modal">
        <div class="pera-wallet-redirect-modal__content">
          <img src="data:image/svg+xml,%3csvg width='120' height='38' viewBox='0 0 120 38' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cg clip-path='url(%23clip0_38844_290434)'%3e%3cpath d='M103.739 28.6746H109.565' stroke='%236B46FE' stroke-width='3' stroke-linecap='round' stroke-linejoin='round'/%3e%3cpath d='M112.25 37H100.75C97.5731 37 95 34.2336 95 30.8182V9.18182C95 5.76636 97.5731 3 100.75 3H112.25C115.427 3 118 5.76636 118 9.18182V30.8182C118 34.2336 115.427 37 112.25 37Z' fill='%236B46FE' fill-opacity='0.1' stroke='%236B46FE' stroke-width='3' stroke-linecap='round' stroke-linejoin='round'/%3e%3crect y='1' width='36' height='36' rx='7.76829' fill='%236B46FE' fill-opacity='0.1'/%3e%3cpath d='M19.6057 9.47351C20.1851 11.8819 19.9967 14.0022 19.1848 14.2093C18.373 14.4164 17.2452 12.6319 16.6658 10.2235C16.0864 7.81514 16.2748 5.69486 17.0867 5.48775C17.8985 5.28063 19.0263 7.06512 19.6057 9.47351Z' fill='%236B46FE'/%3e%3cpath d='M29.0775 11.5213C27.8045 10.1593 25.2795 10.5358 23.4378 12.3621C21.5961 14.1885 21.1352 16.7732 22.4083 18.1352C23.6814 19.4972 26.2064 19.1207 28.048 17.2943C29.8897 15.4679 30.3506 12.8832 29.0775 11.5213Z' fill='%236B46FE'/%3e%3cpath d='M19.0324 32.4518C19.8443 32.2446 20.0039 30.0045 19.3889 27.4483C18.774 24.8921 17.6173 22.9877 16.8055 23.1948C15.9937 23.402 15.834 25.6421 16.449 28.1983C17.064 30.7545 18.2206 32.6589 19.0324 32.4518Z' fill='%236B46FE'/%3e%3cpath d='M10.7016 12.818C13.0471 13.5132 14.7627 14.739 14.5336 15.5559C14.3045 16.3728 12.2175 16.4714 9.87199 15.7762C7.52653 15.0809 5.81087 13.8551 6.03996 13.0383C6.26906 12.2214 8.35615 12.1228 10.7016 12.818Z' fill='%236B46FE'/%3e%3cpath d='M25.9365 21.9967C28.4259 22.7346 30.2583 23.995 30.0292 24.8119C29.8001 25.6287 27.5963 25.6927 25.1069 24.9548C22.6174 24.2169 20.7851 22.9565 21.0141 22.1397C21.2432 21.3228 23.447 21.2588 25.9365 21.9967Z' fill='%236B46FE'/%3e%3cpath d='M13.3578 20.316C12.775 19.7063 10.8709 20.6007 9.10487 22.3139C7.33879 24.0271 6.37952 25.9102 6.96226 26.5199C7.54501 27.1297 9.4491 26.2352 11.2152 24.522C12.9813 22.8089 13.9405 20.9258 13.3578 20.316Z' fill='%236B46FE'/%3e%3cpath d='M70.2098 10L75.3049 15.0945L52 15.0945' stroke='%23D0CAE7' stroke-width='3'/%3e%3cpath d='M60.7902 29.5945L55.6951 24.5L79 24.5' stroke='%23D0CAE7' stroke-width='3'/%3e%3c/g%3e%3cdefs%3e%3cclipPath id='clip0_38844_290434'%3e%3crect width='120' height='38' fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e" />

          <h1 class="pera-wallet-redirect-modal__content__title">
            Can't Launch Pera
          </h1>

          <p class="pera-wallet-redirect-modal__content__description">
            We couldn't redirect you to Pera Wallet automatically. Please try again.
          </p>

          <p class="pera-wallet-redirect-modal__content__install-pera-text">
            Don't have Pera Wallet installed yet?
            <br />
            
            <a
              id="pera-wallet-redirect-modal-download-pera-link"
              class="pera-wallet-redirect-modal__content__install-pera-text__link"
              href="https://perawallet.app/download/"
              rel="noopener noreferrer"
              target="_blank">
              Tap here to install.
            </a>
          </p>
        </div>

        <a
          id="pera-wallet-redirect-modal-launch-pera-link"
          class="pera-wallet-redirect-modal__launch-pera-wallet-button"
          rel="noopener noreferrer"
          target="_blank">
          Launch Pera Wallet
        </a>
      </div>
    </div>
  </div>
`;
    var B = class extends HTMLElement {
      constructor() {
        var e2, n2;
        if (super(), this.attachShadow({ mode: "open" }), this.shadowRoot) {
          const t2 = document.createElement("style");
          t2.textContent = Z, this.shadowRoot.append(H.content.cloneNode(true), t2);
          const a2 = null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.getElementById("pera-wallet-redirect-modal-download-pera-link");
          null == a2 || a2.addEventListener("click", (() => {
            this.onClose();
          }));
          const o2 = null === (n2 = this.shadowRoot) || void 0 === n2 ? void 0 : n2.getElementById("pera-wallet-redirect-modal-launch-pera-link");
          null == o2 || o2.addEventListener("click", (() => {
            this.onClose(), window.open(i(), "_blank");
          }));
        }
      }
      connectedCallback() {
        const e2 = window.open(i(), "_blank");
        e2 && !e2.closed && this.onClose();
      }
      onClose() {
        e.removeModalWrapperFromDOM(e.PERA_WALLET_REDIRECT_MODAL_ID);
      }
    };
    var F = "data:image/svg+xml,%3csvg width='32' height='35' viewBox='0 0 32 35' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18.2837 5.09271C19.0234 8.12325 18.7827 10.7913 17.7463 11.0519C16.7098 11.3126 15.27 9.06712 14.5304 6.03657C13.7908 3.00603 14.0315 0.337996 15.0679 0.0773547C16.1044 -0.183287 17.5441 2.06216 18.2837 5.09271Z' fill='%233C3C49'/%3e%3cpath d='M30.376 7.66915C28.7507 5.95537 25.5271 6.42918 23.1759 8.72745C20.8247 11.0257 20.2361 14.2781 21.8614 15.9919C23.4866 17.7057 26.7102 17.2319 29.0614 14.9336C31.4127 12.6354 32.0012 9.38294 30.376 7.66915Z' fill='%233C3C49'/%3e%3cpath d='M17.5511 34.0071C18.5876 33.7465 18.7914 30.9276 18.0064 27.711C17.2214 24.4945 15.7448 22.0982 14.7084 22.3589C13.6719 22.6195 13.4681 25.4383 14.2531 28.6549C15.0381 31.8715 16.5147 34.2677 17.5511 34.0071Z' fill='%233C3C49'/%3e%3cpath d='M6.91617 9.3015C9.9105 10.1763 12.1008 11.7187 11.8083 12.7466C11.5158 13.7745 8.85126 13.8986 5.85693 13.0239C2.8626 12.1491 0.672334 10.6067 0.964835 9.57881C1.25734 8.5509 3.92184 8.42674 6.91617 9.3015Z' fill='%233C3C49'/%3e%3cpath d='M26.3656 20.8508C29.5437 21.7793 31.883 23.3652 31.5905 24.3932C31.298 25.4211 28.4845 25.5017 25.3063 24.5732C22.1282 23.6448 19.7889 22.0588 20.0814 21.0309C20.3739 20.003 23.1874 19.9224 26.3656 20.8508Z' fill='%233C3C49'/%3e%3cpath d='M10.3069 18.7365C9.56299 17.9692 7.13209 19.0948 4.87736 21.2506C2.62264 23.4064 1.39791 25.776 2.14185 26.5432C2.8858 27.3105 5.3167 26.1849 7.57143 24.0291C9.82615 21.8733 11.0509 19.5037 10.3069 18.7365Z' fill='%233C3C49'/%3e%3c/svg%3e";
    var R = ".pera-wallet-connect-modal-information-section {\n  padding: 12px;\n  padding-right: 0;\n}\n.pera-wallet-connect-modal-information-section--mobile {\n  padding: 0;\n}\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__pera-icon {\n  margin-bottom: 16px;\n}\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__connect-pera-title {\n  margin-bottom: 8px;\n  color: #3c3c49;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 22px;\n  letter-spacing: -0.2px;\n}\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__title {\n  margin-bottom: 24px;\n  color: #3c3c49;\n  font-size: 14px;\n  line-height: 24px;\n  letter-spacing: -0.09px;\n  font-weight: 400;\n}\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__features-item__icon-wrapper {\n  background-color: #f2f3f8;\n}\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__features-item__description {\n  color: #6a6a81;\n}\n.pera-wallet-connect-modal-information-section * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.pera-wallet-connect-modal-information-section__pera-icon {\n  margin-bottom: 32px;\n}\n\n.pera-wallet-connect-modal-information-section__title {\n  margin-bottom: 148px;\n  color: #3c3c49;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: -0.5px;\n}\n\n.pera-wallet-connect-modal-information-section__secondary-title {\n  margin-bottom: 20px;\n  color: #9d9dae;\n  font-size: 11px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: 0.06px;\n  text-transform: uppercase;\n}\n\n.pera-wallet-connect-modal-information-section__features-item {\n  display: grid;\n  align-items: center;\n  grid-template-columns: 36px auto;\n  gap: 16px;\n}\n.pera-wallet-connect-modal-information-section__features-item:not(:last-of-type) {\n  margin-bottom: 24px;\n}\n\n.pera-wallet-connect-modal-information-section__features-item__icon-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  background-color: #ffffff;\n  border-radius: 50%;\n}\n\n.pera-wallet-connect-modal-information-section__features-item__description {\n  color: #6a6a81;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: 0.01px;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-connect-modal-information-section--desktop {\n    padding: 0;\n  }\n  .pera-wallet-connect-modal-information-section--desktop .pera-wallet-connect-modal-information-section__pera-icon {\n    margin-bottom: 12px;\n  }\n  .pera-wallet-connect-modal-information-section--desktop .pera-wallet-connect-modal-information-section__title {\n    margin-bottom: 24px;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 24px;\n    letter-spacing: -0.26px;\n  }\n  .pera-wallet-connect-modal-information-section--desktop .pera-wallet-connect-modal-information-section__features-item {\n    display: none;\n  }\n  .pera-wallet-connect-modal-information-section__secondary-title {\n    display: none;\n  }\n}";
    r(R);
    var I = document.createElement("template");
    var V = e.isMobile() ? "pera-wallet-connect-modal-information-section pera-wallet-connect-modal-information-section--mobile" : "pera-wallet-connect-modal-information-section pera-wallet-connect-modal-information-section--desktop";
    I.innerHTML = `
  <section class="${V}">
    <img
      id="pera-wallet-connect-modal-information-section-pera-icon"
      src="${F}"
      class="pera-wallet-connect-modal-information-section__pera-icon"
      alt="Pera Wallet Logo"
    />

    <h1 id="pera-wallet-connect-modal-information-section-connect-pera-mobile" class="pera-wallet-connect-modal-information-section__connect-pera-title">
        Connect to Pera Wallet
    </h1>

    <h1 class="pera-wallet-connect-modal-information-section__title">
      Simply the best Algorand wallet.
    </h1>

    <h2 id="pera-wallet-connect-modal-information-section-secondary-title" class="pera-wallet-connect-modal-information-section__secondary-title">
      Features
    </h2>

    <ul>
      <li class="pera-wallet-connect-modal-information-section__features-item">
        <div class="pera-wallet-connect-modal-information-section__features-item__icon-wrapper">
          <img src="data:image/svg+xml,%3csvg width='20' height='21' viewBox='0 0 20 21' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M2.5 10.1378C2.5 10.8378 3.025 11.6461 3.66667 11.9294L9.325 14.4461C9.75833 14.6378 10.25 14.6378 10.675 14.4461L16.3333 11.9294C16.975 11.6461 17.5 10.8378 17.5 10.1378M2.5 14.3044C2.5 15.0794 2.95833 15.7794 3.66667 16.0961L9.325 18.6128C9.75833 18.8044 10.25 18.8044 10.675 18.6128L16.3333 16.0961C17.0417 15.7794 17.5 15.0794 17.5 14.3044M10.8417 3.4043L15.7583 5.58763C17.175 6.21263 17.175 7.24596 15.7583 7.87096L10.8417 10.0543C10.2833 10.3043 9.36668 10.3043 8.80835 10.0543L3.89168 7.87096C2.47502 7.24596 2.47502 6.21263 3.89168 5.58763L8.80835 3.4043C9.36668 3.1543 10.2833 3.1543 10.8417 3.4043Z' stroke='%239D9DAE' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3e%3c/svg%3e" alt="Layer Icon" />
        </div>
        
        <p
          class="pera-wallet-connect-modal-information-section__features-item__description">
          Connect to any Algorand dApp securely
        </p>
      </li>

      <li class="pera-wallet-connect-modal-information-section__features-item">
        <div
          class="pera-wallet-connect-modal-information-section__features-item__icon-wrapper">
          <img src="data:image/svg+xml,%3csvg width='24' height='25' viewBox='0 0 24 25' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M9.58033 12.3109C9.28744 12.018 8.81257 12.018 8.51967 12.3109C8.22678 12.6038 8.22678 13.0787 8.51967 13.3716L9.58033 12.3109ZM10.66 14.4512L10.1297 14.9816C10.4226 15.2745 10.8974 15.2745 11.1903 14.9816L10.66 14.4512ZM15.4903 10.6816C15.7832 10.3887 15.7832 9.91381 15.4903 9.62092C15.1974 9.32803 14.7226 9.32803 14.4297 9.62092L15.4903 10.6816ZM19.84 8.09125C19.84 8.50546 20.1758 8.84125 20.59 8.84125C21.0042 8.84125 21.34 8.50546 21.34 8.09125H19.84ZM18.5 5.07125L18.2368 5.77355L18.2373 5.77375L18.5 5.07125ZM13.51 3.20125L13.7732 2.49894L13.7724 2.49866L13.51 3.20125ZM10.49 3.20125L10.2276 2.49865L10.2256 2.49941L10.49 3.20125ZM5.5 5.08125L5.76268 5.78375L5.76442 5.78309L5.5 5.08125ZM5.14 18.9612L4.69102 19.562L4.69135 19.5623L5.14 18.9612ZM9.44 22.1713L9.89069 21.5718L9.88866 21.5702L9.44 22.1713ZM14.58 22.1713L14.1313 21.5702L14.1293 21.5718L14.58 22.1713ZM18.88 18.9612L19.3287 19.5623L19.329 19.562L18.88 18.9612ZM21.36 8.09125C21.36 7.67704 21.0242 7.34125 20.61 7.34125C20.1958 7.34125 19.86 7.67704 19.86 8.09125H21.36ZM8.51967 13.3716L10.1297 14.9816L11.1903 13.9209L9.58033 12.3109L8.51967 13.3716ZM11.1903 14.9816L15.4903 10.6816L14.4297 9.62092L10.1297 13.9209L11.1903 14.9816ZM21.34 8.09125C21.34 7.29392 21.0398 6.50041 20.5931 5.85456C20.1463 5.20881 19.5097 4.64807 18.7627 4.36875L18.2373 5.77375C18.6403 5.92443 19.0487 6.25869 19.3595 6.70794C19.6702 7.15709 19.84 7.65858 19.84 8.09125H21.34ZM18.7632 4.36895L13.7732 2.49895L13.2468 3.90355L18.2368 5.77355L18.7632 4.36895ZM13.7724 2.49866C13.2479 2.30277 12.6051 2.21875 12 2.21875C11.3949 2.21875 10.7521 2.30277 10.2276 2.49866L10.7524 3.90384C11.0579 3.78973 11.5101 3.71875 12 3.71875C12.4899 3.71875 12.9421 3.78973 13.2476 3.90384L13.7724 2.49866ZM10.2256 2.49941L5.23558 4.37941L5.76442 5.78309L10.7544 3.90309L10.2256 2.49941ZM5.23733 4.37875C4.49043 4.65803 3.85398 5.2186 3.40741 5.86265C2.96095 6.50656 2.66 7.2978 2.66 8.09125H4.16C4.16 7.6647 4.32906 7.16594 4.64009 6.71735C4.95103 6.2689 5.35957 5.93447 5.76268 5.78375L5.23733 4.37875ZM2.66 8.09125V15.5212H4.16V8.09125H2.66ZM2.66 15.5212C2.66 16.2602 2.8989 17.059 3.24874 17.7545C3.59871 18.4503 4.09802 19.1188 4.69102 19.562L5.58899 18.3605C5.23198 18.0937 4.86629 17.6322 4.58877 17.0805C4.31111 16.5285 4.16 15.9623 4.16 15.5212H2.66ZM4.69135 19.5623L8.99135 22.7723L9.88866 21.5702L5.58866 18.3602L4.69135 19.5623ZM8.98932 22.7707C9.84721 23.4157 10.9462 23.7163 12.01 23.7163C13.0738 23.7163 14.1728 23.4157 15.0307 22.7707L14.1293 21.5718C13.5772 21.9868 12.8112 22.2163 12.01 22.2163C11.2088 22.2163 10.4428 21.9868 9.89068 21.5718L8.98932 22.7707ZM15.0287 22.7723L19.3287 19.5623L18.4313 18.3602L14.1313 21.5702L15.0287 22.7723ZM19.329 19.562C19.922 19.1188 20.4213 18.4503 20.7713 17.7545C21.1211 17.059 21.36 16.2602 21.36 15.5212H19.86C19.86 15.9623 19.7089 16.5285 19.4312 17.0805C19.1537 17.6322 18.788 18.0937 18.431 18.3605L19.329 19.562ZM21.36 15.5212V8.09125H19.86V15.5212H21.36Z' fill='%239D9DAE'/%3e%3c/svg%3e" alt="Tick Icon" />
        </div>

        <p
          class="pera-wallet-connect-modal-information-section__features-item__description">
          Your private keys are safely stored locally
        </p>
      </li>

      <li class="pera-wallet-connect-modal-information-section__features-item">
        <div
          class="pera-wallet-connect-modal-information-section__features-item__icon-wrapper">
          <img src="data:image/svg+xml,%3csvg width='20' height='21' viewBox='0 0 20 21' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18.05 9.67014L17.3198 9.49894L18.05 9.67014ZM17.2333 13.1535L16.5031 12.9823L16.5029 12.9835L17.2333 13.1535ZM12.55 17.1285L12.6218 16.3818L12.6098 16.3809L12.55 17.1285ZM11.2 16.9035L11.376 16.1744L11.3737 16.1739L11.2 16.9035ZM9.8 16.5701L9.97372 15.8405L9.97324 15.8404L9.8 16.5701ZM6.06667 10.5451L6.79687 10.7163L6.79696 10.7159L6.06667 10.5451ZM6.88334 7.05347L6.15327 6.88169L6.15304 6.88267L6.88334 7.05347ZM7.5 5.22014L8.17303 5.55114L8.17523 5.54659L7.5 5.22014ZM12.9167 3.32014L12.744 4.05L12.7461 4.05049L12.9167 3.32014ZM14.3083 3.64514L14.4791 2.91485L14.4789 2.91479L14.3083 3.64514ZM10.5917 18.0285L10.359 17.3155L10.3572 17.3161L10.5917 18.0285ZM9.27501 18.4618L9.50516 19.1756L9.50947 19.1742L9.27501 18.4618ZM3.15001 15.3285L2.43654 15.5597L2.43672 15.5603L3.15001 15.3285ZM2.08334 12.0368L1.36953 12.267L1.36987 12.268L2.08334 12.0368ZM5.20834 5.91182L5.43849 6.62565L5.44281 6.62423L5.20834 5.91182ZM6.52501 5.47848L6.29831 4.76352L6.29055 4.76608L6.52501 5.47848ZM10.7177 7.35149C10.3162 7.24967 9.90818 7.49261 9.80635 7.89411C9.70453 8.29561 9.94746 8.70364 10.349 8.80546L10.7177 7.35149ZM14.3906 9.83046C14.7921 9.93229 15.2002 9.68935 15.302 9.28785C15.4038 8.88635 15.1609 8.47832 14.7594 8.37649L14.3906 9.83046ZM9.90211 10.5768C9.50076 10.4743 9.09238 10.7167 8.98996 11.118C8.88755 11.5194 9.12988 11.9278 9.53124 12.0302L9.90211 10.5768ZM11.9479 12.6469C12.3493 12.7493 12.7576 12.5069 12.8601 12.1056C12.9625 11.7042 12.7201 11.2958 12.3188 11.1934L11.9479 12.6469ZM17.3198 9.49894L16.5031 12.9823L17.9635 13.3247L18.7802 9.84133L17.3198 9.49894ZM16.5029 12.9835C16.168 14.4224 15.6979 15.2955 15.1165 15.793C14.5605 16.2688 13.7912 16.4944 12.6218 16.3819L12.4782 17.875C13.9088 18.0126 15.1312 17.7548 16.0918 16.9327C17.0271 16.1323 17.5986 14.8928 17.9638 13.3234L16.5029 12.9835ZM12.6098 16.3809C12.2388 16.3512 11.8281 16.2835 11.376 16.1744L11.024 17.6325C11.5386 17.7567 12.0279 17.8391 12.4902 17.8761L12.6098 16.3809ZM11.3737 16.1739L9.97372 15.8405L9.62629 17.2997L11.0263 17.6331L11.3737 16.1739ZM9.97324 15.8404C8.30732 15.4449 7.40652 14.876 6.96107 14.1588C6.51616 13.4425 6.40566 12.385 6.79687 10.7163L5.33647 10.3739C4.91101 12.1887 4.92968 13.7311 5.68685 14.9502C6.44349 16.1685 7.81769 16.8704 9.62676 17.2999L9.97324 15.8404ZM6.79696 10.7159L7.61363 7.22428L6.15304 6.88267L5.33638 10.3743L6.79696 10.7159ZM7.6134 7.22525C7.77277 6.54795 7.95691 5.99053 8.17301 5.55113L6.82699 4.88915C6.54309 5.46641 6.32724 6.14234 6.15327 6.88169L7.6134 7.22525ZM8.17523 5.54659C8.59604 4.67619 9.11898 4.20234 9.77488 3.97598C10.4657 3.73759 11.4133 3.73525 12.744 4.05L13.0893 2.59028C11.6367 2.2467 10.3635 2.18603 9.28554 2.55805C8.17269 2.94211 7.37896 3.74743 6.82478 4.89369L8.17523 5.54659ZM12.7461 4.05049L14.1378 4.37549L14.4789 2.91479L13.0872 2.58979L12.7461 4.05049ZM14.1375 4.37543C15.8111 4.76687 16.7126 5.33603 17.1575 6.05304C17.6023 6.77006 17.7112 7.82942 17.3198 9.49894L18.7802 9.84133C19.2054 8.02753 19.1893 6.48272 18.4321 5.26224C17.6749 4.04175 16.2972 3.34008 14.4791 2.91485L14.1375 4.37543ZM12.1294 16.5075C11.6911 16.8045 11.1123 17.0697 10.359 17.3155L10.8243 18.7415C11.6544 18.4706 12.3756 18.1525 12.9706 17.7494L12.1294 16.5075ZM10.3572 17.3161L9.04055 17.7494L9.50947 19.1742L10.8261 18.7409L10.3572 17.3161ZM9.04486 17.748C7.46037 18.2589 6.43607 18.2362 5.71663 17.8681C4.99693 17.4999 4.37829 16.6816 3.8633 15.0967L2.43672 15.5603C2.99673 17.2837 3.78642 18.5654 5.03339 19.2035C6.28062 19.8416 7.78131 19.7314 9.50516 19.1756L9.04486 17.748ZM3.86348 15.0973L2.79682 11.8056L1.36987 12.268L2.43654 15.5597L3.86348 15.0973ZM2.79716 11.8067C2.28607 10.2215 2.3068 9.19457 2.67362 8.4739C3.03983 7.75443 3.85506 7.13616 5.43849 6.62563L4.9782 5.198C3.25329 5.75414 1.97269 6.54421 1.33682 7.79348C0.701551 9.04157 0.813948 10.5438 1.36953 12.267L2.79716 11.8067ZM5.44281 6.62423L6.75947 6.19089L6.29055 4.76608L4.97388 5.19941L5.44281 6.62423ZM6.75169 6.19341C7.08205 6.08866 7.37424 6.00724 7.63942 5.95707L7.36058 4.48321C7.00909 4.54971 6.6513 4.65164 6.29833 4.76356L6.75169 6.19341ZM10.349 8.80546L14.3906 9.83046L14.7594 8.37649L10.7177 7.35149L10.349 8.80546ZM9.53124 12.0302L11.9479 12.6469L12.3188 11.1934L9.90211 10.5768L9.53124 12.0302Z' fill='%239D9DAE'/%3e%3c/svg%3e" alt="Note Icon" />
        </div>

        <p
          class="pera-wallet-connect-modal-information-section__features-item__description">
          View NFTs, buy and swap crypto and more
        </p>
      </li>
    </ul>
  </section>
`;
    var W = class extends HTMLElement {
      constructor() {
        var n2, t2, a2, o2;
        super(), this.attachShadow({ mode: "open" });
        const l2 = "true" === (null === (n2 = document.querySelector("pera-wallet-connect-modal")) || void 0 === n2 ? void 0 : n2.getAttribute("compact-mode"));
        if (this.shadowRoot && (!l2 && !e.isMobile() || e.isMobile())) {
          const n3 = document.createElement("style");
          n3.textContent = R, this.shadowRoot.append(I.content.cloneNode(true), n3), e.isMobile() ? null === (t2 = this.shadowRoot.getElementById("pera-wallet-connect-modal-information-section-title")) || void 0 === t2 || t2.setAttribute("style", "display: none;") : (null === (a2 = this.shadowRoot.getElementById("pera-wallet-connect-modal-information-section-pera-icon")) || void 0 === a2 || a2.setAttribute("src", "data:image/svg+xml,%3csvg width='84' height='38' viewBox='0 0 84 38' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M19.806 8.62773C20.4416 11.2609 20.2268 13.5772 19.3262 13.8012C18.4256 14.0253 17.1803 12.0723 16.5448 9.43906C15.9092 6.80585 16.1241 4.48959 17.0246 4.26555C17.9252 4.04151 19.1705 5.99452 19.806 8.62773Z' fill='%233C3C49'/%3e%3cpath d='M30.3007 10.8917C28.8932 9.3999 26.0929 9.80424 24.0461 11.7948C21.9994 13.7853 21.4812 16.6082 22.8887 18.1C24.2962 19.5917 27.0964 19.1874 29.1432 17.1969C31.1899 15.2064 31.7082 12.3834 30.3007 10.8917Z' fill='%233C3C49'/%3e%3cpath d='M19.1061 33.734C20.0067 33.5099 20.1899 31.0627 19.5153 28.2678C18.8408 25.473 17.5639 23.3889 16.6633 23.613C15.7627 23.837 15.5795 26.2843 16.2541 29.0791C16.9286 31.874 18.2056 33.958 19.1061 33.734Z' fill='%233C3C49'/%3e%3cpath d='M9.92571 12.2574C12.5239 13.0236 14.4224 14.3678 14.1662 15.2597C13.9099 16.1517 11.5959 16.2536 8.99771 15.4874C6.3995 14.7212 4.50098 13.377 4.75724 12.4851C5.0135 11.5931 7.3275 11.4912 9.92571 12.2574Z' fill='%233C3C49'/%3e%3cpath d='M26.7892 22.3292C29.5469 23.1424 31.5747 24.5247 31.3184 25.4167C31.0621 26.3086 28.6189 26.3724 25.8612 25.5592C23.1035 24.7459 21.0757 23.3636 21.3319 22.4717C21.5882 21.5797 24.0315 21.5159 26.7892 22.3292Z' fill='%233C3C49'/%3e%3cpath d='M12.8493 20.4577C12.205 19.7898 10.0916 20.7619 8.12896 22.6289C6.16631 24.4959 5.09759 26.5509 5.7419 27.2188C6.38622 27.8867 8.49958 26.9146 10.4622 25.0476C12.4249 23.1806 13.4936 21.1256 12.8493 20.4577Z' fill='%233C3C49'/%3e%3cpath d='M41.691 12.5347V11.9635H39.3366V27.1957H41.691V23.0915C41.691 22.6472 41.691 22.2876 41.6482 21.801H41.691C42.5471 23.1973 44.0026 23.9377 45.7148 23.9377C48.6043 23.9377 51.1299 21.7587 51.1299 17.7179C51.1299 13.7617 48.6043 11.625 45.7148 11.625C44.0668 11.625 42.6113 12.3443 41.691 13.7617H41.6482C41.691 13.2963 41.691 12.9578 41.691 12.5347ZM45.1155 21.9279C42.9324 21.9068 41.6696 20.0662 41.6696 17.6967C41.6696 15.4542 42.9324 13.656 45.1155 13.6348C47.2559 13.6137 48.6685 15.2638 48.6685 17.7179C48.6685 20.2354 47.2559 21.9491 45.1155 21.9279Z' fill='%233C3C49'/%3e%3cpath d='M63.4932 16.7236C63.4932 13.8041 61.1388 11.625 57.9283 11.625C54.5037 11.625 52.1279 13.931 52.1279 17.7814C52.1279 21.4836 54.4609 23.9377 57.9283 23.9377C60.7749 23.9377 62.8939 22.2876 63.3862 20.0239H60.8177C60.4111 21.1663 59.2981 21.9279 57.9283 21.9279C56.1732 21.9279 54.889 20.6797 54.6107 18.6064H63.4932V16.7236ZM57.9283 13.6348C59.662 13.6348 60.8606 14.8195 61.1174 16.5332H54.6321C54.9318 14.883 56.1518 13.6348 57.9283 13.6348Z' fill='%233C3C49'/%3e%3cpath d='M65.224 23.5992H67.5784V17.0409C67.5784 14.7984 68.8198 13.6348 70.7462 13.6348H72.009V11.625H71.003C69.2693 11.625 68.1991 12.7674 67.5784 13.7617H67.5356V11.9635H65.224V23.5992Z' fill='%233C3C49'/%3e%3cpath d='M83.0154 21.5683C82.6944 21.5683 82.5445 21.3779 82.5445 20.9971V15.8773C82.5445 13.4233 81.3459 11.625 77.8144 11.625C74.3898 11.625 72.8273 13.3175 72.6561 15.7292H75.0105C75.1603 14.4176 76.2091 13.6348 77.8144 13.6348C79.1842 13.6348 80.1259 14.2272 80.1259 15.158C80.1259 15.9196 79.5909 16.3851 77.8358 16.3851H76.894C74.0901 16.3851 72.2066 17.5063 72.2066 20.0662C72.2066 22.753 74.1972 23.98 76.5301 23.98C78.2638 23.98 79.7407 23.2184 80.3186 21.5894C80.3828 22.7742 81.1747 23.5992 82.673 23.5992H84V21.5683H83.0154ZM80.1902 18.1833C80.1902 20.8067 78.7561 21.9491 76.9154 21.9491C75.3101 21.9491 74.668 21.0182 74.668 20.0662C74.668 19.1565 75.2245 18.416 76.9368 18.416H77.2793C78.9273 18.416 79.9547 17.8448 80.1688 16.8505H80.1902V18.1833Z' fill='%233C3C49'/%3e%3c/svg%3e"), null === (o2 = this.shadowRoot.getElementById("pera-wallet-connect-modal-information-section-connect-pera-mobile")) || void 0 === o2 || o2.setAttribute("style", "display: none;"));
        }
      }
    };
    var S = '@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");\n.pera-wallet-modal {\n  --pera-wallet-modal-font-family: "Inter", sans-serif;\n  --pera-wallet-modal-compact-width: 380px;\n  --pera-wallet-modal-compact-height: 396px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 999999;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\n  width: 480px;\n  height: 578px;\n  background-color: #ffffff;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\n  top: 40px;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  max-width: unset;\n  height: calc(100 * var(--vh));\n  padding: 20px;\n  background-color: #ffffff;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\n  border-radius: 20px 20px 0px 0px;\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\n  overflow-y: auto;\n  transform: unset;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\n  background-image: unset;\n}\n.pera-wallet-modal--compact:not(.pera-wallet-modal--mobile) .pera-wallet-modal__body {\n  width: var(--pera-wallet-modal-compact-width);\n  height: var(--pera-wallet-modal-compact-height);\n  padding: 0;\n}\n.pera-wallet-modal * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.pera-wallet-modal ul,\n.pera-wallet-modal ol,\n.pera-wallet-modal li {\n  list-style-type: none;\n}\n\n.pera-wallet-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 48px;\n  padding: 14px;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 14px;\n}\n\n.pera-wallet-modal__logo img {\n  display: block;\n  width: 32px;\n}\n\n.pera-wallet-modal__body {\n  position: relative;\n  top: 50%;\n  left: 50%;\n  width: 700px;\n  max-width: calc(100vw - 80px);\n  padding: 28px;\n  background-color: #f3f3f7;\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 24px;\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\n  transform: translate(-50%, -50%);\n}\n.pera-wallet-modal__body::before {\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: -1;\n  content: "";\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\n  background-size: 116px 116px;\n  mix-blend-mode: overlay;\n  border-radius: 24px;\n  opacity: 0.8;\n  pointer-events: none;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\n    width: 100%;\n    max-width: calc(100vw - 32px);\n    padding: 24px;\n  }\n}\n@keyframes PeraWalletConnectSlideIn {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, calc(-50% + 24px));\n  }\n  100% {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n}\n@keyframes PeraWalletConnectMobileSlideIn {\n  0% {\n    top: 30%;\n    opacity: 0;\n  }\n  100% {\n    top: 40px;\n    opacity: 1;\n  }\n}\n.pera-wallet-connect-modal-pending-message-section {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 48px;\n  gap: 56px;\n  height: 100%;\n  padding: 4px;\n  padding-bottom: 70px;\n}\n\n.pera-wallet-connect-modal-pending-message {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  text-align: center;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  height: 100%;\n  margin-top: 10px;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__title {\n  margin: 16px 0 12px;\n  color: #3c3c49;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: -0.26px;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__description {\n  color: #6a6a81;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: -0.01px;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__button {\n  display: block;\n  width: 100%;\n  padding: 14px;\n  border-radius: 12px;\n  text-decoration: none;\n  text-align: center;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: -0.09px;\n  font-weight: 500;\n  color: #ffffff;\n  background-color: #6b46fe;\n  border: none;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor {\n  display: flex;\n  gap: 12px;\n  margin-bottom: 20px;\n  padding: 16px;\n  background: #ffffff;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n  border-radius: 12px;\n  text-decoration: none;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__image {\n  width: 24px;\n  height: 24px;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 4px;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title {\n  margin: 0;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: -0.1px;\n  color: #3c3c49;\n}\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__description {\n  /* stylelint-disable value-no-vendor-prefix */\n  /* stylelint-disable  property-no-vendor-prefix */\n  display: -webkit-box;\n  max-width: 100%;\n  -webkit-line-clamp: 2;\n  /* autoprefixer: ignore next */\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  /* stylelint-enable value-no-vendor-prefix */\n  /* stylelint-enable property-no-vendor-prefix */\n  margin: 0;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: 0.01px;\n  color: #9d9dae;\n}\n\n.pera-wallet-connect-modal-pending-message__animation-wrapper {\n  width: 56px;\n  height: 56px;\n  background-color: #6b46fe;\n  border-radius: 50%;\n}\n\n.pera-wallet-connect-modal-pending-message__text {\n  max-width: 271px;\n  margin-top: 24px;\n  color: #3c3c49;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 28px;\n  letter-spacing: -0.26px;\n}\n\n.pera-wallet-connect-modal-pending-message__cancel-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 14px;\n  color: #6a6a81;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\n  border-radius: 12px;\n  text-decoration: none;\n  text-align: center;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: -0.09px;\n  font-weight: 500;\n  border: none;\n}';
    r(S);
    var D = document.createElement("template");
    D.innerHTML = '\n  <div class="pera-wallet-connect-modal-pending-message-section">\n    <div class="pera-wallet-connect-modal-pending-message">\n      <div id="pera-wallet-connect-modal-pending-message-animation-wrapper" class="pera-wallet-connect-modal-pending-message__animation-wrapper"></div>\n\n      <div class="pera-wallet-connect-modal-pending-message__text">\n        Please wait while we connect you to Pera Wallet\n      </div>\n    </div>\n\n    <button\n      id="pera-wallet-connect-modal-pending-message-cancel-button"\n      class="pera-wallet-button pera-wallet-connect-modal-pending-message__cancel-button">\n        Cancel\n    </button>\n  </div>\n\n  <div id="pera-wallet-connect-modal-pending-message-audio-wrapper"></div>\n';
    var P = `
  <div class="pera-wallet-connect-modal-pending-message--try-again-view">
    <div>
      <img src="${F}" alt="Pera Wallet Logo" />

      <h1 class="pera-wallet-connect-modal-pending-message--try-again-view__title">
        Couldn’t establish connection
      </h1>

      <p class="pera-wallet-connect-modal-pending-message--try-again-view__description">
        Having issues? Before trying again, make sure to read the support article below and apply the possible solutions.
      </p>
    </div>

    <div>
      <a
        href="https://support.perawallet.app/en/article/resolving-walletconnect-issues-1tolptm/"
        target="_blank"
        rel="noopener noreferrer"
        class="pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor">
        <img
          class="pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__image"
          src="data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 22.3199C7.72 22.3199 7.42998 22.2499 7.16998 22.1099C6.59998 21.8099 6.25 21.2099 6.25 20.5699V19.15C3.23 18.84 1.25 16.6199 1.25 13.4399V7.43994C1.25 3.99994 3.56 1.68994 7 1.68994H17C20.44 1.68994 22.75 3.99994 22.75 7.43994V13.4399C22.75 16.8799 20.44 19.1899 17 19.1899H13.23L8.96997 22.03C8.67997 22.22 8.34 22.3199 8 22.3199ZM7 3.17993C4.42 3.17993 2.75 4.84993 2.75 7.42993V13.43C2.75 16.01 4.42 17.68 7 17.68C7.41 17.68 7.75 18.02 7.75 18.43V20.56C7.75 20.69 7.83 20.75 7.88 20.78C7.93001 20.81 8.03001 20.84 8.14001 20.77L12.59 17.81C12.71 17.73 12.86 17.68 13.01 17.68H17.01C19.59 17.68 21.26 16.01 21.26 13.43V7.42993C21.26 4.84993 19.59 3.17993 17.01 3.17993H7ZM11.9998 12.11C11.5898 12.11 11.2498 11.77 11.2498 11.36V11.15C11.2498 10.0038 12.0798 9.4336 12.4082 9.20798L12.4198 9.20001C12.7898 8.95001 12.9098 8.78002 12.9098 8.52002C12.9098 8.02002 12.4998 7.60999 11.9998 7.60999C11.4998 7.60999 11.0898 8.02002 11.0898 8.52002C11.0898 8.93002 10.7498 9.27002 10.3398 9.27002C9.92984 9.27002 9.58984 8.93002 9.58984 8.52002C9.58984 7.19002 10.6698 6.10999 11.9998 6.10999C13.3298 6.10999 14.4098 7.19002 14.4098 8.52002C14.4098 9.66002 13.5698 10.23 13.2598 10.44C12.8698 10.7 12.7498 10.87 12.7498 11.15V11.36C12.7498 11.78 12.4098 12.11 11.9998 12.11ZM11.25 13.85C11.25 14.26 11.58 14.6 12 14.6C12.42 14.6 12.75 14.26 12.75 13.85C12.75 13.44 12.41 13.1 12 13.1C11.59 13.1 11.25 13.44 11.25 13.85Z' fill='%236B46FE'/%3e%3c/svg%3e"
          alt="Help Icon"
        />

        <div>
          <div
            class="pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title-wrapper">
            <h1
              class="pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title">
                Resolving WalletConnect issues
            </h1>

            <img src="data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M11.3287 10.0983C10.9574 10.0983 10.6564 9.79734 10.6564 9.42604L10.6564 6.29525L5.14866 11.803C4.88611 12.0655 4.46044 12.0655 4.19789 11.803C3.93534 11.5404 3.93534 11.1147 4.19789 10.8522L9.70561 5.34447L6.57482 5.34447C6.20352 5.34447 5.90252 5.04347 5.90252 4.67218C5.90252 4.30088 6.20352 3.99988 6.57482 3.99988L11.3287 3.99988C11.507 3.99988 11.678 4.07071 11.8041 4.19679C11.9301 4.32287 12.001 4.49387 12.001 4.67218L12.001 9.42604C12.001 9.79734 11.7 10.0983 11.3287 10.0983Z' fill='%239D9DAE'/%3e%3c/svg%3e" alt="Send Icon"/>
          </div>

          <p
            class="pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__description">
            Unfortunately there are several known issues related to WalletConnect that our team is working on. Some of these issues are related to the WalletConnect JavaScript implementation on the dApp ...
          </p>
        </div>
      </a>

      <button id="pera-wallet-connect-modal-pending-message-try-again-button" class="pera-wallet-connect-button pera-wallet-connect-modal-pending-message--try-again-view__button">
        Close & Try Again
      </button>
    </div>
  </div>
  `;
    var T = class extends HTMLElement {
      constructor() {
        if (super(), this.attachShadow({ mode: "open" }), this.shadowRoot) {
          const e2 = document.createElement("style");
          e2.textContent = S, this.shadowRoot.append(D.content.cloneNode(true), e2);
        }
      }
      connectedCallback() {
        var e2;
        const n2 = null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.getElementById("pera-wallet-connect-modal-pending-message-cancel-button");
        null == n2 || n2.addEventListener("click", (() => {
          this.onClose();
        })), this.addAudioForConnection(), this.renderLottieAnimation(), setTimeout((() => {
          var e3;
          if (D.innerHTML = P, this.shadowRoot) {
            const n3 = document.createElement("style");
            n3.textContent = S, this.shadowRoot.innerHTML = "", this.shadowRoot.append(D.content.cloneNode(true), n3);
            const t2 = null === (e3 = this.shadowRoot) || void 0 === e3 ? void 0 : e3.getElementById("pera-wallet-connect-modal-pending-message-try-again-button");
            null == t2 || t2.addEventListener("click", (() => {
              this.onClose();
            }));
          }
        }), 3e4);
      }
      onClose() {
        e.removeModalWrapperFromDOM(e.PERA_WALLET_CONNECT_MODAL_ID);
      }
      addAudioForConnection() {
        var n2;
        if ("true" === this.getAttribute("should-use-sound") && e.isIOS()) {
          const e2 = null === (n2 = this.shadowRoot) || void 0 === n2 ? void 0 : n2.getElementById("pera-wallet-connect-modal-pending-message-audio-wrapper"), t2 = document.createElement("audio");
          t2.src = "https://s3.amazonaws.com/wc.perawallet.app/audio.mp3", t2.autoplay = true, t2.loop = true, null == e2 || e2.appendChild(t2);
        }
      }
      renderLottieAnimation() {
        var e2;
        const n2 = null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.getElementById("pera-wallet-connect-modal-pending-message-animation-wrapper");
        n2 && l.default.loadAnimation({ container: n2, renderer: "svg", loop: true, autoplay: true, path: "https://s3.amazonaws.com/wc.perawallet.app/static/pera-loader-animation.json" });
      }
    };
    var O = '.pera-wallet-sign-txn-toast {\n  --pera-wallet-sign-txn-toast-width: 422px;\n  --pera-wallet-sign-txn-toast-height: 134px;\n  --pera-wallet-sign-txn-toast-font-family: "Inter", sans-serif;\n  position: fixed;\n  bottom: 28px;\n  right: 35px;\n  z-index: 11;\n  overflow: hidden;\n  width: var(--pera-wallet-sign-txn-toast-width);\n  height: var(--pera-wallet-sign-txn-toast-height);\n  background: #edeffb;\n  border-radius: 8px;\n  animation: 0.2s PeraWalletSignTxnToastSlideIn ease-out;\n}\n.pera-wallet-sign-txn-toast * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-sign-txn-toast-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.pera-wallet-sign-txn-toast ul,\n.pera-wallet-sign-txn-toast ol,\n.pera-wallet-sign-txn-toast li {\n  list-style-type: none;\n}\n\n.pera-wallet-sign-txn-toast__header__close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 20px;\n  height: 20px;\n  margin: 0;\n  padding: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n}\n\n.pera-wallet-sign-txn-toast__content__lottie-animation {\n  position: absolute;\n  top: -75px;\n  left: -100px;\n  width: 368px;\n  height: 368px;\n}\n\n.pera-wallet-sign-txn-toast__content__description {\n  position: absolute;\n  top: 40px;\n  right: 48px;\n  max-width: 197px;\n  color: #3c3c49;\n  font-size: 14px;\n  line-height: 22px;\n  letter-spacing: -0.1px;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-sign-txn-toast {\n    display: none;\n  }\n}\n@keyframes PeraWalletSignTxnToastSlideIn {\n  0% {\n    bottom: 12px;\n    opacity: 0;\n  }\n  100% {\n    bottom: 26px;\n    opacity: 1;\n  }\n}';
    r(O);
    var j = document.createElement("template");
    j.innerHTML = `
  <div class="pera-wallet-sign-txn-toast">
    <div class="pera-wallet-sign-txn-toast__header">
      <button
        id="pera-wallet-sign-txn-toast-close-button"
        class="pera-wallet-sign-txn-toast__header__close-button">
        <img src="data:image/svg+xml,%3csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M14.4107 4.41074L9.41074 9.41074L10.5893 10.5893L15.5893 5.58926L14.4107 4.41074ZM9.41074 9.41074L4.41074 14.4107L5.58926 15.5893L10.5893 10.5893L9.41074 9.41074ZM15.5893 14.4107L10.5893 9.41074L9.41074 10.5893L14.4107 15.5893L15.5893 14.4107ZM10.5893 9.41074L5.58926 4.41074L4.41074 5.58926L9.41074 10.5893L10.5893 9.41074Z' fill='%239099BD'/%3e%3c/svg%3e" />
      </button>
    </div>
    <div class="pera-wallet-sign-txn-toast__content">
      <div id="pera-wallet-sign-txn-toast-lottie-animation" style="width:368;height:368" class="pera-wallet-sign-txn-toast__content__lottie-animation"></div>
      <p class="pera-wallet-sign-txn-toast__content__description">
        Please launch <b>Pera Wallet</b> on your iOS or Android device to sign this transaction.
      </p>
    </div>
  </div>
`;
    var N = class extends HTMLElement {
      constructor() {
        if (super(), this.attachShadow({ mode: "open" }), this.shadowRoot) {
          const n2 = document.createElement("style");
          n2.textContent = O, this.shadowRoot.append(j.content.cloneNode(true), n2);
          const t2 = this.shadowRoot.getElementById("pera-wallet-sign-txn-toast-close-button");
          null == t2 || t2.addEventListener("click", (() => {
            e.removeModalWrapperFromDOM(e.PERA_WALLET_SIGN_TXN_TOAST_ID);
          })), this.renderLottieAnimation();
        }
      }
      renderLottieAnimation() {
        var e2;
        const n2 = null === (e2 = this.shadowRoot) || void 0 === e2 ? void 0 : e2.getElementById("pera-wallet-sign-txn-toast-lottie-animation");
        n2 && l.default.loadAnimation({ container: n2, renderer: "svg", loop: true, autoplay: true, path: "https://s3.amazonaws.com/wc.perawallet.app/static/sign-toast-animation.json" });
      }
    };
    var $ = '@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");\n.pera-wallet-modal {\n  --pera-wallet-modal-font-family: "Inter", sans-serif;\n  --pera-wallet-modal-compact-width: 380px;\n  --pera-wallet-modal-compact-height: 396px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 999999;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\n  width: 480px;\n  height: 578px;\n  background-color: #ffffff;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\n  top: 40px;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  max-width: unset;\n  height: calc(100 * var(--vh));\n  padding: 20px;\n  background-color: #ffffff;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\n  border-radius: 20px 20px 0px 0px;\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\n  overflow-y: auto;\n  transform: unset;\n}\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\n  background-image: unset;\n}\n.pera-wallet-modal--compact:not(.pera-wallet-modal--mobile) .pera-wallet-modal__body {\n  width: var(--pera-wallet-modal-compact-width);\n  height: var(--pera-wallet-modal-compact-height);\n  padding: 0;\n}\n.pera-wallet-modal * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-smooth: antialiased;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.pera-wallet-modal ul,\n.pera-wallet-modal ol,\n.pera-wallet-modal li {\n  list-style-type: none;\n}\n\n.pera-wallet-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 48px;\n  padding: 14px;\n  border: none;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--pera-wallet-modal-font-family);\n  font-size: 14px;\n}\n\n.pera-wallet-modal__logo img {\n  display: block;\n  width: 32px;\n}\n\n.pera-wallet-modal__body {\n  position: relative;\n  top: 50%;\n  left: 50%;\n  width: 700px;\n  max-width: calc(100vw - 80px);\n  padding: 28px;\n  background-color: #f3f3f7;\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\n  border-radius: 24px;\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\n  transform: translate(-50%, -50%);\n}\n.pera-wallet-modal__body::before {\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: -1;\n  content: "";\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\n  background-size: 116px 116px;\n  mix-blend-mode: overlay;\n  border-radius: 24px;\n  opacity: 0.8;\n  pointer-events: none;\n}\n\n@media (max-width: 767px) {\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\n    width: 100%;\n    max-width: calc(100vw - 32px);\n    padding: 24px;\n  }\n}\n@keyframes PeraWalletConnectSlideIn {\n  0% {\n    opacity: 0;\n    transform: translate(-50%, calc(-50% + 24px));\n  }\n  100% {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n}\n@keyframes PeraWalletConnectMobileSlideIn {\n  0% {\n    top: 30%;\n    opacity: 0;\n  }\n  100% {\n    top: 40px;\n    opacity: 1;\n  }\n}\n.pera-wallet-sign-txn-modal.pera-wallet-modal .pera-wallet-modal__body {\n  width: 480px;\n  height: 578px;\n  background-color: #ffffff;\n  background-image: unset;\n  padding: 0;\n}\n.pera-wallet-sign-txn-modal.pera-wallet-modal .pera-wallet-modal__body .pera-wallet-sign-txn-modal__body__content {\n  width: 100%;\n  height: 100%;\n}\n.pera-wallet-sign-txn-modal.pera-wallet-modal .pera-wallet-modal__body #pera-wallet-iframe {\n  width: 100%;\n  height: 100%;\n  border-radius: 16px;\n  margin: 0 auto;\n  border: none;\n}\n\n.pera-wallet-sign-txn-modal--compact.pera-wallet-modal .pera-wallet-modal__body {\n  width: var(--pera-wallet-modal-compact-width);\n  height: var(--pera-wallet-modal-compact-height);\n}';
    r($);
    var q = document.createElement("template");
    q.innerHTML = `
  <div id="pera-wallet-sign-txn-modal" class="${e.PERA_WALLET_MODAL_CLASSNAME} pera-wallet-sign-txn-modal">
    <div class="pera-wallet-modal__body">
      <pera-wallet-modal-header modal-id="${e.PERA_WALLET_SIGN_TXN_MODAL_ID}"></pera-wallet-modal-header/>

      <div class="pera-wallet-sign-txn-modal__body__content" />
    </div>
  </div>
`;
    var U = class extends HTMLElement {
      constructor() {
        if (super(), this.attachShadow({ mode: "open" }), this.shadowRoot) {
          const e2 = document.createElement("style");
          e2.textContent = $, this.shadowRoot.append(q.content.cloneNode(true), e2);
          if ("true" === this.getAttribute("compact-mode")) {
            const e3 = this.shadowRoot.getElementById("pera-wallet-sign-txn-modal");
            null == e3 || e3.classList.add("pera-wallet-sign-txn-modal--compact");
          }
        }
      }
    };
    function G() {
      document.documentElement.style.setProperty("--vh", 0.01 * window.innerHeight + "px");
    }
    window.addEventListener("DOMContentLoaded", (() => {
      G();
    })), window.addEventListener("resize", (() => {
      G();
    })), window.customElements.define("pera-wallet-connect-modal", A), window.customElements.define("pera-wallet-modal-desktop-mode", C), window.customElements.define("pera-wallet-modal-header", s), window.customElements.define("pera-wallet-modal-touch-screen-mode", y), window.customElements.define("pera-wallet-redirect-modal", B), window.customElements.define("pera-wallet-connect-modal-information-section", W), window.customElements.define("pera-wallet-connect-modal-pending-message-section", T), window.customElements.define("pera-wallet-sign-txn-toast", N), window.customElements.define("pera-wallet-sign-txn-modal", U), window.customElements.define("pera-wallet-download-qr-code", g);
  }
});

// node_modules/@perawallet/connect/dist/index-87ee6d1d.js
var require_index_87ee6d1d = __commonJS({
  "node_modules/@perawallet/connect/dist/index-87ee6d1d.js"(exports) {
    "use strict";
    var e = (init_esm9(), __toCommonJS(esm_exports5));
    var t = require_algosdk_min();
    var n = require_es5();
    function o(e2) {
      return e2 && "object" == typeof e2 && "default" in e2 ? e2 : { default: e2 };
    }
    var a = o(e);
    var r = o(t);
    var i = o(n);
    function s(e2, t2, n2, o2) {
      return new (n2 || (n2 = Promise))((function(a2, r2) {
        function i2(e3) {
          try {
            l2(o2.next(e3));
          } catch (e4) {
            r2(e4);
          }
        }
        function s2(e3) {
          try {
            l2(o2.throw(e3));
          } catch (e4) {
            r2(e4);
          }
        }
        function l2(e3) {
          var t3;
          e3.done ? a2(e3.value) : (t3 = e3.value, t3 instanceof n2 ? t3 : new n2((function(e4) {
            e4(t3);
          }))).then(i2, s2);
        }
        l2((o2 = o2.apply(e2, t2 || [])).next());
      }));
    }
    var l = class _l extends Error {
      constructor(e2, t2, ...n2) {
        super(...n2), Error.captureStackTrace && Error.captureStackTrace(this, _l), this.name = "PeraWalletConnectError", this.data = e2, this.message = t2;
      }
    };
    var c = new class {
      constructor(e2) {
        this.listener = void 0, this.channel = e2.channel;
      }
      setupListener({ onReceiveMessage: e2 }) {
        this.close(), this.listener = (t2) => {
          if ("object" == typeof t2.data) try {
            t2.data.channel === this.channel && e2(t2);
          } catch (e3) {
            console.error(e3);
          }
        }, window.addEventListener("message", this.listener);
      }
      sendMessage({ message: e2, targetWindow: t2, origin: n2, timeout: o2 = 1e3 }) {
        setTimeout((() => {
          const o3 = { channel: this.channel, message: e2 };
          t2.postMessage(o3, { targetOrigin: n2 || "*" });
        }), o2);
      }
      close() {
        this.listener && (window.removeEventListener("message", this.listener), this.listener = void 0);
      }
    }({ channel: "pera-web-wallet" });
    function d() {
      const e2 = document.querySelector('meta[name="name"]'), t2 = document.querySelector('meta[name="description"]');
      let { title: n2 } = document, o2 = "";
      return e2 instanceof HTMLMetaElement && (n2 = e2.content), t2 instanceof HTMLMetaElement && (o2 = t2.content), { title: n2, description: o2, url: window.location.origin, favicon: u()[0] };
    }
    function u() {
      const e2 = document.getElementsByTagName("link"), t2 = [];
      for (let n2 = 0; n2 < e2.length; n2++) {
        const o2 = e2[n2], a2 = o2.getAttribute("rel");
        if (a2 && a2.toLowerCase().indexOf("icon") > -1) {
          const e3 = o2.getAttribute("href");
          if (e3 && -1 === e3.toLowerCase().indexOf("https:") && -1 === e3.toLowerCase().indexOf("http:") && 0 !== e3.indexOf("//")) {
            let n3 = `${window.location.protocol}//${window.location.host}`;
            if (0 === e3.indexOf("/")) n3 += e3;
            else {
              const t3 = window.location.pathname.split("/");
              t3.pop();
              n3 += `${t3.join("/")}/${e3}`;
            }
            t2.push(n3);
          } else if (0 === (null == e3 ? void 0 : e3.indexOf("//"))) {
            const n3 = window.location.protocol + e3;
            t2.push(n3);
          } else e3 && t2.push(e3);
        }
      }
      return t2;
    }
    function p(e2) {
      return new Promise(((t2, n2) => {
        try {
          const o2 = window.open(e2, "_blank");
          let a2 = 0;
          const r2 = setInterval((() => {
            if (a2 += 1, 50 === a2) return clearInterval(r2), void n2(new l({ type: "MESSAGE_NOT_RECEIVED" }, "Couldn't open Pera Wallet, please try again."));
            o2 && (true === o2.closed && (clearInterval(r2), n2(new l({ type: "OPERATION_CANCELLED" }, "Operation cancelled by user"))), c.sendMessage({ message: { type: "TAB_OPEN" }, origin: e2, targetWindow: o2 }));
          }), 700);
          c.setupListener({ onReceiveMessage: (e3) => {
            "TAB_OPEN_RECEIVED" === e3.data.message.type && (clearInterval(r2), t2(o2));
          } });
        } catch (e3) {
          n2(e3);
        }
      }));
    }
    function h(e2) {
      const t2 = document.createElement("div");
      return t2.setAttribute("id", e2), document.body.appendChild(t2), t2;
    }
    function w() {
      h("pera-wallet-redirect-modal-wrapper").innerHTML = "<pera-wallet-redirect-modal></pera-wallet-redirect-modal>";
    }
    function g() {
      h("pera-wallet-sign-txn-toast-wrapper").innerHTML = "<pera-wallet-sign-txn-toast></pera-wallet-sign-txn-toast>";
    }
    function m(e2) {
      const t2 = document.getElementById(e2);
      t2 && t2.remove();
    }
    var v = "PeraWallet.Wallet";
    var f = "walletconnect";
    function b() {
      return "undefined" == typeof localStorage ? void 0 : localStorage;
    }
    function y(e2, t2) {
      var n2;
      null === (n2 = b()) || void 0 === n2 || n2.setItem(v, JSON.stringify({ type: t2 || "pera-wallet", accounts: e2, selectedAccount: e2[0] }));
    }
    function N() {
      var e2;
      const t2 = null === (e2 = b()) || void 0 === e2 ? void 0 : e2.getItem(v);
      return t2 ? JSON.parse(t2) : null;
    }
    function T() {
      return new Promise(((e2, t2) => {
        var n2, o2;
        try {
          null === (n2 = b()) || void 0 === n2 || n2.removeItem(f), null === (o2 = b()) || void 0 === o2 || o2.removeItem(v), e2(void 0);
        } catch (e3) {
          t2(e3);
        }
      }));
    }
    function A(e2) {
      const t2 = e2.slice();
      for (let e3 = t2.length - 1; e3 > 0; e3--) {
        const n2 = Math.floor(Math.random() * (e3 + 1));
        [t2[e3], t2[n2]] = [t2[n2], t2[e3]];
      }
      return t2;
    }
    function S() {
      return (function(e2, t2 = {}) {
        return fetch(e2, t2).then(((e3) => e3.json())).then(((e3) => e3));
      })("https://wc.perawallet.app/config.json", { cache: "no-store" });
    }
    function _() {
      return s(this, void 0, void 0, (function* () {
        let e2 = { bridgeURL: "", webWalletURL: "", isWebWalletAvailable: false, shouldDisplayNewBadge: false, shouldUseSound: true, silent: false, promoteMobile: false };
        try {
          const t2 = yield S();
          void 0 !== t2.web_wallet && t2.web_wallet_url && (e2.isWebWalletAvailable = t2.web_wallet), void 0 !== t2.display_new_badge && (e2.shouldDisplayNewBadge = t2.display_new_badge), void 0 !== t2.use_sound && (e2.shouldUseSound = t2.use_sound), void 0 !== t2.silent && (e2.silent = t2.silent), void 0 !== t2.promote_mobile && (e2.promoteMobile = t2.promote_mobile), e2 = Object.assign(Object.assign({}, e2), { bridgeURL: A(t2.servers || [])[0] || "", webWalletURL: t2.web_wallet_url || "" });
        } catch (e3) {
          console.log(e3);
        }
        return e2;
      }));
    }
    function E(e2) {
      return Uint8Array.from(window.atob(e2), ((e3) => e3.charCodeAt(0)));
    }
    function C(e2, t2) {
      return { id: Date.now() * Math.pow(10, 3) + Math.floor(Math.random() * Math.pow(10, 3)), jsonrpc: "2.0", method: e2, params: t2 };
    }
    function I() {
      return "undefined" != typeof navigator;
    }
    function W() {
      return I() && /Android/i.test(navigator.userAgent);
    }
    function O() {
      return I() && /iPhone|iPod|Android/i.test(navigator.userAgent);
    }
    var L = W() ? "algorand://" : "perawallet-wc://";
    function M(e2) {
      return { ROOT: `https://${e2}`, CONNECT: `https://${e2}/connect`, TRANSACTION_SIGN: `https://${e2}/transaction/sign` };
    }
    function R({ method: e2, signTxnRequestParams: t2, signer: n2, chainId: o2, webWalletURL: a2, resolve: r2, reject: i2 }) {
      const d2 = M(a2);
      !(function() {
        s(this, void 0, void 0, (function* () {
          try {
            const a3 = yield p(d2.TRANSACTION_SIGN);
            if (a3) {
              let r3;
              "SIGN_TXN" === e2 ? r3 = { type: "SIGN_TXN", txn: t2 } : "SIGN_DATA" === e2 && n2 && o2 && (r3 = { type: "SIGN_DATA", data: t2, signer: n2, chainId: o2 }), r3 && c.sendMessage({ message: r3, origin: d2.TRANSACTION_SIGN, targetWindow: a3 });
            }
            const s2 = setInterval((() => {
              true === (null == a3 ? void 0 : a3.closed) && (i2(new l({ type: `${e2}_CANCELLED` }, "Transaction signing is cancelled by user.")), clearInterval(s2));
            }), 2e3);
            c.setupListener({ onReceiveMessage: (t3) => (function({ event: e3, newPeraWalletTab: t4, method: n3, resolve: o3, reject: a4 }) {
              switch (e3.data.message.type) {
                case "SIGN_TXN_CALLBACK":
                  null == t4 || t4.close(), o3(e3.data.message.signedTxns.map(((e4) => E(e4.signedTxn))));
                  break;
                case "SIGN_DATA_CALLBACK":
                  null == t4 || t4.close(), o3(e3.data.message.signedData.map(((e4) => E(e4.signedData))));
                  break;
                case "SIGN_TXN_NETWORK_MISMATCH":
                  a4(new l({ type: `${n3}_NETWORK_MISMATCH`, detail: e3.data.message.error }, e3.data.message.error || "Network mismatch"));
                  break;
                case "SIGN_TXN_CALLBACK_ERROR":
                  null == t4 || t4.close(), a4(new l({ type: `${n3}_CANCELLED` }, e3.data.message.error));
                  break;
                case "SESSION_DISCONNECTED":
                  null == t4 || t4.close(), T(), a4(new l({ type: "SESSION_DISCONNECTED", detail: e3.data.message.error }, e3.data.message.error));
              }
            })({ event: t3, newPeraWalletTab: a3, method: e2, resolve: r2, reject: i2 }) });
          } catch (e3) {
            i2(e3);
          }
        }));
      })();
    }
    function P({ webWalletURL: e2, chainId: t2, resolve: n2, reject: o2 }) {
      const a2 = M(e2);
      return function() {
        return s(this, void 0, void 0, (function* () {
          try {
            const e3 = yield p(a2.CONNECT);
            e3 && c.sendMessage({ message: { type: "CONNECT", data: Object.assign(Object.assign({}, d()), { chainId: t2 }) }, origin: a2.CONNECT, targetWindow: e3 });
            const i2 = setInterval((() => {
              true === (null == e3 ? void 0 : e3.closed) && (o2(new l({ type: "CONNECT_CANCELLED" }, "Connect is cancelled by user")), clearInterval(i2), r2());
            }), 2e3);
            c.setupListener({ onReceiveMessage: (t3) => (function({ event: e4, newPeraWalletTab: t4, resolve: n3, reject: o3 }) {
              if (n3 && "CONNECT_CALLBACK" === e4.data.message.type) {
                const o4 = e4.data.message.data.addresses;
                y(o4, "pera-wallet-web"), n3(o4), m("pera-wallet-connect-modal-wrapper"), null == t4 || t4.close();
              } else "CONNECT_NETWORK_MISMATCH" === e4.data.message.type && (o3(new l({ type: "CONNECT_NETWORK_MISMATCH", detail: e4.data.message.error }, e4.data.message.error || "Your wallet is connected to a different network to this dApp. Update your wallet to the correct network (MainNet or TestNet) to continue.")), m("pera-wallet-connect-modal-wrapper"), null == t4 || t4.close());
            })({ event: t3, newPeraWalletTab: e3, resolve: n2, reject: o2 }) });
          } catch (e3) {
            r2(), o2(e3);
          }
        }));
      };
      function r2() {
        m("pera-wallet-connect-modal-wrapper");
      }
    }
    function D({ isWebWalletAvailable: e2, shouldDisplayNewBadge: t2, shouldUseSound: n2, compactMode: o2, promoteMobile: a2 }) {
      return { open: (r2 = { isWebWalletAvailable: e2, shouldDisplayNewBadge: t2, shouldUseSound: n2, compactMode: o2, promoteMobile: a2 }, (e3) => {
        if (!document.getElementById("pera-wallet-connect-modal-wrapper")) {
          const t3 = h("pera-wallet-connect-modal-wrapper"), n3 = `${e3}&algorand=true`, { isWebWalletAvailable: o3, shouldDisplayNewBadge: a3, shouldUseSound: i2, compactMode: s2, promoteMobile: l2 } = r2;
          t3.innerHTML = `<pera-wallet-connect-modal uri="${n3}" is-web-wallet-avaliable="${o3}" should-display-new-badge="${a3}" should-use-sound="${i2}" compact-mode="${s2}" promote-mobile="${l2}"></pera-wallet-connect-modal>`;
        }
      }), close: () => m("pera-wallet-connect-modal-wrapper") };
      var r2;
    }
    "undefined" != typeof window && (window.global = window, window.Buffer = window.Buffer || require_buffer2().Buffer, Promise.resolve().then((function() {
      return require_App_94e9365e();
    }))), exports.PERA_DOWNLOAD_URL = "https://perawallet.app/download/", exports.PERA_WALLET_APP_DEEP_LINK = L, exports.PERA_WALLET_CONNECT_MODAL_ID = "pera-wallet-connect-modal-wrapper", exports.PERA_WALLET_MODAL_CLASSNAME = "pera-wallet-modal", exports.PERA_WALLET_REDIRECT_MODAL_ID = "pera-wallet-redirect-modal-wrapper", exports.PERA_WALLET_SIGN_TXN_MODAL_ID = "pera-wallet-sign-txn-modal-wrapper", exports.PERA_WALLET_SIGN_TXN_TOAST_ID = "pera-wallet-sign-txn-toast-wrapper", exports.PeraWalletConnect = class {
      constructor(e2) {
        this.bridge = (null == e2 ? void 0 : e2.bridge) || "", this.connector = null, this.shouldShowSignTxnToast = void 0 === (null == e2 ? void 0 : e2.shouldShowSignTxnToast) || e2.shouldShowSignTxnToast, this.chainId = null == e2 ? void 0 : e2.chainId, this.compactMode = (null == e2 ? void 0 : e2.compactMode) || false;
      }
      get platform() {
        return (function() {
          const e2 = N();
          let t2 = null;
          return "pera-wallet" === (null == e2 ? void 0 : e2.type) ? t2 = "mobile" : "pera-wallet-web" === (null == e2 ? void 0 : e2.type) && (t2 = "web"), t2;
        })();
      }
      get isConnected() {
        var e2;
        return "mobile" === this.platform ? !!this.connector : "web" === this.platform && !!(null === (e2 = N()) || void 0 === e2 ? void 0 : e2.accounts.length);
      }
      connect() {
        return new Promise(((e2, t2) => s(this, void 0, void 0, (function* () {
          var n2;
          try {
            if (null === (n2 = this.connector) || void 0 === n2 ? void 0 : n2.connected) try {
              yield this.connector.killSession();
            } catch (e3) {
            }
            const { isWebWalletAvailable: o2, bridgeURL: r2, webWalletURL: i2, shouldDisplayNewBadge: s2, shouldUseSound: c2, promoteMobile: d2 } = yield _(), u2 = P({ resolve: e2, reject: t2, webWalletURL: i2, chainId: this.chainId, isCompactMode: this.compactMode });
            o2 && (window.onWebWalletConnect = u2), this.connector = new a.default({ bridge: this.bridge || r2 || "https://bridge.walletconnect.org", qrcodeModal: D({ isWebWalletAvailable: o2, shouldDisplayNewBadge: s2, shouldUseSound: c2, compactMode: this.compactMode, promoteMobile: d2 }) }), yield this.connector.createSession({ chainId: this.chainId || 4160 }), (function(e3, t3) {
              var n3, o3, a2, r3;
              const i3 = document.getElementById(e3), s3 = null === (o3 = null === (n3 = null == i3 ? void 0 : i3.querySelector(e3.replace("-wrapper", ""))) || void 0 === n3 ? void 0 : n3.shadowRoot) || void 0 === o3 ? void 0 : o3.querySelector(".pera-wallet-modal"), l2 = null === (r3 = null === (a2 = null == s3 ? void 0 : s3.querySelector("pera-wallet-modal-header")) || void 0 === a2 ? void 0 : a2.shadowRoot) || void 0 === r3 ? void 0 : r3.getElementById("pera-wallet-modal-header-close-button");
              null == l2 || l2.addEventListener("click", (() => {
                t3(), m(e3);
              }));
            })("pera-wallet-connect-modal-wrapper", (() => t2(new l({ type: "CONNECT_MODAL_CLOSED" }, "Connect modal is closed by user")))), this.connector.on("connect", ((n3, o3) => {
              var a2, r3;
              n3 && t2(n3), e2((null === (a2 = this.connector) || void 0 === a2 ? void 0 : a2.accounts) || []), y((null === (r3 = this.connector) || void 0 === r3 ? void 0 : r3.accounts) || []);
            }));
          } catch (e3) {
            console.log(e3), t2(new l({ type: "SESSION_CONNECT", detail: e3 }, e3.message || "There was an error while connecting to Pera Wallet"));
          }
        }))));
      }
      reconnectSession() {
        return new Promise(((e2, t2) => s(this, void 0, void 0, (function* () {
          var n2, o2;
          try {
            const r2 = N();
            if (!r2) return void e2([]);
            if ("pera-wallet-web" === (null == r2 ? void 0 : r2.type)) {
              const { isWebWalletAvailable: n3 } = yield _();
              n3 ? e2(r2.accounts || []) : t2(new l({ type: "SESSION_RECONNECT", detail: "Pera Web is not available" }, "Pera Web is not available"));
            }
            this.connector && e2(this.connector.accounts || []), this.bridge = (null === (n2 = (function() {
              var e3;
              const t3 = null === (e3 = b()) || void 0 === e3 ? void 0 : e3.getItem(f);
              return t3 ? JSON.parse(t3) : null;
            })()) || void 0 === n2 ? void 0 : n2.bridge) || "", this.bridge && (this.connector = new a.default({ bridge: this.bridge }), e2((null === (o2 = this.connector) || void 0 === o2 ? void 0 : o2.accounts) || [])), this.isConnected || e2([]);
          } catch (e3) {
            yield this.disconnect(), t2(new l({ type: "SESSION_RECONNECT", detail: e3 }, e3.message || "There was an error while reconnecting to Pera Wallet"));
          }
        }))));
      }
      disconnect() {
        var e2;
        return s(this, void 0, void 0, (function* () {
          let t2;
          this.isConnected && "mobile" === this.platform && (t2 = null === (e2 = this.connector) || void 0 === e2 ? void 0 : e2.killSession(), null == t2 || t2.then((() => {
            this.connector = null;
          }))), yield T();
        }));
      }
      signTransactionWithMobile(e2) {
        return s(this, void 0, void 0, (function* () {
          const t2 = C("algo_signTxn", [e2]);
          try {
            try {
              const { silent: e3 } = yield _(), n2 = (yield this.connector.sendCustomRequest(t2, { forcePushNotification: !e3 })).filter(Boolean);
              return "string" == typeof n2[0] ? n2.map(E) : n2.map(((e4) => Uint8Array.from(e4)));
            } catch (e3) {
              return yield Promise.reject(new l({ type: "SIGN_TRANSACTIONS", detail: e3 }, e3.message || "Failed to sign transaction"));
            }
          } finally {
            m("pera-wallet-redirect-modal-wrapper"), m("pera-wallet-sign-txn-toast-wrapper");
          }
        }));
      }
      signTransactionWithWeb(e2, t2) {
        return new Promise(((n2, o2) => R({ signTxnRequestParams: e2, webWalletURL: t2, method: "SIGN_TXN", resolve: n2, reject: o2 })));
      }
      signDataWithMobile({ data: e2, signer: t2, chainId: n2 }) {
        return s(this, void 0, void 0, (function* () {
          const o2 = C("algo_signData", e2.map(((e3) => Object.assign(Object.assign({}, e3), { signer: t2, chainId: n2 }))));
          try {
            try {
              const { silent: e3 } = yield _(), t3 = (yield this.connector.sendCustomRequest(o2, { forcePushNotification: !e3 })).filter(Boolean);
              return "string" == typeof t3[0] ? t3.map(E) : t3.map(((e4) => Uint8Array.from(e4)));
            } catch (e3) {
              return yield Promise.reject(new l({ type: "SIGN_TRANSACTIONS", detail: e3 }, e3.message || "Failed to sign transaction"));
            }
          } finally {
            m("pera-wallet-redirect-modal-wrapper"), m("pera-wallet-sign-txn-toast-wrapper");
          }
        }));
      }
      signDataWithWeb({ data: e2, signer: t2, chainId: n2, webWalletURL: o2 }) {
        return new Promise(((a2, r2) => R({ method: "SIGN_DATA", signTxnRequestParams: e2, signer: t2, chainId: n2, webWalletURL: o2, resolve: a2, reject: r2 })));
      }
      signTransaction(e2, t2) {
        return s(this, void 0, void 0, (function* () {
          if ("mobile" === this.platform && (O() ? w() : !O() && this.shouldShowSignTxnToast && g(), !this.connector)) throw new Error("PeraWalletConnect was not initialized correctly.");
          const n2 = e2.flatMap(((e3) => e3.map(((e4) => (function(e5, t3) {
            let n3;
            t3 && !(e5.signers || []).includes(t3) && (n3 = []);
            const o2 = { txn: (a2 = e5.txn, Buffer.from(r.default.encodeUnsignedTransaction(a2)).toString("base64")) };
            var a2;
            return Array.isArray(n3) && (o2.signers = n3), e5.authAddr && (o2.authAddr = e5.authAddr), e5.message && (o2.message = e5.message), e5.msig && (o2.msig = e5.msig), o2;
          })(e4, t2)))));
          if ("web" === this.platform) {
            const { webWalletURL: e3 } = yield _();
            return this.signTransactionWithWeb(n2, e3);
          }
          return this.signTransactionWithMobile(n2);
        }));
      }
      signData(e2, t2) {
        return s(this, void 0, void 0, (function* () {
          const n2 = this.chainId || 4160;
          if ("mobile" === this.platform && (O() ? w() : !O() && this.shouldShowSignTxnToast && g(), !this.connector)) throw new Error("PeraWalletConnect was not initialized correctly.");
          if ("web" === this.platform) {
            const { webWalletURL: o3 } = yield _();
            return this.signDataWithWeb({ data: e2, signer: t2, chainId: n2, webWalletURL: o3 });
          }
          const o2 = e2.map(((e3) => Object.assign(Object.assign({}, e3), { data: Buffer.from(e3.data).toString("base64") })));
          return this.signDataWithMobile({ data: o2, signer: t2, chainId: n2 });
        }));
      }
    }, exports.closePeraWalletSignTxnToast = function() {
      m("pera-wallet-sign-txn-toast-wrapper");
    }, exports.detectBrowser = function() {
      if (!I()) return null;
      const { userAgent: e2 } = navigator;
      let t2;
      return t2 = e2.match(/DuckDuckGo/i) ? "DuckDuckGo" : e2.match(/OPX/i) ? "Opera GX" : navigator.brave ? "Brave" : i.default.getParser(navigator.userAgent).getBrowserName(), t2;
    }, exports.isAndroid = W, exports.isIOS = function() {
      return I() && /iPhone|iPad|iPod/i.test(navigator.userAgent);
    }, exports.isMobile = O, exports.removeModalWrapperFromDOM = m;
  }
});

// node_modules/@perawallet/connect/dist/index.js
var require_dist = __commonJS({
  "node_modules/@perawallet/connect/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var e = require_index_87ee6d1d();
    init_esm9(), require_algosdk_min(), require_es5(), exports.PeraWalletConnect = e.PeraWalletConnect, exports.closePeraWalletSignTxnToast = e.closePeraWalletSignTxnToast;
  }
});

// node_modules/@dynamic-labs/algorand/package.js
var version = "4.26.0";

// node_modules/@dynamic-labs/algorand/_virtual/_tslib.js
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

// node_modules/@dynamic-labs/algorand/src/pera/PeraWalletConnector.js
var import_connect = __toESM(require_dist(), 1);

// node_modules/@dynamic-labs/algorand/src/wallet/AlgorandWallet.js
var AlgorandWallet = class extends Wallet {
  /**
   * Sends the native balance of the wallet to the given address.
   * @param amount - The amount of balance to send (in Algorand ALGO).
   * @param toAddress - The address to send the balance to.
   * @returns The signature of the sent transaction.
   */
  sendBalance(_a) {
    return __awaiter(this, arguments, void 0, function* ({ amount, toAddress }) {
      throw new Error("Not implemented");
    });
  }
  getSigner() {
    return __awaiter(this, void 0, void 0, function* () {
      const signer = yield this._connector.getSigner();
      if (!signer) {
        throw new Error("unable to retrieve Algorand signer");
      }
      return {
        signData: (data) => __awaiter(this, void 0, void 0, function* () {
          yield this.sync();
          return signer.signData(data);
        }),
        signTransaction: (txs) => __awaiter(this, void 0, void 0, function* () {
          yield this.sync();
          return signer.signTransaction(txs);
        })
      };
    });
  }
};

// node_modules/@dynamic-labs/algorand/src/AlgorandWalletConnector.js
var HTTP_STATUS_TOO_MANY_REQUESTS = 429;
var HTTP_STATUS_NOT_FOUND = 404;
var AlgorandLocalStorageCache = class {
  constructor(key) {
    this.SESSION_STORAGE_KEY = `algorand_${key}_currentAddress`;
  }
  getCurrentAddress() {
    return __awaiter(this, void 0, void 0, function* () {
      const addr = yield getItemAsync(this.SESSION_STORAGE_KEY);
      if (!addr) {
        return void 0;
      }
      return addr;
    });
  }
  setCurrentAddress(addr) {
    return __awaiter(this, void 0, void 0, function* () {
      return setItemAsync(this.SESSION_STORAGE_KEY, addr);
    });
  }
  clearCurrentAddress() {
    return __awaiter(this, void 0, void 0, function* () {
      return removeItemAsync(this.SESSION_STORAGE_KEY);
    });
  }
};
var AlgorandWalletConnector = class extends WalletConnectorBase {
  constructor(opts) {
    super(opts);
    this.ChainWallet = AlgorandWallet;
    this.connectedChain = "ALGO";
    this.supportedChains = ["ALGO"];
    this.cache = new AlgorandLocalStorageCache(opts.cacheKey);
  }
  getDeepLink() {
    return void 0;
  }
  getBalance(address) {
    return __awaiter(this, void 0, void 0, function* () {
      const response = yield fetch(`https://indexer.algoexplorerapi.io/v2/accounts/${address}`);
      if (!response.ok) {
        if (response.status === HTTP_STATUS_TOO_MANY_REQUESTS) {
          return "0";
        }
        if (response.status === HTTP_STATUS_NOT_FOUND) {
          return "0";
        }
        return void 0;
      }
      const accountInfo = yield response.json();
      if (!accountInfo.account) {
        return void 0;
      }
      const balance = accountInfo.account.amount.toString();
      return balance.toString();
    });
  }
  endSession() {
    return __awaiter(this, void 0, void 0, function* () {
      yield this.cache.clearCurrentAddress();
    });
  }
  getConnectedAccounts() {
    return __awaiter(this, void 0, void 0, function* () {
      const currentAddress = yield this.cache.getCurrentAddress();
      return currentAddress ? [currentAddress] : [];
    });
  }
  getBlockExplorerUrlsForCurrentNetwork() {
    return __awaiter(this, void 0, void 0, function* () {
      return ["https://explorer.bitquery.io/algorand"];
    });
  }
};

// node_modules/@dynamic-labs/algorand/src/pera/PeraSigner.js
var PeraSigner = class {
  constructor(connectedAddress, client) {
    this.connectedAddress = connectedAddress;
    this.client = client;
  }
  signData(data) {
    return this.client.signData(data, this.connectedAddress);
  }
  signTransaction(txs) {
    return this.client.signTransaction(txs);
  }
};

// node_modules/@dynamic-labs/algorand/src/pera/PeraWalletConnector.js
var PeraWalletConnector = class extends AlgorandWalletConnector {
  constructor(opts) {
    super(Object.assign(Object.assign({}, opts), { cacheKey: "pera" }));
    this.canConnectViaCustodialService = true;
    this.name = "Pera Wallet";
    this.overrideKey = "perawallet";
  }
  getClient() {
    if (!this.client) {
      this.client = new import_connect.PeraWalletConnect();
    }
    return this.client;
  }
  getNetwork() {
    return __awaiter(this, void 0, void 0, function* () {
      var _a;
      return (_a = this.getClient().chainId) === null || _a === void 0 ? void 0 : _a.valueOf();
    });
  }
  getAddress() {
    return __awaiter(this, void 0, void 0, function* () {
      const currentAddress = yield this.cache.getCurrentAddress();
      if (currentAddress) {
        return currentAddress;
      }
      const accounts = yield this.getClient().connect();
      if (!accounts.length) {
        return void 0;
      }
      const [address] = accounts;
      yield this.cache.setCurrentAddress(address);
      return address;
    });
  }
  getSigner() {
    return __awaiter(this, void 0, void 0, function* () {
      const address = yield this.getAddress();
      if (!address) {
        throw new DynamicError("Pera Wallet Connector - Not connected!");
      }
      return new PeraSigner(address, this.getClient());
    });
  }
  signMessage(messageToSign) {
    return __awaiter(this, void 0, void 0, function* () {
      const signer = yield this.getSigner();
      const signature = yield signer.signData([
        {
          data: Buffer.from(messageToSign),
          message: messageToSign
        }
      ]);
      return Buffer.from(signature[0]).toString("hex");
    });
  }
};

// node_modules/@dynamic-labs/algorand/src/pera/index.js
var PeraWalletConnectors = (props) => [PeraWalletConnector];

// node_modules/@dynamic-labs/algorand/src/wallet/isAlgorandWallet/isAlgorandWallet.js
var isAlgorandWallet = (wallet) => wallet.chain === "ALGO";

// node_modules/@dynamic-labs/algorand/src/index.js
assertPackageVersion("@dynamic-labs/algorand", version);
var AlgorandWalletConnectors = (props) => [
  ...PeraWalletConnectors()
];
export {
  AlgorandWallet,
  AlgorandWalletConnector,
  AlgorandWalletConnectors,
  isAlgorandWallet
};
/*! Bundled license information:

js-sha3/src/sha3.js:
  (**
   * [js-sha3]{@link https://github.com/emn178/js-sha3}
   *
   * @version 0.8.0
   * @author Chen, Yi-Cyuan [emn178@gmail.com]
   * @copyright Chen, Yi-Cyuan 2015-2018
   * @license MIT
   *)

algosdk/dist/browser/algosdk.min.js:
  (*! For license information please see algosdk.min.js.LICENSE.txt *)

@evanhahn/lottie-web-light/index.js:
  (*!
   Transformation Matrix v2.0
   (c) Epistemex 2014-2015
   www.epistemex.com
   By Ken Fyrstenberg
   Contributions by leeoniya.
   License: MIT, header required.
   *)
*/
//# sourceMappingURL=@dynamic-labs_algorand.js.map
