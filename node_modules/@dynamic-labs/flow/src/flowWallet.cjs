'use client'
'use strict';

var _tslib = require('../_virtual/_tslib.cjs');
var fcl = require('@onflow/fcl');
var utils = require('@dynamic-labs/utils');
var FlowWalletConnector = require('./FlowWalletConnector.cjs');

class FlowWallet extends FlowWalletConnector.FlowWalletConnector {
    constructor() {
        super(...arguments);
        this.name = 'Flow Wallet';
        this.overrideKey = 'flowwalletflow';
    }
    setupConfig() {
        const _super = Object.create(null, {
            setupConfig: { get: () => super.setupConfig }
        });
        return _tslib.__awaiter(this, void 0, void 0, function* () {
            yield _super.setupConfig.call(this);
            fcl.config()
                .put('challenge.scope', undefined)
                .put('discovery.wallet', 'chrome-extension://hpclkefagolihohboafpheddmmgdffjm/popup.html')
                .put('service.OpenID.scopes', undefined)
                .put('discovery.wallet.method', 'EXT/RPC');
        });
    }
    isInstalledOnBrowser() {
        var _a;
        if (typeof window === 'undefined') {
            return false;
        }
        return Boolean((_a = window.fcl_extensions) === null || _a === void 0 ? void 0 : _a.some((ext) => ext.id === 'hpclkefagolihohboafpheddmmgdffjm'));
    }
    signDelay() {
        return _tslib.__awaiter(this, void 0, void 0, function* () {
            if (utils.isMobile()) {
                return Promise.resolve();
            }
            return new Promise((resolve) => {
                setTimeout(() => {
                    resolve();
                }, 500);
            });
        });
    }
}

module.exports = FlowWallet;
