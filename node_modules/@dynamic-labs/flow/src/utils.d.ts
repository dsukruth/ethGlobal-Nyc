export declare const flowSendBalanceCadence = "\n  import FungibleToken from 0xFT\n  import FlowToken from 0xFLOW\n\n  transaction(recepient: Address, amount: UFix64){\n    prepare(signer: AuthAccount){\n      let sender = signer.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault)\n        ?? panic(\"Could not borrow Provider reference to the Vault\")\n\n      let receiverAccount = getAccount(recepient)\n\n      let receiver = receiverAccount.getCapability(/public/flowTokenReceiver)\n        .borrow<&FlowToken.Vault{FungibleToken.Receiver}>()\n        ?? panic(\"Could not borrow Receiver reference to the Vault\")\n\n              let tempVault <- sender.withdraw(amount: amount)\n      receiver.deposit(from: <- tempVault)\n    }\n  }\n";
