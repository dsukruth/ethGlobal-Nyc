'use client'
'use strict';

var _tslib = require('../_virtual/_tslib.cjs');
var fcl = require('@onflow/fcl');
var FlowWalletConnector = require('./FlowWalletConnector.cjs');

class Dapper extends FlowWalletConnector.FlowWalletConnector {
    constructor() {
        super(...arguments);
        this.name = 'Dapper';
        this.overrideKey = 'dapper';
        this.canConnectViaCustodialService = true;
    }
    setupConfig() {
        const _super = Object.create(null, {
            setupConfig: { get: () => super.setupConfig }
        });
        return _tslib.__awaiter(this, void 0, void 0, function* () {
            yield _super.setupConfig.call(this);
            yield fcl.config()
                .put('challenge.scope', undefined)
                .put('discovery.wallet', this.network === 'testnet'
                ? 'https://staging.accounts.meetdapper.com/fcl/authn-restricted'
                : 'https://accounts.meetdapper.com/fcl/authn-restricted')
                .put('service.OpenID.scopes', undefined)
                .put('discovery.wallet.method', 'POP/RPC');
        });
    }
}

module.exports = Dapper;
