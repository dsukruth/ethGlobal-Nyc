'use client'
import { __awaiter } from '../_virtual/_tslib.js';
import { config } from '@onflow/fcl';
import { isMobile } from '@dynamic-labs/utils';
import { FlowWalletConnector } from './FlowWalletConnector.js';

class FlowWallet extends FlowWalletConnector {
    constructor() {
        super(...arguments);
        this.name = 'Flow Wallet';
        this.overrideKey = 'flowwalletflow';
    }
    setupConfig() {
        const _super = Object.create(null, {
            setupConfig: { get: () => super.setupConfig }
        });
        return __awaiter(this, void 0, void 0, function* () {
            yield _super.setupConfig.call(this);
            config()
                .put('challenge.scope', undefined)
                .put('discovery.wallet', 'chrome-extension://hpclkefagolihohboafpheddmmgdffjm/popup.html')
                .put('service.OpenID.scopes', undefined)
                .put('discovery.wallet.method', 'EXT/RPC');
        });
    }
    isInstalledOnBrowser() {
        var _a;
        if (typeof window === 'undefined') {
            return false;
        }
        return Boolean((_a = window.fcl_extensions) === null || _a === void 0 ? void 0 : _a.some((ext) => ext.id === 'hpclkefagolihohboafpheddmmgdffjm'));
    }
    signDelay() {
        return __awaiter(this, void 0, void 0, function* () {
            if (isMobile()) {
                return Promise.resolve();
            }
            return new Promise((resolve) => {
                setTimeout(() => {
                    resolve();
                }, 500);
            });
        });
    }
}

export { FlowWallet as default };
