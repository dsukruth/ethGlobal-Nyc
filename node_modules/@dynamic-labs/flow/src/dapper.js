'use client'
import { __awaiter } from '../_virtual/_tslib.js';
import { config } from '@onflow/fcl';
import { FlowWalletConnector } from './FlowWalletConnector.js';

class Dapper extends FlowWalletConnector {
    constructor() {
        super(...arguments);
        this.name = 'Dapper';
        this.overrideKey = 'dapper';
        this.canConnectViaCustodialService = true;
    }
    setupConfig() {
        const _super = Object.create(null, {
            setupConfig: { get: () => super.setupConfig }
        });
        return __awaiter(this, void 0, void 0, function* () {
            yield _super.setupConfig.call(this);
            yield config()
                .put('challenge.scope', undefined)
                .put('discovery.wallet', this.network === 'testnet'
                ? 'https://staging.accounts.meetdapper.com/fcl/authn-restricted'
                : 'https://accounts.meetdapper.com/fcl/authn-restricted')
                .put('service.OpenID.scopes', undefined)
                .put('discovery.wallet.method', 'POP/RPC');
        });
    }
}

export { Dapper as default };
