'use client'
import { retryableFn } from '@dynamic-labs/utils';
import { Injected } from './injected.js';

class Braavos extends Injected {
    constructor(opts) {
        super('Braavos', 'braavos', 'braavos', opts);
        this.overrideKey = 'braavos';
    }
    /**
     * Adds a timeout for getConnectedAccounts request to prevent
     * the SDK from becoming unresponsive when Braavos is locked and does not prompt
     * the user to unlock
     * If getConnectedAccounts() doesn't resolve within 3 seconds, the operation
     * will timeout and return an empty array.
     */
    getConnectedAccounts() {
        return retryableFn(() => super.getConnectedAccounts(), {
            fallbackValue: [],
            maxRetries: 0,
            retryStrategy: 'timeout-only',
            timeoutMs: 3000,
        });
    }
}

export { Braavos };
