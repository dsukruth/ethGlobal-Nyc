'use client'
import { __awaiter } from '../../../../_virtual/_tslib.js';
import { connect } from 'starknetkit';
import { WebWalletConnector, WEBWALLET_LOGOUT_EVENT } from 'starknetkit/webwallet';
import { logger } from '@dynamic-labs/wallet-connector-core';
import { ArgentBase } from '../base.js';

class WebWallet extends ArgentBase {
    constructor(opts) {
        super('Argent X - Web (Deprecated)', 'argentWebWallet', 'argentxweb', opts);
        this.overrideKey = 'argentxweb';
        this.canConnectViaCustodialService = true;
        this.disconnectHandler = () => { };
    }
    isInstalledOnBrowser() {
        return false;
    }
    prompt(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const { connectorData, wallet } = yield connect({
                connectors: [new WebWalletConnector({ url: 'https://web.argent.xyz' })],
                modalMode: options.silently ? 'neverAsk' : 'canAsk',
            });
            return {
                data: {
                    account: connectorData === null || connectorData === void 0 ? void 0 : connectorData.account,
                    chainId: connectorData === null || connectorData === void 0 ? void 0 : connectorData.chainId,
                },
                wallet: wallet !== null && wallet !== void 0 ? wallet : undefined,
            };
        });
    }
    setupEventListeners() {
        super.setupEventListeners();
        this.disconnectHandler = () => {
            logger.debug('[WebWallet] on logout');
            this.endSession();
            this.emit('disconnect');
        };
        document.addEventListener(WEBWALLET_LOGOUT_EVENT, this.disconnectHandler);
    }
    teardownEventListeners() {
        const _super = Object.create(null, {
            teardownEventListeners: { get: () => super.teardownEventListeners }
        });
        return __awaiter(this, void 0, void 0, function* () {
            _super.teardownEventListeners.call(this);
            if (this.disconnectHandler) {
                document.removeEventListener(WEBWALLET_LOGOUT_EVENT, this.disconnectHandler);
            }
        });
    }
}

export { WebWallet };
