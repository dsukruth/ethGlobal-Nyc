import { Transaction } from '@mysten/sui/transactions';
import { SignedTransaction } from '@mysten/wallet-standard';
import { WalletProps } from '@dynamic-labs/wallet-connector-core';
import { SuiWallet, SuiSendBalanceProps } from '@dynamic-labs/sui-core';
import { DynamicWaasSuiConnector } from '../connector/DynamicWaasSuiConnector';
export declare class WaasSuiWallet extends SuiWallet {
    constructor({ connector, ...props }: WalletProps<DynamicWaasSuiConnector>);
    /**
     * Sends the native balance of the wallet to the given address.
     * @param amount - The amount of balance
     * @param toAddress - The address to send the balance to.
     * @returns The transaction as base64 encoded bcs.
     */
    sendBalance({ amount, toAddress }: SuiSendBalanceProps): Promise<string>;
    /**
     * Signs a Sui [Transaction].
     * @param transaction - The [Transaction] to sign.
     * @returns The signature of the signed transaction.
     */
    signTransaction(transaction: Transaction): Promise<SignedTransaction>;
    getActiveNetwork(): Promise<string | undefined>;
}
