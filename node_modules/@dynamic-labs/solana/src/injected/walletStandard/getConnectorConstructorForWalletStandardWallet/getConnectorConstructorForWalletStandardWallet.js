'use client'
import { sanitizeName } from '@dynamic-labs/utils';
import { InjectedWalletBase } from '../../InjectedWalletBase/InjectedWalletBase.js';
import { createSolanaSignerFromWalletStandard } from '../createSolanaSignerFromWalletStandard/createSolanaSignerFromWalletStandard.js';

const getConnectorConstructorForWalletStandardWallet = (wallet, walletBookMetadata = {}) => {
    const sanitizedName = sanitizeName(wallet.name);
    return class extends InjectedWalletBase {
        constructor(props) {
            super(Object.assign(Object.assign({}, props), { metadata: Object.assign(Object.assign({}, walletBookMetadata), { groupKey: sanitizedName, icon: wallet.icon, id: sanitizedName, name: wallet.name }) }));
            this.name = wallet.name;
            this.overrideKey = `${sanitizedName}sol`;
            this._provider = createSolanaSignerFromWalletStandard({
                wallet,
                walletConnector: this,
            });
        }
        findProvider() {
            return this._provider;
        }
    };
};

export { getConnectorConstructorForWalletStandardWallet };
