import { EvmNetwork } from '@dynamic-labs/types';
type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
type PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;
type CustomProviderOptions = {
    /**
     * The URL of the RPC endpoint.
     */
    http: string;
    /**
     * The priority of this provider.
     */
    priority?: number;
    /**
     * The timeout in milliseconds for requests to this provider.
     */
    stallTimeout?: number;
    /**
     * The URL of the websocket endpoint.
     */
    webSocket?: string;
};
export type WagmiEvmNetworks = Omit<PartialBy<EvmNetwork, 'iconUrls' | 'networkId' | 'vanityName'>, 'privateCustomerRpcUrls'> & {
    privateCustomerRpcUrls: (string | CustomProviderOptions)[];
    contracts?: {
        [key: string]: any;
    };
};
export {};
