'use client'
import { __awaiter } from '../../_virtual/_tslib.js';
import { Wallet } from '@dynamic-labs/wallet-connector-core';

class AlgorandWallet extends Wallet {
    /**
     * Sends the native balance of the wallet to the given address.
     * @param amount - The amount of balance to send (in Algorand ALGO).
     * @param toAddress - The address to send the balance to.
     * @returns The signature of the sent transaction.
     */
    sendBalance(_a) {
        return __awaiter(this, arguments, void 0, function* ({ amount, toAddress, }) {
            throw new Error('Not implemented');
        });
    }
    getSigner() {
        return __awaiter(this, void 0, void 0, function* () {
            const signer = yield this._connector.getSigner();
            if (!signer) {
                throw new Error('unable to retrieve Algorand signer');
            }
            return {
                signData: (data) => __awaiter(this, void 0, void 0, function* () {
                    yield this.sync();
                    return signer.signData(data);
                }),
                signTransaction: (txs) => __awaiter(this, void 0, void 0, function* () {
                    yield this.sync();
                    return signer.signTransaction(txs);
                }),
            };
        });
    }
}

export { AlgorandWallet };
