'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../../_virtual/_tslib.cjs');
var web3_js = require('@solana/web3.js');
var SdkApi = require('./utils/SdkApi.cjs');

const serializeTransaction = (transaction) => {
    if (transaction instanceof web3_js.VersionedTransaction) {
        return Buffer.from(transaction.serialize()).toString('base64');
    }
    else {
        return Buffer.from(transaction.serialize({ verifySignatures: false })).toString('base64');
    }
};
const deserializeTransaction = (serializedTransaction) => {
    const transactionBuffer = Buffer.from(serializedTransaction, 'base64');
    return web3_js.VersionedTransaction.deserialize(transactionBuffer);
};
const optimizeSolanaTransaction = (environmentId, transaction, address) => _tslib.__awaiter(void 0, void 0, void 0, function* () {
    const serializedTransaction = serializeTransaction(transaction);
    const request = {
        environmentId,
        solanaTransactionOptimizationRequest: {
            address,
            transaction: serializedTransaction,
        },
    };
    const response = yield SdkApi.sdkApi().optimizeTransaction(request);
    const optimizedTransaction = deserializeTransaction(response.transaction);
    return optimizedTransaction;
});

exports.deserializeTransaction = deserializeTransaction;
exports.optimizeSolanaTransaction = optimizeSolanaTransaction;
exports.serializeTransaction = serializeTransaction;
