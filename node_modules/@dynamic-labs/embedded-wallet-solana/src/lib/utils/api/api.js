'use client'
import { __awaiter } from '../../../../_virtual/_tslib.js';
import { VersionedTransaction } from '@solana/web3.js';
import { sdkApi } from './utils/SdkApi.js';

const serializeTransaction = (transaction) => {
    if (transaction instanceof VersionedTransaction) {
        return Buffer.from(transaction.serialize()).toString('base64');
    }
    else {
        return Buffer.from(transaction.serialize({ verifySignatures: false })).toString('base64');
    }
};
const deserializeTransaction = (serializedTransaction) => {
    const transactionBuffer = Buffer.from(serializedTransaction, 'base64');
    return VersionedTransaction.deserialize(transactionBuffer);
};
const optimizeSolanaTransaction = (environmentId, transaction, address) => __awaiter(void 0, void 0, void 0, function* () {
    const serializedTransaction = serializeTransaction(transaction);
    const request = {
        environmentId,
        solanaTransactionOptimizationRequest: {
            address,
            transaction: serializedTransaction,
        },
    };
    const response = yield sdkApi().optimizeTransaction(request);
    const optimizedTransaction = deserializeTransaction(response.transaction);
    return optimizedTransaction;
});

export { deserializeTransaction, optimizeSolanaTransaction, serializeTransaction };
