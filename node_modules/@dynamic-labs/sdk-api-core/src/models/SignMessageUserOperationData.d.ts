/**
 * Dashboard API
 * Dashboard API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { SignMessageAuthorizationSignature } from './SignMessageAuthorizationSignature';
/**
 * The actual user operation data
 * @export
 * @interface SignMessageUserOperationData
 */
export interface SignMessageUserOperationData {
    /**
     *
     * @type {SignMessageAuthorizationSignature}
     * @memberof SignMessageUserOperationData
     */
    authorization?: SignMessageAuthorizationSignature;
    /**
     * The data to pass to the sender during the main execution call
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    callData?: string;
    /**
     * The amount of gas to allocate the main execution call
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    callGasLimit?: string;
    /**
     * Account factory address (optional, only for new accounts)
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    factory?: string;
    /**
     * Data for account factory (optional)
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    factoryData?: string;
    /**
     * Maximum fee per gas
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    maxFeePerGas?: string;
    /**
     * Maximum priority fee per gas
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    maxPriorityFeePerGas?: string;
    /**
     * Anti-replay parameter
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    nonce?: string;
    /**
     * Address of paymaster contract (optional)
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    paymaster?: string;
    /**
     * Data for paymaster (optional)
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    paymasterData?: string;
    /**
     * The amount of gas to allocate for the paymaster post-operation code (optional)
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    paymasterPostOpGasLimit?: string;
    /**
     * The amount of gas to allocate for the paymaster validation code (optional)
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    paymasterVerificationGasLimit?: string;
    /**
     * Extra gas to pay the Bundler
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    preVerificationGas?: string;
    /**
     * The account making the operation
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    sender?: string;
    /**
     * Data passed into the account to verify authorization
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    signature?: string;
    /**
     * The amount of gas to allocate for the verification step
     * @type {string}
     * @memberof SignMessageUserOperationData
     */
    verificationGasLimit?: string;
}
export declare function SignMessageUserOperationDataFromJSON(json: any): SignMessageUserOperationData;
export declare function SignMessageUserOperationDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignMessageUserOperationData;
export declare function SignMessageUserOperationDataToJSON(value?: SignMessageUserOperationData | null): any;
