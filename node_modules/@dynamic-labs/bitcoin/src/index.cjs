'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var assertPackageVersion = require('@dynamic-labs/assert-package-version');
var _package = require('../package.cjs');
var BitcoinWalletConnector = require('./connectors/BitcoinWalletConnector.cjs');
require('../_virtual/_tslib.cjs');
require('sats-connect');
require('bitcoinjs-lib');
require('@dynamic-labs/wallet-connector-core');
require('@dynamic-labs/utils');
var BitcoinSatsConnectConnector = require('./connectors/BitcoinSatsConnectConnector/BitcoinSatsConnectConnector.cjs');
var MagicEdenConnector = require('./connectors/MagicEdenConnector/MagicEdenConnector.cjs');
var PhantomConnector = require('./connectors/PhantomConnector/PhantomConnector.cjs');
var OkxConnector = require('./connectors/OkxConnector/OkxConnector.cjs');
var OneKeyConnector = require('./connectors/OneKeyConnector/OneKeyConnector.cjs');
var OylConnector = require('./connectors/OylConnector/OylConnector.cjs');
var UnisatConnector = require('./connectors/UnisatConnector/UnisatConnector.cjs');
var FallbackBitcoinConnector = require('./connectors/FallbackBitcoinConnector/FallbackBitcoinConnector.cjs');
var BinanceConnector = require('./connectors/BinanceConnector/BinanceConnector.cjs');
var BitgetConnector = require('./connectors/BitgetConnector/BitgetConnector.cjs');
var fetchBtcKitConnectors = require('./utils/fetchBtcKitConnectors/fetchBtcKitConnectors.cjs');
var fetchSatsConnectConnectors = require('./utils/fetchSatsConnectConnectors/fetchSatsConnectConnectors.cjs');
var hasSatsConnectFeature = require('./utils/hasSatsConnectFeature.cjs');
var getMempoolApiUrl = require('./utils/getMempoolApiUrl.cjs');
var createSignPsbtOptions = require('./utils/psbt/createSignPsbtOptions.cjs');
var satoshisToBtc = require('./utils/satoshisToBtc/satoshisToBtc.cjs');
var BitcoinWallet = require('./wallet/BitcoinWallet.cjs');
var isBitcoinWallet = require('./wallet/isBitcoinWallet/isBitcoinWallet.cjs');
var bitcoinProviderHelper = require('./bitcoinProviderHelper.cjs');
var _const = require('./const.cjs');

assertPackageVersion.assertPackageVersion('@dynamic-labs/bitcoin', _package.version);
const BitcoinWalletConnectors = (props) => [
    ...fetchSatsConnectConnectors.fetchSatsConnectConnectors(props),
    ...fetchBtcKitConnectors.fetchBtcKitConnectors(props),
    MagicEdenConnector.MagicEdenConnector,
    PhantomConnector.PhantomConnector,
    OkxConnector.OkxConnector,
    OneKeyConnector.OneKeyConnector,
    OylConnector.OylConnector,
    UnisatConnector.UnisatConnector,
    BitgetConnector.BitgetConnector,
    BinanceConnector.BinanceConnector,
    FallbackBitcoinConnector.FallbackBitcoinConnector,
];

exports.BitcoinWalletConnector = BitcoinWalletConnector.BitcoinWalletConnector;
exports.BitcoinSatsConnectConnector = BitcoinSatsConnectConnector.BitcoinSatsConnectConnector;
exports.UnisatConnector = UnisatConnector.UnisatConnector;
exports.fetchBtcKitConnectors = fetchBtcKitConnectors.fetchBtcKitConnectors;
exports.fetchSatsConnectConnectors = fetchSatsConnectConnectors.fetchSatsConnectConnectors;
exports.hasSatsConnectFeature = hasSatsConnectFeature.hasSatsConnectFeature;
exports.getMempoolApiUrl = getMempoolApiUrl.getMempoolApiUrl;
exports.createPsbtOptions = createSignPsbtOptions.createPsbtOptions;
exports.satoshisToBtc = satoshisToBtc.satoshisToBtc;
exports.BitcoinWallet = BitcoinWallet.BitcoinWallet;
exports.isBitcoinWallet = isBitcoinWallet.isBitcoinWallet;
exports.BitcoinProviderHelper = bitcoinProviderHelper.BitcoinProviderHelper;
exports.HTTP_STATUS_NOT_FOUND = _const.HTTP_STATUS_NOT_FOUND;
exports.HTTP_STATUS_TOO_MANY_REQUESTS = _const.HTTP_STATUS_TOO_MANY_REQUESTS;
exports.BitcoinWalletConnectors = BitcoinWalletConnectors;
