import { SignMultipleTransactionsPayload, SignTransactionResponse } from 'sats-connect';
import { BitcoinSignProtocol, BitcoinTransaction, SatsConnectSignTransactionInput } from '../../types';
import { BitcoinSatsConnectConnector } from '../BitcoinSatsConnectConnector';
import { BitcoinWalletConnectorOpts } from '../BitcoinWalletConnector';
export declare class MagicEdenConnector extends BitcoinSatsConnectConnector {
    name: string;
    overrideKey: string;
    isLegacy: boolean;
    constructor(opts: BitcoinWalletConnectorOpts);
    getAddress(): Promise<string | undefined>;
    signMessage(messageToSign: string, options: {
        address: string;
        protocol?: BitcoinSignProtocol;
    }): Promise<string | undefined>;
    sendBitcoin(transaction: BitcoinTransaction): Promise<string | undefined>;
    signTransaction(params: SatsConnectSignTransactionInput): Promise<SignTransactionResponse | undefined>;
    /**
     * Uses the custom Magic Eden signTransactions feature to sign multiple transactions
     */
    signTransactions(transactions: SignMultipleTransactionsPayload): Promise<SignTransactionResponse[] | undefined>;
}
