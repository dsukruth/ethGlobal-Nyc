import { ProjectSettingsGeneral } from '@dynamic-labs/sdk-api-core';
import { SettingsWithDefaults } from '../../state/dynamicContextProps';
type GetAndUse<N extends string, P extends keyof ProjectSettingsGeneral, S extends keyof SettingsWithDefaults> = {
    [K in N as `get${Capitalize<K>}`]: () => ProjectSettingsGeneral[P] | SettingsWithDefaults[S];
} & {
    [K in N as `use${Capitalize<K>}`]: () => ProjectSettingsGeneral[P] | SettingsWithDefaults[S];
};
/**
 * Many properties are set both under projectSettings.general and dynamicSettings.
 * This is a helper function to get the value from either of them.
 */
export declare const makeGetAndUse: <N extends string, P extends keyof ProjectSettingsGeneral, S extends "shadowDOMEnabled" | "bridgeChains" | "accessDeniedButton" | "accessDeniedMessagePrimary" | "accessDeniedMessageSecondary" | "apiBaseUrl" | "appLogoUrl" | "appName" | "coinbaseWalletPreference" | "cssOverrides" | "customPrivacyPolicy" | "defaultPhoneInputIso2" | "detectNewWalletsForLinking" | "customTermsOfServices" | "debugError" | "deepLinkPreference" | "defaultNumberOfWalletsToShow" | "displaySiweStatement" | "enableConnectOnlyFallback" | "enableVisitTrackingOnConnectOnly" | "environmentId" | "events" | "flowNetwork" | "handlers" | "initialAuthenticationMode" | "localStorageSuffix" | "logLevel" | "mobileExperience" | "networkValidationMode" | "newToWeb3WalletChainMap" | "notInTheListImageUrl" | "onboardingImageUrl" | "overrides" | "social" | "policiesConsentInnerComponent" | "privacyPolicyUrl" | "recommendedWallets" | "redirectUrl" | "siweStatement" | "showLockedWalletView" | "socialMediaIconUrl" | "socialMediaLinkText" | "socialMediaUrl" | "socialProvidersFilter" | "suppressEndUserConsoleWarning" | "termsOfServiceUrl" | "walletConnectors" | "walletConnectorExtensions" | "walletConnectPreferredChains" | "walletsFilter" | "tokensFilter" | "transactionConfirmation" | "useMetamaskSdk">(name: N, projectSettingName: P, dynamicSettingName: S) => GetAndUse<N, P, S>;
export declare const getAppLogoUrl: () => string | null | undefined, useAppLogoUrl: () => string | null | undefined;
export declare const getAppName: () => string | undefined, useAppName: () => string | undefined;
export declare const getNotInTheListImageUrl: () => string | null | undefined, useNotInTheListImageUrl: () => string | null | undefined;
export declare const getOnboardingImageUrl: () => string | null | undefined, useOnboardingImageUrl: () => string | null | undefined;
export declare const getSocialMediaIconUrl: () => {
    [key: string]: string;
} | Record<string, string> | Record<import("../../../utils/functions/getSocialNetworkIcon").SocialNetworkIconType, string> | undefined, useSocialMediaIconUrl: () => {
    [key: string]: string;
} | Record<string, string> | Record<import("../../../utils/functions/getSocialNetworkIcon").SocialNetworkIconType, string> | undefined;
export {};
