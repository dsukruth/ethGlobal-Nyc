'use client'
import { jsx } from 'react/jsx-runtime';
import { useEffect } from 'react';
import '@dynamic-labs/utils';
import '../../../components/Accordion/components/AccordionItem/AccordionItem.js';
import 'react-i18next';
import '@dynamic-labs/iconic';
import '../../../context/ViewContext/ViewContext.js';
import '../../../../../_virtual/_tslib.js';
import '@dynamic-labs/sdk-api-core';
import '../../../shared/logger.js';
import '@dynamic-labs/wallet-connector-core';
import '@dynamic-labs/wallet-book';
import '../../../utils/constants/colors.js';
import '../../../utils/constants/values.js';
import '../../../shared/consts/index.js';
import '../../../components/Alert/Alert.js';
import '../../../events/dynamicEvents.js';
import '../../../context/DynamicContext/DynamicContext.js';
import '../../../store/state/loadingAndLifecycle/loadingAndLifecycle.js';
import '../../../store/state/authMode/authMode.js';
import { useInternalDynamicContext } from '../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext/useInternalDynamicContext.js';
import '../../../context/CaptchaContext/CaptchaContext.js';
import '../../../context/ErrorContext/ErrorContext.js';
import '@dynamic-labs/multi-wallet';
import 'react-international-phone';
import '../../../store/state/nonce/nonce.js';
import '@dynamic-labs-sdk/client/core';
import '../../../client/client.js';
import '@dynamic-labs-sdk/client';
import '../../../store/state/projectSettings/projectSettings.js';
import '../../../config/ApiEndpoint.js';
import '../../../locale/locale.js';
import '../../../store/state/dynamicContextProps/dynamicContextProps.js';
import '../../../store/state/primaryWalletId/primaryWalletId.js';
import '../../../store/state/connectedWalletsInfo/connectedWalletsInfo.js';
import '../../../context/AccessDeniedContext/AccessDeniedContext.js';
import '../../../context/AccountExistsContext/AccountExistsContext.js';
import '../../../context/UserWalletsContext/UserWalletsContext.js';
import '../../../context/VerificationContext/VerificationContext.js';
import 'react-dom';
import '../../../utils/functions/compareChains/compareChains.js';
import '../../../views/Passkey/utils/findPrimaryEmbeddedChain/findPrimaryEmbeddedChain.js';
import '../../../context/ThemeContext/ThemeContext.js';
import { useIsLoggedIn } from '../../../utils/hooks/useIsLoggedIn/useIsLoggedIn.js';
import '../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';
import 'bs58';
import '@dynamic-labs/types';
import '../../../context/SocialRedirectContext/SocialRedirectContext.js';
import '../../../context/LoadingContext/LoadingContext.js';
import '../../../context/WalletContext/WalletContext.js';
import '../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';
import 'yup';
import '../../../context/MockContext/MockContext.js';
import '../../../views/CollectUserDataView/useFields.js';
import '../../../context/FieldsStateContext/FieldsStateContext.js';
import '../../../context/UserFieldEditorContext/UserFieldEditorContext.js';
import '@dynamic-labs/rpc-providers';
import '../../../store/state/walletOptions/walletOptions.js';
import { DynamicAuthLayout } from '../../../layout/DynamicAuthLayout/DynamicAuthLayout.js';
import { ShadowDOM } from '../../../components/ShadowDOM/ShadowDOM.js';
import '../../../components/Transition/ZoomTransition/ZoomTransition.js';
import '../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';
import '../../../components/Transition/OpacityTransition/OpacityTransition.js';
import '../../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.js';
import '../../DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';
import { ModalCard } from '../../../components/ModalCard/ModalCard.js';
import 'react-focus-lock';
import '../../DynamicWidget/context/DynamicWidgetContext.js';
import '../../../components/IconButton/IconButton.js';
import '../../../components/MenuList/Dropdown/Dropdown.js';
import 'formik';
import '../../../utils/hooks/useSubdomainCheck/useSubdomainCheck.js';
import '../../../store/state/sendBalances.js';
import '../../../components/Input/Input.js';
import '../../../components/OverlayCard/OverlayCard.js';
import '../../../views/TransactionConfirmationView/TransactionConfirmationView.js';
import '../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';
import '../../../context/PasskeyContext/PasskeyContext.js';
import '../../DynamicWidget/components/PasskeyCard/PasskeyCard.js';
import '../../../context/OnrampContext/OnrampContext.js';
import '../../../../index.js';
import '../../../context/WalletGroupContext/WalletGroupContext.js';
import '../../DynamicWidget/helpers/convertExchangeKeyAndProviderEnum.js';
import 'qrcode';
import '../../DynamicWidget/views/ReceiveWalletFunds/ReceiveWalletFunds.js';
import { FooterAnimationContextProvider } from '../../../context/FooterAnimationContext/index.js';
import '../../../context/IpConfigurationContext/IpConfigurationContext.js';
import '../../../context/ConnectWithOtpContext/ConnectWithOtpContext.js';
import '../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';
import '@hcaptcha/react-hcaptcha';
import '../../../views/ExchangeWhitelistWarning/ExchangeWhitelistWarning.js';
import '../../../context/ErrorContext/hooks/useErrorText/useErrorText.js';
import '../../../views/MfaChooseDeviceView/getMfaOptions/getMfaOptions.js';
import '../../../store/state/connectorsInitializing/connectorsInitializing.js';
import '../../../store/state/tokenBalances.js';
import '../../../store/state/multichainBalances.js';
import '../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';
import '../../../components/InlineWidget/InlineWidget.js';
import '../../../components/IsBrowser/IsBrowser.js';
import '../../../components/Popper/Popper/Popper.js';
import { PopperProvider } from '../../../components/Popper/PopperContext/PopperContext.js';
import { RenderView } from '../../../components/RenderView/RenderView.js';
import { SandboxIndicatorWrapper } from '../../../components/SandboxIndicatorWrapper/SandboxIndicatorWrapper.js';

const DynamicEmbeddedAuthFlow = ({ background = 'none', className, style, }) => {
    const hide = useIsLoggedIn();
    const { projectSettings, setIsRenderingEmbeddedAuthFlow } = useInternalDynamicContext();
    // Keep isRenderingEmbeddedAuthFlow up to date
    useEffect(() => {
        setIsRenderingEmbeddedAuthFlow(!hide);
        return () => {
            setIsRenderingEmbeddedAuthFlow(false);
        };
    }, [setIsRenderingEmbeddedAuthFlow, hide]);
    if (hide)
        return null;
    const content = (jsx(DynamicAuthLayout, { className: className, style: style, projectSettings: projectSettings, children: jsx(RenderView, {}) }));
    return (jsx(ShadowDOM, { className: 'embedded-widget', children: jsx(PopperProvider, { children: jsx(FooterAnimationContextProvider, { children: jsx(SandboxIndicatorWrapper, { children: background === 'none' ? (content) : (jsx(ModalCard, { border: background === 'with-border', sharpBottomRadiusOnMobile: false, children: content })) }) }) }) }));
};

export { DynamicEmbeddedAuthFlow };
