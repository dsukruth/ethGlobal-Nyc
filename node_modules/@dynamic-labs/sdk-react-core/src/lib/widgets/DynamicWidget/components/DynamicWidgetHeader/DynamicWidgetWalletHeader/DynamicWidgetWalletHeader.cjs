'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var reactI18next = require('react-i18next');
var walletConnectorCore = require('@dynamic-labs/wallet-connector-core');
require('@dynamic-labs/utils');
require('../../../../../components/Accordion/components/AccordionItem/AccordionItem.cjs');
var add = require('../../../../../shared/assets/add.cjs');
var link = require('../../../../../shared/assets/link.cjs');
var send = require('../../../../../shared/assets/send.cjs');
require('@dynamic-labs/iconic');
require('../../../../../context/ViewContext/ViewContext.cjs');
require('../../../../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/sdk-api-core');
var logger = require('../../../../../shared/logger.cjs');
require('@dynamic-labs/wallet-book');
require('../../../../../utils/constants/colors.cjs');
require('../../../../../utils/constants/values.cjs');
require('../../../../../shared/consts/index.cjs');
require('../../../../../components/Alert/Alert.cjs');
require('../../../../../events/dynamicEvents.cjs');
require('../../../../../context/DynamicContext/DynamicContext.cjs');
require('../../../../../store/state/loadingAndLifecycle/loadingAndLifecycle.cjs');
require('../../../../../store/state/authMode/authMode.cjs');
var useInternalDynamicContext = require('../../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext/useInternalDynamicContext.cjs');
require('../../../../../context/CaptchaContext/CaptchaContext.cjs');
require('../../../../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
var getUserIdentifier = require('../../../../../utils/functions/getUserIdentifier/getUserIdentifier.cjs');
require('../../../../../store/state/nonce/nonce.cjs');
require('@dynamic-labs-sdk/client/core');
require('../../../../../client/client.cjs');
require('@dynamic-labs-sdk/client');
require('../../../../../store/state/projectSettings/projectSettings.cjs');
require('../../../../../config/ApiEndpoint.cjs');
require('../../../../../locale/locale.cjs');
require('../../../../../store/state/dynamicContextProps/dynamicContextProps.cjs');
require('../../../../../store/state/primaryWalletId/primaryWalletId.cjs');
require('../../../../../store/state/connectedWalletsInfo/connectedWalletsInfo.cjs');
require('../../../../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../../../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../../../../context/UserWalletsContext/UserWalletsContext.cjs');
require('../../../../../context/VerificationContext/VerificationContext.cjs');
require('react-dom');
require('../../../../../utils/functions/compareChains/compareChains.cjs');
require('../../../../../views/Passkey/utils/findPrimaryEmbeddedChain/findPrimaryEmbeddedChain.cjs');
require('../../../../../context/ThemeContext/ThemeContext.cjs');
require('../../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.cjs');
require('bs58');
require('@dynamic-labs/types');
require('../../../../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../../../../context/LoadingContext/LoadingContext.cjs');
require('../../../../../context/WalletContext/WalletContext.cjs');
require('../../../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.cjs');
require('yup');
require('../../../../../context/MockContext/MockContext.cjs');
require('../../../../../views/CollectUserDataView/useFields.cjs');
require('../../../../../context/FieldsStateContext/FieldsStateContext.cjs');
require('../../../../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../../../../store/state/walletOptions/walletOptions.cjs');
var Typography = require('../../../../../components/Typography/Typography.cjs');
require('../../../../../context/FooterAnimationContext/index.cjs');
require('../../../../../components/ShadowDOM/ShadowDOM.cjs');
require('../../../../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../../../../components/Transition/OpacityTransition/OpacityTransition.cjs');
require('../../../../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.cjs');
require('../../../../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../DynamicWidgetHeader.cjs');
require('react-focus-lock');
var Icon = require('../../../../../components/Icon/Icon.cjs');
var DynamicWidgetContext = require('../../../context/DynamicWidgetContext.cjs');
require('../../../../../components/IconButton/IconButton.cjs');
require('../../../../../components/MenuList/Dropdown/Dropdown.cjs');
var TypographyButton = require('../../../../../components/TypographyButton/TypographyButton.cjs');
require('formik');
require('../../../../../utils/hooks/useSubdomainCheck/useSubdomainCheck.cjs');
require('../../../../../store/state/sendBalances.cjs');
require('../../../../../components/Input/Input.cjs');
require('../../../../../components/OverlayCard/OverlayCard.cjs');
require('../../../../../views/TransactionConfirmationView/TransactionConfirmationView.cjs');
require('../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../../../../context/PasskeyContext/PasskeyContext.cjs');
require('../../PasskeyCard/PasskeyCard.cjs');
require('../../../../../context/OnrampContext/OnrampContext.cjs');
require('../../../../../../index.cjs');
require('../../../helpers/convertExchangeKeyAndProviderEnum.cjs');
require('qrcode');
require('../../../views/ReceiveWalletFunds/ReceiveWalletFunds.cjs');
require('../../../../../context/IpConfigurationContext/IpConfigurationContext.cjs');
require('../../../../../context/ConnectWithOtpContext/ConnectWithOtpContext.cjs');
require('../../../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('@hcaptcha/react-hcaptcha');
var UserAvatar = require('../../../../../components/UserAvatar/UserAvatar.cjs');
require('../../../../../views/ExchangeWhitelistWarning/ExchangeWhitelistWarning.cjs');
require('../../../../../context/ErrorContext/hooks/useErrorText/useErrorText.cjs');
require('../../../../../views/MfaChooseDeviceView/getMfaOptions/getMfaOptions.cjs');
require('../../../../../store/state/connectorsInitializing/connectorsInitializing.cjs');
require('../../../../../store/state/tokenBalances.cjs');
require('../../../../../store/state/multichainBalances.cjs');
require('../../../../../shared/utils/functions/getInitialUrl/getInitialUrl.cjs');
require('../../../../../components/InlineWidget/InlineWidget.cjs');
require('../../../../../components/IsBrowser/IsBrowser.cjs');
require('../../../../../components/Popper/Popper/Popper.cjs');
require('../../../../../components/Popper/PopperContext/PopperContext.cjs');
var SecureEmbeddedWalletCard = require('../../../../../components/SecureEmbeddedWalletCard/SecureEmbeddedWalletCard.cjs');
var SendBalanceContext = require('../../../../../context/SendBalanceContext/SendBalanceContext.cjs');
var ActiveWalletInformation = require('../../ActiveWalletInformation/ActiveWalletInformation.cjs');
var useIsLoadingEmbeddedWallet = require('../../../../../utils/hooks/useIsLoadingEmbeddedWallet/useIsLoadingEmbeddedWallet.cjs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const LinkButton = React__default["default"].memo(({ connector }) => {
    const { setDynamicWidgetView } = DynamicWidgetContext.useWidgetContext();
    const handleOnClickLink = () => {
        setDynamicWidgetView('global-wallet');
    };
    if (!connector.globalWallet)
        return null;
    return (jsxRuntime.jsx(TypographyButton.TypographyButton, { expanded: true, dataTestId: 'link-button', buttonPadding: 'small', buttonVariant: 'primary', onClick: handleOnClickLink, startSlot: jsxRuntime.jsx(Icon.Icon, { size: 'small', color: 'text-secondary', children: jsxRuntime.jsx(link.ReactComponent, {}) }), children: "Connect" }));
});
LinkButton.displayName = 'LinkButton';
const DynamicWidgetWalletHeader = ({ variant, }) => {
    const { primaryWallet, user } = useInternalDynamicContext.useInternalDynamicContext();
    const { open: openSendBalanceModal } = SendBalanceContext.useSendBalance();
    const { setDynamicWidgetView, setIsOpen } = DynamicWidgetContext.useWidgetContext();
    const { isLoadingEmbeddedWallet } = useIsLoadingEmbeddedWallet.useIsLoadingEmbeddedWallet();
    const { t } = reactI18next.useTranslation();
    const isSendBalanceEnabled = React.useMemo(() => {
        const connector = primaryWallet === null || primaryWallet === void 0 ? void 0 : primaryWallet.connector;
        if (!connector)
            return false;
        return walletConnectorCore.isSendBalanceWalletConnector(connector);
    }, [primaryWallet === null || primaryWallet === void 0 ? void 0 : primaryWallet.connector]);
    const handleOnClickSend = () => {
        if (variant === 'dropdown') {
            setIsOpen(false);
            openSendBalanceModal().catch((err) => logger.logger.error(err));
        }
        else {
            setDynamicWidgetView('send-balance');
        }
    };
    const renderWalletHeader = () => {
        if (primaryWallet || isLoadingEmbeddedWallet) {
            return jsxRuntime.jsx(ActiveWalletInformation.ActiveWalletInformation, { isLoading: isLoadingEmbeddedWallet });
        }
        else {
            return (jsxRuntime.jsx("div", { className: 'dynamic-widget-wallet-header__icon-container', children: jsxRuntime.jsx(UserAvatar.UserAvatar, { user: user }) }));
        }
    };
    return (jsxRuntime.jsxs("div", { className: 'dynamic-widget-wallet-header', "data-testid": 'dynamic-widget-wallet-header', children: [renderWalletHeader(), primaryWallet ? (jsxRuntime.jsxs("div", { "data-testid": 'primaryWalletStatus', className: 'dynamic-widget-wallet-header__wallet-info', children: [jsxRuntime.jsx(SecureEmbeddedWalletCard.SecureEmbeddedWalletCard, { className: 'dynamic-widget-wallet-header__wallet-info__secure-wallet' }), jsxRuntime.jsxs("div", { className: 'dynamic-widget-wallet-header__wallet-actions', children: [jsxRuntime.jsx(TypographyButton.TypographyButton, { expanded: true, dataTestId: 'buy-crypto-button', buttonPadding: 'small', buttonVariant: 'primary', onClick: () => setDynamicWidgetView('choose-wallet-funding-method'), startSlot: jsxRuntime.jsx(Icon.Icon, { size: 'small', color: 'text-secondary', children: jsxRuntime.jsx(add.ReactComponent, {}) }), copykey: 'dyn_widget_header.buttons.deposit_funds', children: t('dyn_widget_header.buttons.deposit_funds') }), isSendBalanceEnabled && (jsxRuntime.jsx(TypographyButton.TypographyButton, { expanded: true, dataTestId: 'send-balance-button', buttonPadding: 'small', buttonVariant: 'primary', onClick: handleOnClickSend, startSlot: jsxRuntime.jsx(Icon.Icon, { size: 'small', color: 'text-secondary', children: jsxRuntime.jsx(send.ReactComponent, {}) }), copykey: 'dyn_widget_header.buttons.send_funds', children: t('dyn_widget_header.buttons.send_funds') })), jsxRuntime.jsx(LinkButton, { connector: primaryWallet.connector })] })] })) : (jsxRuntime.jsx(Typography.Typography, { className: 'dynamic-widget-wallet-header__email', variant: 'body_normal', weight: 'regular', children: !isLoadingEmbeddedWallet && getUserIdentifier.getUserIdentifier(user) }))] }));
};
React__default["default"].memo(DynamicWidgetWalletHeader);

exports.DynamicWidgetWalletHeader = DynamicWidgetWalletHeader;
