'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var classNames = require('../../../../../../utils/functions/classNames/classNames.cjs');
require('../../../../../../components/Accordion/components/AccordionItem/AccordionItem.cjs');
require('react-i18next');
require('react');
require('@dynamic-labs/iconic');
require('../../../../../../context/ViewContext/ViewContext.cjs');
require('../../../../../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/sdk-api-core');
require('../../../../../../shared/logger.cjs');
require('@dynamic-labs/wallet-connector-core');
require('@dynamic-labs/wallet-book');
require('@dynamic-labs/utils');
require('../../../../../../utils/constants/colors.cjs');
require('../../../../../../utils/constants/values.cjs');
require('../../../../../../shared/consts/index.cjs');
require('../../../../../../components/Alert/Alert.cjs');
require('../../../../../../events/dynamicEvents.cjs');
require('../../../../../../context/DynamicContext/DynamicContext.cjs');
require('../../../../../../store/state/loadingAndLifecycle/loadingAndLifecycle.cjs');
require('../../../../../../store/state/authMode/authMode.cjs');
require('../../../../../../context/CaptchaContext/CaptchaContext.cjs');
require('../../../../../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
require('../../../../../../store/state/nonce/nonce.cjs');
require('@dynamic-labs-sdk/client/core');
require('../../../../../../client/client.cjs');
require('@dynamic-labs-sdk/client');
require('../../../../../../store/state/projectSettings/projectSettings.cjs');
require('../../../../../../config/ApiEndpoint.cjs');
require('../../../../../../locale/locale.cjs');
require('../../../../../../store/state/dynamicContextProps/dynamicContextProps.cjs');
require('../../../../../../store/state/primaryWalletId/primaryWalletId.cjs');
require('../../../../../../store/state/connectedWalletsInfo/connectedWalletsInfo.cjs');
require('../../../../../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../../../../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../../../../../context/UserWalletsContext/UserWalletsContext.cjs');
require('../../../../../../context/VerificationContext/VerificationContext.cjs');
require('react-dom');
require('../../../../../../utils/functions/compareChains/compareChains.cjs');
require('../../../../../../views/Passkey/utils/findPrimaryEmbeddedChain/findPrimaryEmbeddedChain.cjs');
require('../../../../../../context/ThemeContext/ThemeContext.cjs');
require('../../../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.cjs');
require('bs58');
require('@dynamic-labs/types');
require('../../../../../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../../../../../context/LoadingContext/LoadingContext.cjs');
require('../../../../../../context/WalletContext/WalletContext.cjs');
require('../../../../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.cjs');
require('yup');
require('../../../../../../context/MockContext/MockContext.cjs');
require('../../../../../../views/CollectUserDataView/useFields.cjs');
require('../../../../../../context/FieldsStateContext/FieldsStateContext.cjs');
require('../../../../../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../../../../../store/state/walletOptions/walletOptions.cjs');
var Typography = require('../../../../../../components/Typography/Typography.cjs');
require('../../../../../../context/FooterAnimationContext/index.cjs');
require('../../../../../../components/ShadowDOM/ShadowDOM.cjs');
require('../../../../../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../../../../../components/Transition/OpacityTransition/OpacityTransition.cjs');
require('../../../../../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.cjs');
require('../../../../../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../../../components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('react-focus-lock');
require('../../../../context/DynamicWidgetContext.cjs');
require('../../../../../../components/IconButton/IconButton.cjs');
require('../../../../../../components/MenuList/Dropdown/Dropdown.cjs');
var Image = require('../../../../../../components/Image/Image.cjs');
require('formik');
require('../../../../../../utils/hooks/useSubdomainCheck/useSubdomainCheck.cjs');
require('../../../../../../store/state/sendBalances.cjs');
require('../../../../../../components/Input/Input.cjs');
require('../../../../../../components/OverlayCard/OverlayCard.cjs');
require('../../../../../../views/TransactionConfirmationView/TransactionConfirmationView.cjs');
require('../../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../../../../../context/PasskeyContext/PasskeyContext.cjs');
require('../../../../components/PasskeyCard/PasskeyCard.cjs');
require('../../../../../../context/OnrampContext/OnrampContext.cjs');
require('../../../../../../../index.cjs');
require('../../../../helpers/convertExchangeKeyAndProviderEnum.cjs');
require('qrcode');
require('../../ReceiveWalletFunds.cjs');
require('../../../../../../context/IpConfigurationContext/IpConfigurationContext.cjs');
require('../../../../../../context/ConnectWithOtpContext/ConnectWithOtpContext.cjs');
require('../../../../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../../../../../views/ExchangeWhitelistWarning/ExchangeWhitelistWarning.cjs');
require('../../../../../../context/ErrorContext/hooks/useErrorText/useErrorText.cjs');
require('../../../../../../views/MfaChooseDeviceView/getMfaOptions/getMfaOptions.cjs');
require('../../../../../../store/state/connectorsInitializing/connectorsInitializing.cjs');
require('../../../../../../store/state/tokenBalances.cjs');
require('../../../../../../store/state/multichainBalances.cjs');
require('../../../../../../shared/utils/functions/getInitialUrl/getInitialUrl.cjs');
require('../../../../../../components/InlineWidget/InlineWidget.cjs');
require('../../../../../../components/IsBrowser/IsBrowser.cjs');
require('../../../../../../components/Popper/Popper/Popper.cjs');
require('../../../../../../components/Popper/PopperContext/PopperContext.cjs');
var calculateFiatBalance = require('../../utils/calculateFiatBalance/calculateFiatBalance.cjs');
var formatValue = require('../../utils/formatValue/formatValue.cjs');
var isFiatToken = require('../../utils/isFiatToken/isFiatToken.cjs');

const TokenOption = ({ token, isSelected, onSelect, showTokenAsPrimary, exchangeRates, }) => {
    const fiatBalance = formatValue.formatValue({
        maxDecimals: 2,
        symbol: 'USD',
        value: calculateFiatBalance.calculateFiatBalance(token, exchangeRates),
        withFixedZeros: true,
    });
    const tokenBalance = formatValue.formatValue({
        maxDecimals: isFiatToken.isFiatOrStablecoin(token.symbol) ? 2 : 6,
        symbol: token.symbol,
        value: token.balance,
        withFixedZeros: isFiatToken.isFiatOrStablecoin(token.symbol),
    });
    const [primaryBalance, secondaryBalance] = showTokenAsPrimary
        ? [tokenBalance, fiatBalance]
        : [fiatBalance, tokenBalance];
    return (jsxRuntime.jsxs("div", { className: classNames.classNames('token-option', {
            'token-option--selected': isSelected,
        }), onClick: onSelect, "data-testid": `token-option-${token.symbol}`, children: [token.logoURI ? (jsxRuntime.jsx(Image.Image, { src: token.logoURI, alt: token.symbol, className: 'token-option__icon', dataTestId: 'token-option-icon' })) : (jsxRuntime.jsx("div", { className: 'token-option__icon--skeleton', "data-testid": 'token-option__icon--skeleton' })), jsxRuntime.jsx(Typography.Typography, { variant: 'body_normal', className: 'token-option__name', children: token.name }), jsxRuntime.jsxs("div", { className: 'token-option__balance-container', children: [jsxRuntime.jsx(Typography.Typography, { variant: 'body_small', weight: 'medium', "data-testid": 'token-option__primary-balance', children: primaryBalance }), jsxRuntime.jsx(Typography.Typography, { weight: 'medium', variant: 'body_small', color: 'secondary', "data-testid": 'token-option__secondary-balance', children: secondaryBalance })] })] }));
};

exports.TokenOption = TokenOption;
