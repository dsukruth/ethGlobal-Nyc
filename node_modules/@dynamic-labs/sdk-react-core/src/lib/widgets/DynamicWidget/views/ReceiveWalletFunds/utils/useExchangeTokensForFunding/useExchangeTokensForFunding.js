'use client'
import { useMemo } from 'react';
import '../../../../../../context/DynamicContext/DynamicContext.js';
import '../../../../../../store/state/loadingAndLifecycle/loadingAndLifecycle.js';
import '@dynamic-labs/sdk-api-core';
import '../../../../../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import 'react/jsx-runtime';
import '../../../../../../context/ViewContext/ViewContext.js';
import '@dynamic-labs/wallet-book';
import '@dynamic-labs/utils';
import '../../../../../../utils/constants/colors.js';
import '../../../../../../utils/constants/values.js';
import '../../../../../../shared/consts/index.js';
import '../../../../../../events/dynamicEvents.js';
import '../../../../../../../../_virtual/_tslib.js';
import '../../../../../../context/CaptchaContext/CaptchaContext.js';
import '../../../../../../context/ErrorContext/ErrorContext.js';
import '@dynamic-labs/multi-wallet';
import 'react-international-phone';
import '../../../../../../store/state/nonce/nonce.js';
import '@dynamic-labs-sdk/client/core';
import '../../../../../../client/client.js';
import '@dynamic-labs-sdk/client';
import '../../../../../../store/state/projectSettings/projectSettings.js';
import '../../../../../../config/ApiEndpoint.js';
import '../../../../../../locale/locale.js';
import '../../../../../../store/state/dynamicContextProps/dynamicContextProps.js';
import '../../../../../../store/state/primaryWalletId/primaryWalletId.js';
import '../../../../../../store/state/connectedWalletsInfo/connectedWalletsInfo.js';
import '../../../../../../context/AccessDeniedContext/AccessDeniedContext.js';
import '../../../../../../context/AccountExistsContext/AccountExistsContext.js';
import '../../../../../../context/UserWalletsContext/UserWalletsContext.js';
import '../../../../../../store/state/authMode/authMode.js';
import '../../../../../../context/VerificationContext/VerificationContext.js';
import 'react-dom';
import '../../../../../../utils/functions/compareChains/compareChains.js';
import '../../../../../../views/Passkey/utils/findPrimaryEmbeddedChain/findPrimaryEmbeddedChain.js';
import '../../../../../../context/ThemeContext/ThemeContext.js';
import '../../../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';
import 'bs58';
import '@dynamic-labs/types';
import '../../../../../../context/SocialRedirectContext/SocialRedirectContext.js';
import '../../../../../../context/LoadingContext/LoadingContext.js';
import '../../../../../../context/WalletContext/WalletContext.js';
import '../../../../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';
import 'yup';
import '../../../../../../context/MockContext/MockContext.js';
import '../../../../../../views/CollectUserDataView/useFields.js';
import '../../../../../../context/FieldsStateContext/FieldsStateContext.js';
import '../../../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';
import '@dynamic-labs/rpc-providers';
import '../../../../../../store/state/walletOptions/walletOptions.js';
import 'react-i18next';
import '../../../../../../components/Accordion/components/AccordionItem/AccordionItem.js';
import '../../../../../../components/Alert/Alert.js';
import '../../../../../../components/ShadowDOM/ShadowDOM.js';
import '../../../../../../components/IconButton/IconButton.js';
import '../../../../../../components/InlineWidget/InlineWidget.js';
import '../../../../../../components/Input/Input.js';
import '../../../../../../components/IsBrowser/IsBrowser.js';
import '../../../../../../components/MenuList/Dropdown/Dropdown.js';
import '../../../../../../components/OverlayCard/OverlayCard.js';
import '../../../../../../components/Transition/ZoomTransition/ZoomTransition.js';
import '../../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';
import '../../../../../../components/Transition/OpacityTransition/OpacityTransition.js';
import '../../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';
import '../../../../../../components/Popper/Popper/Popper.js';
import '../../../../../../components/Popper/PopperContext/PopperContext.js';
import 'react-focus-lock';
import 'qrcode';
import 'formik';
import '../../../../../../utils/hooks/useSubdomainCheck/useSubdomainCheck.js';
import '../../../../../../context/WalletGroupContext/WalletGroupContext.js';
import '../../../../../../context/IpConfigurationContext/IpConfigurationContext.js';
import '../../../../../../context/ConnectWithOtpContext/ConnectWithOtpContext.js';
import '../../../../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';
import '@hcaptcha/react-hcaptcha';
import '../../../../context/DynamicWidgetContext.js';
import '../../../../helpers/convertExchangeKeyAndProviderEnum.js';
import '../../../../../../views/ExchangeWhitelistWarning/ExchangeWhitelistWarning.js';
import '../../../../../../context/ErrorContext/hooks/useErrorText/useErrorText.js';
import '../../../../../../context/FooterAnimationContext/index.js';
import '../../../../../../views/MfaChooseDeviceView/getMfaOptions/getMfaOptions.js';
import '../../../../../../context/PasskeyContext/PasskeyContext.js';
import '../../../../../../context/OnrampContext/OnrampContext.js';
import '../../../../../../store/state/sendBalances.js';
import '../../../../../../store/state/connectorsInitializing/connectorsInitializing.js';
import '../../../../../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.js';
import '../../../../components/DynamicWidgetHeader/DynamicWidgetHeader.js';
import '../../../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';
import '../../../../components/PasskeyCard/PasskeyCard.js';
import '../../../../../../../index.js';
import '../../ReceiveWalletFunds.js';
import '../../../../../../store/state/tokenBalances.js';
import '../../../../../../store/state/multichainBalances.js';
import '../../../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';
import { useInternalDynamicContext } from '../../../../../../context/DynamicContext/useDynamicContext/useInternalDynamicContext/useInternalDynamicContext.js';
import { useExchangeRatesForFunding } from '../useExchangeRatesForFunding/useExchangeRatesForFunding.js';

const useExchangeTokensForFunding = ({ accounts, }) => {
    var _a;
    const { primaryWallet, network } = useInternalDynamicContext();
    const enabledNetworks = primaryWallet === null || primaryWallet === void 0 ? void 0 : primaryWallet.connector.getEnabledNetworks();
    const logoURI = (_a = enabledNetworks === null || enabledNetworks === void 0 ? void 0 : enabledNetworks.find(({ chainId }) => chainId === network)) === null || _a === void 0 ? void 0 : _a.iconUrls[0];
    const fundingTokens = accounts.flatMap((account) => account.balances.map((balance) => {
        var _a;
        return ({
            balance: balance.balance,
            fiatBalance: undefined,
            logoURI: (_a = balance.logoURI) !== null && _a !== void 0 ? _a : logoURI,
            name: balance.currency,
            symbol: balance.currency,
            token: 'native', // INFORMATION WILL BE ADDED FROM BACKEND
        });
    }));
    const exchangeRates = useExchangeRatesForFunding({
        onFetch: () => { },
        tokenBalances: fundingTokens,
    });
    const updatedFundingTokens = useMemo(() => {
        if (!exchangeRates)
            return fundingTokens;
        return fundingTokens.map((t) => {
            const price = exchangeRates[t.symbol];
            return Object.assign(Object.assign({}, t), { fiatBalance: price !== undefined ? t.balance * price : undefined });
        });
    }, [fundingTokens, exchangeRates]);
    return {
        tokens: updatedFundingTokens,
    };
};

export { useExchangeTokensForFunding };
