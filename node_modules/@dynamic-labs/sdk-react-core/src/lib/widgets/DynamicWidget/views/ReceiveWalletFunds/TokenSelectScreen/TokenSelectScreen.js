'use client'
import { jsx, jsxs, Fragment } from 'react/jsx-runtime';
import { useState } from 'react';
import { useTranslation } from 'react-i18next';
import { ReactComponent as SvgSearch } from '../../../../../assets/search.js';
import { classNames } from '../../../../../utils/functions/classNames/classNames.js';
import '../../../../../components/Accordion/components/AccordionItem/AccordionItem.js';
import { ReactComponent as SvgClose } from '../../../../../shared/assets/close.js';
import { ReactComponent as SvgWalletIllustration } from '../../../../../shared/assets/wallet-illustration.js';
import '@dynamic-labs/iconic';
import '../../../../../context/ViewContext/ViewContext.js';
import '../../../../../../../_virtual/_tslib.js';
import '@dynamic-labs/sdk-api-core';
import '../../../../../shared/logger.js';
import '@dynamic-labs/wallet-connector-core';
import '@dynamic-labs/wallet-book';
import '@dynamic-labs/utils';
import '../../../../../utils/constants/colors.js';
import '../../../../../utils/constants/values.js';
import '../../../../../shared/consts/index.js';
import '../../../../../components/Alert/Alert.js';
import '../../../../../events/dynamicEvents.js';
import '../../../../../context/DynamicContext/DynamicContext.js';
import '../../../../../store/state/loadingAndLifecycle/loadingAndLifecycle.js';
import '../../../../../store/state/authMode/authMode.js';
import '../../../../../context/CaptchaContext/CaptchaContext.js';
import '../../../../../context/ErrorContext/ErrorContext.js';
import '@dynamic-labs/multi-wallet';
import 'react-international-phone';
import '../../../../../store/state/nonce/nonce.js';
import '@dynamic-labs-sdk/client/core';
import '../../../../../client/client.js';
import '@dynamic-labs-sdk/client';
import '../../../../../store/state/projectSettings/projectSettings.js';
import '../../../../../config/ApiEndpoint.js';
import '../../../../../locale/locale.js';
import '../../../../../store/state/dynamicContextProps/dynamicContextProps.js';
import '../../../../../store/state/primaryWalletId/primaryWalletId.js';
import '../../../../../store/state/connectedWalletsInfo/connectedWalletsInfo.js';
import '../../../../../context/AccessDeniedContext/AccessDeniedContext.js';
import '../../../../../context/AccountExistsContext/AccountExistsContext.js';
import '../../../../../context/UserWalletsContext/UserWalletsContext.js';
import '../../../../../context/VerificationContext/VerificationContext.js';
import 'react-dom';
import '../../../../../utils/functions/compareChains/compareChains.js';
import '../../../../../views/Passkey/utils/findPrimaryEmbeddedChain/findPrimaryEmbeddedChain.js';
import '../../../../../context/ThemeContext/ThemeContext.js';
import '../../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';
import 'bs58';
import '@dynamic-labs/types';
import '../../../../../context/SocialRedirectContext/SocialRedirectContext.js';
import '../../../../../context/LoadingContext/LoadingContext.js';
import '../../../../../context/WalletContext/WalletContext.js';
import '../../../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';
import 'yup';
import '../../../../../context/MockContext/MockContext.js';
import '../../../../../views/CollectUserDataView/useFields.js';
import '../../../../../context/FieldsStateContext/FieldsStateContext.js';
import '../../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';
import '@dynamic-labs/rpc-providers';
import '../../../../../store/state/walletOptions/walletOptions.js';
import { Typography } from '../../../../../components/Typography/Typography.js';
import '../../../../../context/FooterAnimationContext/index.js';
import '../../../../../components/ShadowDOM/ShadowDOM.js';
import '../../../../../components/Transition/ZoomTransition/ZoomTransition.js';
import '../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';
import '../../../../../components/Transition/OpacityTransition/OpacityTransition.js';
import '../../../../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.js';
import '../../../../../context/WalletGroupContext/WalletGroupContext.js';
import '../../../components/DynamicWidgetHeader/DynamicWidgetHeader.js';
import 'react-focus-lock';
import { Icon } from '../../../../../components/Icon/Icon.js';
import '../../../context/DynamicWidgetContext.js';
import { IconButton } from '../../../../../components/IconButton/IconButton.js';
import '../../../../../components/MenuList/Dropdown/Dropdown.js';
import 'formik';
import '../../../../../utils/hooks/useSubdomainCheck/useSubdomainCheck.js';
import { ModalHeader } from '../../../../../components/ModalHeader/ModalHeader.js';
import '../../../../../store/state/sendBalances.js';
import '../../../../../components/Input/Input.js';
import '../../../../../components/OverlayCard/OverlayCard.js';
import '../../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';
import '../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';
import '../../../../../context/PasskeyContext/PasskeyContext.js';
import '../../../components/PasskeyCard/PasskeyCard.js';
import { LinearGradientFrame } from '../../../../../components/LinearGradientFrame/LinearGradientFrame.js';
import '../../../../../context/OnrampContext/OnrampContext.js';
import '../../../../../../index.js';
import '../../../helpers/convertExchangeKeyAndProviderEnum.js';
import 'qrcode';
import '../ReceiveWalletFunds.js';
import '../../../../../context/IpConfigurationContext/IpConfigurationContext.js';
import '../../../../../context/ConnectWithOtpContext/ConnectWithOtpContext.js';
import '../../../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';
import '@hcaptcha/react-hcaptcha';
import '../../../../../views/ExchangeWhitelistWarning/ExchangeWhitelistWarning.js';
import '../../../../../context/ErrorContext/hooks/useErrorText/useErrorText.js';
import '../../../../../views/MfaChooseDeviceView/getMfaOptions/getMfaOptions.js';
import '../../../../../store/state/connectorsInitializing/connectorsInitializing.js';
import '../../../../../store/state/tokenBalances.js';
import '../../../../../store/state/multichainBalances.js';
import '../../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';
import '../../../../../components/InlineWidget/InlineWidget.js';
import '../../../../../components/IsBrowser/IsBrowser.js';
import '../../../../../components/Popper/Popper/Popper.js';
import '../../../../../components/Popper/PopperContext/PopperContext.js';
import { TokenOption } from './TokenOption/TokenOption.js';

const TokenSelectScreen = ({ onClose, onSelectToken, currentToken, tokens, className, style, showTokenAsPrimary, exchangeRates, }) => {
    const { t } = useTranslation();
    const [search, setSearch] = useState('');
    const filteredTokens = tokens.filter((token) => {
        if (token.symbol.toLowerCase().includes(search.toLowerCase()))
            return true;
        if (token.name.toLowerCase().includes(search.toLowerCase()))
            return true;
        return false;
    });
    const noAssets = tokens.length === 0;
    const closeButton = (jsx(IconButton, { type: 'button', id: 'close-button', "data-testid": 'close-button', onClick: onClose, children: jsx(SvgClose, {}) }));
    return (jsxs("div", { className: classNames('token-select', className), style: style, "data-testid": 'token-select', children: [jsx(ModalHeader, { trailing: closeButton, children: jsx(Typography, { variant: 'title', children: t(noAssets
                        ? 'dyn_wallet_funding.from_wallet.token_select.no_assets_title'
                        : 'dyn_wallet_funding.from_wallet.token_select.title') }) }), noAssets && (jsxs("div", { className: 'token-select__no-assets', children: [jsx(LinearGradientFrame, { Icon: jsx(SvgWalletIllustration, {}) }), jsx(Typography, { variant: 'title', color: 'secondary', weight: 'medium', children: t('dyn_wallet_funding.from_wallet.token_select.no_assets_description') })] })), !noAssets && (jsxs(Fragment, { children: [jsxs("label", { htmlFor: 'token-select-search', className: 'token-select__search', children: [jsx(Icon, { color: 'text-tertiary', size: 'small', children: jsx(SvgSearch, {}) }), jsx("input", { id: 'token-select-search', placeholder: t('dyn_wallet_funding.from_wallet.token_select.search_placeholder'), className: 'token-select__search__input', value: search, onChange: (e) => setSearch(e.target.value) })] }), jsx("div", { className: 'token-select__tokens', children: filteredTokens.map((token) => (jsx(TokenOption, { token: token, isSelected: token.symbol === currentToken, onSelect: () => onSelectToken(token.symbol), showTokenAsPrimary: showTokenAsPrimary, exchangeRates: exchangeRates }, token.symbol))) })] }))] }));
};

export { TokenSelectScreen };
