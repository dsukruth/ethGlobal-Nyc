'use client'
import { jsx, jsxs } from 'react/jsx-runtime';
import { useTranslation } from 'react-i18next';
import { Icon } from '../../../../components/Icon/Icon.js';
import { IconButton } from '../../../../components/IconButton/IconButton.js';
import { ModalHeader } from '../../../../components/ModalHeader/ModalHeader.js';
import { Typography } from '../../../../components/Typography/Typography.js';
import { TypographyButton } from '../../../../components/TypographyButton/TypographyButton.js';
import 'react';
import { ReactComponent as SvgArrowLeft } from '../../../../shared/assets/arrow-left.js';
import '@dynamic-labs/iconic';
import '../../../../context/ViewContext/ViewContext.js';
import { useWidgetContext } from '../../context/DynamicWidgetContext.js';
import { MakeTrailing } from './MakeTrailing/MakeTrailing.js';
import { useFundingMethods } from './useFundingMethods/useFundingMethods.js';

const ChooseWalletFundingMethod = () => {
    const { goToInitialDynamicWidgetView } = useWidgetContext();
    const { t } = useTranslation();
    const backButton = (jsx(IconButton, { type: 'button', id: 'back-button', "data-testid": 'back-button', onClick: goToInitialDynamicWidgetView, children: jsx(SvgArrowLeft, {}) }));
    const methods = useFundingMethods();
    return (jsxs("div", { className: 'choose-wallet-funding-method', children: [jsx(ModalHeader, { leading: backButton, children: jsx(Typography, { variant: 'title', copykey: 'dyn_wallet_funding.funding_method_selection.title', children: t('dyn_wallet_funding.funding_method_selection.title') }) }), jsx("div", { className: 'choose-wallet-funding-method__options', children: methods.map((method) => {
                    var _a;
                    return (jsx(TypographyButton, { onClick: method.onClick, description: method.description, leading: jsx(Icon, { color: 'text-tertiary', className: 'choose-wallet-funding-method__options__option__icon', children: method.icon }), trailing: jsx(MakeTrailing, { previewIcons: (_a = method.previewIcons) !== null && _a !== void 0 ? _a : [], showChevron: Boolean(method.showChevron) }), typographyProps: { variant: 'body_normal', weight: 'medium' }, buttonVariant: 'card', className: 'choose-wallet-funding-method__options__option', children: method.label }, method.key));
                }) })] }));
};

export { ChooseWalletFundingMethod };
