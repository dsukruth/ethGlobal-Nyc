'use client'
import { jsxs, jsx } from 'react/jsx-runtime';
import { useState, useCallback } from 'react';
import { useTranslation } from 'react-i18next';
import { Typography } from '../../../../../components/Typography/Typography.js';
import { TypographyButton } from '../../../../../components/TypographyButton/TypographyButton.js';
import { getSessionInformationName, getSessionInformationSpendingLimit, getSessionInformationExpiration, getSessionInformationTimeSinceCreation } from '../../../../../utils/functions/getSessionInformation/getSessionInformation.js';
import '@dynamic-labs/utils';
import '../../../../../components/Accordion/components/AccordionItem/AccordionItem.js';
import { AccordionToggle } from '../../../../../components/Accordion/components/AccordionToggle/AccordionToggle.js';
import '../../../../../components/Alert/Alert.js';
import '../../../../../events/dynamicEvents.js';
import '../../../../../../../_virtual/_tslib.js';
import '../../../../../context/DynamicContext/DynamicContext.js';
import '../../../../../store/state/loadingAndLifecycle/loadingAndLifecycle.js';
import '@dynamic-labs/sdk-api-core';
import '../../../../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import '../../../../../context/ViewContext/ViewContext.js';
import '@dynamic-labs/wallet-book';
import '../../../../../utils/constants/colors.js';
import '../../../../../utils/constants/values.js';
import '../../../../../shared/consts/index.js';
import '../../../../../store/state/authMode/authMode.js';
import '../../../../../context/CaptchaContext/CaptchaContext.js';
import '../../../../../context/ErrorContext/ErrorContext.js';
import '@dynamic-labs/multi-wallet';
import 'react-international-phone';
import '../../../../../store/state/nonce/nonce.js';
import '@dynamic-labs-sdk/client/core';
import '../../../../../client/client.js';
import '@dynamic-labs-sdk/client';
import '../../../../../store/state/projectSettings/projectSettings.js';
import '../../../../../config/ApiEndpoint.js';
import '../../../../../locale/locale.js';
import '../../../../../store/state/dynamicContextProps/dynamicContextProps.js';
import '../../../../../store/state/primaryWalletId/primaryWalletId.js';
import '../../../../../store/state/connectedWalletsInfo/connectedWalletsInfo.js';
import '../../../../../context/AccessDeniedContext/AccessDeniedContext.js';
import '../../../../../context/AccountExistsContext/AccountExistsContext.js';
import '../../../../../context/UserWalletsContext/UserWalletsContext.js';
import '../../../../../context/VerificationContext/VerificationContext.js';
import 'react-dom';
import '../../../../../utils/functions/compareChains/compareChains.js';
import '../../../../../views/Passkey/utils/findPrimaryEmbeddedChain/findPrimaryEmbeddedChain.js';
import '../../../../../context/ThemeContext/ThemeContext.js';
import '../../../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';
import 'bs58';
import '@dynamic-labs/types';
import '../../../../../context/SocialRedirectContext/SocialRedirectContext.js';
import '../../../../../context/LoadingContext/LoadingContext.js';
import '../../../../../context/WalletContext/WalletContext.js';
import '../../../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';
import 'yup';
import '../../../../../context/MockContext/MockContext.js';
import '../../../../../views/CollectUserDataView/useFields.js';
import '../../../../../context/FieldsStateContext/FieldsStateContext.js';
import '../../../../../context/UserFieldEditorContext/UserFieldEditorContext.js';
import '@dynamic-labs/rpc-providers';
import '../../../../../store/state/walletOptions/walletOptions.js';
import '../../../../../context/FooterAnimationContext/index.js';
import '../../../../../components/ShadowDOM/ShadowDOM.js';
import '../../../../../components/Transition/ZoomTransition/ZoomTransition.js';
import '../../../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';
import '../../../../../components/Transition/OpacityTransition/OpacityTransition.js';
import '../../../../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.js';
import '../../../../../context/WalletGroupContext/WalletGroupContext.js';
import '../../../components/DynamicWidgetHeader/DynamicWidgetHeader.js';
import 'react-focus-lock';
import '../../../context/DynamicWidgetContext.js';
import '../../../../../components/IconButton/IconButton.js';
import '../../../../../components/MenuList/Dropdown/Dropdown.js';
import 'formik';
import '../../../../../utils/hooks/useSubdomainCheck/useSubdomainCheck.js';
import '../../../../../store/state/sendBalances.js';
import '../../../../../components/Input/Input.js';
import '../../../../../components/OverlayCard/OverlayCard.js';
import '../../../../../views/TransactionConfirmationView/TransactionConfirmationView.js';
import '../../../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';
import '../../../../../context/PasskeyContext/PasskeyContext.js';
import '../../../components/PasskeyCard/PasskeyCard.js';
import '../../../../../context/OnrampContext/OnrampContext.js';
import '../../../../../../index.js';
import '../../../helpers/convertExchangeKeyAndProviderEnum.js';
import 'qrcode';
import '../../ReceiveWalletFunds/ReceiveWalletFunds.js';
import '../../../../../context/IpConfigurationContext/IpConfigurationContext.js';
import '../../../../../context/ConnectWithOtpContext/ConnectWithOtpContext.js';
import '../../../../DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';
import '@hcaptcha/react-hcaptcha';
import '../../../../../views/ExchangeWhitelistWarning/ExchangeWhitelistWarning.js';
import '../../../../../context/ErrorContext/hooks/useErrorText/useErrorText.js';
import '../../../../../views/MfaChooseDeviceView/getMfaOptions/getMfaOptions.js';
import '../../../../../store/state/connectorsInitializing/connectorsInitializing.js';
import '../../../../../store/state/tokenBalances.js';
import '../../../../../store/state/multichainBalances.js';
import '../../../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';
import '../../../../../components/InlineWidget/InlineWidget.js';
import '../../../../../components/IsBrowser/IsBrowser.js';
import '../../../../../components/Popper/Popper/Popper.js';
import '../../../../../components/Popper/PopperContext/PopperContext.js';

const SessionListItem = ({ session, onRevokeAccessClick, }) => {
    const { t } = useTranslation();
    const [isExpanded, setIsExpanded] = useState(false);
    const handleRevokeAccess = useCallback(() => {
        onRevokeAccessClick(session);
    }, [onRevokeAccessClick, session]);
    const toggleExpanded = useCallback(() => {
        setIsExpanded((prev) => !prev);
    }, []);
    const sessionName = getSessionInformationName(session);
    const spendingLimit = getSessionInformationSpendingLimit(session);
    const timeToExpiration = getSessionInformationExpiration(session);
    const timeSinceCreation = getSessionInformationTimeSinceCreation(session);
    return (jsxs("div", { className: 'session-management-session', children: [jsxs("div", { className: 'session-management-session__main', children: [jsx(Typography, { variant: 'body_normal', children: getSessionInformationName(session) }), jsx(TypographyButton, { onClick: handleRevokeAccess, copykey: 'dyn_session_management.session_component.revoke_button', children: t('dyn_session_management.session_component.revoke_button') })] }), jsxs("div", { className: 'session-management-session__permissions-accordion', children: [jsx(AccordionToggle, { isOpen: isExpanded, onClick: toggleExpanded, className: 'session-management-session__permissions-toggle', children: jsx(Typography, { variant: 'body_small', copykey: 'dyn_session_management.session_component.permission_details', children: t('dyn_session_management.session_component.permission_details') }) }), isExpanded && (jsxs("div", { className: 'session-management-session__permissions', children: [jsx("div", { className: 'session-management-session__permissions-header', children: jsx(Typography, { variant: 'body_small', children: sessionName }) }), jsx("div", { className: 'session-management-session__permissions-body', children: jsx(Typography, { variant: 'body_small', color: 'secondary', copykey: 'dyn_session_permissions.connected', children: t('dyn_session_permissions.connected', {
                                        time: timeSinceCreation,
                                    }) }) }), jsx("div", { className: 'session-management-session__permissions-header', children: jsx(Typography, { variant: 'body_small', copykey: 'dyn_session_permissions.permissions_label', children: t('dyn_session_permissions.permissions_label') }) }), jsx("div", { className: 'session-management-session__permissions-body', children: jsxs("ul", { className: 'session-management-session__permissions-list', children: [jsx("li", { children: jsx(Typography, { variant: 'body_small', color: 'secondary', copykey: 'dyn_session_permissions.permissions.ownership', children: t('dyn_session_permissions.permissions.ownership') }) }), jsx("li", { children: jsx(Typography, { variant: 'body_small', color: 'secondary', copykey: 'dyn_session_permissions.permissions.access', children: t('dyn_session_permissions.permissions.access', {
                                                    time: timeToExpiration,
                                                }) }) })] }) }), jsx("div", { className: 'session-management-session__permissions-header', children: jsx(Typography, { variant: 'body_small', copykey: 'dyn_session_permissions.spending_label', children: t('dyn_session_permissions.spending_label') }) }), jsx("div", { className: 'session-management-session__permissions-body', children: jsx(Typography, { variant: 'body_small', color: 'secondary', children: spendingLimit }) })] }))] })] }));
};

export { SessionListItem };
