'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var reactI18next = require('react-i18next');
var ModalHeader = require('../../../../../components/ModalHeader/ModalHeader.cjs');
var Typography = require('../../../../../components/Typography/Typography.cjs');
var DynamicWidgetContext = require('../../../context/DynamicWidgetContext.cjs');
var chevronLeft = require('../../../../../shared/assets/chevron-left.cjs');
require('@dynamic-labs/iconic');
require('../../../../../context/ViewContext/ViewContext.cjs');
var IconButton = require('../../../../../components/IconButton/IconButton.cjs');
var TypographyButton = require('../../../../../components/TypographyButton/TypographyButton.cjs');

const SessionManagementInfoView = () => {
    const { t } = reactI18next.useTranslation();
    const { setDynamicWidgetView } = DynamicWidgetContext.useWidgetContext();
    const handleBack = React.useCallback(() => {
        setDynamicWidgetView('session-management');
    }, [setDynamicWidgetView]);
    const renderBackButton = () => (jsxRuntime.jsx(IconButton.IconButton, { onClick: handleBack, "aria-label": t('dyn_session_management.aria.back_button_label'), children: jsxRuntime.jsx(chevronLeft.ReactComponent, {}) }));
    return (jsxRuntime.jsxs("div", { className: 'session-management-info-view', children: [jsxRuntime.jsx(ModalHeader.ModalHeader, { leading: renderBackButton(), children: jsxRuntime.jsx(Typography.Typography, { variant: 'title', color: 'primary', copykey: 'dyn_session_management.info_view.title', children: t('dyn_session_management.info_view.title') }) }), jsxRuntime.jsxs("div", { className: 'session-management-info-view__body', children: [jsxRuntime.jsxs(Typography.Typography, { variant: 'body_normal', as: 'span', children: [jsxRuntime.jsx(Typography.Typography, { variant: 'body_normal', weight: 'bold', as: 'span', copykey: 'dyn_session_management.info_view.description_bold', children: t('dyn_session_management.info_view.description_bold') }), t('dyn_session_management.info_view.description_2')] }), jsxRuntime.jsx(Typography.Typography, { variant: 'body_normal', as: 'p', copykey: 'dyn_session_management.info_view.description_3', children: t('dyn_session_management.info_view.description_3') })] }), jsxRuntime.jsx("div", { className: 'session-management-info-view__footer', children: jsxRuntime.jsx(TypographyButton.TypographyButton, { onClick: handleBack, expanded: true, copykey: 'dyn_session_management.info_view.continue_button', children: t('dyn_session_management.info_view.continue_button') }) })] }));
};

exports.SessionManagementInfoView = SessionManagementInfoView;
