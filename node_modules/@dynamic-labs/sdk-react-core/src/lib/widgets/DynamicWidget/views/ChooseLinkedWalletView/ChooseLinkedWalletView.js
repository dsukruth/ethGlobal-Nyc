'use client'
import { jsx, jsxs } from 'react/jsx-runtime';
import { useTranslation } from 'react-i18next';
import { IconButton } from '../../../../components/IconButton/IconButton.js';
import { ModalHeader } from '../../../../components/ModalHeader/ModalHeader.js';
import { Typography } from '../../../../components/Typography/Typography.js';
import { UserWalletsList } from '../../../../components/UserWalletsList/UserWalletsList.js';
import 'react';
import { ReactComponent as SvgArrowLeft } from '../../../../shared/assets/arrow-left.js';
import '@dynamic-labs/iconic';
import '../../../../context/ViewContext/ViewContext.js';
import { useWidgetContext } from '../../context/DynamicWidgetContext.js';

const ChooseLinkedWalletView = ({ showBackButton = true, onSelectWallet, wallets, }) => {
    const { setDynamicWidgetView } = useWidgetContext();
    const { t } = useTranslation();
    const backButton = showBackButton ? (jsx(IconButton, { type: 'button', id: 'back-button', "data-testid": 'back-button', onClick: () => setDynamicWidgetView('choose-wallet-funding-method'), children: jsx(SvgArrowLeft, {}) })) : undefined;
    return (jsxs("div", { className: 'choose-linked-wallet-view', children: [jsx(ModalHeader, { leading: backButton, children: jsx(Typography, { variant: 'title', copykey: 'dyn_wallet_funding.from_linked_wallet.title', children: t('dyn_wallet_funding.from_linked_wallet.title') }) }), jsx(UserWalletsList, { onSelectWallet: onSelectWallet, wallets: wallets })] }));
};

export { ChooseLinkedWalletView };
