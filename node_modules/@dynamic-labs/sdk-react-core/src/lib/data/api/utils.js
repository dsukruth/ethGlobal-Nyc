'use client'
import { __awaiter } from '../../../../_virtual/_tslib.js';
import '@dynamic-labs/sdk-api-core';
import { logger } from '../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import 'react';
import 'react/jsx-runtime';
import '../../context/ViewContext/ViewContext.js';
import '@dynamic-labs/wallet-book';
import '@dynamic-labs/utils';
import '../../utils/constants/colors.js';
import '../../utils/constants/values.js';
import '../../shared/consts/index.js';
import { sdkApi } from './api.js';

const logResponseError = (e_1, message_1, ...args_1) => __awaiter(void 0, [e_1, message_1, ...args_1], void 0, function* (e, message, logLevel = 'error') {
    if (e instanceof Response) {
        const data = yield e.json();
        logger[logLevel](message, { error: data.error, status: e.status });
        return data;
    }
    else if (e instanceof Error) {
        logger[logLevel](message, e);
    }
});
const getNonce = (environmentId) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const res = yield sdkApi().getNonce({
            environmentId,
        });
        return res.nonce;
    }
    catch (e) {
        return undefined;
    }
});

export { getNonce, logResponseError };
