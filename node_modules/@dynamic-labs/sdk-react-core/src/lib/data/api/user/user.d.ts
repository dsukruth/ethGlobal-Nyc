import { MergeUserConflictResolution, SdkUser, UpdateSelfResponse, UserFields, UserFieldsCheckParams, UserFieldsCheckResponse } from '@dynamic-labs/sdk-api-core';
import { UserProfile } from '../../../..';
export type UpdateUserResponse = UpdateSelfResponse & {
    userProfile?: UserProfile;
};
export declare const updateUserProfileFields: (environmentId: string, fields: UserFields) => Promise<UpdateUserResponse>;
export declare const mergeUserAccounts: (environmentId: string) => Promise<UserProfile>;
export declare const verifyMergeUsers: (environmentId: string, mergeConflictResolutions: MergeUserConflictResolution[]) => Promise<UserProfile>;
export declare const hardDeleteUser: (environmentId: string) => Promise<void>;
export declare const refreshUserJwt: ({ environmentId, }: {
    environmentId: string;
}) => Promise<UserProfile | undefined>;
export declare const getAuthenticatedUser: ({ environmentId, }: {
    environmentId: string;
}) => Promise<SdkUser | undefined>;
/** Hook implementation of [getUserFieldsCheck] */
export declare const getUserFieldsCheck: ({ environmentId, filter, }: {
    environmentId: string;
    filter: UserFieldsCheckParams;
}) => Promise<UserFieldsCheckResponse | undefined>;
