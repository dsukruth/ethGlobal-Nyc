'use client'
import { jsx, jsxs } from 'react/jsx-runtime';
import { useTranslation } from 'react-i18next';
import 'react';
import 'react-dom';
import '@dynamic-labs/sdk-api-core';
import '../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import { ReactComponent as SvgProfileOutline } from '../../shared/assets/profile-outline.js';
import { ReactComponent as SvgSettingsOutline } from '../../shared/assets/settings-outline.js';
import { ReactComponent as SvgWalletOutlineV2 } from '../../shared/assets/wallet-outline-v2.js';
import '../../context/ViewContext/ViewContext.js';
import '@dynamic-labs/wallet-book';
import '@dynamic-labs/utils';
import '../../utils/constants/colors.js';
import '../../utils/constants/values.js';
import '../../shared/consts/index.js';
import { classNames } from '../../utils/functions/classNames/classNames.js';
import '../../events/dynamicEvents.js';
import '../../../../_virtual/_tslib.js';
import '../../context/DynamicContext/DynamicContext.js';
import '../../store/state/loadingAndLifecycle/loadingAndLifecycle.js';
import '../../store/state/authMode/authMode.js';
import { useInternalDynamicContext } from '../../context/DynamicContext/useDynamicContext/useInternalDynamicContext/useInternalDynamicContext.js';
import '../../context/CaptchaContext/CaptchaContext.js';
import '../../context/ErrorContext/ErrorContext.js';
import '@dynamic-labs/multi-wallet';
import 'react-international-phone';
import '../../store/state/nonce/nonce.js';
import '@dynamic-labs-sdk/client/core';
import '../../client/client.js';
import '@dynamic-labs-sdk/client';
import '../../store/state/projectSettings/projectSettings.js';
import '../../config/ApiEndpoint.js';
import '../../locale/locale.js';
import '../../store/state/dynamicContextProps/dynamicContextProps.js';
import '../../store/state/primaryWalletId/primaryWalletId.js';
import '../../store/state/connectedWalletsInfo/connectedWalletsInfo.js';
import '../../context/AccessDeniedContext/AccessDeniedContext.js';
import '../../context/AccountExistsContext/AccountExistsContext.js';
import '../../context/UserWalletsContext/UserWalletsContext.js';
import '../../context/VerificationContext/VerificationContext.js';
import '../../utils/functions/compareChains/compareChains.js';
import '../../views/Passkey/utils/findPrimaryEmbeddedChain/findPrimaryEmbeddedChain.js';
import '../../context/ThemeContext/ThemeContext.js';
import '../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';
import { useKYCFlag } from '../../utils/hooks/useKYCFlag/useKYCFlag.js';
import 'bs58';
import '@dynamic-labs/types';
import '../../context/SocialRedirectContext/SocialRedirectContext.js';
import '../../context/LoadingContext/LoadingContext.js';
import '../../context/WalletContext/WalletContext.js';
import '../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';
import 'yup';
import '../../context/MockContext/MockContext.js';
import '../../views/CollectUserDataView/useFields.js';
import '../../context/FieldsStateContext/FieldsStateContext.js';
import '../../context/UserFieldEditorContext/UserFieldEditorContext.js';
import '@dynamic-labs/rpc-providers';
import '../../store/state/walletOptions/walletOptions.js';
import '../../components/Accordion/components/AccordionItem/AccordionItem.js';
import '../../components/Alert/Alert.js';
import '../../components/ShadowDOM/ShadowDOM.js';
import '../../components/IconButton/IconButton.js';
import '../../components/InlineWidget/InlineWidget.js';
import '../../components/Input/Input.js';
import '../../components/IsBrowser/IsBrowser.js';
import '../../components/MenuList/Dropdown/Dropdown.js';
import '../../components/OverlayCard/OverlayCard.js';
import '../../components/Transition/ZoomTransition/ZoomTransition.js';
import '../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';
import '../../components/Transition/OpacityTransition/OpacityTransition.js';
import '../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';
import '../../components/Popper/Popper/Popper.js';
import '../../components/Popper/PopperContext/PopperContext.js';
import 'react-focus-lock';
import 'qrcode';
import 'formik';
import '../../utils/hooks/useSubdomainCheck/useSubdomainCheck.js';
import '../../context/WalletGroupContext/WalletGroupContext.js';
import '../../context/IpConfigurationContext/IpConfigurationContext.js';
import '../../context/ConnectWithOtpContext/ConnectWithOtpContext.js';
import '../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';
import '@hcaptcha/react-hcaptcha';
import { useWidgetContext } from '../../widgets/DynamicWidget/context/DynamicWidgetContext.js';
import '../../widgets/DynamicWidget/helpers/convertExchangeKeyAndProviderEnum.js';
import '../../views/ExchangeWhitelistWarning/ExchangeWhitelistWarning.js';
import '../../context/ErrorContext/hooks/useErrorText/useErrorText.js';
import '../../context/FooterAnimationContext/index.js';
import '../../views/MfaChooseDeviceView/getMfaOptions/getMfaOptions.js';
import '../../context/PasskeyContext/PasskeyContext.js';
import '../../context/OnrampContext/OnrampContext.js';
import '../../store/state/sendBalances.js';
import '../../store/state/connectorsInitializing/connectorsInitializing.js';
import { BottomNavBar } from '../../widgets/DynamicWidget/components/BottomNavBar/BottomNavBar.js';
import { MemoizedDynamicWidgetHeader } from '../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';
import { DynamicWidgetPrompts } from '../../widgets/DynamicWidget/components/DynamicWidgetPrompts/DynamicWidgetPrompts.js';
import { DynamicWidgetViews } from '../../widgets/DynamicWidget/components/DynamicWidgetViews/DynamicWidgetViews.js';
import { DynamicPasskeyWidgetViews, DynamicTransactionsWidgetViews, DynamicMfaWidgetViews, DynamicSettingsViews, DynamicGlobalWalletViews } from '../../widgets/DynamicWidget/context/DynamicWidgetContext.types.js';
import '../../views/TransactionConfirmationView/TransactionConfirmationView.js';
import '../../../index.js';
import '../../store/state/tokenBalances.js';
import '../../store/state/multichainBalances.js';
import '../../shared/utils/functions/getInitialUrl/getInitialUrl.js';
import { OverlayCardTarget } from '../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.js';

const shouldNotRenderHeaderViews = [
    ...DynamicPasskeyWidgetViews,
    ...DynamicTransactionsWidgetViews,
    ...DynamicMfaWidgetViews,
    ...DynamicSettingsViews,
    ...DynamicGlobalWalletViews,
    'receive-wallet-funds',
    'deposited-exchange',
    'receive-exchange-funds',
    'choose-wallet-funding-method',
    'deposit-view',
    'choose-linked-wallet',
    'choose-onramp-provider',
];
/**
 * Which views should not render the bottom navbar options
 */
const shouldNotRenderBottomNavBarOptions = [
    'receive-wallet-funds',
    'deposited-exchange',
    'receive-exchange-funds',
    'choose-wallet-funding-method',
    'deposit-view',
    'confirm-exchange-transfer',
    'choose-onramp-provider',
    'choose-linked-wallet',
    'manage-totp-mfa-no-footer',
];
const DynamicUserProfileLayout = ({ variant, className, style, }) => {
    const { multiWallet } = useInternalDynamicContext();
    const isKYCEnabled = useKYCFlag();
    const { dynamicWidgetView, setDynamicWidgetView, overridenWidgetView } = useWidgetContext();
    const { t } = useTranslation();
    const getNavBarOptions = () => {
        const options = [];
        if (multiWallet) {
            options.push({
                copykey: 'dyn_nav_bar.wallets',
                icon: jsx(SvgWalletOutlineV2, {}),
                label: t('dyn_nav_bar.wallets'),
                value: 'wallets',
            });
        }
        if (isKYCEnabled) {
            options.push({
                copykey: 'dyn_nav_bar.profile',
                icon: jsx(SvgProfileOutline, {}),
                label: t('dyn_nav_bar.profile'),
                value: 'profile',
            });
        }
        options.push({
            copykey: 'dyn_nav_bar.settings',
            icon: jsx(SvgSettingsOutline, {}),
            label: t('dyn_nav_bar.settings'),
            value: 'settings',
        });
        return options;
    };
    // It should render header only if the view is not send-balance or one of passkey widgets view
    const shouldRenderHeader = !shouldNotRenderHeaderViews.includes(dynamicWidgetView);
    const shouldRenderOptionsSwitcher = (multiWallet || isKYCEnabled) &&
        !shouldNotRenderBottomNavBarOptions.includes(dynamicWidgetView);
    return (jsx(OverlayCardTarget, { children: jsxs("div", { className: classNames(className, 'dynamic-user-profile-layout'), style: style, children: [shouldRenderHeader && jsx(MemoizedDynamicWidgetHeader, { variant: variant }), jsx(DynamicWidgetViews, {}), jsx(DynamicWidgetPrompts, {}), shouldRenderOptionsSwitcher && (jsx(BottomNavBar, { value: overridenWidgetView, onChange: (view) => setDynamicWidgetView(view), options: getNavBarOptions() }))] }) }));
};

export { DynamicUserProfileLayout };
