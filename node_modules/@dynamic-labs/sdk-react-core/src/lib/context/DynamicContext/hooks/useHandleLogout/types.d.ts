import { Dispatch, SetStateAction } from 'react';
import { AuthMode, UserProfile } from '@dynamic-labs/types';
import { WalletConnector } from '@dynamic-labs/wallet-connector-core';
import { DynamicEventsCallbacks, Wallet } from '../../../../shared';
import { MultiWalletWidgetStateSetter } from '../../../../utils/hooks/multiWallet';
import { ChainsToConnect } from '../../types';
import { SetShowAuthFlow } from '../useShowAuthFlow';
export type UseHandleLogoutParams = {
    clearAllWalletConnectSessions: () => void;
    bridgeChains: ChainsToConnect[] | undefined;
    setSelectedWalletConnectorKey: Dispatch<SetStateAction<string | null>>;
    setShowDynamicUserProfile: Dispatch<SetStateAction<boolean>>;
    setShowBridgeWidget: Dispatch<SetStateAction<boolean>>;
    user: UserProfile | undefined;
    environmentId: string;
    walletConnectors: WalletConnector[];
    connectedWallets: Wallet[];
    setLegacyIsVerifying: Dispatch<SetStateAction<boolean>>;
    initialAuthenticationMode: AuthMode;
    setShowAuthFlow: SetShowAuthFlow;
    setMultiWalletWidgetState: MultiWalletWidgetStateSetter;
    removeSessionStorageSessionKeys: () => void;
    removeBridgeOnboardingCompleted: () => void;
    removeConnectedNameService: () => void;
    events: DynamicEventsCallbacks | undefined;
    resetLoginWithEmail: VoidFunction;
};
