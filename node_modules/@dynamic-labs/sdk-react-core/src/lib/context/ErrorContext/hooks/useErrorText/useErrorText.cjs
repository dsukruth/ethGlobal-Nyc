'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var reactI18next = require('react-i18next');
var utils = require('@dynamic-labs/utils');
var ErrorContext = require('../../ErrorContext.cjs');

const mapErrorCodeToTranslation = {
    [utils.ErrorCode.UNKNOWN]: 'dyn_error.default',
    [utils.ErrorCode.DEFAULT]: 'dyn_error.default',
    [utils.ErrorCode.USER_REJECTED]: 'dyn_error.user_rejected',
    [utils.ErrorCode.MESSAGE_SIGNATURE_DENIED]: 'dyn_error.message_signature_denied',
    [utils.ErrorCode.WALLET_LOCKED]: 'dyn_error.wallet_locked',
    [utils.ErrorCode.INVALID_PARAMETERS]: 'dyn_error.invalid_parameters',
    [utils.ErrorCode.INTERNAL_ERROR]: 'dyn_error.internal_error',
    [utils.ErrorCode.ACCOUNT_ALREADY_LINKED_TO_DIFFERENT_PROFILE]: 'dyn_error.account_already_linked_to_different_profile',
    [utils.ErrorCode.CONNECTION_REJECTED]: 'dyn_error.connection_rejected',
    [utils.ErrorCode.MISSING_PUBLIC_ADDRESS]: 'dyn_error.missing_public_address',
    [utils.ErrorCode.CONNECTION_PROPOSAL_EXPIRED]: 'dyn_error.connection_proposal_expired',
    [utils.ErrorCode.SEI_NOT_ENABLED_IN_KEPLR_WALLET]: 'dyn_error.sei_not_enabled_in_keplr_wallet',
};
/** A hook that listens to the error context and returns a translated value */
const useErrorText = () => {
    const { t } = reactI18next.useTranslation();
    const { error, errorCode } = ErrorContext.useErrorContext();
    const errorText = React.useMemo(() => {
        var _a;
        if (errorCode) {
            return t((_a = mapErrorCodeToTranslation[errorCode]) !== null && _a !== void 0 ? _a : 'dyn_error.default');
        }
        return error;
    }, [error, errorCode, t]);
    return { errorText };
};

exports.mapErrorCodeToTranslation = mapErrorCodeToTranslation;
exports.useErrorText = useErrorText;
