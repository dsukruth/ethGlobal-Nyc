'use client'
import { getCore } from '@dynamic-labs-sdk/client/core';
import { getDynamicClient } from '../../client.js';
import { setVerifyResponseToStorage } from '../setVerifyResponseToStorage/setVerifyResponseToStorage.js';
import { convertSdkUserToUserProfile } from '../user/convertSdkUserToUserProfile/convertSdkUserToUserProfile.js';
import { raiseUserProfileEvent } from '../user/raiseUserProfileEvent/raiseUserProfileEvent.js';

const storeTokenAndUser = (verifyResponse) => {
    var _a;
    setVerifyResponseToStorage(verifyResponse);
    const { state } = getCore(getDynamicClient());
    const oldUser = state.get().user;
    state.set({
        sessionExpiresAt: new Date(verifyResponse.expiresAt * 1000),
        token: (_a = verifyResponse.minifiedJwt) !== null && _a !== void 0 ? _a : null,
        user: verifyResponse.user,
    });
    if (verifyResponse.user && oldUser)
        raiseUserProfileEvent({ newUser: verifyResponse.user, oldUser });
    return convertSdkUserToUserProfile(verifyResponse.user);
};

export { storeTokenAndUser };
