'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@dynamic-labs-sdk/client/core');
var client = require('../../client.cjs');
var setVerifyResponseToStorage = require('../setVerifyResponseToStorage/setVerifyResponseToStorage.cjs');
var convertSdkUserToUserProfile = require('../user/convertSdkUserToUserProfile/convertSdkUserToUserProfile.cjs');
var raiseUserProfileEvent = require('../user/raiseUserProfileEvent/raiseUserProfileEvent.cjs');

const storeTokenAndUser = (verifyResponse) => {
    var _a;
    setVerifyResponseToStorage.setVerifyResponseToStorage(verifyResponse);
    const { state } = core.getCore(client.getDynamicClient());
    const oldUser = state.get().user;
    state.set({
        sessionExpiresAt: new Date(verifyResponse.expiresAt * 1000),
        token: (_a = verifyResponse.minifiedJwt) !== null && _a !== void 0 ? _a : null,
        user: verifyResponse.user,
    });
    if (verifyResponse.user && oldUser)
        raiseUserProfileEvent.raiseUserProfileEvent({ newUser: verifyResponse.user, oldUser });
    return convertSdkUserToUserProfile.convertSdkUserToUserProfile(verifyResponse.user);
};

exports.storeTokenAndUser = storeTokenAndUser;
