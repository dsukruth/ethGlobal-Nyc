'use client'
import { VERSION, API_VERSION } from '../../../../../../version.js';
import { isGlobalWalletPopup } from '../../../../../shared/utils/functions/isGlobalWalletPopup/isGlobalWalletPopup.js';
import '@dynamic-labs/sdk-api-core';
import '../../../../../utils/constants/values.js';
import '@dynamic-labs/utils';
import '../../../../../../../_virtual/_tslib.js';
import '@dynamic-labs/multi-wallet';
import '../../../../../shared/logger.js';
import '../../../../../utils/constants/colors.js';
import 'react-international-phone';
import { getDeviceFingerprint } from '../../../../../utils/functions/getDeviceFingerprint/getDeviceFingerprint.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import 'react';
import 'react/jsx-runtime';
import '../../../../../context/ViewContext/ViewContext.js';
import '@dynamic-labs/wallet-book';
import '../../../../../shared/consts/index.js';
import '../../../../../store/state/nonce/nonce.js';
import { randomString } from '../../../../../utils/functions/randomString/randomString.js';
import '@dynamic-labs-sdk/client/core';
import '../../../../client.js';
import '@dynamic-labs-sdk/client';
import '../../../../../events/dynamicEvents.js';
import '../../../../../store/state/projectSettings/projectSettings.js';
import '../../../../../config/ApiEndpoint.js';
import '../../../../../locale/locale.js';
import '../../../../../store/state/dynamicContextProps/dynamicContextProps.js';
import '../../../../../store/state/primaryWalletId/primaryWalletId.js';
import '../../../../../store/state/connectedWalletsInfo/connectedWalletsInfo.js';
import { getClientSessionPublicKey } from '../../../../../utils/functions/clientSessionKeys/getClientSessionKeys.js';

const getApiHeaders = () => {
    const apiHeaders = {
        'x-dyn-request-id': randomString(50),
    };
    const deviceFingerprint = getDeviceFingerprint();
    if (deviceFingerprint) {
        apiHeaders['x-dyn-device-fingerprint'] = deviceFingerprint;
    }
    const sessionPublicKey = getClientSessionPublicKey();
    if (sessionPublicKey) {
        apiHeaders['x-dyn-session-public-key'] = sessionPublicKey;
    }
    apiHeaders['x-dyn-version'] = `WalletKit/${VERSION}`;
    apiHeaders['x-dyn-api-version'] = `API/${API_VERSION}`;
    apiHeaders['x-dyn-is-global-wallet-popup'] = isGlobalWalletPopup()
        ? 'true'
        : 'false';
    return apiHeaders;
};

export { getApiHeaders };
