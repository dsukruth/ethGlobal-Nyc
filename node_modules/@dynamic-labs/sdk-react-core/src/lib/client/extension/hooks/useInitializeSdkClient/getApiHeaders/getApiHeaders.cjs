'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var version = require('../../../../../../version.cjs');
var isGlobalWalletPopup = require('../../../../../shared/utils/functions/isGlobalWalletPopup/isGlobalWalletPopup.cjs');
require('@dynamic-labs/sdk-api-core');
require('../../../../../utils/constants/values.cjs');
require('@dynamic-labs/utils');
require('../../../../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/multi-wallet');
require('../../../../../shared/logger.cjs');
require('../../../../../utils/constants/colors.cjs');
require('react-international-phone');
var getDeviceFingerprint = require('../../../../../utils/functions/getDeviceFingerprint/getDeviceFingerprint.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('react');
require('react/jsx-runtime');
require('../../../../../context/ViewContext/ViewContext.cjs');
require('@dynamic-labs/wallet-book');
require('../../../../../shared/consts/index.cjs');
require('../../../../../store/state/nonce/nonce.cjs');
var randomString = require('../../../../../utils/functions/randomString/randomString.cjs');
require('@dynamic-labs-sdk/client/core');
require('../../../../client.cjs');
require('@dynamic-labs-sdk/client');
require('../../../../../events/dynamicEvents.cjs');
require('../../../../../store/state/projectSettings/projectSettings.cjs');
require('../../../../../config/ApiEndpoint.cjs');
require('../../../../../locale/locale.cjs');
require('../../../../../store/state/dynamicContextProps/dynamicContextProps.cjs');
require('../../../../../store/state/primaryWalletId/primaryWalletId.cjs');
require('../../../../../store/state/connectedWalletsInfo/connectedWalletsInfo.cjs');
var getClientSessionKeys = require('../../../../../utils/functions/clientSessionKeys/getClientSessionKeys.cjs');

const getApiHeaders = () => {
    const apiHeaders = {
        'x-dyn-request-id': randomString.randomString(50),
    };
    const deviceFingerprint = getDeviceFingerprint.getDeviceFingerprint();
    if (deviceFingerprint) {
        apiHeaders['x-dyn-device-fingerprint'] = deviceFingerprint;
    }
    const sessionPublicKey = getClientSessionKeys.getClientSessionPublicKey();
    if (sessionPublicKey) {
        apiHeaders['x-dyn-session-public-key'] = sessionPublicKey;
    }
    apiHeaders['x-dyn-version'] = `WalletKit/${version.VERSION}`;
    apiHeaders['x-dyn-api-version'] = `API/${version.API_VERSION}`;
    apiHeaders['x-dyn-is-global-wallet-popup'] = isGlobalWalletPopup.isGlobalWalletPopup()
        ? 'true'
        : 'false';
    return apiHeaders;
};

exports.getApiHeaders = getApiHeaders;
