'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const viewsThatPreventBorderBelowHeader = [
    'wallet-list',
    'login-with-email-or-wallet-full-wallet-list',
    'multi-wallet-wallet-list',
    'login-with-wallet-only',
];
const viewsWithWalletListType = [
    'wallet-connect-mobile-wallets-list',
    'wallet-list',
    'login-with-email-or-wallet-full-wallet-list',
    'login-with-wallet-only',
];
const viewsThatHideHelpContent = [
    'qr-code',
    'no-qr-not-installed',
    'wallet-used',
    'chainalysis-blocked-wallet',
    'wallet-sign',
    'collect-user-data',
    'passkey-new-domain-detected',
];
const viewsThatHideHeader = [
    'collect-user-data',
    'no-access',
    'chainalysis-blocked-wallet',
    'wallet-locked-view',
    'gate-blocked-wallet',
    'email-wallet-otp-verification-view',
    'bridge-welcome',
    'bridge-summary',
    'bridge-next-wallet-connection',
    'passkey-intro',
    'passkey-new-domain-detected',
    'passkey-setup',
    'passkey-confirm',
    'social-redirect-view',
    'collect-user-data-login-no-wallet',
    'passkey-recovery-bundle',
    'passkey-recovery-start',
    'embedded-reveal-view',
    'embedded-reveal-account-view',
    'mfa-exchange-view',
    'exchange-whitelist-warning',
    'rename-passkey',
    'embedded-wallet-auth-choice',
    'passkey-recovery-add-email',
    'global-wallet-confirm',
    'global-wallet-malicious',
    'global-wallet-info',
    'mfa-choose-device',
    'mfa-verification',
];
const viewsThatShowConnectedWalletProgress = [
    'wallet-list',
    'qr-code',
    'wallet-connect-mobile-wallets-list',
    'pending-connect',
    'pending-signature',
    'pending-signature-without-back-button',
    'bridge-next-wallet-connection',
    'bridge-summary',
];
const viewsThatShowDynamicFooter = [
    'login-with-email-or-wallet',
    'login-with-email-or-wallet-full-wallet-list',
    'login-with-wallet-only',
    'login-with-email-verification',
    'login-with-sms-verification',
    'verify-email',
    'verify-sms',
    'pending-connect',
    'wallet-group',
    'select-wallet-in-wallet-group',
    'select-hardware-wallet',
    'pending-signature',
    'qr-code',
    'wallet-used',
    'email-wallet-otp-verification-view',
    'farcaster-connect-view',
    'merge-user-accounts',
    'merge-user-accounts-conflicts',
    'mfa-verification',
    'mfa-display-backup-codes',
    'mfa-recovery',
    'passkey-setup',
    'passkey-confirm',
];
/**
 * User is not able to close the modal in these views at all
 */
const viewsThatPreventModalClose = [
    'collect-user-data',
    'login-with-email-verification',
    'login-with-sms-verification',
    'backup-unsuccessful',
];
/**
 * When hasPendingMfaAction returns true, user is not able to close the modal in these views at all
 */
const mfaViewsThatPreventModalClose = [
    'mfa-verification',
    'mfa-choose-device',
    'mfa-secure-device',
    'mfa-display-backup-codes',
    'mfa-recovery',
    'passkey-setup',
    'passkey-confirm',
];
/**
 * These views only hide the close button, but unless they are also
 * in the viewsThatPreventModalClose array, the user can still close the modal
 * via other means (such as pressing the escape key or clicking the backdrop).
 */
const viewsThatHideCloseButton = [
    'login-with-email-or-wallet-full-wallet-list',
    'login-with-email-verification',
    'login-with-sms-verification',
    'network-not-supported',
    'passkey-recovery-complete',
    'passkey-recovery-start',
    'passkey-recovery-bundle',
    'passkey-confirm',
    'rename-passkey',
    'mobile-wallet-redirect-view',
    'qr-code',
    'mfa-verification',
    'mfa-display-backup-codes',
    'mfa-recovery',
    'user-delete-account',
    'backup-unsuccessful',
];

exports.mfaViewsThatPreventModalClose = mfaViewsThatPreventModalClose;
exports.viewsThatHideCloseButton = viewsThatHideCloseButton;
exports.viewsThatHideHeader = viewsThatHideHeader;
exports.viewsThatHideHelpContent = viewsThatHideHelpContent;
exports.viewsThatPreventBorderBelowHeader = viewsThatPreventBorderBelowHeader;
exports.viewsThatPreventModalClose = viewsThatPreventModalClose;
exports.viewsThatShowConnectedWalletProgress = viewsThatShowConnectedWalletProgress;
exports.viewsThatShowDynamicFooter = viewsThatShowDynamicFooter;
exports.viewsWithWalletListType = viewsWithWalletListType;
