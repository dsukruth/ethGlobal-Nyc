'use client'
import { useEffect } from 'react';
import '@dynamic-labs/sdk-api-core';
import { logger } from '../../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import 'react/jsx-runtime';
import '../../../context/ViewContext/ViewContext.js';
import '@dynamic-labs/wallet-book';
import '@dynamic-labs/utils';
import '../../constants/colors.js';
import '../../constants/values.js';
import '../../../shared/consts/index.js';
import { createWalletGroupFromWalletOption } from '../../../shared/utils/functions/createWalletGroupFromWalletOption/createWalletGroupFromWalletOption.js';
import { mergeWalletGroups } from '../../../store/state/walletOptions/walletOptions.js';

const useCreateWalletGroups = ({ walletConnectorOptions, }) => {
    // Dynamically populate groups based on wallet options
    useEffect(() => {
        if (!walletConnectorOptions.length)
            return;
        const groups = {};
        walletConnectorOptions.forEach((option) => {
            const group = createWalletGroupFromWalletOption(option);
            // we don't need to override the group if it already exists
            // and it will particularly cause issues with MM, because the starknet snap icon
            // is different group than the default MM icon
            if (!groups[group.key]) {
                groups[group.key] = group;
            }
            option.chainGroup = group.key;
            option.group = group.key;
        });
        logger.logVerboseTroubleshootingMessage('[DynamicContext] mergeWalletGroups', {
            groups,
        });
        mergeWalletGroups(groups);
    }, [walletConnectorOptions]);
};

export { useCreateWalletGroups };
