import { CreateMfaToken, MFADevice, MFADeviceType } from '@dynamic-labs/sdk-api-core';
type UseMfaHookResult = {
    /**
     * Add a new device to the user's account.
     */
    addDevice: (type?: MFADeviceType) => Promise<{
        id: string;
        secret: string;
        uri: string;
    }>;
    /**
     * @deprecated Use authenticateDevice instead.
     * This function authenticates a device and returns a boolean value
     * indicating if the authentication was successful.
     */
    authDevice: (code: string, type?: MFADeviceType, deviceId?: string) => Promise<boolean>;
    authRecoveryCode: (code: string) => Promise<boolean>;
    /**
     * Authenticates a device and returns a single use MFA token
     * if the authentication is successful.
     */
    authenticateDevice: ({ code, type, deviceId, createMfaToken, }: {
        code: string;
        type?: MFADeviceType;
        deviceId?: string;
        createMfaToken?: CreateMfaToken;
    }) => Promise<string | undefined>;
    completeAcknowledgement: () => Promise<void>;
    /**
     * Delete a user's device
     */
    deleteUserDevice: (deviceId: string, mfaAuthToken: string) => Promise<void>;
    /**
     * Get the user's recovery codes
     */
    getRecoveryCodes: (generateNewCodes?: boolean) => Promise<string[]>;
    getUserDevices: () => Promise<MFADevice[]>;
    updateUserDevice: (deviceId: string) => Promise<void>;
    /**
     * @deprecated use authenticateDevice instead
     */
    verifyDevice: (code: string, type?: MFADeviceType) => Promise<MFADevice>;
};
export declare const useMfa: () => UseMfaHookResult;
export {};
