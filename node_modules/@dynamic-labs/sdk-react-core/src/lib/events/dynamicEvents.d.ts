import EventEmitter from 'eventemitter3';
import { AuthEvents } from './auth';
import { EmbeddedWalletEvents } from './embeddedWallet';
import { FundingEvents } from './funding';
import { MultiWalletInternalEvents } from './multiWallet';
import { OTPEvents } from './otp';
import { PasskeyEvents } from './passkey';
import { SocialEvents } from './social';
import { TokenBalancesEvents } from './tokenBalances';
import { UIEvents } from './ui';
import { UserEvents } from './user';
import { WalletEvents } from './wallets';
/** Maps internal event names to their listeners */
export type DynamicEvents = AuthEvents & UIEvents & OTPEvents & WalletEvents & PasskeyEvents & SocialEvents & EmbeddedWalletEvents & MultiWalletInternalEvents & TokenBalancesEvents & UserEvents & FundingEvents;
type PublicDynamicEvents = Pick<DynamicEvents, typeof externalEvents[number]>;
/** Which events are accessible by our clients */
export declare const externalEvents: ("authFailure" | "authInit" | "logout" | "mfaCompletionSuccess" | "mfaCompletionFailure" | "authFlowOpen" | "authFlowClose" | "authFlowCancelled" | "walletTabSelected" | "emailVerificationResult" | "smsVerificationResult" | "walletAdded" | "walletRemoved" | "primaryWalletChanged" | "primaryWalletNetworkChanged" | "userWalletsChanged" | "walletConnectionFailed" | "embeddedWalletCreated" | "walletConnectedForFunding")[];
export declare const dynamicEvents: EventEmitter<DynamicEvents, any>;
export declare const publicDynamicEvents: EventEmitter<PublicDynamicEvents, any>;
export type DynamicEventEmitter = typeof dynamicEvents;
export {};
