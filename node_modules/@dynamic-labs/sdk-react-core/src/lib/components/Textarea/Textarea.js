'use client'
import { __rest } from '../../../../_virtual/_tslib.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import { classNames } from '../../utils/functions/classNames/classNames.js';
import { Typography } from '../Typography/Typography.js';

const Textarea = (_a) => {
    var { className = '', id, label, onChange, onBlur, name, value, optional, error = false, disabled, message, placeholder, variant = 'dense', isValid } = _a, rest = __rest(_a, ["className", "id", "label", "onChange", "onBlur", "name", "value", "optional", "error", "disabled", "message", "placeholder", "variant", "isValid"]);
    return (jsxs("div", { className: classNames('textarea__container', {
            'textarea__container--dense': variant === 'dense',
            'textarea__container--regular': variant === 'regular',
        }), children: [jsx("textarea", Object.assign({}, rest, { name: name, value: value, onChange: onChange, onBlur: onBlur, id: id, placeholder: variant === 'regular' ? placeholder : label, disabled: disabled, className: classNames('textarea', className, {
                    textarea__error: error,
                    textarea__has_trailing: optional,
                    textarea__valid: isValid === true,
                }) })), jsx("label", { htmlFor: id, className: classNames('textarea__label'), children: label }), optional && jsx("span", { className: 'textarea__trailing', children: "Optional" }), Boolean(message) && (jsx(Typography, { variant: 'body_mini', className: classNames('textarea__message', {
                    textarea__message__error: error,
                }), children: message }))] }));
};

export { Textarea };
