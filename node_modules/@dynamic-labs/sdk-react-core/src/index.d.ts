import './lib/shared/utils/functions/getInitialUrl';
export { VERSION } from './version';
export { getWallets } from './lib/views/WalletList/data';
export { getAuthToken } from './lib/utils/functions/getAuthToken';
export { getMinAuthToken } from './lib/utils/functions/getMinAuthToken';
export { DynamicContextProvider, DynamicContext, } from './lib/context/DynamicContext';
export { ErrorBoundary, ErrorBoundaryInclude, ErrorBoundaryExclude, } from './lib/context/ErrorBoundary';
export type { DynamicContextProps } from './lib/context/DynamicContext';
export { useDynamicContext } from './lib/context/DynamicContext/useDynamicContext';
export { useDynamicScopes } from './lib/utils/hooks/useDynamicScopes';
export { useUserWalletsExternal as useUserWallets } from './lib/context/UserWalletsContext';
export { DynamicConnectButton, ShadowDOM, IsBrowser } from './lib/components';
export { useDynamicClient } from './lib/client';
export { DynamicBridgeWidget, DynamicEmbeddedAuthFlow, DynamicEmbeddedUserProfile, DynamicEmbeddedWidget, DynamicMultiWalletPromptsWidget, DynamicNav, DynamicUserProfile, DynamicWidget, 
/** @deprecated use OnrampWidget instead */
OnrampWidget as FundingWidget, OnrampWidget, } from './lib/widgets';
export { useMultiWalletPromptState } from './lib/widgets/DynamicWidget/hooks/useMultiWalletPromptState';
export type { ThemeData } from './lib/context/ThemeContext/types';
export { 
/** @deprecated */
ArrowIcon, 
/** @deprecated */
ArrowLeftIcon, 
/** @deprecated */
ArrowRightIcon, 
/** @deprecated */
CheckCircleIcon, 
/** @deprecated */
CheckIcon, 
/** @deprecated */
ChevronLeftIcon, 
/** @deprecated */
CloseIcon, 
/** @deprecated */
CopyIcon, 
/** @deprecated */
createWallet, 
/** @deprecated */
EmbeddedWalletIcon, 
/** @deprecated */
ErrorIcon, 
/** @deprecated */
ExternalLinkIcon, 
/** @deprecated */
EyeIcon, 
/** @deprecated */
getChainDisplayName, 
/** @deprecated */
getChainIcon, 
/** @deprecated */
getValueByKey, 
/** @deprecated */
InfoIcon, 
/** @deprecated */
IPhoneFaceId, 
/** @deprecated */
IPhoneTouchId, 
/** @deprecated */
LogoutIcon, 
/** @deprecated */
PencilIcon, 
/** @deprecated */
SpinnerIcon, type AccessDeniedCustomButton, type AccountSwitchState, type AwaitingSignatureState, type ChainToWalletMap, type DynamicEventsCallbacks, type DynamicHandlers, type MultiWalletWidgetState, type OnAuthSuccess, type HandleConnectedWallet, type OnWalletAdded, type OnWalletRemoved, type OnOtpVerificationResult, type OnEmbeddedWalletCreated, type OnUserProfileUpdate, type RecommendedWallet, type Wallet, type WalletOption, type WalletsFilter, type WalletListViewTabItem, 
/** @deprecated */
useLocalStorage, 
/** @deprecated */
useOnClickOutside, } from './lib/shared';
/** @deprecated use AuthMode from @dynamic-labs/types instead */
export type { AuthMode as AuthModeType } from '@dynamic-labs/types';
export { 
/** @deprecated */
CollectUserDataView, 
/** @deprecated */
EmailConfirmationWaitingView, 
/** @deprecated */
FarcasterConnectView, 
/** @deprecated */
NetworkNotSupportedSwitchManual, 
/** @deprecated */
NoAccess, 
/** @deprecated */
NoQrNotInstalledView, 
/** @deprecated */
PendingSignatureView, 
/** @deprecated */
QrCodeView, 
/** @deprecated */
viewToComponentMap, 
/** @deprecated */
WalletList, } from './lib/views';
export { 
/** @deprecated */
MockContextProvider, } from './lib/context/MockContext';
export { getDefaultColor, getThemeConfig, themesData, } from './lib/context/ThemeContext/themesData';
/** @deprecated */
export type { 
/** @deprecated */
ViewType, } from './lib/context/ViewContext';
export type { NotSupportedError, SandboxMaximumThresholdReachedError, NoAccessError, ChainalysisError, EmailAlreadyExistsError, UsernameAlreadyExistsError, SocialAccountAlreadyExistsError, WalletNotDeployedError, WalletUsedError, EmailVerificationError, AccountExistsError, InvalidPhoneNumberError, } from '@dynamic-labs/utils';
export type { WalletConnector, Chain, } from '@dynamic-labs/wallet-connector-core';
export type { EvmNetwork, PhoneData, OtpDestination, UserProfile, 
/** @deprecated use AuthOptions instead */
AuthOptions as AuthOption, AuthOptions, 
/** @deprecated use AuthMethod instead */
AuthMethod as AuthType, AuthMethod, } from '@dynamic-labs/types';
export { publicDynamicEvents as dynamicEvents } from './lib/events/dynamicEvents';
export type { UserWalletsChangedParams } from './lib/events';
export { mergeNetworks } from './lib/utils/functions/mergeNetworks';
export { overrideNetworkRpcUrl } from './lib/utils/functions/overrideNetworkRpcUrl';
export { 
/** @deprecated use https://www.npmjs.com/package/classnames */
classNames, } from './lib/utils/functions/classNames';
export { getNetwork } from './lib/utils/functions/getNetwork';
export { FilterAndSortWallets, FilterBridgeChainsName, FilterChain, FilterWallets, RemoveWallets, SortWallets, UniswapFilter, } from './lib/utils/functions/walletFilters';
export { useProjectSettings } from './lib/store/state/projectSettings';
export { 
/** @deprecated */
DynamicWidgetContextProvider, } from './lib/widgets/DynamicWidget/context';
export { useWalletItemActions, useAuthenticateConnectedUser, useSocialAccounts, useEmbeddedWallet, useEmbeddedWalletAuthenticator, usePasskeyRecovery, useEmbeddedReveal, useIsLoggedIn, useDynamicModals, useMfa, useTokenBalances, useMultichainTokenBalances, useSwitchWallet, useRpcProviders, useRefreshUser, useWalletOptions, useSmartWallets, EmbeddedWalletVersion, useTelegramLogin, useUpgradeEmbeddedWallet, useEVMTransactionSimulation, useSVMTransactionSimulation, useDeleteUserAccount, useDynamicWaas, useGetPasskeys, useRegisterPasskey, useAuthenticatePasskeyMFA, useGetUserMfaMethods, usePromptMfaAuth, } from './lib/utils/hooks';
export { 
/** @deprecated use useOnramp instead */
useFunding, } from './lib/utils/hooks/useFunding';
export { useOnramp } from './lib/utils/hooks/useOnramp';
export { useOpenFundingOptions } from './lib/utils/hooks/useOpenFundingOptions';
export { useFundWithWallet } from './lib/utils/hooks/useFundWithWallet';
export { useUserUpdateRequest, useWalletConnectorEvent, } from './lib/utils/hooks';
export { type VerifyOtp, useOtpVerificationRequest, } from './lib/utils/hooks/authenticationHooks/';
export type { UpdateUserFieldsArg } from './lib/utils/hooks/';
export { type DynamicJwt, DynamicJwtFromJSON, } from '@dynamic-labs/sdk-api-core';
export { useSendBalance } from './lib/context/SendBalanceContext';
export type { LocaleResource } from './lib/locale';
export { useConnectWithOtp } from './lib/context/ConnectWithOtpContext';
export { useDynamicEvents } from './lib/utils/hooks/events/useDynamicEvents';
export { useSwitchNetwork } from './lib/utils/hooks/useSwitchNetwork';
export { useReinitialize } from './lib/context/ReinitializeContext';
export { useExternalAuth } from './lib/utils/hooks/useExternalAuth';
export { sdkApi as apiClient } from './lib/data/api/api';
export { isAuthenticatedWithAWallet } from './lib/utils/functions/isAuthenticatedWithAWallet';
export { usingV3Wallets } from './lib/utils/functions/usingV3Wallets/usingV3Wallets';
export { useSyncMfaFlow } from './lib/utils/hooks/useSyncMfaFlow';
export { useSignInWithPasskey } from './lib/utils/hooks/useSignInWithPasskey';
