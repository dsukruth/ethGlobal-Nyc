{"version":3,"file":"sdk-send-http.module.js","sources":["../src/utils.js","../src/http-request.js","../src/send-execute-script.js","../src/send-get-account.js","../src/send-get-block-header.js","../src/send-get-block.js","../src/send-get-collection.js","../src/send-get-events.js","../src/send-get-transaction.js","../src/send-get-transaction-status.js","../src/send-ping.ts","../src/send-transaction.js","../src/send-get-network-parameters.js","../src/send-get-node-version-info.ts","../src/websocket.ts","../src/connect-ws.ts","../src/connect-subscribe-events.ts","../src/send-http.ts"],"sourcesContent":["export function safeParseJSON(data) {\n  try {\n    return JSON.parse(data)\n  } catch {\n    return null\n  }\n}\n","import * as logger from \"@onflow/util-logger\"\nimport fetchTransport from \"cross-fetch\"\nimport {safeParseJSON} from \"./utils\"\n\nconst AbortController =\n  globalThis.AbortController || require(\"abort-controller\")\n\nexport class HTTPRequestError extends Error {\n  constructor({\n    error,\n    hostname,\n    path,\n    method,\n    requestBody,\n    responseBody,\n    responseStatusText,\n    statusCode,\n  }) {\n    const msg = `\n      HTTP Request Error: An error occurred when interacting with the Access API.\n      ${error ? `error=${error}` : \"\"}\n      ${hostname ? `hostname=${hostname}` : \"\"}\n      ${path ? `path=${path}` : \"\"}\n      ${method ? `method=${method}` : \"\"}\n      ${requestBody ? `requestBody=${requestBody}` : \"\"}\n      ${responseBody ? `responseBody=${responseBody}` : \"\"}\n      ${responseStatusText ? `responseStatusText=${responseStatusText}` : \"\"}\n      ${statusCode ? `statusCode=${statusCode}` : \"\"}\n    `\n    super(msg)\n\n    this.name = \"HTTP Request Error\"\n    this.statusCode = statusCode\n    this.errorMessage = error\n  }\n}\n\n/**\n * Creates an HTTP Request to be sent to a REST Access API via Fetch API.\n *\n * @param {object} options - Options for the HTTP Request\n * @param {String} options.hostname - Access API Hostname\n * @param {String} options.path - Path to the resource on the Access API\n * @param {String} options.method - HTTP Method\n * @param {object} options.body - HTTP Request Body\n * @param {object} [options.headers] - HTTP Request Headers\n * @param {boolean} [options.enableRequestLogging=true] - Enable/Disable request logging\n * @param {number} [options.retryLimit=5] - Number of times to retry request\n * @param {number} [options.retryIntervalMs=1000] - Time in milliseconds to wait before retrying request\n * @param {number} [options.timeoutLimit=30000] - Time in milliseconds to wait before timing out request\n *\n * @returns JSON object response from Access API.\n */\nexport async function httpRequest({\n  hostname,\n  path,\n  method,\n  body,\n  headers,\n  retryLimit = 5,\n  retryIntervalMs = 1000,\n  timeoutLimit = 30000,\n  enableRequestLogging = true,\n}) {\n  const bodyJSON = body ? JSON.stringify(body) : null\n\n  function makeRequest() {\n    const controller = new AbortController()\n    const fetchTimeout = setTimeout(() => {\n      controller.abort()\n    }, timeoutLimit)\n\n    return fetchTransport(new URL(path, hostname).toString(), {\n      method: method,\n      body: bodyJSON,\n      headers,\n      signal: controller.signal,\n    })\n      .then(async res => {\n        if (res.ok) {\n          return res.json()\n        }\n\n        const responseText = await res.text().catch(() => null)\n        const response = safeParseJSON(responseText)\n\n        throw new HTTPRequestError({\n          error: response?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n          responseBody: responseText,\n          responseStatusText: res.statusText,\n          statusCode: res.status,\n        })\n      })\n      .catch(async e => {\n        if (e instanceof HTTPRequestError) {\n          throw e\n        }\n\n        if (e.name === \"AbortError\") {\n          throw e\n        }\n\n        // Show AN error for all network errors\n        if (enableRequestLogging) {\n          await logger.log({\n            title: \"Access Node Error\",\n            message: `The provided access node ${hostname} does not appear to be a valid REST/HTTP access node.\n  Please verify that you are not unintentionally using a GRPC access node.\n  See more here: https://docs.onflow.org/fcl/reference/sdk-guidelines/#connect`,\n            level: logger.LEVELS.error,\n          })\n        }\n\n        throw new HTTPRequestError({\n          error: e?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n        })\n      })\n      .finally(() => {\n        clearTimeout(fetchTimeout)\n      })\n  }\n\n  async function requestLoop(retryAttempt = 0) {\n    try {\n      const resp = await makeRequest()\n      return resp\n    } catch (error) {\n      const retryStatusCodes = [408, 429, 500, 502, 503, 504]\n\n      if (\n        error.name === \"AbortError\" ||\n        retryStatusCodes.includes(error.statusCode)\n      ) {\n        return await new Promise((resolve, reject) => {\n          if (retryAttempt < retryLimit) {\n            if (enableRequestLogging) {\n              console.warn(\n                `Access node unavailable, retrying in ${retryIntervalMs} ms...`\n              )\n            }\n            setTimeout(() => {\n              resolve(requestLoop(retryAttempt + 1))\n            }, retryIntervalMs)\n          } else {\n            reject(error)\n          }\n        })\n      } else {\n        throw error\n      }\n    }\n  }\n\n  // Keep retrying request until server available or max attempts exceeded\n  return await requestLoop()\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendExecuteScriptAtBlockIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_id=${ix.block.id}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendExecuteScriptAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_height=${ix.block.height}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendExecuteScriptAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_height=sealed`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.encodedData = JSON.parse(context.Buffer.from(res, \"base64\").toString())\n\n  return ret\n}\n\nexport async function sendExecuteScript(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Execute Script Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Execute Script Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Execute Script Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  if (ix.block.id) {\n    return await sendExecuteScriptAtBlockIDRequest(ix, context, opts)\n  } else if (ix.block.height) {\n    return await sendExecuteScriptAtBlockHeightRequest(ix, context, opts)\n  } else {\n    return await sendExecuteScriptAtLatestBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst HashAlgorithmIDs = {\n  SHA2_256: 1,\n  SHA2_384: 2,\n  SHA3_256: 3,\n  SHA3_384: 4,\n  KMAC128_BLS_BLS12_381: 5,\n}\n\nconst SignatureAlgorithmIDs = {\n  ECDSA_P256: 1,\n  ECDSA_secp256k1: 2,\n  BLS_BLS12_381: 3,\n}\n\nasync function sendGetAccountAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/accounts/${ix.account.addr}?block_height=${ix.block.height}&expand=contracts,keys`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetAccountAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/accounts/${ix.account.addr}?block_height=sealed&expand=contracts,keys`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  const unwrapContracts = contracts => {\n    const c = {}\n    if (!contracts) return c\n    for (let key of Object.keys(contracts)) {\n      c[key] = context.Buffer.from(contracts[key], \"base64\").toString()\n    }\n    return c\n  }\n\n  ret.account = {\n    address: res.address,\n    balance: Number(res.balance),\n    code: \"\",\n    contracts: unwrapContracts(res.contracts),\n    keys:\n      res.keys?.map(key => ({\n        index: Number(key.index),\n        publicKey: key.public_key.replace(/^0x/, \"\"),\n        signAlgo: SignatureAlgorithmIDs[key.signing_algorithm],\n        signAlgoString: key.signing_algorithm,\n        hashAlgo: HashAlgorithmIDs[key.hashing_algorithm],\n        hashAlgoString: key.hashing_algorithm,\n        sequenceNumber: Number(key.sequence_number),\n        weight: Number(key.weight),\n        revoked: key.revoked,\n      })) ?? [],\n  }\n\n  return ret\n}\n\nexport async function sendGetAccount(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Account Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Account Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Account Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  if (ix.block.height !== null) {\n    return await sendGetAccountAtBlockHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetAccountAtLatestBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetBlockHeaderByIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks/${ix.block.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockHeaderByHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${ix.block.height}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetLatestBlockHeaderRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const height = ix.block?.isSealed ? \"sealed\" : \"final\"\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${height}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  const block = res.length ? res[0] : null\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.blockHeader = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n  }\n\n  return ret\n}\n\nexport async function sendGetBlockHeader(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Block Header Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Block Header Error: context.response must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionHasBlockID = ix.block.id !== null\n  const interactionHasBlockHeight = ix.block.height !== null\n\n  if (interactionHasBlockID) {\n    return await sendGetBlockHeaderByIDRequest(ix, context, opts)\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockHeaderByHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetLatestBlockHeaderRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetBlockByIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks/${ix.block.id}?expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockByHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${ix.block.height}&expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const height = ix.block?.isSealed ? \"sealed\" : \"final\"\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${height}&expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  const block = res.length ? res[0] : null\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n    collectionGuarantees: block.payload.collection_guarantees.map(\n      collectionGuarantee => ({\n        collectionId: collectionGuarantee.collection_id,\n        signerIds: collectionGuarantee.signer_ids,\n      })\n    ),\n    blockSeals: block.payload.block_seals.map(blockSeal => ({\n      blockId: blockSeal.block_id,\n      executionReceiptId: blockSeal.result_id,\n    })),\n  }\n\n  return ret\n}\n\nexport async function sendGetBlock(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Block Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Block Error: context.response must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionHasBlockID = ix.block.id !== null\n  const interactionHasBlockHeight = ix.block.height !== null\n\n  if (interactionHasBlockID) {\n    return await sendGetBlockByIDRequest(ix, context, opts)\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockByHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetCollection(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Collection Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Collection Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/collections/${ix.collection.id}?expand=transactions`,\n    method: \"GET\",\n    body: null,\n  })\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.collection = {\n    id: res.id,\n    transactionIds: res.transactions.map(transaction => transaction.id),\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetEventsForHeightRangeRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/events?type=${ix.events.eventType}&start_height=${ix.events.start}&end_height=${ix.events.end}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetEventsForBlockIDsRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/events?type=${\n      ix.events.eventType\n    }&block_ids=${ix.events.blockIds.join(\",\")}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.events = []\n  res.forEach(block =>\n    block.events\n      ? block.events.forEach(event =>\n          ret.events.push({\n            blockId: block.block_id,\n            blockHeight: Number(block.block_height),\n            blockTimestamp: block.block_timestamp,\n            type: event.type,\n            transactionId: event.transaction_id,\n            transactionIndex: Number(event.transaction_index),\n            eventIndex: Number(event.event_index),\n            payload: JSON.parse(\n              context.Buffer.from(event.payload, \"base64\").toString()\n            ),\n          })\n        )\n      : null\n  )\n\n  return ret\n}\n\nexport async function sendGetEvents(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Events Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Events Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Events Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionContainsBlockHeightRange = ix.events.start !== null\n  const interactionContainsBlockIDsList =\n    Array.isArray(ix.events.blockIds) && ix.events.blockIds.length > 0\n\n  invariant(\n    interactionContainsBlockHeightRange || interactionContainsBlockIDsList,\n    \"SendGetEventsError: Unable to determine which get events request to send. Either a block height range, or block IDs must be specified.\"\n  )\n\n  if (interactionContainsBlockHeightRange) {\n    return await sendGetEventsForHeightRangeRequest(ix, context, opts)\n  } else {\n    return await sendGetEventsForBlockIDsRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetTransaction(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Transaction Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Transaction Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Transaction Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transactions/${ix.transaction.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  const unwrapKey = key => ({\n    address: key.address,\n    keyId: Number(key.key_id),\n    sequenceNumber: Number(key.sequence_number),\n  })\n\n  const unwrapSignature = sig => ({\n    address: sig.address,\n    keyId: Number(sig.key_index),\n    signature: sig.signature,\n  })\n\n  const unwrapArg = arg =>\n    JSON.parse(context.Buffer.from(arg, \"base64\").toString())\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transaction = {\n    script: context.Buffer.from(res.script, \"base64\").toString(),\n    args: [...res.arguments.map(unwrapArg)],\n    referenceBlockId: res.reference_block_id,\n    gasLimit: Number(res.gas_limit),\n    payer: res.payer,\n    proposalKey: res.proposal_key\n      ? unwrapKey(res.proposal_key)\n      : res.proposal_key,\n    authorizers: res.authorizers,\n    payloadSignatures: [...res.payload_signatures.map(unwrapSignature)],\n    envelopeSignatures: [...res.envelope_signatures.map(unwrapSignature)],\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst STATUS_MAP = {\n  UNKNOWN: 0,\n  PENDING: 1,\n  FINALIZED: 2,\n  EXECUTED: 3,\n  SEALED: 4,\n  EXPIRED: 5,\n}\n\nexport async function sendGetTransactionStatus(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Transaction Status Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Transaction Status Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Transaction Status Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transaction_results/${ix.transaction.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    blockId: res.block_id,\n    status: STATUS_MAP[res.status.toUpperCase()] || \"\",\n    statusString: res.status.toUpperCase(),\n    statusCode: res.status_code,\n    errorMessage: res.error_message,\n    events: res.events.map(event => ({\n      type: event.type,\n      transactionId: event.transaction_id,\n      transactionIndex: Number(event.transaction_index),\n      eventIndex: Number(event.event_index),\n      payload: JSON.parse(\n        context.Buffer.from(event.payload, \"base64\").toString()\n      ),\n    })),\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\nimport { Interaction } from \"@onflow/typedefs\"; \n\nexport interface ISendPingContext {\n  response?: Function;\n}\n\ninterface ISendPingOpts {\n  node?: string\n  httpRequest?: any,\n\n}\n\nexport async function sendPing(ix: Interaction, context: ISendPingContext = {}, opts: ISendPingOpts = {}) {\n  invariant(Boolean(opts.node), `SDK Send Ping Error: opts.node must be defined.`)\n  invariant(\n    Boolean(context.response),\n    `SDK Send Ping Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  await httpRequest({\n    hostname: opts.node,\n    path: \"/v1/blocks?height=sealed\",\n    method: \"GET\",\n    body: null,\n  })\n\n  let ret = typeof context?.response === 'function' ? context.response() : {}\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\n\nexport async function sendTransaction(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Transaction Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Transaction Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Transaction Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  // Apply Non Payer Signatures to Payload Signatures\n  let payloadSignatures = []\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const signature = {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\n            \"base64\"\n          ),\n        }\n        if (!payloadSignatures.find(existingSignature => existingSignature.address === signature.address\n          && existingSignature.key_index === signature.key_index\n          && existingSignature.signature === signature.signature\n        )) {\n          payloadSignatures.push(signature)\n        }\n      }\n    } catch (error) {\n      console.error(\"SDK HTTP Send Error: Trouble applying payload signature\", {\n        acct,\n        ix,\n      })\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  let envelopeSignatures = {}\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        let id = acct.tempId || idof(acct)\n        envelopeSignatures[id] = envelopeSignatures[id] || {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\n            \"base64\"\n          ),\n        }\n      }\n    } catch (error) {\n      console.error(\n        \"SDK HTTP Send Error: Trouble applying envelope signature\",\n        {acct, ix}\n      )\n      throw error\n    }\n  }\n  envelopeSignatures = Object.values(envelopeSignatures)\n\n  var t1 = Date.now()\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transactions`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: [\n        ...ix.message.arguments.map(arg =>\n          context.Buffer.from(\n            JSON.stringify(ix.arguments[arg].asArgument)\n          ).toString(\"base64\")\n        ),\n      ],\n      reference_block_id: ix.message.refBlock ? ix.message.refBlock : null,\n      gas_limit: String(ix.message.computeLimit),\n      payer: sansPrefix(\n        ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr\n      ),\n      proposal_key: {\n        address: sansPrefix(ix.accounts[ix.proposer].addr),\n        key_index: String(ix.accounts[ix.proposer].keyId),\n        sequence_number: String(ix.accounts[ix.proposer].sequenceNum),\n      },\n      authorizers: ix.authorizations\n        .map(tempId => ix.accounts[tempId].addr)\n        .reduce((prev, current) => {\n          return prev.find(item => item === current) ? prev : [...prev, current]\n        }, [])\n        .map(sansPrefix),\n      payload_signatures: payloadSignatures,\n      envelope_signatures: envelopeSignatures,\n    },\n  })\n  var t2 = Date.now()\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transactionId = res.id\n\n  if (typeof window !== \"undefined\" && typeof CustomEvent !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetNetworkParameters(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Network Parameters Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Network Parameters Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/network/parameters`,\n    method: \"GET\",\n    body: null,\n    enableRequestLogging: opts.enableRequestLogging ?? true,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.networkParameters = {\n    chainId: res.chain_id,\n  }\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\nimport {Interaction} from \"@onflow/typedefs\"\n\nexport async function sendGetNodeVersionInfo(\n  ix: Interaction | Promise<Interaction>,\n  context: any = {},\n  opts: any = {}\n) {\n  invariant(\n    opts.node,\n    `SDK Send Get Node Version Info Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Node Verison Info Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/node_version_info`,\n    method: \"GET\",\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.nodeVersionInfo = {\n    semver: res.semver,\n    commit: res.commit,\n    sporkId: res.spork_id,\n    protocolVersion: parseInt(res.protocol_version),\n    sporkRootBlockHeight: parseInt(res.spork_root_block_height),\n    nodeRootBlockHeight: parseInt(res.node_root_block_height),\n  }\n  return ret\n}\n","import _WebSocket from \"isomorphic-ws\"\n\nexport const WebSocket = _WebSocket as new (\n  url: string | URL,\n  protocols?: string | string[] | undefined\n) => WebSocket\n","import {EventEmitter} from \"events\"\nimport {safeParseJSON} from \"./utils\"\nimport {StreamConnection} from \"@onflow/typedefs\"\nimport {WebSocket} from \"./websocket\"\n\nexport class WebsocketError extends Error {\n  code?: number\n  reason?: string\n  wasClean?: boolean\n\n  constructor({\n    code,\n    reason,\n    message,\n    wasClean,\n  }: {\n    code?: number\n    reason?: string\n    message?: string\n    wasClean?: boolean\n  }) {\n    const msg = `\n      connectWs: connection closed with error${message ? `: ${message}` : \"\"}\n      ${code ? `code: ${code}` : \"\"}\n      ${reason ? `reason: ${reason}` : \"\"}\n      ${wasClean ? `wasClean: ${wasClean}` : \"\"}\n    `\n    super(msg)\n    this.name = \"WebsocketError\"\n    this.code = code\n    this.reason = reason\n    this.wasClean = false\n  }\n}\n\ntype WebSocketConnection<T> = StreamConnection<{\n  data: T\n}>\n\nexport function connectWs<T>({\n  hostname,\n  path,\n  params,\n  getParams,\n  retryLimit = 5,\n  retryIntervalMs = 1000,\n}: {\n  hostname: string\n  path: string\n  params?: Record<string, string>\n  getParams?: () => Record<string, string> | undefined\n  retryLimit?: number\n  retryIntervalMs?: number\n}): WebSocketConnection<T> {\n  if (getParams && params) {\n    throw new Error(\"connectWs: cannot specify both params and getParams\")\n  }\n  let outputEmitter = new EventEmitter()\n\n  let retryCount = 0\n  const resolveParams = getParams || (() => params)\n  let close = () => {}\n\n  ;(function connect() {\n    let userClosed = false\n    let hasOpened = false\n\n    // Build a websocket connection with correct protocol & params\n    const url = buildConnectionUrl(hostname, path, resolveParams())\n    const ws = new WebSocket(url)\n\n    ws.onmessage = function (e) {\n      const data = safeParseJSON(e.data)\n      if (data) {\n        outputEmitter.emit(\"data\", data)\n      } else {\n        outputEmitter.emit(\n          \"error\",\n          new WebsocketError({message: \"invalid JSON data\"})\n        )\n        this.close()\n      }\n    }\n\n    ws.onclose = function (e) {\n      if (userClosed) {\n        outputEmitter.emit(\"close\")\n        outputEmitter.removeAllListeners()\n        return\n      }\n\n      if (!hasOpened) {\n        if (retryCount < retryLimit) {\n          retryCount++\n          setTimeout(connect, retryIntervalMs)\n        } else {\n          outputEmitter.emit(\n            \"error\",\n            new WebsocketError({\n              wasClean: e.wasClean,\n              code: e.code,\n              reason: e.reason,\n              message: \"failed to connect\",\n            })\n          )\n\n          // Emit close event on next tick so that the error event is emitted first\n          setTimeout(() => {\n            outputEmitter.emit(\"close\")\n            outputEmitter.removeAllListeners()\n          })\n        }\n      } else {\n        // If the connection was established before closing, attempt to reconnect\n        setTimeout(connect, retryIntervalMs)\n      }\n    }\n\n    ws.onopen = function () {\n      hasOpened = true\n      retryCount = 0\n    }\n\n    close = () => {\n      userClosed = true\n      ws.close()\n    }\n  })()\n\n  return {\n    on(event: \"data\" | \"close\" | \"error\", listener: any) {\n      outputEmitter.on(event, listener)\n      return this\n    },\n    off(event: \"data\" | \"close\" | \"error\", listener: any) {\n      outputEmitter.off(event, listener)\n      return this\n    },\n    close() {\n      close()\n    },\n  }\n}\n\nexport function buildConnectionUrl(\n  hostname: string,\n  path?: string,\n  params?: Record<\n    string,\n    string | number | string[] | number[] | null | undefined\n  >\n) {\n  const url = new URL(path || \"\", hostname)\n  if (url.protocol === \"https:\") {\n    url.protocol = \"wss:\"\n  } else if (url.protocol === \"http:\") {\n    url.protocol = \"ws:\"\n  }\n\n  Object.entries(params || {}).forEach(([key, value]) => {\n    if (value) {\n      let formattedValue: string\n      if (Array.isArray(value)) {\n        formattedValue = value.join(\",\")\n      } else {\n        formattedValue = value.toString()\n      }\n      url.searchParams.append(key, formattedValue)\n    }\n  })\n\n  return url.toString()\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {connectWs as defaultConnectWs} from \"./connect-ws\"\nimport {EventEmitter} from \"events\"\nimport {BlockHeartbeat, Interaction, StreamConnection} from \"@onflow/typedefs\"\n\ntype RawSubscribeEventsStream = StreamConnection<{\n  data: {\n    events: any[]\n    heartbeat: BlockHeartbeat\n  }\n}>\n\nfunction constructData(ix: Interaction, context: any, data: any) {\n  const response = context.response()\n  response.tag = ix.tag\n\n  response.events =\n    data.Events?.length > 0\n      ? data.Events.map((event: any) => ({\n          blockId: data.BlockID,\n          blockHeight: Number(data.Height),\n          blockTimestamp: data.Timestamp,\n          type: event.Type,\n          transactionId: event.TransactionID,\n          transactionIndex: Number(event.TransactionIndex),\n          eventIndex: Number(event.EventIndex),\n          payload: JSON.parse(\n            context.Buffer.from(event.Payload, \"base64\").toString()\n          ),\n        }))\n      : null\n      response.heartbeat = {\n    blockId: data.BlockID,\n    blockHeight: Number(data.Height),\n    blockTimestamp: data.Timestamp,\n  }\n\n  return response\n}\n\nfunction constructResponse(ix: Interaction, context: any, stream: any) {\n  const response = context.response()\n  response.tag = ix.tag\n\n  response.streamConnection = stream\n\n  return response\n}\n\nexport async function connectSubscribeEvents(\n  ix: Interaction | Promise<Interaction>,\n  context: any = {},\n  opts: any = {}\n) {\n  invariant(opts.node, `SDK Send Get Events Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Events Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Events Error: context.Buffer must be defined.`\n  )\n\n  const resolvedIx = await ix\n\n  const connectWs: typeof defaultConnectWs = opts.connectWs || defaultConnectWs\n  const outputEmitter = new EventEmitter()\n  let lastBlockHeight: string | null = null\n\n  // Connect to the websocket & provide reconnection parameters\n  const connection = connectWs<any>({\n    hostname: opts.node,\n    path: `/v1/subscribe_events`,\n    getParams: () => {\n      const params: Record<string, any> = {\n        event_types: resolvedIx.subscribeEvents?.eventTypes,\n        addresses: resolvedIx.subscribeEvents?.addresses,\n        contracts: resolvedIx.subscribeEvents?.contracts,\n        heartbeat_interval: resolvedIx.subscribeEvents?.heartbeatInterval,\n      }\n\n      // If the lastBlockId is set, use it to resume the stream\n      if (lastBlockHeight) {\n        params.start_height = lastBlockHeight + 1\n      } else {\n        params.start_block_id = resolvedIx.subscribeEvents?.startBlockId\n        params.start_height = resolvedIx.subscribeEvents?.startHeight\n      }\n\n      return params\n    },\n  })\n\n  // Map the connection to a formatted response stream\n  connection.on(\"data\", (data: any) => {\n    const responseData = constructData(resolvedIx, context, data)\n    lastBlockHeight = responseData.heartbeat.blockHeight\n    outputEmitter.emit(\"data\", responseData)\n  })\n  connection.on(\"error\", (error: Error) => {\n    outputEmitter.emit(\"error\", error)\n  })\n  connection.on(\"close\", () => {\n    outputEmitter.emit(\"close\")\n  })\n\n  const responseStream: RawSubscribeEventsStream = {\n    on(event: \"data\" | \"error\" | \"close\" | \"open\", listener: any) {\n      outputEmitter.on(event, listener)\n      return this\n    },\n    off(event: \"data\" | \"error\" | \"close\" | \"open\", listener: any) {\n      outputEmitter.off(event, listener)\n      return this\n    },\n    close() {\n      connection.close()\n    },\n  }\n  return constructResponse(resolvedIx, context, responseStream)\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {connectSubscribeEvents} from \"./connect-subscribe-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetBlockHeader} from \"./send-get-block-header.js\"\nimport {sendGetCollection} from \"./send-get-collection.js\"\nimport {sendPing, ISendPingContext} from \"./send-ping\"\nimport {sendGetNetworkParameters} from \"./send-get-network-parameters.js\"\nimport {Interaction} from \"@onflow/typedefs\"\nimport {sendGetNodeVersionInfo} from \"./send-get-node-version-info.js\"\n\ninterface InteractionModule {\n  isTransaction: (ix: Interaction) => boolean\n  isGetTransactionStatus: (ix: Interaction) => boolean\n  isGetTransaction: (ix: Interaction) => boolean\n  isScript: (ix: Interaction) => boolean\n  isGetAccount: (ix: Interaction) => boolean\n  isGetEvents: (ix: Interaction) => boolean\n  isGetBlock: (ix: Interaction) => boolean\n  isGetBlockHeader: (ix: Interaction) => boolean\n  isGetCollection: (ix: Interaction) => boolean\n  isPing: (ix: Interaction) => boolean\n  isGetNetworkParameters: (ix: Interaction) => boolean\n  isSubscribeEvents?: (ix: Interaction) => boolean\n  isGetNodeVersionInfo?: (ix: Interaction) => boolean\n}\ninterface IContext extends ISendPingContext {\n  ix: InteractionModule\n}\n\ninterface IOptsCommon {\n  node?: string\n}\n\ninterface IOpts extends IOptsCommon {\n  sendTransaction?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetTransactionStatus?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetTransaction?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendExecuteScript?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetAccount?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetEvents?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetBlockHeader?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetCollection?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendPing?: (ix: Interaction, context: IContext, opts: IOptsCommon) => void\n  sendGetBlock?: (ix: Interaction, context: IContext, opts: IOptsCommon) => void\n  sendGetNetworkParameters?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  connectSubscribeEvents?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetNodeVersionInfo?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n}\n\nexport const send = async (\n  ix: Interaction,\n  context: IContext,\n  opts: IOpts = {}\n) => {\n  invariant(\n    Boolean(opts?.node),\n    `SDK Send Error: Either opts.node or \"accessNode.api\" in config must be defined.`\n  )\n  invariant(Boolean(context.ix), `SDK Send Error: context.ix must be defined.`)\n\n  ix = await ix\n\n  // prettier-ignore\n  switch (true) {\n    case context.ix.isTransaction(ix):\n      return opts.sendTransaction ? opts.sendTransaction(ix, context, opts) : sendTransaction(ix, context, opts)\n    case context.ix.isGetTransactionStatus(ix):\n      return opts.sendGetTransactionStatus ? opts.sendGetTransactionStatus(ix, context, opts) : sendGetTransactionStatus(ix, context, opts)\n    case context.ix.isGetTransaction(ix):\n      return opts.sendGetTransaction ? opts.sendGetTransaction(ix, context, opts) : sendGetTransaction(ix, context, opts)\n    case context.ix.isScript(ix):\n      return opts.sendExecuteScript ? opts.sendExecuteScript(ix, context, opts) : sendExecuteScript(ix, context, opts)\n    case context.ix.isGetAccount(ix):\n      return opts.sendGetAccount ? opts.sendGetAccount(ix, context, opts) : sendGetAccount(ix, context, opts)\n    case context.ix.isGetEvents(ix):\n      return opts.sendGetEvents ? opts.sendGetEvents(ix, context, opts) : sendGetEvents(ix, context, opts)\n    case context.ix.isSubscribeEvents?.(ix):\n      return opts.connectSubscribeEvents ? opts.connectSubscribeEvents(ix, context, opts) : connectSubscribeEvents(ix, context, opts)\n    case context.ix.isGetBlock(ix):\n      return opts.sendGetBlock ? opts.sendGetBlock(ix, context, opts) : sendGetBlock(ix, context, opts)\n    case context.ix.isGetBlockHeader(ix):\n      return opts.sendGetBlockHeader ? opts.sendGetBlockHeader(ix, context, opts) : sendGetBlockHeader(ix, context, opts)\n    case context.ix.isGetCollection(ix):\n      return opts.sendGetCollection ? opts.sendGetCollection(ix, context, opts) : sendGetCollection(ix, context, opts)\n    case context.ix.isPing(ix):\n      return opts.sendPing ? opts.sendPing(ix, context, opts) : sendPing(ix, context, opts)\n    case context.ix.isGetNetworkParameters(ix):\n      return opts.sendGetNetworkParameters ? opts.sendGetNetworkParameters(ix, context, opts) : sendGetNetworkParameters(ix, context, opts)\n    case context.ix.isGetNodeVersionInfo?.(ix):\n      return opts.sendGetNodeVersionInfo ? opts.sendGetNodeVersionInfo(ix, context, opts) : sendGetNodeVersionInfo(ix, context, opts)\n    default:\n      return ix\n  }\n}\n"],"names":["safeParseJSON","data","JSON","parse","AbortController","globalThis","require","HTTPRequestError","Error","constructor","_ref","error","hostname","path","method","requestBody","responseBody","responseStatusText","statusCode","msg","name","errorMessage","httpRequest","_ref2","body","headers","retryLimit","retryIntervalMs","timeoutLimit","enableRequestLogging","bodyJSON","stringify","makeRequest","controller","fetchTimeout","setTimeout","abort","fetchTransport","URL","toString","signal","then","res","ok","json","responseText","text","catch","response","message","statusText","status","e","logger","log","title","level","LEVELS","finally","clearTimeout","requestLoop","retryAttempt","arguments","length","undefined","resp","retryStatusCodes","includes","Promise","resolve","reject","console","warn","sendExecuteScriptAtBlockIDRequest","ix","context","opts","defaultHttpRequest","node","block","id","script","Buffer","from","cadence","map","arg","asArgument","constructResponse","sendExecuteScriptAtBlockHeightRequest","height","sendExecuteScriptAtLatestBlockRequest","ret","tag","encodedData","sendExecuteScript","invariant","HashAlgorithmIDs","SHA2_256","SHA2_384","SHA3_256","SHA3_384","KMAC128_BLS_BLS12_381","SignatureAlgorithmIDs","ECDSA_P256","ECDSA_secp256k1","BLS_BLS12_381","sendGetAccountAtBlockHeightRequest","account","addr","sendGetAccountAtLatestBlockRequest","unwrapContracts","contracts","c","key","Object","keys","address","balance","Number","code","index","publicKey","public_key","replace","signAlgo","signing_algorithm","signAlgoString","hashAlgo","hashing_algorithm","hashAlgoString","sequenceNumber","sequence_number","weight","revoked","sendGetAccount","sendGetBlockHeaderByIDRequest","sendGetBlockHeaderByHeightRequest","sendGetLatestBlockHeaderRequest","isSealed","blockHeader","header","parentId","parent_id","timestamp","sendGetBlockHeader","interactionHasBlockID","interactionHasBlockHeight","sendGetBlockByIDRequest","sendGetBlockByHeightRequest","sendGetBlockRequest","collectionGuarantees","payload","collection_guarantees","collectionGuarantee","collectionId","collection_id","signerIds","signer_ids","blockSeals","block_seals","blockSeal","blockId","block_id","executionReceiptId","result_id","sendGetBlock","sendGetCollection","collection","transactionIds","transactions","transaction","sendGetEventsForHeightRangeRequest","events","eventType","start","end","sendGetEventsForBlockIDsRequest","blockIds","join","forEach","event","push","blockHeight","block_height","blockTimestamp","block_timestamp","type","transactionId","transaction_id","transactionIndex","transaction_index","eventIndex","event_index","sendGetEvents","interactionContainsBlockHeightRange","interactionContainsBlockIDsList","Array","isArray","sendGetTransaction","unwrapKey","keyId","key_id","unwrapSignature","sig","key_index","signature","unwrapArg","args","referenceBlockId","reference_block_id","gasLimit","gas_limit","payer","proposalKey","proposal_key","authorizers","payloadSignatures","payload_signatures","envelopeSignatures","envelope_signatures","STATUS_MAP","UNKNOWN","PENDING","FINALIZED","EXECUTED","SEALED","EXPIRED","sendGetTransactionStatus","transactionStatus","toUpperCase","statusString","status_code","error_message","sendPing","Boolean","idof","acct","withPrefix","sendTransaction","values","accounts","role","sansPrefix","String","find","existingSignature","tempId","t1","Date","now","refBlock","computeLimit","proposer","sequenceNum","authorizations","reduce","prev","current","item","t2","window","CustomEvent","dispatchEvent","detail","txId","delta","sendGetNetworkParameters","networkParameters","chainId","chain_id","sendGetNodeVersionInfo","nodeVersionInfo","semver","commit","sporkId","spork_id","protocolVersion","parseInt","protocol_version","sporkRootBlockHeight","spork_root_block_height","nodeRootBlockHeight","node_root_block_height","WebSocket","_WebSocket","WebsocketError","reason","wasClean","connectWs","params","getParams","outputEmitter","EventEmitter","retryCount","resolveParams","close","connect","userClosed","hasOpened","url","buildConnectionUrl","ws","onmessage","emit","onclose","removeAllListeners","onopen","on","listener","off","protocol","entries","_ref3","value","formattedValue","searchParams","append","constructData","Events","BlockID","Height","Timestamp","Type","TransactionID","TransactionIndex","EventIndex","Payload","heartbeat","stream","streamConnection","connectSubscribeEvents","resolvedIx","defaultConnectWs","lastBlockHeight","connection","event_types","subscribeEvents","eventTypes","addresses","heartbeat_interval","heartbeatInterval","start_height","start_block_id","startBlockId","startHeight","responseData","responseStream","send","isTransaction","isGetTransactionStatus","isGetTransaction","isScript","isGetAccount","isGetEvents","isSubscribeEvents","isGetBlock","isGetBlockHeader","isGetCollection","isPing","isGetNetworkParameters","isGetNodeVersionInfo"],"mappings":"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"}